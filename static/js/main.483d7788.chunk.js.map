{"version":3,"sources":["tfw/factory/dialog.yaml","tfw/view/input/input.yaml","tfw/url-args.ts","tfw/converter/boolean.ts","tfw/converter/integer.ts","tfw/converter/unit.ts","tfw/icons.ts","tfw/view/icon.tsx","tfw/converter/string.ts","tfw/converter/string-array.ts","tfw/layout/flex.tsx","tfw/escape-handler.ts","tfw/gesture/moves.ts","tfw/gesture/finger.ts","tfw/gesture/basic-handler.ts","tfw/gesture/gesture.ts","tfw/color.ts","tfw/theme.ts","tfw/converter/function.ts","tfw/behavior/touchable.ts","tfw/converter/array.ts","tfw/intl.ts","tfw/view/button.tsx","tfw/factory/dialog.tsx","tfw/view/label/label.tsx","tfw/view/input/input.tsx","tfw/storage.ts","web-brayns/view/input-host-name/input-host-name.tsx","web-brayns/service/host.tsx","web-brayns/scene/api.ts","web-brayns/state/models.ts","web-brayns/state/navigation.ts","web-brayns/state/slicer.ts","tfw/view/combo.tsx","web-brayns/view/snapshot/snapshot.tsx","web-brayns/state/dialogs.ts","web-brayns/state/state.ts","web-brayns/scene/model.ts","web-brayns/geometry/geometry.ts","web-brayns/models/models.ts","web-brayns/scene/camera.ts","web-brayns/scene/renderer.ts","tfw/debouncer.ts","web-brayns/scene/gestures-handler.ts","web-brayns/scene/scene.ts","web-brayns/service/snapshot.ts","web-brayns/view/snapshot/snapshot.container.ts","web-brayns/dialog/snapshot.tsx","web-brayns/view/image-stream/image-stream.tsx","tfw/layout/stack.tsx","web-brayns/view/websocket-console/websocket-console.tsx","web-brayns/view/input-path/input-path.tsx","web-brayns/service/local-storage.ts","tfw/view/touchable.tsx","web-brayns/view/model-button/model-button.tsx","tfw/view/list/list.tsx","web-brayns/tool/matcher.ts","web-brayns/view/model-list/model-list.tsx","web-brayns/view/model-list/container.ts","web-brayns/view/panel/model/model.tsx","tfw/util.ts","tfw/converter/double.ts","tfw/view/slider/slider.tsx","web-brayns/view/range/range.tsx","tfw/throttler.ts","web-brayns/view/panel/clip/clip.tsx","web-brayns/view/panel/clip/container.ts","app.tsx","app.container.ts","index.tsx"],"names":["module","exports","en","cancel","close","ok","fr","nan","it","UrlArgs","parse","args","t","location","search","length","substring","split","forEach","item","index","itemWithSpacesInsteadOfPlus","join","indexOfEqual","indexOf","concat","key","substr","val","decodeURIComponent","castBoolean","v","defaultValue","arguments","undefined","text","trim","toLowerCase","num","parseInt","isNaN","castInteger","defVal","Math","floor","startsWith","hexa","parseFloat","RX_CSS_UNIT","castUnit","m","exec","scalar","unit","draw","d","stroke","fill","iconsBook","android","bug","camera","center","child","code","copy","counter","cut","delete","direction","down","down-double","edit","eraser","export","flag-jp","r","flag-fr","flag-it","flag-de","flag-en","font","format-align-center","format-align-justify","format-align-left","format-align-right","format-bold","format-italic","format-float-center","format-float-left","format-float-none","format-float-right","format-header","format-underline","fullscreen","gear","gps","hand","heart","hide","home","image","import","improvement","info","left","left-double","link","logout","mail","map","map-layer","menu","minus","minus-o","minus-small","more","movie","pack","plug","plus","plus-o","plus-small","print","question","redo","refresh","right","right-double","run","select","sitemap","unselect","share","show","speaker","speaker-off","split-vertical","split-horizontal","star","stat","switch","tri-down","tri-left","tri-right","tri-up","twitter","undo","up","up-double","user","wait","zoom-in","zoom-out","warning","synonyms","add","back","help","save","_i2","_Object$keys2","Object","keys","EnumPenColor","Icon","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refIcon","visible","timeoutHandle","React","name","sort","_this2","elemIcon","current","window","clearTimeout","requestAnimationFrame","classList","remove","slot","onHide","setTimeout","_this3","p","animate","flipH","flipV","size","content","Array","isArray","castContent","rotate","onClick","classes","svgContent","createSvgContent","push","transform","style","width","height","triggerVisibleAnimation","react","className","ref","viewBox","preserveAspectRatio","strokeWidth","strokeLinecap","strokeLinejoin","def","elementName","_parseDef","_ref","attributes","children","_ref2","slicedToArray","arg1","arg2","parseDef","attribs","attribName","attribValue","toUpperCase","CLASSES","PENS","pen","manageColors","objectSpread","castString","value","castStringArray","defaultArray","defaultString","Flex","wide","dir","justifyContent","alignItems","flexWrap","wrap","apply","toConsumableArray","escape_handler","listener","initialized","document","addEventListener","evt","fire","handlers","handler","pop","CAPACITY","Moves","x","y","_x0","_y0","_time0","_x","_y","_time","_cursor","init","now","shift","idx","Date","idx0","idx1","_index","time","time0","time1","time01","idx2","time12","x0","x1","y0","y1","Finger","fingers","identifier","indexOfFirstNull","BasicHandler","element","handleDown","handleUp","handleMove","pointerType","pointerTypeTime","deviceHandlers","pressed","checkPointerType","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","changedTouches","Symbol","iterator","next","done","touch","clientX","clientY","getIndex","buttons","pointer","clear","createClear","err","return","touchstart","mousedown","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","touchend","_this4","console","log","mouseup","_this5","mouseout","_this6","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","touchmove","_this7","mousemove","delay","_this$deviceHandlers","removeEventListener","preventDefault","stopPropagation","SYMBOL","ID","STANDARD_EVENTS","Gesture","elem","pointers","id","bind","rawHandlers","_Object$keys","eventName","wheel","deltaX","deltaY","deltaZ","wrapSpecialHandlers","assign","_len","names","_key","_i","_names","isDown","moves","rect","top","event","ptr","getPointer","getBoundingClientRect","target","recognizeTap","recognizeSwipe","recognizePan","tap","elapsedTime","abs","startX","startY","recognizePanDown","recognizePanUp","pan","_ptr$moves","hasHandlerFor","sx","speedX","speedY","dx","pandown","panvertical","panup","recognizeSwipeDown","recognizeSwipeUp","recognizeSwipeLeft","swipe","_ptr$moves2","dy","swipedown","swipevertical","swipeup","swipeleft","swipehorizontal","gesture","Color","codeCSS","R","G","B","H","S","L","A","input","parseHexa","parseRGB","parseRGBA","parseHSL","luminance","color","hexa2","newColor","chroma","min","max","delta","INV6","charAt","INV15","INV255","RX_RGB","clamp01","RX_RGBA","RX_HSL","INV359","INV99","hsl2rgb","stringify","luminanceStep","color1","color2","alpha","beta","newRGBA","newRGB","red","green","blue","out","toString","tfw_theme","register","registerTheme","body","THEMES","css","error","get","vars","bg0","makeGetCurrentColor","bg1","bg2","bg3","bgP","bgPD","bgPL","bgS","bgSD","bgSL","black","white","isDark","colorName","$isDark","average","mix","isThemeGloballyDark","varName","setFontSize","html","documentElement","normalize","completeWithDefaultValues","COLOR","THEME_COLOR_NAMES","themeName","_style","s","ALPHA_HEXA","a","letter","codeVariables","codeBackground","elevationColor","addAlpha","ELEVATIONS","elevationKey","elevation","codeElevation","_loop","depth","tail","fgColorName","bgColorName","styleFgColorName","styleBgColorName","bgClass","fgClass","position","piecesFG","piecesSVG","piecesBG","codeText","styleElement","createElement","getElementsByTagName","appendChild","textContent","0","2","4","6","8","9","10","11","12","16","24","completeBackgrounds","has0","has1","has2","has3","rgb2hsl","darkenBackground","color0","r0","g0","b0","color3","r3","g3","b3","dark","light","rotateHue","bg","EMPTY_FUNCTION","Touchable","_element","_enabled","accent","onTap","enabled","castFunction","that","on","keydown","getComputedStyle","screen","div","createScreen","borderRadius","getPropertyValue","w","h","radius","ceil","sqrt","ripple","background","Theme","removeChild","castArray","Mode","Button","touchable","handleClick","assertThisInitialized","tag","label","icon","flat","small","disabled","icon_Icon","gCurrentLanguage","localStorage","getItem","navigator","language","Intl","translations","params","translation","addParams","languages","_languages","lang","ex","Error","instance","translate","defineProperty","intl","defaultText","toIntl","result","_value","setItem","output","mark","mode","Text","paramIndex","c","Escape","Placeholder","tfw_factory_dialog","alert","Promise","resolve","dialog","Dialog","onClose","maxWidth","footer","button_Button","_","confirm","caption","title","confirmed","btnCancel","btnOK","options","make","require","_screen","_options","closeOnEscape","EscapeHandler","_hide","opt","header","ReactDOM","render","_callee","task","_args","regenerator_default","_context","prev","abrupt","sent","flex_Flex","reject","then","stop","Label","react_default","htmlFor","Component","Input","handleKeyDown","_this$props","onEnterPressed","onFocus","type","setSelectionRange","onBlur","onChange","placeholder","focus","globalId","inputClassName","label_Label","autoFocus","onKeyDown","storage","local","makeStorage","session","sessionStorage","JSON","removeItem","set","del","HostNameInput","handleChange","hostName","setState","Storage","handleEnterPressed","state","input_Input","CONNECTION_TIMEOUT","host","getHostName","connect","_callee3","ignoreQueryString","_context3","asyncToGenerator","_callee2","urlArgs","hostFromQueryString","validated","onOk","_context2","input_host_name_HostNameInput","_onClose","reload","_x3","_callee4","_context4","timeout","client","BraynsClient","ready","subscribe","isReady","api","addClipPlane","addLightAmbient","addLightDirectional","addLightQuad","addLightSphere","addLightSpot","addModel","chunk","clearLights","getAnimationParameters","getApplicationParameters","getCamera","getCameraParams","getClipPlanes","getEnvironmentMap","getInstances","getLights","getLoaders","getModelProperties","getModelTransferFunction","getRenderer","getRendererParams","getScene","getStatistics","getVolumeParameters","imageJpeg","inspect","loadersSchema","modelPropertiesSchema","quit","removeClipPlanes","removeLights","removeModel","requestModelUpload","resetCamera","schema","setAnimationParameters","setApplicationParameters","setCamera","setCameraParams","setEnvironmentMap","setModelProperties","setModelTransferFunction","setRenderer","setRendererParams","setScene","setVolumeParameters","snapshot","updateClipPlane","updateInstance","updateModel","plane","Scene","request","_callee5","_context5","_callee6","_context6","_callee7","model_param","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","_callee13","_context13","_callee14","_context14","_callee15","_context15","_callee16","range","_context16","_callee17","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","_context21","_callee22","_context22","_callee23","_context23","_callee24","_context24","_callee25","_context25","_callee26","_context26","_callee27","_context27","_callee28","_context28","_callee29","_context29","_callee30","_context30","_callee31","ids","_context31","_callee32","_context32","_callee33","_context33","_callee34","param","_context34","_callee35","_context35","_callee36","endpoint","_context36","_callee37","_context37","_callee38","_context38","_callee39","_context39","_callee40","input0","_context40","_callee41","filename","_context41","_callee42","_context42","_callee43","_context43","_callee44","_context44","_callee45","_context45","_callee46","_context46","_callee47","_context47","_callee48","settings","_context48","_callee49","clip_plane","_context49","_callee50","model_instance","_context50","_callee51","model","_context51","state_models","INITIAL_STATE","reducer","action","models","slice","alreadyAddedIds","filter","alreadyHere","includes","reset","update","navigation","panel","showConsole","setPanel","toggleConsoleVisibility","slicer","activated","minX","maxX","latitude","longitude","collageDepth","sliceInfo","Combo","list","button","bigList","selectedKey","selectedIndex","expand","_list$getBoundingClie","innerHeight","innerHTML","items","querySelectorAll","scrollTop","_ensureSelectionVisible","_swapItems","_this$_computeDimensi","_computeDimensions","_this$_showList","_showList","handleKeyboard","_handleKeyboard","scroll","goodKeys","minimalLength","k","ensureGoodKeys","RESOLUTIONS","fullHD","thumbnail","presentation","ultraHD","SAMPLINGS","medium","quick","low","high","ultra","res","resolution","_resolution","Snapshot","handleWidthChange","onWidthChange","handleHeightChange","onHeightChange","handleSizeKeyChange","onSizeKeyChange","handleSamplesChange","samples","onSamplesChange","handleSamplesKeyChange","onSamplesKeyChange","handleFilenameChange","onFilenameChange","combo_Combo","sizeKey","samplesKey","RESOLUTION_NAME","SAMPLING_NAME","dialogs","newState","updateSnapshot","Dialogs","Models","Navigation","Slicer","store","createStore","state_state","dispatch","Model","brayns","transformation","applyTransfo","selected","$selected","boundingBox","updateState","scene","find","lookAtBounds","bounds","State","geometry","addVectors","b","makeQuaternionAsAxisRotation","angle","axis","halfAngle","cos","sin","_axis","z","multiplyQuaternions","vector","_vector","len2","f","rotateWithQuaternion","point","quaternion","Q","_point","_Q","qx","qy","qz","qw","scalarProduct","v1","v2","_v","z1","_v2","x2","y2","z2","scale","factor","n","vectorFromPoints","q","_q","q1","q2","q3","q0","_r","r1","r2","models_models","createModelFromBraynsData","parent","deleted","getModelsBounds","i","Camera","orientation","applyCamera","distance","Geom","distanceFactor","vectorZ","dist","getState","minY","minZ","maxY","maxZ","centerX","centerY","centerZ","cameraZ","_this$orientation","aa","bb","cc","dd","ab2","ac2","ad2","bc2","bd2","cd2","_this$params4","Renderer","_canvas","ctx","blob","blobIndex","lastRederedBlobIndex","paint","canvas","img","srcW","srcH","dstW","dstH","dstX","dstY","blobToImg","naturalWidth","naturalHeight","drawImage","finish","observe","getContext","url","URL","createObjectURL","Image","src","decode","onload","debouncer","timer","GesturesHandler","savedTarget","savedPosition","savedOrientation","savedAxis","savedScreenPoint","screenX","screenY","savedTargetDistance","handlePanStart","aspect","getTargetDistance","handlePan","Debouncer","translateCamera","orbitCamera","rotateCamera","oldTranslation","newTranslation","Geometry","setPosition","oldOrientation","angleX","PI","angleY","quaternionX","quaternionY","quaternionXY","newOrientation","positionVector","rotatedPositionVector","newPosition","setPositionAndOrientation","setOrientation","renderer","gestures","scene_scene","Api","loadMeshFromPath","setViewPort","cameraParams","ServiceHost","method","_args2","rendererParams","pixelAlpha","shadows","softShadows","accumulation","backgroundColor","headLight","maxAccumFrames","samplesPerPixel","subsampling","viewport","path","service_snapshot","getCanvas","_getCanvas","dataURI","samples_per_pixel","format","data","onerror","saveCanvasToFile","_saveCanvasToFile","mimetype","_args3","toBlob","SaveAsFile","_x4","_x2","_res","onheightChange","snapshotView","dialog_snapshot","_show","es","snapshot_container","ImageStream","canvasRef","createRef","onPanStart","getScreenPoint","onPan","updateViewPort","handleScreenShot","SnapshotService","_tap","hitResult","hit","getCloser","moveForward","moveBackward","onfocus","clientWidth","clientHeight","moz-opaque","Stack","scrollable","classNames","WebsocketConsole","handleMethodChange","handleParamsChange","handleExecute","_this$state","querying","parseJSON","t0","parseError","readOnly","STORAGE_PREFIX","json","prefix","_default","TouchableBehavior","tabIndex","ModelButton","handleToggleSelection","handle","onToggleSelection","handleFocus","handleShow","handleHide","view_touchable_Touchable","List","refMain","refHead","refBody","refTail","lastFirstItemIndex","lastVisibleItemsCount","lastItemsArray","itemHeight","onScroll","onPanDown","main","onRefresh","onRefreshAsked","head","animateRefresh","itemsCount","firstItemIndex","visibleItemsCount","tailCount","backgroundSize","mapper","minHeight","maxHeight","RX_SEPARATOR","Matcher","textToMatchAgainst","lowerCaseText","modelList","currentlySelectedModel","setSelected","handleFilterChange","handleSortChange","matcher","matches","sortByName","sortByVolume","filteredModels","list_List","model_button_ModelButton","model1","model2","name1","name2","computeVolume","ModelList","handleClip","handleLoadMesh","input_path_default","lookAtWholeScene","container","util","padNumber","fillWith","clamp","castDouble","Slider","handleTapOrMove","percent","step","castFloat","constrainValue","marginLeft","Range","refCanvas","selection","getX","M","moveTo","setAttribute","_this$props2","clearRect","space","strokeStyle","fillStyle","beginPath","_normalize","tmp","grad","createLinearGradient","addColorStop","restore","lineTo","margin","throttler","timestamp","nextAction","nextArgs","throttleAction","minPlaneIndex","maxPlaneIndex","indexOfFrameToShow","sceneCenter","sceneRadius","resetIndexOfFrameToShow","updatePlanes","Throttler","getDefOfMinPlaneX","getDefOfMaxPlaneX","handleBack","handleActivatedChange","handleLatitudeChange","handleLongitudeChange","handleCollageDepthChange","_bounds$min","_bounds$max","X","Y","Z","xx","yy","zz","planes","addPlane","handleMovieClick","queryForPlanes","snapshotOptions","minPlane","maxPlane","planesPerFrame","frame","_planesPerFrame$frame","planeA","planeB","getPlanesPerFrame","Util","lat","lng","thickness","computeThickness","distanceFromCenter","_this$computePlaneDir","computePlaneDirection","_this$computePlaneDir2","pointOnPlan","_Geom$scale","_Geom$scale2","range_Range","handleXChange","slider_Slider","ClipView","App","stack_Stack","model_model_Model","clip_container","image_stream_ImageStream","websocket_console_WebsocketConsole","AppView","planeIds","root","splash","getElementById","app_container","start"],"mappings":"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","file":"static/js/main.483d7788.chunk.js","sourcesContent":["module.exports = {\"en\":{\"cancel\":\"Cancel\",\"close\":\"Close\",\"ok\":\"Ok\"},\"fr\":{\"cancel\":\"Annuler\",\"close\":\"Fermer\",\"ok\":\"OK\"}}","module.exports = {\"en\":{\"nan\":\"Not a number!\"},\"fr\":{\"nan\":\"Ce n'est pas un nombre !\"},\"it\":{\"nan\":\"Non è un numero !\"}}","interface IMap {\r\n    [key: string]: string;\r\n}\r\n\r\nconst UrlArgs = {\r\n    parse(): IMap {\r\n        const\r\n            args: IMap = {},\r\n            t = location.search;\r\n\r\n        if (t.length < 2) return args;\r\n        const items = t.substring(1).split('&');\r\n        items.forEach((item, index) => {\r\n            const itemWithSpacesInsteadOfPlus = item.split(\"+\").join(\" \");\r\n            const indexOfEqual = itemWithSpacesInsteadOfPlus.indexOf(\"=\");\r\n            if (indexOfEqual === -1) {\r\n                args[`${index}`] = itemWithSpacesInsteadOfPlus;\r\n            } else {\r\n                const key = itemWithSpacesInsteadOfPlus.substr(0, indexOfEqual);\r\n                const val = itemWithSpacesInsteadOfPlus.substr(indexOfEqual + 1);\r\n                args[key] = decodeURIComponent(val);\r\n            }\r\n        });\r\n\r\n        return args;\r\n    }\r\n};\r\n\r\nexport default UrlArgs;\r\n","export default function castBoolean(v: any, defaultValue = false): boolean {\r\n    switch (typeof v) {\r\n        case \"undefined\":\r\n            return defaultValue;\r\n        case \"boolean\":\r\n            return v;\r\n        case \"number\":\r\n            return v != 0;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text === 'true' || text === 'yes') return true;\r\n            const num = parseInt(text);\r\n            if (!isNaN(num)) return num !== 0;\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n","export default function castInteger(v: any, defaultValue = 0): number {\r\n    const defVal = Math.floor(.5 + defaultValue);\r\n\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return Math.floor(.5 + v);\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return Math.floor(.5 + num);\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\nconst RX_CSS_UNIT = /^(-?[.0-9]+)[ \\n\\r]*([a-z%]*)/;\r\n\r\nexport default function castUnit(v: any, defaultValue: string = \"100%\") {\r\n    if (typeof v === 'number') return `${v}px`;\r\n    if (typeof v !== 'string') return defaultValue;\r\n    const text = `${v}`.trim().toLowerCase();\r\n    if (text === 'auto' || text === 'inherit') return text;\r\n    if (text.startsWith(\"calc(\")) return text;\r\n    const m = RX_CSS_UNIT.exec(text);\r\n    if (!m) return defaultValue;\r\n    const scalar = parseFloat(m[1]);\r\n    if (isNaN(scalar) || scalar === 0) return \"0\";\r\n    const unit = m[2].length < 1 ? \"px\" : m[2];\r\n    return `${scalar}${unit}`;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * @module\r\n * This module provides a list of SVG icons definitions.\r\n * You can register new one if you wish.\r\n */\r\n\r\n\r\nexport type TIconDefinition =\r\n    [string, {}] |\r\n    [string, TIconDefinitionArray] |\r\n    [string, {}, TIconDefinitionArray] |\r\n    [string, TIconDefinitionArray, {}];\r\n\r\ninterface TIconDefinitionArray extends Array<TIconDefinition> { }\r\n\r\nexport interface IIconsDefinition {\r\n    [name: string]: TIconDefinition\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register new icons.\r\n * @param {object}  icons - The  keys are the  name of the  icons, the\r\n * value is the object representing an SVG image.\r\n * @returns {undefined}\r\n */\r\nexport function register(icons: IIconsDefinition): void {\r\n    for (const key of Object.keys(icons)) {\r\n        const val: TIconDefinition = icons[key];\r\n        iconsBook[key] = val;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {string} d - Path definition, as in the attribute `d` of the\r\n * SVG tag `path`.\r\n * @returns {array} SVG description.\r\n */\r\nfunction draw(d: string): TIconDefinition {\r\n    return ['path', { d, stroke: 'none', fill: 0 }];\r\n}\r\n\r\n\r\nexport const iconsBook: IIconsDefinition = {\r\n    android: draw('M15,-35H10V-40H15M-10,-35H-15V-40H-10M18,-49L24,-56C25,-57,25,-58,24,-59C23,-60,22,-60,21,-59L13,-52C9,-54,5,-55,0,-55C-5,-55,-9,-54,-13,-52L-21,-59C-22,-60,-23,-60,-24,-59C-25,-58,-25,-57,-24,-56L-18,-49C-25,-44,-30,-35,-30,-25H30C30,-35,25,-44,18,-49M43,-20A8,8,0,0,0,35,-12V23A8,8,0,0,0,43,30A8,8,0,0,0,50,23V-12A8,8,0,0,0,43,-20M-42,-20A8,8,0,0,0,-50,-12V23A8,8,0,0,0,-42,30A8,8,0,0,0,-35,23V-12A8,8,0,0,0,-42,-20M-30,30A5,5,0,0,0,-25,35H-20V53A8,8,0,0,0,-12,60A8,8,0,0,0,-5,53V35H5V53A8,8,0,0,0,13,60A8,8,0,0,0,20,53V35H25A5,5,0,0,0,30,30V-20H-30V30Z'),\r\n    bug: draw(\"M10,0H-10V-10H10M10,20H-10V10H10M40,-20H26C24,-24 21,-27 17,-30L25,-38L18,-45L7,-34C5,-35 3,-35 0,-35C-2,-35 -5,-35 -7,-34L-18,-45L-25,-38L-17,-30C-21,-27 -24,-24 -26,-20H-40V-10H-30C-30,-8 -30,-7 -30,-5V0H-40V10H-30V15C-30,17 -30,18 -30,20H-40V30H-26C-21,39 -11,45 0,45C11,45 21,39 26,30H40V20H30C30,18 30,17 30,15V10H40V0H30V-5C30,-7 30,-8 30,-10H40V-20Z\"),\r\n    camera: draw('M-40,-40H-25L-15,-50H15L25,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M0,-25A25,25,0,0,0,-25,0A25,25,0,0,0,0,25A25,25,0,0,0,25,0A25,25,0,0,0,0,-25M0,-15A15,15,0,0,1,15,0A15,15,0,0,1,0,15A15,15,0,0,1,-15,0A15,15,0,0,1,0,-15Z'),\r\n    cancel: draw('M7,0L35,28V35H28L0,7L-28,35H-35V28L-7,0L-35,-28V-35H-28L0,-7L28,-35H35V-28L7,0Z'),\r\n    center: draw(\r\n        'M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M35,35H15V45H35A10,10,0,0,0,45,35V15H35M35,-45H15V-35H35V-15H45V-35A10,10,0,0,0,35,-45M-35,-35H-15V-45H-35A10,10,0,0,0,-45,-35V-15H-35M-35,15H-45V35A10,10,0,0,0,-35,45H-15V35H-35V15Z'\r\n    ),\r\n    child: draw('M5,-50V-10H45A40,40,0,0,0,5,-50M37,19C42,13,45,4,45,-5H-28L-32,-15H-50V-5H-39C-39,-5,-29,15,-28,17C-34,20,-37,26,-37,33A18,18,0,0,0,-20,50C-11,50,-4,44,-3,35H8C9,44,16,50,25,50A18,18,0,0,0,43,33C43,27,40,23,37,19M-20,40A8,8,0,0,1,-27,33A8,8,0,0,1,-20,25A8,8,0,0,1,-12,33A8,8,0,0,1,-20,40M25,40A8,8,0,0,1,18,33A8,8,0,0,1,25,25A8,8,0,0,1,33,33A8,8,0,0,1,25,40Z'),\r\n    close: draw('M0,-50C28,-50,50,-28,50,0C50,28,28,50,0,50C-28,50,-50,28,-50,0C-50,-28,-28,-50,0,-50M18,-25L0,-7L-18,-25L-25,-18L-7,0L-25,18L-18,25L0,7L18,25L25,18L7,0L25,-18L18,-25Z'),\r\n    code: draw('M13,23L36,0L13,-23L20,-30L50,0L20,30L13,23M-13,23L-36,0L-13,-23L-20,-30L-50,0L-20,30L-13,23Z'),\r\n    copy: draw('M35,45H-20V-25H35M35,-35H-20A10,10,0,0,0,-30,-25V45A10,10,0,0,0,-20,55H35A10,10,0,0,0,45,45V-25A10,10,0,0,0,35,-35M20,-55H-40A10,10,0,0,0,-50,-45V25H-40V-45H20V-55Z'),\r\n    counter: draw('M-40,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M-40,-30V30H-5V-30H-40M40,30V-30H34C35,-27,35,-25,35,-24C34,-21,32,-17,31,-16L20,-3L36,-4L36,3L10,2L10,-3C10,-3,25,-19,26,-20C27,-22,30,-30,23,-30C16,-30,17,-23,17,-23L9,-23C9,-23,9,-27,11,-30H5V30H18L18,26L23,26C23,26,27,25,27,20C28,15,23,15,23,15C22,15,17,16,17,20H10C10,20,10,9,23,9C36,9,35,20,35,20C35,20,35,26,29,28L32,30H40M-15,20H-23V-9L-32,-6V-12L-16,-18H-15V20Z'),\r\n    cut: draw('M35,-45L5,-15L15,-5L50,-40V-45M0,3A3,3,0,0,1,-2,0A3,3,0,0,1,0,-2A3,3,0,0,1,3,0A3,3,0,0,1,0,3M-30,40A10,10,0,0,1,-40,30C-40,24,-35,20,-30,20A10,10,0,0,1,-20,30C-20,36,-24,40,-30,40M-30,-20A10,10,0,0,1,-40,-30C-40,-36,-35,-40,-30,-40A10,10,0,0,1,-20,-30C-20,-24,-24,-20,-30,-20M-12,-22C-11,-24,-10,-27,-10,-30A20,20,0,0,0,-30,-50A20,20,0,0,0,-50,-30A20,20,0,0,0,-30,-10C-27,-10,-24,-11,-22,-12L-10,0L-22,12C-24,11,-27,10,-30,10A20,20,0,0,0,-50,30A20,20,0,0,0,-30,50A20,20,0,0,0,-10,30C-10,27,-11,24,-12,22L0,10L35,45H50V40L-12,-22Z'),\r\n    delete: draw(\r\n        'M35,-40H18L13,-45H-12L-17,-40H-35V-30H35M-30,35A10,10,0,0,0,-20,45H20A10,10,0,0,0,30,35V-25H-30V35Z'),\r\n    direction: draw('M10,13V0H-10V15H-20V-5A5,5,0,0,1,-15,-10H10V-22L28,-5M49,-4L4,-49H3C2,-50,-2,-50,-4,-49L-49,-4C-50,-2,-50,2,-49,4L-4,49C-2,50,2,51,4,49L49,4C51,2,51,-2,49,-4Z'),\r\n    down: draw('M-30,-30L0,30,30,-30'),\r\n    'down-double': draw('M-30,-40L0,-10,30,-40M-30,10L0,40,30,10'),\r\n    edit: draw(\r\n        \"M24,-46C22,-46,20,-46,19,-44L8,-34L35,-7L45,-17C48,-21,48,-25,45,-28L29,-44C28,-46,26,-46,24,-46M5,-30L-36,11L-23,12L-22,23L-11,24L-9,37L31,-3M-39,15L-47,49L-14,40L-15,29L-27,28L-28,16\"\r\n    ),\r\n    eraser: draw('M21,-42L46,-17C50,-14,50,-7,46,-3L0,43C-8,50,-20,50,-28,43L-46,25C-50,21,-50,15,-46,11L7,-42C11,-46,17,-46,21,-42M-39,18L-21,36C-17,39,-11,39,-7,36L11,18L-14,-7L-39,18Z'),\r\n    'export': draw('M-35,40H35V30H-35M35,-15H15V-45H-15V-15H-35L0,20L35,-15Z'),\r\n    \"flag-jp\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,45h120v-90h-120z\"\r\n            }],\r\n            [\"circle\", {\r\n                fill: \"#bc002d\",\r\n                r: 24\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-fr\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002395\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ed2939\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-it\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#009246\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ce2b37\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-de\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,41h130v-82h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ffce00\",\r\n                d: \"M-60,36h120v-24h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#dd0000\",\r\n                d: \"M-60,12h120v-24h-120z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-en\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,37h130v-75h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#bb133e\",\r\n                d: \"M-60,32h120v-65h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,22h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,12h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,2h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-8h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-18h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-28h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002664\",\r\n                d: \"M-60,-33h48v35h-48z\"\r\n            }],\r\n\r\n        ]\r\n    ],\r\n    font: draw('M25,-20H40V40H45V45H25V40H30V25H10L3,40H10V45H-10V40H-5L25,-20M30,-15L13,20H30V-15M-35,-45H-10C-4,-45,0,-41,0,-35V20H-15V-5H-30V20H-45V-35C-45,-41,-41,-45,-35,-45M-30,-35V-15H-15V-35H-30Z'),\r\n    'format-align-center': draw('M-45,-45H45V-35H-45V-45M-25,-25H25V-15H-25V-25M-45,-5H45V5H-45V-5M-25,15H25V25H-25V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-justify': draw('M-45,-45H45V-35H-45V-45M-45,-25H45V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H45V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-left': draw('M-45,-45H45V-35H-45V-45M-45,-25H15V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H15V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-right': draw(' M-45,-45H45V-35H-45V-45M-15,-25H45V-15H-15V-25M-45,-5H45V5H-45V-5M-15,15H45V25H-15V15M-45,35H45V45H-45V35Z '),\r\n    'format-bold': draw('M8,18H-10V3H8A8,8,0,0,1,15,10A8,8,0,0,1,8,18M-10,-27H5A8,8,0,0,1,13,-20A8,8,0,0,1,5,-12H-10M18,-6C23,-9,26,-15,26,-20C26,-31,18,-40,6,-40H-25V30H10C21,30,29,22,29,11C29,3,24,-3,18,-6Z'),\r\n    'format-italic': draw('M-10,-40V-25H1L-16,15H-30V30H10V15H-1L16,-25H30V-40H-10Z'),\r\n    'format-float-center': draw('M-15,-25H15V5H-15V-25M-45,-45H45V-35H-45V-45M-45,15H45V25H-45V15M-45,35H25V45H-45V35Z'),\r\n    'format-float-left': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-25V-15H-5V-25H45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-none': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-right': draw('M15,-25H45V5H15V-25M-45,-45H45V-35H-45V-45M5,-25V-15H-45V-25H5M-15,-5V5H-45V-5H-15M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-header': draw('M-40,-40H-30V-10H-10V-40H0V30H-10V0H-30V30H-40V-40M13,-23L31,-5L13,13L20,20L45,-5L20,-30L13,-23Z'),\r\n    'format-underline': draw(\r\n        'M-35,45H35V35H-35V45M0,25A30,30,0,0,0,30,-5V-45H18V-5A18,18,0,0,1,0,13A18,18,0,0,1,-17,-5V-45H-30V-5A30,30,0,0,0,0,25Z'\r\n    ),\r\n    fullscreen: draw('M-35,-35H-10V-25H-25V-10H-35V-35M10,-35H35V-10H25V-25H10V-35M25,10H35V35H10V25H25V10M-10,25V35H-35V10H-25V25H-10Z'),\r\n    gear: draw(\r\n        'M0,18A18,18,0,0,1,-17,0A18,18,0,0,1,0,-17A18,18,0,0,1,18,0A18,18,0,0,1,0,18M37,5C37,3,38,2,38,0C38,-2,37,-3,37,-5L48,-13C49,-14,49,-15,48,-16L38,-34C38,-35,36,-35,35,-35L23,-30C20,-32,18,-33,14,-35L13,-48C12,-49,11,-50,10,-50H-10C-11,-50,-12,-49,-12,-48L-14,-35C-17,-33,-20,-32,-23,-30L-35,-35C-36,-35,-38,-35,-38,-34L-48,-16C-49,-15,-49,-14,-48,-13L-37,-5C-37,-3,-37,-2,-37,0C-37,2,-37,3,-37,5L-48,13C-49,14,-49,15,-48,16L-38,34C-38,35,-36,35,-35,35L-23,30C-20,32,-17,33,-14,35L-12,48C-12,49,-11,50,-10,50H10C11,50,12,49,13,48L14,35C18,33,20,32,23,30L35,35C36,35,38,35,38,34L48,16C49,15,49,14,48,13L37,5Z'\r\n    ),\r\n    gps: draw(\r\n        'M0,-20A20,20,0,0,1,20,0A20,20,0,0,1,0,20A20,20,0,0,1,-20,0A20,20,0,0,1,0,-20M-45,5H-55V-5H-45C-42,-26,-26,-42,-5,-45V-55H5V-45C26,-42,43,-26,45,-5H55V5H45C43,26,26,43,5,45V55H-5V45C-26,43,-42,26,-45,5M0,-35A35,35,0,0,0,-35,0A35,35,0,0,0,0,35A35,35,0,0,0,35,0A35,35,0,0,0,0,-35Z'\r\n    ),\r\n    hand: draw(\r\n        \"M-10,-50A10,10,0,0,1,0,-40V-17C0,-17,10,-19,10,-14C10,-14,20,-15,20,-10C20,-10,30,-11,30,-6C30,-6,40,-7,40,-2V15C40,20,25,45,25,50H-15C-15,50,-25,15,-40,5C-40,5,-45,-25,-20,0V-40A10,10,0,0,1,-10,-50Z\"\r\n    ),\r\n    heart: draw('M0,47L-7,40C-33,17,-50,1,-50,-17C-50,-33,-38,-45,-22,-45C-14,-45,-5,-41,0,-35C5,-41,14,-45,23,-45C38,-45,50,-33,50,-17C50,1,33,17,7,40L0,47Z'),\r\n    hide: draw(\r\n        'M-1,-15L15,1C15,1,15,0,15,0A15,15,0,0,0,0,-15C0,-15,-1,-15,-1,-15M-22,-11L-15,-3C-15,-2,-15,-1,-15,0A15,15,0,0,0,0,15C1,15,2,15,3,15L11,22C8,24,4,25,0,25A25,25,0,0,1,-25,0C-25,-4,-24,-8,-22,-11M-50,-39L-39,-27L-36,-25C-45,-18,-51,-10,-55,0C-46,22,-25,38,0,38C8,38,15,36,22,33L24,35L39,50L45,44L-44,-45M0,-25A25,25,0,0,1,25,0C25,3,24,6,23,9L38,24C45,18,51,9,55,0C46,-22,25,-37,0,-37C-7,-37,-14,-36,-20,-34L-9,-23C-6,-24,-3,-25,0,-25Z'\r\n    ),\r\n    home: draw('M-10,40V10H10V40H35V0H50L0,-45L-50,0H-35V40H-10Z'),\r\n    image: draw('M5,-15H33L5,-42V-15M-30,-50H10L40,-20V40A10,10,0,0,1,30,50H-30C-36,50,-40,46,-40,40V-40C-40,-46,-36,-50,-30,-50M-30,40H15L30,40V0L10,20L0,10L-30,40M-20,-15A10,10,0,0,0,-30,-5A10,10,0,0,0,-20,5A10,10,0,0,0,-10,-5A10,10,0,0,0,-20,-15Z'),\r\n    import: draw('M-15,20V-10H-35L0,-45L35,-10H15V20H-15M-35,40V30H35V40H-35Z'),\r\n    improvement: draw(\"M0,50A50,50,0,0,1,-50,0A50,50,0,0,1,0,-50A50,50,0,0,1,50,0A50,50,0,0,1,0,50M0,-25L-25,0H-10V20H10V0H25L0,-25Z\"),\r\n    info: draw('M8,-40A8,8,0,0,0,0,-32A8,8,0,0,0,8,-25A8,8,0,0,0,15,-32A8,8,0,0,0,8,-40M6,-16C0,-16,-17,-3,-17,-3C-17,-2,-17,-2,-16,-1C-16,1,-16,1,-15,0C-14,0,-12,-2,-9,-3C1,-10,-8,6,-12,32C-14,45,-2,39,1,37C4,35,12,29,13,28C14,28,13,27,12,26C12,25,11,26,11,26C8,28,2,32,1,29C0,27,6,7,9,-6C10,-10,12,-17,6,-16Z'),\r\n    left: ['path', { fill: 0, d: 'M40,-5V5H-20L8,33L0,40L-39,0L0,-40L8,-32L-20,-5H40Z' }],\r\n    'left-double': draw('M-10,-30L-40,0,-10,30M40,-30L10,0,40,30'),\r\n    link: draw('M-7,7C-5,9,-5,12,-7,14C-9,16,-12,16,-14,14C-24,4,-24,-11,-14,-21V-21L4,-39C13,-49,29,-49,39,-39C49,-29,49,-13,39,-4L31,4C32,0,31,-4,29,-8L32,-11C38,-16,38,-26,32,-32C26,-38,16,-38,11,-32L-7,-14C-13,-8,-13,1,-7,7M7,-14C9,-16,12,-16,14,-14C24,-4,24,11,14,21V21L-4,39C-13,49,-29,49,-39,39C-49,29,-49,13,-39,4L-31,-4C-31,0,-31,4,-29,8L-32,11C-38,16,-38,26,-32,32C-26,38,-16,38,-11,32L7,14C13,8,13,-1,7,-7C5,-9,5,-12,7,-14Z'),\r\n    location: draw('M0,-2A13,13,0,0,1,-12,-15A13,13,0,0,1,0,-27A13,13,0,0,1,13,-15A13,13,0,0,1,0,-2M0,-50A35,35,0,0,0,-35,-15C-35,11,0,50,0,50C0,50,35,11,35,-15A35,35,0,0,0,0,-50Z'),\r\n    logout: draw(\r\n        \"M25,26V10H-10V-10H25V-26L51,0L25,26M5,-50A10,10,0,0,1,15,-40V-20H5V-40H-40V40H5V20H15V40A10,10,0,0,1,5,50H-40A10,10,0,0,1,-50,40V-40A10,10,0,0,1,-40,-50H5Z\"\r\n    ),\r\n    mail: draw(\r\n        'M40,-40H-40A10,10,0,0,0,-50,-30V30A10,10,0,0,0,-40,40H40A10,10,0,0,0,50,30V-30A10,10,0,0,0,40,-40M40,30H-40V-20L0,5L40,-20V30M40,-30L0,-5L-40,-30V-30H40V-30Z'\r\n    ),\r\n    map: draw('M15,35L-15,24V-35L15,-24M43,-45C42,-45,42,-45,42,-45L15,-34L-15,-45L-43,-35C-44,-35,-45,-34,-45,-33V43A3,3,0,0,0,-42,45C-42,45,-42,45,-42,45L-15,34L15,45L43,36C44,35,45,34,45,33V-42A3,3,0,0,0,43,-45Z'),\r\n    \"map-layer\": draw('M0,20L37,-9L45,-15L0,-50L-45,-15L-37,-9M0,33L-37,4L-45,10L0,45L45,10L37,4L0,33Z'),\r\n    menu: draw('M-45,-30H45V-20H-45V-30M-45,-5H45V5H-45V-5M-45,20H45V30H-45V20Z'),\r\n    minus: draw('M35,5H-35V-5H35V5Z'),\r\n    \"minus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M-25,5H25V-5H-25'),\r\n    \"minus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M25,-5V5H-25V-5H25Z'),\r\n    more: draw('M20,0A10,10,0,0,1,30,-10A10,10,0,0,1,40,0A10,10,0,0,1,30,10A10,10,0,0,1,20,0M-10,0A10,10,0,0,1,0,-10A10,10,0,0,1,10,0A10,10,0,0,1,0,10A10,10,0,0,1,-10,0M-40,0A10,10,0,0,1,-30,-10A10,10,0,0,1,-20,0A10,10,0,0,1,-30,10A10,10,0,0,1,-40,0Z'),\r\n    movie: draw('M44,-49L25,-45L38,-27L48,-29L44,-49M10,-42L0,-40L14,-23L24,-25L10,-42M-15,-37L-24,-35L-11,-18L-1,-20L-15,-37M-39,-32L-44,-32A10,10,0,0,0,-52,-20L-50,-10L-25,-15L-39,-32M-50,-10V40C-50,46,-45,50,-40,50H40C46,50,50,46,50,40V-10H-50Z'),\r\n    ok: draw('M45,-25L-15,35L-42,8L-35,0L-15,21L38,-32L45,-25Z'),\r\n    pack: ['path', { fill: 0, d: 'M45,23C45,24,44,26,42,27L3,49C2,50,1,50,0,50C-1,50,-2,50,-3,49L-42,27C-44,26,-45,24,-45,23V-22C-45,-24,-44,-26,-42,-27L-3,-49C-2,-50,-1,-50,0,-50C1,-50,2,-50,3,-49L42,-27C44,-26,45,-24,45,-22V23M0,-39L-35,-20V20L0,39L35,20V-20L0,-39M0,-29L24,-15L0,-1L-24,-15L0,-29M25,14L5,26V8L25,-3V14M-5,26L-25,14V-3L-5,8V26Z' }],\r\n    plug: draw('M20,-25V-45H10V-25H-10V-45H-20V-25H-20C-25,-25,-30,-20,-30,-15V13L-12,30V45H13V30L30,13V-15C30,-20,25,-25,20,-25Z'),\r\n    plus: draw('M35,5H5V35H-5V5H-35V-5H-5V-35H5V-5H35V5Z'),\r\n    \"plus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M5,-25H-5V-5H-25V5H-5V25H5V5H25V-5H5V-25Z'),\r\n    \"plus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M-5,-25H5V-5H25V5H5V25H-5V5H-25V-5H-5V-25Z'),\r\n    print: ['path', {\r\n        fill: 0,\r\n        d: 'M30,-45H-30V-25H30M35,0A5,5,0,0,1,30,-5A5,5,0,0,1,35,-10A5,5,0,0,1,40,-5A5,5,0,0,1,35,0M20,35H-20V10H20M35,-20H-35A15,15,0,0,0,-50,-5V25H-30V45H30V25H50V-5A15,15,0,0,0,35,-20Z'\r\n    }],\r\n    question: draw(\"M-10,35H5V50H-10V35M0,-50C27,-49,38,-22,23,-2C18,3,12,7,8,11C5,15,5,20,5,25H-10C-10,17,-10,10,-7,5C-3,0,3,-3,8,-7C20,-18,17,-34,0,-35A15,15,0,0,0,-15,-20H-30A30,30,0,0,1,0,-50Z\"),\r\n    redo: draw('M32,-7C23,-15,11,-20,-2,-20C-26,-20,-45,-5,-52,16L-40,20C-35,4,-20,-7,-2,-7C7,-7,16,-4,23,2L5,20H50V-25L32,-7Z'),\r\n    refresh: draw('M28,-28C21,-35,11,-40,0,-40A40,40,0,0,0,-40,0A40,40,0,0,0,0,40C19,40,34,27,39,10H28C24,22,13,30,0,30A30,30,0,0,1,-30,0A30,30,0,0,1,0,-30C8,-30,16,-27,21,-21L5,-5H40V-40L28,-28Z'),\r\n    right: ['path', { fill: 0, d: 'M-40,-5V5H20L-7,33L0,40L39,0L0,-40L-7,-32L20,-5H-40Z' }],\r\n    'right-double': draw('M10,-30L40,0,10,30M-40,-30L-10,0,-40,30'),\r\n    run: draw('M23,-32A10,10,0,0,0,33,-42A10,10,0,0,0,23,-52A10,10,0,0,0,13,-42A10,10,0,0,0,23,-32M5,37L10,15L20,25V55H30V18L20,8L23,-7C29,0,39,5,50,5V-5C41,-5,33,-9,28,-17L23,-25C22,-28,18,-30,15,-30C13,-30,13,-29,11,-29L-15,-18V5H-5V-12L4,-15L-4,25L-28,20L-30,30L5,37M-40,-15A5,5,0,0,1,-45,-20A5,5,0,0,1,-40,-25H-25V-15H-40M-35,-35A5,5,0,0,1,-40,-40A5,5,0,0,1,-35,-45H-10V-35H-35M-45,5A5,5,0,0,1,-50,0A5,5,0,0,1,-45,-5H-25V5H-45Z'),\r\n    search: draw('M-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45M-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35Z'),\r\n    select: draw('M35,35H-35V-35H15V-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-5H35M-20,-10L-27,-2L-5,20L45,-30L38,-37L-5,6L-20,-10Z'),\r\n    sitemap: draw('M-15,-50V-20H-5V-5H-35C-41,-5,-45,-1,-45,5V20H-55V50H-25V20H-35V5H-5V20H-15V50H15V20H5V5H35V20H25V50H55V20H45V5C45,-1,41,-5,35,-5H5V-20H15V-50H-15Z'),\r\n    unselect: draw('M35,-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-35C45,-41,41,-45,35,-45M35,-35V35H-35V-35H35Z'),\r\n    share: draw('M30,20C26,20,23,22,20,24L-15,3C-15,2,-15,1,-15,0C-15,-1,-15,-2,-15,-3L20,-24C23,-22,26,-20,30,-20A15,15,0,0,0,45,-35A15,15,0,0,0,30,-50A15,15,0,0,0,15,-35C15,-34,15,-33,15,-31L-20,-11C-22,-13,-26,-15,-30,-15A15,15,0,0,0,-45,0A15,15,0,0,0,-30,15C-26,15,-22,13,-20,11L16,32C16,33,15,34,15,35C15,43,22,50,30,50C38,50,45,43,45,35A15,15,0,0,0,30,20Z'),\r\n    show: draw('M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M0,25A25,25,0,0,1,-25,0A25,25,0,0,1,0,-25A25,25,0,0,1,25,0A25,25,0,0,1,0,25M0,-37C-25,-37,-46,-22,-55,0C-46,22,-25,38,0,38C25,38,46,22,55,0C46,-22,25,-37,0,-37Z'),\r\n    speaker: draw('M40,35L33,28C41,21,45,11,45,0C45,-11,41,-21,33,-28L40,-35C49,-26,55,-14,55,0C55,14,49,26,40,35M26,21L19,14C23,11,25,6,25,0C25,-6,23,-11,19,-14L26,-21C32,-16,35,-8,35,0C35,8,32,16,26,21M-40,-45H0A10,10,0,0,1,10,-35V35A10,10,0,0,1,0,45H-40A10,10,0,0,1,-50,35V-35A10,10,0,0,1,-40,-45M-20,-35A10,10,0,0,0,-30,-25A10,10,0,0,0,-20,-15A10,10,0,0,0,-10,-25A10,10,0,0,0,-20,-35M-20,-5A20,20,0,0,0,-40,15A20,20,0,0,0,-20,35A20,20,0,0,0,0,15A20,20,0,0,0,-20,-5M-20,5A10,10,0,0,1,-10,15A10,10,0,0,1,-20,25A10,10,0,0,1,-30,15A10,10,0,0,1,-20,5Z'),\r\n    \"speaker-off\": draw('M-50,-34L-44,-40L45,49L39,55L31,48C30,49,28,50,25,50H-25C-31,50,-35,46,-35,40V-19L-50,-34M0,30A15,15,0,0,1,-15,15C-15,11,-14,8,-11,5L-18,-2C-22,3,-25,8,-25,15A25,25,0,0,0,0,40C7,40,13,38,17,33L10,26C7,29,4,30,0,30M25,15A25,25,0,0,0,0,-10H-1L-34,-43C-33,-47,-29,-50,-25,-50H25A10,10,0,0,1,35,-40V26L25,16V15M0,-40C-6,-40,-10,-36,-10,-30A10,10,0,0,0,0,-20A10,10,0,0,0,10,-30C10,-36,5,-40,0,-40Z'),\r\n    \"split-vertical\": draw('M30,20V5H15V50H5V-50H15V-5H30V-20L50,0L30,20M-50,0L-30,20V5H-15V50H-5V-50H-15V-5H-30V-20L-50,0Z'),\r\n    \"split-horizontal\": draw('M-20,30H-5V15H-50V5H50V15H5V30H20L0,50L-20,30M0,-50L-20,-30H-5V-15H-50V-5H50V-15H5V-30H20L0,-50Z'),\r\n    star: draw('M0,26L31,45L23,10L50,-14L14,-17L0,-50L-14,-17L-50,-14L-23,10L-31,45L0,26Z'),\r\n    stat: draw('M-45,50V-20H-25V50H-45M-10,50V-50H10V50H-10M25,50V10H45V50H25Z'),\r\n    'switch': draw('M-45,-40V3L-30,-12L-15,5C-10,10,-10,15,-10,15V45H10V10C10,10,10,5,7,0C5,-5,0,-10,0,-10L-15,-27L-2,-40M30,-40L8,-18L10,-15C10,-15,15,-10,17,-5C18,-3,19,-1,19,1L45,-25'),\r\n    'tri-down': draw('M-23,-17L0,6L23,-17L30,-10L0,20L-30,-10L-23,-17Z'),\r\n    'tri-left': draw('M17,23L-6,0L17,-23L10,-30L-20,0L10,30L17,23Z'),\r\n    'tri-right': draw('M-17,23L6,0L-17,-23L-10,-30L20,0L-10,30L-17,23Z'),\r\n    'tri-up': draw('M-23,17L0,-6L23,17L30,10L0,-20L-30,10L-23,17Z'),\r\n    twitter: draw('M52,-30C48,-28,44,-27,40,-27C44,-29,48,-33,49,-38C45,-36,41,-34,36,-33C32,-37,26,-40,20,-40C8,-40,-1,-30,-1,-19C-1,-17,-1,-15,-1,-14C-19,-15,-34,-23,-45,-36C-47,-33,-48,-29,-48,-25C-48,-18,-44,-11,-38,-7C-42,-7,-45,-8,-48,-10C-48,-10,-48,-10,-48,-10C-48,1,-41,9,-31,11C-33,12,-35,12,-37,12C-38,12,-39,12,-41,12C-38,20,-30,26,-21,26C-28,32,-37,36,-47,36C-49,36,-51,36,-52,35C-43,41,-31,45,-19,45C20,45,42,12,42,-16C42,-17,42,-18,42,-19C46,-22,49,-26,52,-30Z'),\r\n    undo: draw('M3,-20C-11,-20,-23,-15,-32,-7L-50,-25V20H-5L-23,2C-16,-4,-7,-7,3,-7C20,-7,35,4,41,20L52,16C45,-5,26,-20,3,-20Z'),\r\n    up: draw('M-30,30L0,-30,30,30'),\r\n    'up-double': draw('M-30,40L0,10,30,40M-30,-10L0,-40,30,-10'),\r\n    user: draw(\r\n        'M0,-40A20,20,0,0,1,20,-20A20,20,0,0,1,0,0A20,20,0,0,1,-20,-20A20,20,0,0,1,0,-40M0,10C22,10,40,19,40,30V40H-40V30C-40,19,-22,10,0,10Z'\r\n    ),\r\n    wait: draw('M0,-5A5,5,0,0,0,-5,0A5,5,0,0,0,0,5A5,5,0,0,0,5,0A5,5,0,0,0,0,-5M3,-50C25,-50,26,-32,14,-26C9,-24,7,-19,6,-14C8,-13,10,-11,12,-9C30,-19,50,-15,50,3C50,25,32,26,26,14C24,9,19,7,14,6C13,8,11,10,9,12C19,30,15,50,-2,50C-25,50,-25,32,-14,26C-9,24,-7,19,-6,14C-8,13,-10,11,-12,9C-30,19,-50,15,-50,-2C-50,-25,-32,-26,-26,-14C-24,-9,-19,-7,-14,-6C-13,-8,-11,-10,-9,-12C-19,-30,-15,-50,3,-50Z'),\r\n    \"zoom-in\": draw('M18,10L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18M-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10M0,-10H-10V0H-15V-10H-25V-15H-15V-25H-10V-15H0V-10Z'),\r\n    \"zoom-out\": draw('M18,10H14L12,9C17,3,20,-4,20,-12A33,33,0,0,0,-12,-45A33,33,0,0,0,-45,-12A33,33,0,0,0,-12,20C-4,20,3,17,9,12L10,14V18L35,43L43,35L18,10M-12,10C-25,10,-35,0,-35,-12C-35,-25,-25,-35,-12,-35C0,-35,10,-25,10,-12C10,0,0,10,-12,10M-25,-15H0V-10H-25V-15Z'),\r\n    warning: draw('M0,-50L-55,45H55M0,-30L38,35H-38M-5,-10V10H5V-10M-5,20V30H5V20')\r\n};\r\n\r\n\r\n// Synonyms.\r\nconst synonyms: { [name: string]: string } = {\r\n    add: \"plus\",\r\n    back: \"left\",\r\n    help: \"question\",\r\n    save: \"export\"\r\n};\r\nfor (const key of Object.keys(synonyms)) {\r\n    const val: string = synonyms[key];\r\n    iconsBook[key] = iconsBook[val];\r\n}\r\n","\"use strict\";\r\n\r\nimport * as React from \"react\";\r\nimport castBoolean from \"../converter/boolean\";\r\nimport castInteger from \"../converter/integer\";\r\nimport castUnit from \"../converter/unit\";\r\nimport { iconsBook, TIconDefinition } from \"../icons\";\r\nimport \"./icon.css\";\r\n\r\nenum EnumPenColor { B, W, P, PD, PL, S, SD, SL }\r\n\r\ninterface IIconProps {\r\n    visible?: boolean;\r\n    content?: string | TIconDefinition;\r\n    size?: string | number;\r\n    animate?: boolean;\r\n    flipH?: boolean;\r\n    flipV?: boolean;\r\n    rotate?: number;\r\n    pen0?: EnumPenColor | string;\r\n    pen1?: EnumPenColor | string;\r\n    pen2?: EnumPenColor | string;\r\n    pen3?: EnumPenColor | string;\r\n    pen4?: EnumPenColor | string;\r\n    pen5?: EnumPenColor | string;\r\n    pen6?: EnumPenColor | string;\r\n    pen7?: EnumPenColor | string;\r\n    onClick?: () => void;\r\n    onHide?: () => void;\r\n}\r\n\r\nexport default class Icon extends React.Component<IIconProps, {}> {\r\n    static isValidIconName(name: string): boolean {\r\n        return typeof iconsBook[name] !== 'undefined';\r\n    }\r\n\r\n    static getAllIconNames(): string[] {\r\n        return Object.keys(iconsBook).sort();\r\n    }\r\n\r\n    private refIcon: any;\r\n    private visible: boolean;\r\n    private timeoutHandle: number;\r\n\r\n    constructor(props: IIconProps) {\r\n        super(props);\r\n        this.refIcon = React.createRef();\r\n        this.visible = false;\r\n        this.timeoutHandle = 0;\r\n    }\r\n\r\n    triggerVisibleAnimation() {\r\n        const\r\n            elemIcon = this.refIcon.current,\r\n            visible = this.visible;\r\n        if( !elemIcon ) return;\r\n        if (this.timeoutHandle) {\r\n            window.clearTimeout(this.timeoutHandle);\r\n            this.timeoutHandle = 0;\r\n        }\r\n        requestAnimationFrame(() => {\r\n            if (visible) elemIcon.classList.remove(\"zero\");\r\n            else {\r\n                elemIcon.classList.add(\"zero\");\r\n                const slot = this.props.onHide;\r\n                if (typeof slot === 'function') {\r\n                    this.timeoutHandle = window.setTimeout(slot, 300);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const\r\n            p = this.props,\r\n            visible = castBoolean(p.visible, true),\r\n            animate = castBoolean(p.animate, false),\r\n            flipH = castBoolean(p.flipH, false),\r\n            flipV = castBoolean(p.flipV, false),\r\n            size = castUnit(p.size, \"28px\"),\r\n            content = castContent(p.content),\r\n            rotate = castInteger(p.rotate, 0),\r\n            onClick = p.onClick,\r\n            classes = [\"tfw-view-icon\"];\r\n        const svgContent = createSvgContent(content, p);\r\n        if (!svgContent) return null;\r\n\r\n        if (animate) classes.push(\"animate\");\r\n        if (visible) classes.push(\"zero\");\r\n        if (typeof onClick === 'function') classes.push(\"active\");\r\n\r\n        let transform = \"\";\r\n        if (rotate !== 0) {\r\n            transform += `rotate(${rotate}deg) `;\r\n        }\r\n        if (flipH || flipV) {\r\n            transform += `scale(${flipH ? -1 : 1},${flipV ? -1 : 1})`;\r\n        }\r\n        const style: React.CSSProperties = { width: size, height: size };\r\n        if (transform.length > 0) style.transform = transform;\r\n\r\n        requestAnimationFrame(() => this.triggerVisibleAnimation());\r\n        this.visible = visible;\r\n\r\n        return (\r\n            <svg className={classes.join(\" \")}\r\n                ref={this.refIcon}\r\n                viewBox=\"-65 -65 130 130\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n                width={size}\r\n                height={size}\r\n                onClick={onClick}\r\n                style={style}>\r\n                {svgContent}\r\n                < g strokeWidth=\"6\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n                    {createSvgContent(content, p)}\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nfunction createSvgContent(def: TIconDefinition, props: IIconProps, key: string = \"\"): any {\r\n    const\r\n        elementName = def[0],\r\n        { attributes, children } = parseDef(def);\r\n\r\n    if (typeof elementName === 'undefined') return <g></g>;\r\n\r\n    const attribs: React.Attributes = manageColors({ ...attributes }, props);\r\n    if (key.length > 0) attributes.key = key;\r\n\r\n    return React.createElement(\r\n        elementName,\r\n        attribs,\r\n        children.map((child, index) => createSvgContent(child, props, `${index}`))\r\n    ) as React.ReactSVGElement;\r\n}\r\n\r\nconst CLASSES = [\"P\", \"PL\", \"PD\", \"S\", \"SL\", \"SD\"];\r\nconst PENS = \"01234567\";\r\n\r\n/**\r\n * If the value of the attribute \"fill\" is an element of CLASSES,\r\n * it will be removed and replace with a class.\r\n * Same thing for the attibute \"stroke\".\r\n *\r\n * @example\r\n * manageColors({ fill: \"1\" }) === { className: \"thn-svg-fill-1\" }\r\n *\r\n * @param   attribs [description]\r\n * @param   props   [description]\r\n * @returns         [description]\r\n */\r\nfunction manageColors(attribs: { [key: string]: any }, props: IIconProps) {\r\n    // @TODO For special forms of \"fill\" and \"stroke\", add classes.\r\n    const classes = (attribs.className || \"\").split(\" \");\r\n\r\n    [\"fill\", \"stroke\"].forEach(attribName => {\r\n        const attribValue = `${attribs[attribName]}`;\r\n        if (typeof attribValue === 'undefined') return;\r\n        if (attribValue === 'undefined') return;\r\n        const key = `${attribValue}`.toUpperCase();\r\n        if (CLASSES.indexOf(key) === -1 && PENS.indexOf(key) === -1) return;\r\n        if (PENS.indexOf(attribValue) !== -1 ) {\r\n            // If we find fill=\"3\", then we must look for property pen3.\r\n            const pen = props[`pen${attribValue}`];\r\n            if( typeof pen === 'string' ) {\r\n                if( CLASSES.indexOf(pen) === -1 ) {\r\n                    attribs[attribName] = pen;\r\n                } else {\r\n                    delete attribs[attribName];\r\n                    classes.push(`thm-svg-${attribName}${pen}`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        delete attribs[attribName];\r\n        classes.push(`thm-svg-${attribName}${key}`);\r\n    });\r\n\r\n    attribs.className = classes.join(\" \").trim();\r\n    return attribs;\r\n}\r\n\r\nfunction parseDef([name, arg1, arg2]: TIconDefinition) {\r\n    let attributes: undefined | {},\r\n        children: undefined | any[];\r\n\r\n    if (Array.isArray(arg1)) children = arg1;\r\n    else if (typeof arg1 !== 'undefined') attributes = arg1;\r\n    if (Array.isArray(arg2)) children = arg2;\r\n    else if (typeof arg2 !== 'undefined') attributes = arg2;\r\n\r\n    if (typeof attributes === 'undefined') attributes = {};\r\n    if (typeof children === 'undefined') children = [];\r\n\r\n    return { attributes, children };\r\n}\r\n\r\nfunction castContent(content: string | TIconDefinition = \"ok\"): TIconDefinition {\r\n    if (Array.isArray(content)) return content;\r\n    return iconsBook[content] || [];\r\n}\r\n","export default function castString(value: any, defaultValue: string): string {\r\n    const t = typeof value;\r\n    if (t === 'number' && !isNaN(value)) {\r\n        return `${value}`;\r\n    }\r\n    if (t === 'string') return value;\r\n    return defaultValue;\r\n}\r\n","import castString from \"./string\";\n\n/**\n * If `value` is not an array, return `defaultArray`.\n * Else if `defaultString` is undefined, return `value`.\n * Else return a copy of `value` with a castString on all its elements.\n *\n * @param   value         [description]\n * @param   defaultArray  [description]\n * @param   defaultString [description]\n * @returns               [description]\n */\nexport default function castStringArray(\n    value: any, defaultArray: string[] = [], defaultString: string = \"\"\n) {\n    if (typeof value === 'string') return [value];\n    if (!Array.isArray(value)) return defaultArray;\n    if (typeof defaultString === 'undefined') return value;\n    return value.map(item => castString(item, defaultString));\n}\n","import * as React from \"react\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castStringArray from \"../converter/string-array\"\nimport \"./flex.css\"\n\ninterface IFlexProp {\n    wide?: boolean;\n    classes?: string[] | string;\n    dir?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\" | \"wide\" | \"narrow\";\n    wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n    justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-around\" | \"space-between\" | \"space-evenly\";\n    alignItems?: \"stretch\" | \"flex-start\" | \"flex-end\" | \"center\";\n    children: React.ReactElement<any>[] | React.ReactElement<any>;\n}\n\nexport default class Flex extends React.Component<IFlexProp, {}> {\n    render() {\n        const p = this.props;\n        const wide = castBoolean(p.wide, true);\n        const dir = castString(p.dir, \"row\");\n        const style: React.CSSProperties = {\n            justifyContent: castString(p.justifyContent, \"space-around\"),\n            alignItems: castString(p.alignItems, \"center\"),\n            flexWrap: castString(p.wrap, \"wrap\")\n        };\n        const classes = [\"tfw-view-flex\", `dir-${dir}`];\n        classes.push(...castStringArray(p.classes));\n\n        if (wide) classes.push(\"wide\");\n\n        return (\n            <div className={classes.join(\" \")} style={style}>{\n                p.children\n            }</div>\n        )\n    }\n}\n","/**\r\n * The ESCAPE key is often used to close a dialog, collapse a combo list, ...\r\n * This module helps you nesting closable things.\r\n *\r\n * @example\r\n * import * from EscapeHandler from \"./tfw/escape-handler\"\r\n * EscapeHandler.add(() => myDialog.close());\r\n * EscapeHandler.fire();\r\n */\r\n\r\nexport default {add, fire};\r\n\r\ntype THandler = ()=>void;\r\n\r\nlet handlers:THandler[] = [];\r\nlet initialized = false;\r\n\r\nexport function add(listener: THandler) {\r\n    if( !initialized) {\r\n        initialized = true;\r\n        addKeyboardListener();\r\n    }\r\n\r\n    handlers.push(listener);\r\n}\r\n\r\nexport function fire() {\r\n    if( handlers.length === 0 ) return;\r\n    const handler = handlers.pop();\r\n    if (typeof handler === 'function') handler();\r\n}\r\n\r\nfunction addKeyboardListener() {\r\n    document.addEventListener(\"keydown\", evt => {\r\n        if( evt.key !== 'Escape') return;\r\n        fire();\r\n    }, true);\r\n}\r\n","const CAPACITY = 3;\r\n\r\n/**\r\n * Helper to manage a pointer move.\r\n * It gives you the location, the speed and the acceleration of your pointer.\r\n *\r\n * @type {[type]}\r\n */\r\nexport default class Moves {\r\n    private _x0: number;\r\n    private _y0: number;\r\n    private _time0: number;\r\n    private _x: number[] = new Array(CAPACITY);\r\n    private _y: number[] = new Array(CAPACITY);\r\n    private _time: number[] = new Array(CAPACITY);\r\n    private _cursor: number = 0;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.init(x, y);\r\n    }\r\n\r\n    init(x: number, y: number) {\r\n        this._time0 = this.now;\r\n        this._x0 = x;\r\n        this._y0 = y;\r\n        this._x = this._x.fill(this._x0, 0, CAPACITY);\r\n        this._y = this._y.fill(this._y0, 0, CAPACITY);\r\n        this._time = this._time.fill(this._time0, 0, CAPACITY);\r\n    }\r\n\r\n    _index(shift: number) {\r\n        return (this._cursor + shift) % CAPACITY;\r\n    }\r\n\r\n    get now() { return Date.now(); }\r\n\r\n    add(x: number, y: number) {\r\n        const idx = (this._cursor + CAPACITY - 1) % CAPACITY;\r\n        this._time[idx] = this.now;\r\n        this._x[idx] = x;\r\n        this._y[idx] = y;\r\n        this._cursor = idx;\r\n    }\r\n\r\n    get elapsedTime() { return this.now - this._time0; }\r\n\r\n    get x() { return this._x[this._cursor]; }\r\n    get y() { return this._y[this._cursor]; }\r\n\r\n    get startX() { return this._x0; }\r\n    get startY() { return this._y0; }\r\n\r\n    get speedX() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._x[idx0] - this._x[idx1]) / time;\r\n    }\r\n\r\n    get speedY() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._y[idx0] - this._y[idx1]) / time;\r\n    }\r\n\r\n    get accelX() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const x0 = this._x[idx0];\r\n        const x1 = this._x[idx1];\r\n        const x2 = this._x[idx2];\r\n\r\n        const speed01 = (x0 - x1) / time01;\r\n        const speed12 = (x1 - x2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n\r\n    get accelY() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const y0 = this._y[idx0];\r\n        const y1 = this._y[idx1];\r\n        const y2 = this._y[idx2];\r\n\r\n        const speed01 = (y0 - y1) / time01;\r\n        const speed12 = (y1 - y2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n}\r\n","type TIdentifier = number | null;\r\n\r\nexport default class Finger {\r\n    private fingers: TIdentifier[] = [];\r\n\r\n    getIndex(identifier: number): number {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) return index;\r\n        const indexOfFirstNull = this.fingers.indexOf(null);\r\n        if (indexOfFirstNull !== -1) {\r\n            this.fingers[indexOfFirstNull] = identifier;\r\n            return indexOfFirstNull;\r\n        }\r\n        this.fingers.push(identifier);\r\n        return this.fingers.length - 1;\r\n    }\r\n\r\n    remove(identifier: number) {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) this.fingers[index] = null;\r\n    }\r\n}\r\n","/**\r\n * BasicHandler(\r\n *     element: HTMLElement,\r\n *     handleDown: TBasicHandler,\r\n *     handleUp: TBasicHandler,\r\n *     handleMove: TBasicHandler\r\n * )\r\n *\r\n * Deals with three basic events : DOWN, UP and MOVE.\r\n * If the device has several input pointers, we will return\r\n * only one event.\r\n *\r\n * A TBasicHandler is a synthetic event object:\r\n *   - x: X coordinate relative to the viewport, not including any scroll offset.\r\n *   - y: Y coordinate relative to the viewport, not including any scroll offset.\r\n *   - startX\r\n *   - startY\r\n *   - index: For multi-touch system. The first one is 0, the second is 1, etc.\r\n *   - buttons: 1 = left, 2 = right.\r\n *   - pointer: \"mouse\" | \"touch\" | \"pen\".\r\n *   - clear(): Call stopPropagation() and preventDefault() on this event.\r\n *\r\n */\r\nimport Finger from \"./finger\"\r\nimport { IBasicEvent } from \"./basic-handler.types\"\r\n\r\ntype TTouchEventHandler = (evt: TouchEvent) => void;\r\n\r\ntype TMouseEventHandler = (evt: MouseEvent) => void;\r\n\r\ntype TBasicHandler = (evt: IBasicEvent) => void | undefined;\r\n\r\ninterface IDeviceHandlers {\r\n    touchstart?: TTouchEventHandler;\r\n    touchend?: TTouchEventHandler;\r\n    touchmove?: TTouchEventHandler;\r\n    mousedown?: TMouseEventHandler;\r\n    mouseup?: TMouseEventHandler;\r\n    mousemove?: TMouseEventHandler;\r\n    mouseout?: TMouseEventHandler;\r\n}\r\n\r\nexport default class BasicHandler {\r\n    readonly element: HTMLElement;\r\n    pointerType: string = \"\";\r\n    pointerTypeTime: number = 0;\r\n    deviceHandlers: IDeviceHandlers = {};\r\n    fingers: Finger = new Finger();\r\n    pressed: boolean = false;\r\n\r\n    constructor(element: HTMLElement,\r\n        handleDown: TBasicHandler,\r\n        handleUp: TBasicHandler,\r\n        handleMove: TBasicHandler) {\r\n        this.element = element;\r\n        attachDownEvent.call(this, handleDown);\r\n        attachUpEvent.call(this, handleUp);\r\n        attachMoveEvent.call(this, handleMove);\r\n    }\r\n\r\n    /**\r\n     * If you device can hold mouse and touch events, you will receive two events.\r\n     * This function prevent it.\r\n     *\r\n     * @param   pointerType\r\n     * @returns If `false`, we must ignore this event.\r\n     */\r\n    checkPointerType(pointerType: string): boolean {\r\n        const now = Date.now();\r\n        const delay = now - this.pointerTypeTime;\r\n        this.pointerTypeTime = now;\r\n        if (this.pointerType.length === 0 || delay > 500) {\r\n            // If the user wat more than 500ms, he can change of pointer.\r\n            this.pointerType = pointerType;\r\n            return true;\r\n        }\r\n        return this.pointerType === pointerType;\r\n    }\r\n\r\n    detachEvents() {\r\n        const element = this.element;\r\n        const {\r\n            touchstart, touchend, touchmove, mousedown, mouseup, mouseout, mousemove\r\n        } = this.deviceHandlers;\r\n\r\n        if (touchstart) element.removeEventListener(\"touchstart\", touchstart, false);\r\n        if (touchend) element.removeEventListener(\"touchend\", touchend, false);\r\n        if (touchmove) element.removeEventListener(\"touchmove\", touchmove, false);\r\n        if (mousedown) element.removeEventListener(\"mousedown\", mousedown, false);\r\n        if (mouseup) element.removeEventListener(\"mouseup\", mouseup, false);\r\n        if (mouseout) element.removeEventListener(\"mouseout\", mouseout, false);\r\n        if (mousemove) element.removeEventListener(\"mousemove\", mousemove, false);\r\n    }\r\n}\r\n\r\n\r\nfunction attachDownEvent(this: BasicHandler, handleDown: TBasicHandler) {\r\n    attachDownEventTouch.call(this, handleDown);\r\n    attachDownEventMouse.call(this, handleDown);\r\n}\r\n\r\n\r\nfunction attachDownEventTouch(this: BasicHandler, handleDown: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: TouchEvent) => {\r\n        if (!this.checkPointerType(\"touch\")) return;\r\n        for (const touch of evt.changedTouches) {\r\n            handleDown({\r\n                x: touch.clientX,\r\n                y: touch.clientY,\r\n                index: this.fingers.getIndex(touch.identifier),\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                clear: createClear(evt)\r\n            });\r\n        }\r\n    };\r\n    deviceHandlers.touchstart = handler;\r\n    element.addEventListener(\"touchstart\", handler, false);\r\n}\r\n\r\n\r\nfunction attachDownEventMouse(this: BasicHandler, handleDown: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.checkPointerType(\"mouse\")) return;\r\n        this.pressed = true;\r\n        handleDown({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mousedown = handler;\r\n    element.addEventListener(\"mousedown\", handler, false);\r\n}\r\n\r\n\r\nfunction attachUpEvent(this: BasicHandler, handleUp: TBasicHandler) {\r\n    attachUpEventTouch.call(this, handleUp);\r\n    attachUpEventMouse.call(this, handleUp);\r\n    // When the cursor is out of the element, we trigger a UP event.\r\n    attachLeaveEvent.call(this, handleUp);\r\n}\r\n\r\n\r\nfunction attachUpEventTouch(this: BasicHandler, handleUp: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: TouchEvent) => {\r\n        if (!this.checkPointerType(\"touch\")) return;\r\n        for (const touch of evt.changedTouches) {\r\n            handleUp({\r\n                x: touch.clientX,\r\n                y: touch.clientY,\r\n                index: this.fingers.getIndex(touch.identifier),\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                clear: createClear(evt)\r\n            });\r\n            this.fingers.remove(touch.identifier)\r\n        }\r\n    };\r\n    deviceHandlers.touchend = handler;\r\n    element.addEventListener(\"touchend\", handler, false);\r\n}\r\n\r\n\r\nfunction attachUpEventMouse(this: BasicHandler, handleUp: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.checkPointerType(\"mouse\")) return;\r\n        this.pressed = false;\r\n        console.log('MOUSE UP');\r\n        handleUp({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mouseup = handler;\r\n    element.addEventListener(\"mouseup\", handler, false);\r\n}\r\n\r\n\r\nfunction attachLeaveEvent(this: BasicHandler, handleUp: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.pressed || !this.checkPointerType(\"mouse\")) return;\r\n        console.log('MOUSE OUT');\r\n        handleUp({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mouseout = handler;\r\n    element.addEventListener(\"mouseout\", handler, false);\r\n}\r\n\r\n\r\n\r\n\r\nfunction attachMoveEvent(this: BasicHandler, handleMove: TBasicHandler) {\r\n    attachMoveEventTouch.call(this, handleMove);\r\n    attachMoveEventMouse.call(this, handleMove);\r\n}\r\n\r\n\r\nfunction attachMoveEventTouch(this: BasicHandler, handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: TouchEvent) => {\r\n        if (!this.checkPointerType(\"touch\")) return;\r\n        for (const touch of evt.changedTouches) {\r\n            handleMove({\r\n                x: touch.clientX,\r\n                y: touch.clientY,\r\n                index: this.fingers.getIndex(touch.identifier),\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                clear: createClear(evt)\r\n            });\r\n            this.fingers.remove(touch.identifier)\r\n        }\r\n    };\r\n    deviceHandlers.touchmove = handler;\r\n    element.addEventListener(\"touchmove\", handler, false);\r\n}\r\n\r\n\r\nfunction attachMoveEventMouse(this: BasicHandler, handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.checkPointerType(\"mouse\")) return;\r\n        handleMove({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mousemove = handler;\r\n    element.addEventListener(\"mousemove\", handler, false);\r\n}\r\n\r\n\r\nfunction createClear(evt: MouseEvent | TouchEvent) {\r\n    return () => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n}\r\n","/**\n * Here is the list of all parameters used if all the handlers.\n *\n * tap({ x: number, y: number, index: number })\n *\n */\n\nimport Moves from \"./moves\"\nimport BasicHandler from \"./basic-handler\"\nimport { IBasicEvent } from \"./basic-handler.types\"\nimport { IEvent, IWheelEvent } from \"./types\"\n\nconst SYMBOL = Symbol(\"gesture\");\n\nlet ID = 0;\n\nexport interface IHTMLElementWithGesture extends HTMLElement {\n    // A special attribute to attach Gesture object.\n    [SYMBOL]?: Gesture\n}\n\ntype THandlers = {\n    tap?: (event: IEvent) => void;\n    down?: (event: IEvent) => void;\n    up?: (event: IEvent) => void;\n    pan?: (event: IEvent) => void;\n    pandown?: (event: IEvent) => void;\n    panup?: (event: IEvent) => void;\n    panvertical?: (event: IEvent) => void;\n    swipe?: (event: IEvent) => void;\n    swipedown?: (event: IEvent) => void;\n    swipeup?: (event: IEvent) => void;\n    swipevertical?: (event: IEvent) => void;\n    swipeleft?: (event: IEvent) => void;\n    keydown?: (event: KeyboardEvent) => void;\n    keyup?: (event: KeyboardEvent) => void;\n    wheel?: (event: IWheelEvent) => void;\n    [key: string]: ((evt: any) => void) | undefined;\n};\n\ninterface IPointer {\n    isDown: boolean;\n    moves: Moves;\n    rect: {\n        left: number;\n        top: number;\n        width: number;\n        height: number;\n    };\n    type?: string | null;\n    time?: number;\n    id?: number;\n}\n\nconst STANDARD_EVENTS = [\"keydown\", \"keyup\", \"wheel\"];\n\nclass Gesture {\n    //private readonly basicHandler: BasicHandler;\n    private handlers: THandlers;\n    private element: IHTMLElementWithGesture;\n    private readonly pointers: IPointer[];\n    private readonly id: number;\n\n    constructor(elem: IHTMLElementWithGesture) {\n        elem[SYMBOL] = this;\n        this.id = ID++;\n        this.element = elem;\n        this.handlers = {};\n        new BasicHandler(\n            elem,\n            this.handleDown.bind(this),\n            this.handleUp.bind(this),\n            this.handleMove.bind(this)\n        );\n        this.pointers = new Array(3);\n    }\n\n    get identifier() { return this.id; }\n\n    on(handlers: THandlers) {\n        this.handlers = wrapSpecialHandlers(Object.assign(this.handlers, handlers));\n        Object.keys(this.handlers).forEach(eventName => {\n            if (STANDARD_EVENTS.indexOf(eventName) === -1) return;\n            // This is a non-pointer event. (i.e., keyboard, resize, ...)\n            const handler = this.handlers[eventName];\n            if (typeof handler === 'function' ) {\n                this.element.addEventListener(eventName, handler, false);\n            }\n        });\n    }\n\n    /**\n     * Returns true if current gesture has at least one of the provided handlers.\n     */\n    private hasHandlerFor(...names: string[]) {\n        for( const name of names ) {\n            if (this.handlers[name]) return true;\n        }\n        return false;\n    }\n\n    private getPointer(index: number) {\n        const pointers = this.pointers;\n        if (typeof pointers[index] === 'undefined') {\n            pointers[index] = {\n                isDown: false,\n                moves: new Moves(0, 0),\n                rect: { left: 0, top: 0, width: 0, height: 0 }\n            }\n        }\n        return pointers[index];\n    }\n\n    private handleDown(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { element } = this;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = true;\n        ptr.rect = element.getBoundingClientRect();\n        const x = event.x - ptr.rect.left;\n        const y = event.y - ptr.rect.top;\n        ptr.moves.init(x, y);\n\n        if (this.handlers.down) {\n            this.handlers.down(Object.assign(event, { x, y, target: element }))\n        }\n    }\n\n    private handleUp(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = false;\n        const x = event.x - ptr.rect.left;\n        const y = event.y - ptr.rect.top;\n        ptr.moves.add(x, y);\n\n        if (this.handlers.up) {\n            this.handlers.up(Object.assign(event, { x, y, target: this.element }));\n        }\n        this.recognizeTap(event, ptr);\n        this.recognizeSwipe(event, ptr);\n    }\n\n    private handleMove(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const ptr = this.getPointer(event.index);\n        const x = event.x - ptr.rect.left;\n        const y = event.y - ptr.rect.top;\n        ptr.moves.add(x, y);\n        this.recognizePan(event, ptr);\n    }\n\n    private recognizeTap(evt: IBasicEvent, ptr: IPointer) {\n        // A tap is recognized only if there is less than 400ms\n        // between down and up, and if the pointer has not moves more\n        // than 16px.\n        if (!this.handlers.tap || ptr.moves.elapsedTime > 400) return;\n        const moves = ptr.moves;\n        const dx = Math.abs(moves.x - moves.startX);\n        if (dx > 16) return;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dy > 16) return;\n\n        evt.clear();\n        this.handlers.tap(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n    }\n\n    private recognizePan(evt: IBasicEvent, ptr: IPointer) {\n        if (!ptr.isDown) return;\n        this.recognizePanDown(evt, ptr);\n        this.recognizePanUp(evt, ptr);\n        if (this.handlers.pan) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.pan(Object.assign(evt, { x, y, startX, startY, target: this.element }));\n        }\n    }\n\n    private recognizePanDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"pandown\", \"panvertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n\n        if (this.handlers.pandown) {\n            this.handlers.pandown(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizePanUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"panup\", \"panvertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = -moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.startY - moves.y;\n        if (dy < dx) return;\n\n        if (this.handlers.panup) {\n            this.handlers.panup(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizeSwipe(evt: IBasicEvent, ptr: IPointer) {\n        this.recognizeSwipeDown(evt, ptr);\n        this.recognizeSwipeUp(evt, ptr);\n        this.recognizeSwipeLeft(evt, ptr);\n        if (this.handlers.swipe) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.swipe(Object.assign(evt, { x, y, startX, startY, target: this.element }));\n        }\n    }\n\n    private recognizeSwipeDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipedown\", \"swipevertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipedown) {\n            this.handlers.swipedown(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizeSwipeUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeup\", \"swipevertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeup) {\n            this.handlers.swipeup(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizeSwipeLeft(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeleft\", \"swipehorizontal\")) return;\n\n        // Check that we are panning left.\n        const moves = ptr.moves;\n        const sx = -moves.speedX;\n        const sy = Math.abs(moves.speedY);\n        if (sx < sy) return;\n        // Check that the final point is beneath the initial one.\n        const dx = moves.startX - moves.x;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dx < dy) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dx / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeleft) {\n            this.handlers.swipeleft(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.swipehorizontal) {\n            this.handlers.swipehorizontal(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n}\n\nexport default function(elem: IHTMLElementWithGesture): Gesture {\n    let gesture = elem[SYMBOL];\n    if( gesture ) return gesture;\n    gesture = new Gesture(elem);\n    elem[SYMBOL] = gesture;\n    return gesture;\n}\n\n\n/**\n * Somw event (like \"wheel\") need their handler to be wrapped in order to\n * map the event is something else.\n */\nfunction wrapSpecialHandlers(rawHandlers: THandlers): THandlers {\n    const handlers: THandlers = {};\n    for( const eventName of Object.keys(rawHandlers) ) {\n        if (eventName === 'wheel') {\n            handlers.wheel = (evt: WheelEvent) => {\n                rawHandlers.wheel({\n                    deltaX: evt.deltaX,\n                    deltaY: evt.deltaY,\n                    deltaZ: evt.deltaZ,\n                    x: 0,\n                    y: 0\n                });\n            }\n            continue;\n        }\n        handlers[eventName] = rawHandlers[eventName];\n    }\n    return handlers;\n}\n","/**\r\n * @class Color\r\n * Fast color manipulations.\r\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\r\n * (saturation), and L (luminance) are all floats between 0 and 1.\r\n */\r\nexport default class Color {\r\n    public R: number;\r\n    public G: number;\r\n    public B: number;\r\n    public H: number;\r\n    public S: number;\r\n    public L: number;\r\n    public A: number;\r\n\r\n    constructor(codeCSS: string = \"#000000\") {\r\n        this.R = 0;\r\n        this.G = 0;\r\n        this.B = 0;\r\n        this.H = 0;\r\n        this.S = 0;\r\n        this.L = 0;\r\n        this.A = 1;\r\n\r\n        this.parse(codeCSS);\r\n    }\r\n\r\n    static isValid(codeCSS: string) {\r\n        if( typeof codeCSS !== 'string' ) return false;\r\n        if( codeCSS.charAt(0) !== '#' ) return false;\r\n        switch( codeCSS.length ) {\r\n            case 4:  // #RGB\r\n            case 5:  // #RGBA\r\n            case 7:  // #RRGGBB\r\n            case 9:  // #RRGGBBAA\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static normalize(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.stringify();\r\n    }\r\n\r\n    static luminance(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminance();\r\n    }\r\n\r\n    /**\r\n     * Returns 1 for bright colors and 0 for dark colors.\r\n     */\r\n    static luminanceStep(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminanceStep();\r\n    }\r\n\r\n    static mix(color1: Color, color2: Color, alpha: number=.5) {\r\n        const beta = 1 - alpha;\r\n        return Color.newRGBA(\r\n            alpha * color2.R + beta * color1.R,\r\n            alpha * color2.G + beta * color1.G,\r\n            alpha * color2.B + beta * color1.B,\r\n            alpha * color2.A + beta * color1.A\r\n        );\r\n    }\r\n\r\n    static newBlack() {\r\n        return Color.newRGB(0, 0, 0);\r\n    }\r\n\r\n    static newWhite() {\r\n        return Color.newRGB(1, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGB(red: number, green: number, blue: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = 1;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B,A channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @param   {number} alpha - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGBA(red: number, green: number, blue: number, alpha: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = alpha;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Parse a color writtent in CSS syntax.\r\n     *\r\n     * @param   {string} code - CSS color.\r\n     * @returns {boolean} `true` if the color has valid syntax.\r\n     */\r\n    parse(code: string = \"#000000\"): boolean {\r\n        const input = code.trim().toUpperCase();\r\n        if (this.parseHexa.call(this, input)) return true;\r\n        if (this.parseRGB.call(this, input)) return true;\r\n        if (this.parseRGBA.call(this, input)) return true;\r\n        if (this.parseHSL.call(this, input)) return true;\r\n        // @TODO parseHSLA.\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @see https://en.wikipedia.org/wiki/Grayscale\r\n     * @this Color\r\n     * @returns {undefined}\r\n     */\r\n    luminance(): number {\r\n        return (0.2126 * this.R) + (0.7152 * this.G) + (0.0722 * this.B);\r\n    }\r\n\r\n    /**\r\n     * @returns {integer} 0 if the color is dark and 1 if it is light.\r\n     */\r\n    luminanceStep(): number {\r\n        return this.luminance() < .6 ? 0 : 1;\r\n    }\r\n\r\n    /**\r\n     * @this Color\r\n     * @returns {string} String value of the color. `#fd45a7`.\r\n     */\r\n    stringify() {\r\n        let color = hexa2(this.R * 255) + hexa2(this.G * 255) + hexa2(this.B * 255);\r\n        if (this.A < 1) {\r\n            color += hexa2(this.A * 255);\r\n        }\r\n        return `#${color}`;\r\n    }\r\n\r\n    copy() {\r\n        const newColor = new Color();\r\n        newColor.R = this.R;\r\n        newColor.G = this.G;\r\n        newColor.B = this.B;\r\n        newColor.A = this.A;\r\n        newColor.H = this.H;\r\n        newColor.S = this.S;\r\n        newColor.L = this.L;\r\n        return newColor;\r\n    }\r\n\r\n    /**\r\n         * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\r\n         * @this Color\r\n         * @returns {undefined}\r\n         */\r\n    hsl2rgb() {\r\n        const\r\n            H = 6 * this.H,\r\n            S = this.S,\r\n            L = this.L,\r\n            chroma = (1 - Math.abs(2 * L - 1)) * S,\r\n            x = chroma * (1 - Math.abs(H % 2 - 1));\r\n\r\n        let R = 0, G = 0, B = 0;\r\n\r\n        if (H < 3) {\r\n            if (H < 1) {\r\n                R = chroma; G = x; B = 0;\r\n            } else if (H < 2) {\r\n                R = x; G = chroma; B = 0;\r\n            } else {\r\n                // H == 2.\r\n                R = 0; G = chroma; B = x;\r\n            }\r\n        } else if (H < 4) {\r\n            R = 0; G = x; B = chroma;\r\n        } else if (H < 5) {\r\n            R = x; G = 0; B = chroma;\r\n        } else {\r\n            R = chroma; G = 0; B = x;\r\n        }\r\n\r\n        const shift = L - chroma * 0.5;\r\n        this.R = R + shift;\r\n        this.G = G + shift;\r\n        this.B = B + shift;\r\n    }\r\n\r\n    rgb2hsl() {\r\n        const R = this.R;\r\n        const G = this.G;\r\n        const B = this.B;\r\n\r\n        const min = Math.min(R, G, B);\r\n        const max = Math.max(R, G, B);\r\n        const delta = max - min;\r\n\r\n        this.L = 0.5 * (max + min);\r\n\r\n        if (delta < 0.000001) {\r\n            this.H = 0;\r\n            this.S = 0;\r\n        }\r\n        else {\r\n            this.S = delta / (1 - Math.abs(2 * this.L - 1));\r\n            if (max === R) {\r\n                if (G >= B) {\r\n                    this.H = INV6 * ((G - B) / delta);\r\n                } else {\r\n                    this.H = 1 - INV6 * ((B - G) / delta);\r\n                }\r\n            }\r\n            else if (max === G) {\r\n                this.H = INV6 * (2 + (B - R) / delta);\r\n            }\r\n            else {\r\n                this.H = INV6 * (4 + (R - G) / delta);\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseHexa(text: string) {\r\n        if (text.charAt(0) !== '#') return false;\r\n        let R = 0, G = 0, B = 0, A = 1;\r\n\r\n        switch (text.length) {\r\n            case 4:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                break;\r\n            case 5:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                A = parseInt(text.charAt(4), 16) * INV15;\r\n                break;\r\n            case 7:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                break;\r\n            case 9:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                A = parseInt(text.substr(7, 2), 16) * INV255;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        if (isNaN(R) || isNaN(G) || isNaN(B) || isNaN(A)) {\r\n            this.R = this.G = this.B = this.A = 0;\r\n        } else {\r\n            this.R = R;\r\n            this.G = G;\r\n            this.B = B;\r\n            this.A = A;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgb(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgb()` syntax.\r\n     */\r\n    private parseRGB(text: string) {\r\n        const m = RX_RGB.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = 1;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgba(200, 140, 50, 0.5)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgba()` syntax.\r\n     */\r\n    private parseRGBA(text: string) {\r\n        const m = RX_RGBA.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = clamp01(parseFloat(m[4]));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `hsl(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `hsl()` syntax.\r\n     */\r\n    private parseHSL(text: string) {\r\n        const m = RX_HSL.exec(text);\r\n        if (!m) return false;\r\n        this.H = clamp01(parseInt(m[1], 10) * INV359);\r\n        this.S = clamp01(parseInt(m[2], 10) * INV99);\r\n        this.L = clamp01(parseInt(m[3], 10) * INV99);\r\n        this.A = 1;\r\n        this.hsl2rgb();\r\n        return true;\r\n    }\r\n}\r\n\r\nconst\r\n    INV6 = 1 / 6,\r\n    INV15 = 1 / 15,\r\n    INV99 = 1 / 99,\r\n    INV255 = 1 / 255,\r\n    INV359 = 1 / 359;\r\n\r\nconst RX_RGB = /^RGB[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\nconst RX_RGBA = /^RGBA[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9\\.]+([0-9\\.]+)/;\r\nconst RX_HSL = /^HSL[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\n\r\nfunction clamp01(value: number): number {\r\n    if (value < 0) return 0;\r\n    if (value > 1) return 1;\r\n    return value;\r\n}\r\n\r\nfunction hexa2(value: number) {\r\n    let out = Math.floor(value).toString(16);\r\n    if (out.length < 2) out = \"0\" + out;\r\n    return out;\r\n}\r\n","/**\n * Manage CSS styles.\n */\nexport default {\n    register: registerTheme,\n    apply: applyTheme,\n    get: getTheme,\n    bg0: makeGetCurrentColor(\"bg0\"),\n    bg1: makeGetCurrentColor(\"bg1\"),\n    bg2: makeGetCurrentColor(\"bg2\"),\n    bg3: makeGetCurrentColor(\"bg3\"),\n    bgP: makeGetCurrentColor(\"bgP\"),\n    bgPD: makeGetCurrentColor(\"bgPD\"),\n    bgPL: makeGetCurrentColor(\"bgPL\"),\n    bgS: makeGetCurrentColor(\"bgS\"),\n    bgSD: makeGetCurrentColor(\"bgSD\"),\n    bgSL: makeGetCurrentColor(\"bgSL\"),\n    black: makeGetCurrentColor(\"black\"),\n    white: makeGetCurrentColor(\"white\"),\n    isDark,\n    setFontSize,\n    normalize: completeWithDefaultValues\n};\n\ninterface IStyle {\n    bg0?: string;\n    bg1?: string;\n    bg2?: string;\n    bg3?: string;\n    bgP?: string;\n    bgPD?: string;\n    bgPL?: string;\n    bgS?: string;\n    bgSD?: string;\n    bgSL?: string;\n    fg0?: string;\n    fg1?: string;\n    fg2?: string;\n    fg3?: string;\n    fgP?: string;\n    fgPD?: string;\n    fgPL?: string;\n    fgS?: string;\n    fgSD?: string;\n    fgSL?: string;\n    black?: string;\n    white?: string;\n    [key: string]: string | undefined;\n};\n\ninterface ITheme {\n    bg0: string,\n    bg1: string,\n    bg2: string,\n    bg3: string,\n    bgP: string,\n    bgPL: string,\n    bgPD: string,\n    bgS: string,\n    bgSL: string,\n    bgSD: string,\n    black: string,\n    white: string\n}\n\n\n//################################################################################\n\nimport \"./theme.css\"\nimport Color from \"./color\"\n\ninterface IThemes {\n    css: { [name: string]: HTMLStyleElement };\n    vars: { [name: string]: IStyle }\n    current: string | null;\n}\n\n// Used for luminance computations. Because we need to know which text color\n// can be used based on the background's luminance.\nconst COLOR = new Color();\n\nconst THEME_COLOR_NAMES = [\"0\", \"1\", \"2\", \"3\", \"P\", \"PD\", \"PL\", \"S\", \"SD\", \"SL\"];\nconst THEMES: IThemes = {\n    css: {},\n    vars: {},\n    current: null\n};\n\nfunction registerTheme(themeName: string, _style: IStyle) {\n    const style = completeWithDefaultValues(_style);\n    THEMES.vars[themeName] = style;\n\n    let codeCSS = codeVariables(themeName, style);\n    codeCSS += codeBackground(themeName, style);\n    codeCSS += codeElevation(themeName, style);\n    codeCSS += codeText(themeName, style);\n\n    let styleElement = THEMES.css[themeName];\n    if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        document.getElementsByTagName('head')[0].appendChild(styleElement);\n        THEMES.css[themeName] = styleElement;\n    }\n\n    styleElement.textContent = codeCSS;\n}\n\nfunction codeText(themeName: string, style: IStyle) {\n    let codeCSS = '';\n    for (let depth = 1; depth <= 10; depth++) {\n        THEME_COLOR_NAMES.forEach(function(colorName) {\n            const fgColorName = `fg${colorName}`;\n            const bgColorName = `bg${colorName}`;\n            const styleFgColorName: string = style[fgColorName] as string;\n            const styleBgColorName: string = style[bgColorName] as string;\n            const bgClass = \".thm-bg\" + colorName;\n            const fgClass = \".thm-fg\" + colorName;\n            for (let position = 1; position <= depth; position++) {\n                const piecesFG = [];\n                const piecesSVG = [];\n                const piecesBG = [];\n                for (let index = 1; index <= depth; index++) {\n                    piecesBG.push(position === index ? bgClass : '*');\n                    piecesSVG.push(position === index ? bgClass : '*');\n                    piecesFG.push(position === index ? fgClass : '*');\n                    if (index === depth) {\n                        piecesBG.push(piecesBG.pop() + \".thm-fg\");\n                        piecesFG.push(piecesFG.pop() + fgClass);\n                    }\n                }\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesBG.join(\" > \")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + removeTail(piecesBG.join(\" > \"), \".thm-fg\")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesFG.join(\" > \")\n                    + \" { color: \" + styleBgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-fill0\"\n                    + \" { fill: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-stroke0\"\n                    + \" { stroke: \" + styleFgColorName + \" }\\n\";\n            }\n        });\n    }\n    return codeCSS;\n}\n\nconst ALPHA_HEXA = \"123456789ABCDE\";\nfunction codeVariables(themeName: string, style: IStyle) {\n    let codeCSS = \"body.dom-theme-\" + themeName + '{\\n';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        const s = style[`bg${colorName}`] as string;\n        codeCSS += `  --thm-bg${colorName}: ${s};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-bg${colorName}-${a}: ${s}${a}${a};\\n`;\n        }\n        COLOR.parse(s);\n        const pen = COLOR.luminanceStep() ? style.black : style.white;\n        codeCSS += `  --thm-fg${colorName}: ${pen};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-fg${colorName}-${a}: ${pen}${a}${a};\\n`;\n        }\n    });\n    style.white = normalize(style.white);\n    style.black = normalize(style.black);\n    codeCSS += `  --thm-white: ${style.white};\\n`;\n    codeCSS += `  --thm-black: ${style.black};\\n`;\n    for (const letter of ALPHA_HEXA) {\n        codeCSS += `  --thm-white-${letter}: ${style.white}${letter}${letter};\\n`;\n        codeCSS += `  --thm-black-${letter}: ${style.black}${letter}${letter};\\n`;\n    }\n    codeCSS += \"}\\n\";\n    return codeCSS;\n}\n\n\nfunction codeBackground(themeName: string, style: IStyle) {\n    var codeCSS = '';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        codeCSS += \"body.dom-theme-\" + themeName + \".thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-fg\" + colorName\n            + \" { color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += `body.dom-theme-${themeName} .thm-bg${colorName}-text`\n            + \" { background-color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-bottom\"\n            + \" { background: linear-gradient(to top,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-top\"\n            + \" { background: linear-gradient(to bottom,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-left\"\n            + \" { background: linear-gradient(to right,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-right\"\n            + \" { background: linear-gradient(to left,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n\n        if (!isNaN(parseInt(colorName))) return;\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-fill\" + colorName\n            + \" { fill: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-stroke\" + colorName\n            + \" { stroke: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n    });\n    return codeCSS;\n}\n\nconst ELEVATIONS: { [ele: string]: string[] } = {\n    \"0\": [\"none\"],\n    \"2\": [\"button\", \"card\"],\n    \"4\": [\"bar\"],\n    \"6\": [\"floating\"],\n    \"8\": [\"button:active\", \"button-raised\", \"card-raised\"],\n    \"9\": [\"sunmenu-0\"],\n    \"10\": [\"sunmenu-1\"],\n    \"11\": [\"sunmenu-2\"],\n    \"12\": [\"floating:active\"],\n    \"16\": [\"nav\"],\n    \"24\": [\"dialog\"]\n};\nfunction codeElevation(themeName: string, style: IStyle) {\n    COLOR.parse(style.bg2);\n    const luminance = COLOR.luminance();\n    var elevationColor = luminance < .6\n        ? addAlpha(style.white, 4)\n        : addAlpha(style.black, 6);\n    var codeCSS = '';\n    const elevationKeys = Object.keys(ELEVATIONS);\n    elevationKeys.forEach(function(elevationKey) {\n        const elevation = parseInt(elevationKey, 10);\n        ELEVATIONS[elevationKey].forEach(name => {\n            codeCSS += `body.dom-theme-${themeName} .thm-ele-${name} {\n  box-shadow: 0 ${elevation}px ${2 * elevation}px ${elevationColor}\n}\\n`;\n        })\n    });\n    return codeCSS;\n}\n\nfunction applyTheme(name: string, target: HTMLElement = document.body) {\n    if (!THEMES.css[name]) {\n        console.error(\"This theme has not been registered: \", name);\n        return;\n    }\n    var body = document.body;\n    if (typeof THEMES.current === 'string') {\n        body.classList.remove(`dom-theme-${THEMES.current}`);\n    }\n    THEMES.current = name;\n    body.classList.add(`dom-theme-${THEMES.current}`);\n}\n\nfunction getTheme(name: string = \"default\"): ITheme {\n    return THEMES.vars[name] as ITheme;\n}\n\nfunction completeBackgrounds(style: IStyle) {\n    let has0 = typeof style.bg0 === 'string';\n    const has1 = typeof style.bg1 === 'string';\n    const has2 = typeof style.bg2 === 'string';\n    let has3 = typeof style.bg3 === 'string';\n\n    if (has0 && has1 && has2 && has3) return\n\n    if (!has0 && !has1 && !has2 && !has3) {\n        style.bg0 = \"#E0E0E0\";\n        style.bg1 = \"#F5F5F5\";\n        style.bg2 = \"#FAFAFA\";\n        style.bg3 = \"#FFF\";\n        return;\n    }\n    if (has0 && !has1 && !has2 && !has3) {\n        style.bg3 = lightenBackground(style.bg0 as string);\n        has3 = true;\n    }\n    if (!has0 && !has1 && !has2 && has3) {\n        style.bg0 = darkenBackground(style.bg3 as string);\n        has3 = true;\n    }\n    const color0 = new Color(style.bg0);\n    const r0 = color0.R;\n    const g0 = color0.G;\n    const b0 = color0.B;\n    const color3 = new Color(style.bg3);\n    const r3 = color3.R;\n    const g3 = color3.G;\n    const b3 = color3.B;\n    const color1 = Color.newRGB((2 * r0 + r3) / 3, (2 * g0 + g3) / 3, (2 * b0 + b3) / 3);\n    const color2 = Color.newRGB((r0 + 2 * r3) / 3, (g0 + 2 * g3) / 3, (b0 + 2 * b3) / 3);\n    style.bg1 = color1.stringify();\n    style.bg2 = color2.stringify();\n}\n\nfunction completeWithDefaultValues(style: IStyle) {\n    if (typeof style === 'undefined') style = {};\n\n    completeBackgrounds(style);\n\n    if (typeof style.bgP !== 'string') style.bgP = \"#3E50B4\";\n    if (typeof style.bgPD !== 'string') style.bgPD = dark(style.bgP);\n    if (typeof style.bgPL !== 'string') style.bgPL = light(style.bgP);\n    if (typeof style.bgS !== 'string') style.bgS = rotateHue(style.bgP);\n    if (typeof style.bgSD !== 'string') style.bgSD = dark(style.bgS);\n    if (typeof style.bgSL !== 'string') style.bgSL = light(style.bgS);\n\n    if (typeof style.white !== 'string') style.white = '#fff';\n    if (typeof style.black !== 'string') style.black = '#000';\n\n    THEME_COLOR_NAMES.forEach(function(name) {\n        const bg: string = style[`bg${name}`] || '#000';\n        COLOR.parse(bg);\n        var luminance = COLOR.luminance();\n        style[`fg${name}`] = luminance < .6 ? style.white : style.black;\n    });\n\n    return style;\n}\n\nfunction dark(color: string) {\n    const percent = .25;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L *= 1 - percent;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction darkenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.max(0, COLOR.L - 0.15);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction light(color: string) {\n    var percent = .4;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = percent + (1 - percent) * COLOR.L;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction lightenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.min(1, COLOR.L + 0.3);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction rotateHue(color: string): string {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.H = COLOR.H + .5;\n    if (COLOR.H > 1) COLOR.H--;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\n/**\n * @param {string} color - RGB color in format #xxx or #xxxxxx.\n * @param {string} alpha - Single char between 0 and F.\n */\nfunction addAlpha(color: string, alpha: string) {\n    if (color.length < 5) return color + alpha;\n    return color + alpha + alpha;\n}\n\nfunction removeTail(text: string, tail: string) {\n    return text.substr(0, text.length - tail.length);\n}\n\nfunction isDark(colorName: string = \"\"): boolean {\n    if (colorName === \"\") return isThemeGloballyDark();\n\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    const varName = `$isDark/${colorName}`;\n    let isDark = vars[varName];\n    if (typeof isDark === 'boolean') return isDark;\n\n    const color = new Color(vars[colorName]);\n    vars[varName] = !color.luminanceStep();\n    return vars[varName];\n}\n\nfunction isThemeGloballyDark(): boolean {\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    let isDark = vars.$isDark;\n    if (typeof isDark === 'boolean') return isDark;\n\n    const bg0 = new Color(vars.bg0);\n    const bg1 = new Color(vars.bg1);\n    const bg2 = new Color(vars.bg2);\n    const bg3 = new Color(vars.bg3);\n    const average = Color.mix(\n        Color.mix(bg0, bg1),\n        Color.mix(bg2, bg3)\n    );\n    vars.$isDark = !average.luminanceStep();\n    return vars.$isDark;\n}\n\nfunction makeGetCurrentColor(colorName: string): () => string {\n    return () => THEMES.vars[THEMES.current || \"default\"][colorName];\n}\n\nfunction setFontSize(size: \"small\" | \"medium\" | \"large\") {\n    const html = document.documentElement;\n    html.classList.remove(`thm-font-size-small`);\n    html.classList.remove(`thm-font-size-medium`);\n    html.classList.remove(`thm-font-size-large`);\n    html.classList.add(`thm-font-size-${size}`);\n}\n\nfunction normalize(hexa: string): string {\n    const color = new Color(hexa);\n    return color.stringify();\n}\n\nregisterTheme(\"default\", { bgP: \"#1e90ff\" });\n","const EMPTY_FUNCTION = () => { };\r\n\r\ntype TFunction = () => void;\r\n\r\n\r\nexport default function castBoolean(value: any, defaultValue: TFunction = EMPTY_FUNCTION): TFunction {\r\n    if (typeof value === 'function') return value;\r\n    return defaultValue;\r\n}\r\n","import Gesture from \"../gesture\"\nimport Theme from \"../theme\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castFunction from \"../converter/function\"\nimport \"./touchable.css\"\n\ninterface IArgs {\n    element?: HTMLElement;\n    enabled?: boolean;\n    color?: string;\n    onTap?: () => void;\n}\n\ninterface IRect {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n}\n\nexport default class Touchable {\n    _element: HTMLElement | undefined;\n    _enabled: boolean = true;\n    color: string = \"#000\";\n    accent: boolean = false;\n    onTap: () => void;\n\n    constructor(args: IArgs) {\n        this.element = args.element;\n        this.enabled = castBoolean(args.enabled, true);\n        this.color = castString(args.color, \"\");\n        this.onTap = castFunction(args.onTap);\n    }\n\n    fire() {\n        if (!this.enabled) return;\n\n        const handler = this.onTap;\n        if (typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    get enabled() { return this._enabled; }\n    set enabled(value: boolean) { this._enabled = value; }\n\n    get element() { return this._element; }\n    set element(element: HTMLElement | undefined) {\n        const that = this;\n        if (typeof element === 'undefined') return;\n        Gesture(element).on({\n            keydown(evt: any) {\n                if (!that.enabled) return;\n\n                const key = evt.key;\n                if (key === \" \" || key === \"Enter\") {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                    that.fire();\n                }\n            },\n\n            down(evt) {\n                if (!that.enabled) return;\n            },\n\n            tap(evt) {\n                if (!that.enabled) return;\n                that.fire();\n\n                const rect = element.getBoundingClientRect();\n                const style = window.getComputedStyle(element);\n                const screen = createScreen(rect);\n                screen.style.borderRadius = style.getPropertyValue(\"border-radius\");\n                const x = evt.x || 0;\n                const y = evt.y || 0;\n                const w = Math.max(x, rect.width - x);\n                const h = Math.max(y, rect.height - y);\n                const radius = Math.ceil(1.1 * Math.sqrt(w * w + h * h));\n                const ripple = document.createElement(\"div\");\n                screen.appendChild(ripple);\n                ripple.style.left = `${x - radius}px`;\n                ripple.style.top = `${y - radius}px`;\n                ripple.style.width = `${2 * radius}px`;\n                ripple.style.height = `${2 * radius}px`;\n                if (that.color.length > 0) {\n                    ripple.style.background = that.color;\n                } else {\n                    ripple.style.background = Theme.isDark() ? \"#fff\" : \"#000\";\n                }\n                window.setTimeout(() => ripple.className = \"open\");\n                window.setTimeout(() => document.body.removeChild(screen), 500);\n            }\n        })\n    }\n}\n\n\nfunction createScreen(rect: IRect) {\n    const div = document.createElement(\"div\");\n    div.className = \"tfw-behavior-touchable\";\n    div.style.left = `${rect.left}px`;\n    div.style.top = `${rect.top}px`;\n    div.style.width = `${rect.width}px`;\n    div.style.height = `${rect.height}px`;\n    document.body.appendChild(div);\n    return div;\n}\n","export default function castArray(v: any, defaultValue: any[] = []): any[] {\r\n    if (typeof v === 'undefined') return defaultValue;\r\n    if (Array.isArray(v)) return v;\r\n    return [v];\r\n}\r\n","import { IIntlText, IIntlOrString } from \"./types\"\r\n\r\ninterface ITranslations {\r\n    [language: string]: { [key: string]: string }\r\n}\r\n\r\nlet gCurrentLanguage: string =\r\n    localStorage.getItem(\"CurrentLanguage\") || navigator.language.split(\"-\")[0];\r\n\r\nexport default class Intl {\r\n    constructor(private translations: ITranslations) { }\r\n\r\n    static make(translations: ITranslations) {\r\n        const instance = new Intl(translations);\r\n        return instance.translate.bind(instance);\r\n    }\r\n\r\n    static toIntl(text: IIntlOrString | undefined, lang: string | null = null): IIntlText {        \r\n        if (!text) return { [lang || Intl.lang]: \"\" };\r\n        if (typeof text !== 'string') return text;\r\n        return { [lang || Intl.lang]: text };\r\n    }\r\n\r\n    static toText(intl: IIntlOrString | undefined, lang?: string | undefined): string {\r\n        if (!intl) return \"\";\r\n        if (typeof intl === 'string') return intl;\r\n        if (typeof lang === 'undefined') lang = Intl.lang;\r\n        const text = intl[lang];\r\n        if (typeof text === 'string') return text;\r\n        const defaultText = intl[Object.keys(intl)[0]];\r\n        if (typeof defaultText === 'string') return defaultText;\r\n        return \"\";\r\n    }\r\n\r\n    static addTextToIntl(lang: string, text: string, intl: IIntlOrString): IIntlText {\r\n        intl = Intl.toIntl(intl, lang);\r\n        intl[lang] = text;\r\n        const result: IIntlText = {};\r\n        for (const key of Object.keys(intl)) {\r\n            const val = intl[key];\r\n            if (val.trim().length === 0) continue;\r\n            result[key] = val;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static get lang() { return gCurrentLanguage; }\r\n\r\n    static set lang(_value: string) {\r\n        if (typeof _value !== 'string') return;\r\n        const value = _value.split(\"-\")[0];\r\n        gCurrentLanguage = value;\r\n        localStorage.setItem(\"CurrentLanguage\", value);\r\n    }\r\n\r\n    translate(item: string, ...params: string[]) {\r\n        try {\r\n            if (this.translations[gCurrentLanguage]) {\r\n                const translation = this.translations[gCurrentLanguage][item];\r\n                if (translation) return addParams(translation, params);\r\n            }\r\n\r\n            // If we don't find a translation in the current language,\r\n            // we look in the other languages.\r\n            const languages = Object.keys(this.translations);\r\n            for (const lang of languages) {\r\n                const vocabulary = this.translations[lang];\r\n                const translation = vocabulary[item];\r\n                if (typeof translation !== 'string') continue;\r\n                return addParams(translation, params);\r\n            }\r\n\r\n            console.error(`Missing translation for item \"${item}\"!`, params);\r\n            return \"\";\r\n        }\r\n        catch (ex) {\r\n            throw Error(`Error while looking for a translation of \"${item}\":\\n${ex}`);\r\n        }\r\n    }\r\n}\r\n\r\n// Used for the states automate in order to parse a translation\r\n// with placeholders.\r\nenum Mode { Text, Escape, Placeholder }\r\n\r\n/**\r\n * In a translation, you can find placeholders for potential params.\r\n * They are marked with a dollar and a digit from 1 to 9.\r\n * For instance: \"Welcome mister $1!\".\r\n *\r\n * Order doesn't matter and you can have several occurences of the same\r\n * placeholder.\r\n * For instance: \"Hello $2! Welcome into $1. $1 is the best...\".\r\n *\r\n * @param   {string} translation - A string which can own placeholders.\r\n * @param   {string[]} params - Array of replacements for placeholders.\r\n * @returns The transformed string.\r\n */\r\nfunction addParams(translation: string, params: string[]): string {\r\n    let output = '';\r\n    let mark = 0;\r\n    let mode: Mode = Mode.Text;\r\n    let paramIndex = -1;\r\n    let paramValue = '';\r\n\r\n    for (let index = 0; index < translation.length; index++) {\r\n        const c = translation.charAt(index);\r\n        switch (mode) {\r\n            case Mode.Text:\r\n                if (c === '\\\\') {\r\n                    mode = Mode.Escape;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 1;\r\n                }\r\n                else if (c === '$') {\r\n                    mode = Mode.Placeholder;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 2;\r\n                }\r\n                break;\r\n            case Mode.Escape:\r\n                mode = Mode.Text;\r\n                break;\r\n            case Mode.Placeholder:\r\n                mode = Mode.Text;\r\n                paramIndex = parseInt(c, 10);\r\n                if (isNaN(paramIndex))\r\n                    throw Error(`Parsing error at position ${index} for translation \"${translation}\"!\r\nEscape \"$\" if you don't want to use a placeholder.`);\r\n                paramValue = params[paramIndex - 1] || \"\";\r\n                output += paramValue;\r\n                break;\r\n            default:\r\n                mode = Mode.Text;\r\n        }\r\n    }\r\n\r\n    return output + translation.substr(mark);\r\n}\r\n","import * as React from \"react\"\r\nimport Icon from \"./icon\"\r\nimport \"./button.css\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport castArray from \"../converter/array\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\n\r\ninterface IButtonProps {\r\n    label?: string;\r\n    icon?: string;\r\n    wide?: boolean;\r\n    wait?: boolean;\r\n    flat?: boolean;\r\n    small?: boolean;\r\n    warning?: boolean;\r\n    enabled?: boolean;\r\n    classes?: string[] | string;\r\n    tag?: any;\r\n    onClick?: (tag: any) => void;\r\n}\r\n\r\nexport default class Button extends React.Component<IButtonProps, {}> {\r\n    readonly touchable: Touchable;\r\n    readonly ref: React.RefObject<HTMLButtonElement>;\r\n\r\n    constructor(props: IButtonProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    handleClick() {\r\n        const slot = this.props.onClick;\r\n        if (typeof slot !== 'function') return;\r\n        slot(this.props.tag);\r\n    }\r\n\r\n    render() {\r\n        const p = this.props,\r\n            label = castString(p.label, \"\"),\r\n            icon = castString(p.icon, \"\"),\r\n            wide = castBoolean(p.wide, false),\r\n            wait = castBoolean(p.wait, false),\r\n            flat = castBoolean(p.flat, false),\r\n            small = castBoolean(p.small, false),\r\n            enabled = !wait && castBoolean(p.enabled, true),\r\n            warning = castBoolean(p.warning, false),\r\n            classes = [\"tfw-view-button\"].concat(castArray(p.classes));\r\n        if (wide) classes.push(\"wide\");\r\n        if (flat) {\r\n            classes.push(\"flat\");\r\n            classes.push(warning ? \"thm-fgS\" : \"thm-fgP\");\r\n        }\r\n        else {\r\n            if (enabled) classes.push(\"thm-ele-button\");\r\n            classes.push(warning ? \"thm-bgS\" : \"thm-bgP\");\r\n        }\r\n        if (small) classes.push(\"small\");\r\n        if (label.length === 0) classes.push(\"floating\");\r\n\r\n        this.touchable.enabled = enabled;\r\n        return (\r\n            <button ref={this.ref}\r\n                className={classes.join(\" \")}\r\n                disabled={!enabled}>\r\n                {icon.length > 0\r\n                    ? <Icon content={icon}\r\n                        animate={wait}\r\n                        size={`${small ? 1.375 : 1.875}rem`} />\r\n                    : null}\r\n                {label.length > 0\r\n                    ? <div className=\"text\" > {label} </div>\r\n                    : null}\r\n            </button>);\r\n    }\r\n}\r\n","export default {\r\n    /**\r\n     * @param {string|React.ReactElement<any>} message\r\n     * @param {()=>void|null} onClose\r\n     */\r\n    alert,\r\n    /**\r\n     * @param {string} caption - Title and button caption.\r\n     * @param {any} content - Content to display.\r\n     * @return Promise<boolean> Confirmed or not?\r\n     */\r\n    confirm,\r\n    show,\r\n    wait\r\n};\r\n\r\nimport * as React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport Icon from \"../view/icon\"\r\nimport Flex from \"../layout/flex\"\r\nimport EscapeHandler from \"../escape-handler\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport \"./dialog.css\"\r\n\r\nimport Button from \"../view/button\"\r\n\r\nimport Intl from \"../intl\";\r\nconst _ = Intl.make(require(\"./dialog.yaml\"));\r\n\r\ninterface IOptions {\r\n    onClose?: () => void;\r\n    closeOnEscape?: boolean;\r\n    icon?: string;\r\n    title?: string;\r\n    content?: string | React.ReactElement<any>;\r\n    footer?: React.ReactElement<any>[] | React.ReactElement<any> | null;\r\n    maxWidth?: number;\r\n}\r\n\r\nclass Dialog {\r\n    _screen: HTMLElement;\r\n    _options: IOptions;\r\n    footer: React.ReactElement<any>[] | React.ReactElement<any> | null = null;\r\n\r\n    constructor(options: IOptions = {}) {\r\n        this._options = Object.assign({\r\n            closeOnEscape: true,\r\n            footer: <Button\r\n                icon=\"close\"\r\n                label = { _('close') }\r\n                flat={ true}\r\n                onClick={() => this.hide()}/>\r\n        }, options);\r\n        this._options.closeOnEscape = castBoolean(this._options.closeOnEscape, true);\r\n        this.footer = this._options.footer || null;\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-factory-dialog\";\r\n        document.body.appendChild(screen);\r\n        this._screen = screen;\r\n        this.hide = this.hide.bind(this);\r\n        if (this._options.closeOnEscape) {\r\n            EscapeHandler.add(() => this._hide());\r\n        }\r\n    }\r\n\r\n    set onClose(slot: () => void) {\r\n        this._options.onClose = slot;\r\n    }\r\n\r\n    show() {\r\n        const opt = this._options;\r\n        const title = castString(opt.title, \"\").trim();\r\n        const icon = castString(opt.icon, \"\").trim();\r\n        let footer: React.ReactElement<any> | null =\r\n            this.footer ? (<footer className= \"thm-bg2 thm-ele-button\">{\r\n                this.footer\r\n            }</footer>) : null;\r\n            let header = null;\r\n        if (title.length > 0) {\r\n            header = (\r\n                <header className= \"thm-bgPD\">\r\n                    { icon.length > 0 ? <Icon content={ icon } /> : null}\r\n                    <div>{title}</div>\r\n                </header>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render((\r\n            <div\r\n                className=\"thm-ele-dialog thm-bg1\"\r\n                style={{\r\n                    maxWidth: typeof opt.maxWidth === 'number' ? `${opt.maxWidth}px` : \"auto\"\r\n                }}>\r\n                {header}\r\n                <div>{opt.content}</div>\r\n                {footer}\r\n            </div>\r\n        ), this._screen);\r\n        setTimeout(() => this._screen.classList.add(\"show\"), 10);\r\n    }\r\n\r\n    hide() {\r\n        if (!this._options.closeOnEscape) {\r\n            this._hide();\r\n        } else {\r\n            EscapeHandler.fire();\r\n        }\r\n    }\r\n\r\n    _hide() {\r\n        const screen = this._screen;\r\n        screen.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n            document.body.removeChild(screen);\r\n        }, 200);\r\n        const onClose = this._options.onClose;\r\n        if (typeof onClose === 'function') {\r\n            requestAnimationFrame(onClose);\r\n        }\r\n    }\r\n}\r\n\r\nfunction alert(content: string | React.ReactElement<any>,\r\n               onClose: (() => void) | undefined = undefined): Promise<void> {\r\n    return new Promise(resolve => {\r\n        const dialog = new Dialog({ onClose: resolve, content, maxWidth: 420 });\r\n        dialog.footer = (<Button\r\n            icon=\"close\"\r\n            label={_('close')}\r\n            flat={true}\r\n            onClick={resolve} />);\r\n        dialog.show();\r\n    });\r\n}\r\n\r\n/**\r\n * ```\r\n * const isConfirmed = await Dialog.confirm(\"Delete file\", <p>Are you sure?</p>);\r\n * ```\r\n * @param caption - Title and button caption.\r\n * @param content - Content to display.\r\n */\r\nfunction confirm( caption: string,\r\n                  content: string | React.ReactElement<any>): Promise<boolean> {\r\n    return new Promise( resolve => {\r\n        const dialog = new Dialog({ title: caption, content, maxWidth: 420 });\r\n        const close = (confirmed: boolean) => {\r\n            dialog.hide();\r\n            resolve( confirmed );\r\n        };\r\n        dialog.onClose = () => close(false);\r\n        const btnCancel = (<Button\r\n            key=\"cancel\"\r\n            flat={true}\r\n            label={_(\"cancel\")}\r\n            onClick={() => close(false)}/>);\r\n        const btnOK = (<Button\r\n            key=\"ok\"\r\n            warning={true}\r\n            label={caption}\r\n            onClick={() => close(true)}/>);\r\n        dialog.footer = [ btnCancel, btnOK ];\r\n        dialog.show();\r\n    });\r\n}\r\n\r\nfunction show(options: IOptions): Dialog {\r\n    const dialog = new Dialog(options);\r\n    dialog.show();\r\n    return dialog;\r\n}\r\n\r\nasync function wait(label: string, task: Promise<any>, blocking: boolean = true): Promise<any> {\r\n    if (!blocking) {\r\n        return await task;\r\n    }\r\n    const content = (\r\n        <Flex dir=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" >\r\n            <Icon content=\"wait\" animate={true}/>\r\n            <div>{label}</div>\r\n        </Flex>\r\n    );\r\n    const dialog = new Dialog({ content, footer: null, closeOnEscape: false });\r\n    dialog.show();\r\n    const close = dialog.hide.bind( dialog );\r\n    return new Promise( (resolve, reject) => {\r\n        task.then(\r\n            (result: any) => {\r\n                close();\r\n                resolve( result );\r\n            },\r\n            (error: any) => {\r\n                console.error( error );\r\n                close();\r\n                reject( error );\r\n            }\r\n        );\r\n    });\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./label.css\"\r\n\r\ninterface ILabelProps {\r\n    label?: string;\r\n    htmlFor?: string;\r\n}\r\n\r\nexport default class Label extends React.Component<ILabelProps, {}> {\r\n    constructor( props: ILabelProps ) {\r\n        super( props );\r\n    }\r\n\r\n    render() {\r\n        const label = this.props.label;\r\n        if( typeof label !== 'string' || label.trim().length === 0 ) return null;\r\n        return (<label className=\"tfw-view-Label\" htmlFor={this.props.htmlFor}>{\r\n            this.props.label\r\n        }</label>)\r\n    }\r\n}\r\n","import * as React from \"react\"\nimport \"./input.css\"\nimport castInteger from \"../../converter/integer\"\nimport castBoolean from \"../../converter/boolean\"\nimport castString from \"../../converter/string\"\nimport castUnit from \"../../converter/unit\"\nimport Label from \"../label\"\n\nimport Intl from \"../../intl\"\nconst _ = Intl.make(require(\"./input.yaml\"));\n\ninterface IStringSlot {\n    (value: string): void;\n}\n\ninterface IInputProps {\n    value: string;\n    label?: string;\n    wide?: boolean;\n    size?: number;\n    focus?: boolean;\n    width?: string;\n    enabled?: boolean;\n    placeholder?: string;\n    type?: \"text\" | \"password\" | \"submit\" | \"color\" | \"date\"\n    | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"range\"\n    | \"search\" | \"tel\" | \"time\" | \"url\" | \"week\";\n    validator?: (value: string) => boolean | RegExp;\n    onValidation?: (validation: boolean) => void;\n    onChange?: IStringSlot,\n    onEnterPressed?: (value: string) => void\n}\n\nexport default class Input extends React.Component<IInputProps, {}> {\n    private readonly input: React.RefObject<HTMLInputElement> = React.createRef();\n\n    handleKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n        if (evt.key === \"enter\") {\n            evt.preventDefault();\n            evt.stopPropagation();\n            const { onEnterPressed, value } = this.props;\n            if (typeof onEnterPressed === 'function') {\n                onEnterPressed(value);\n            }\n        }\n    }\n\n    onFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.remove(\"thm-bg3\");\n        input.classList.add(\"thm-bgSL\");\n        if (this.props.type !== 'number') {\n            // setSelectionRange fails for \"number\" input.\n            input.setSelectionRange(0, input.value.length);\n        }\n    }\n\n    onBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.add(\"thm-bg3\");\n        input.classList.remove(\"thm-bgSL\");\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        //if (!this.checkValidity(event.target.value)) return;\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            event.preventDefault();\n            onChange(event.target.value);\n        }\n    }\n\n    render() {\n        const\n            p = this.props,\n            type = castString(p.type, \"text\"),\n            label = castString(p.label, \"\"),\n            value = castString(p.value, \"\"),\n            placeholder = castString(p.placeholder, \"\"),\n            wide = castBoolean(p.wide, false),\n            focus = castBoolean(p.focus, false),\n            enabled = castBoolean(p.enabled, true),\n            size = Math.max(1, castInteger(p.size, 8)),\n            width = castUnit(p.width, \"auto\"),\n            id = nextId();\n        const classes = [\"tfw-view-input\"];\n        if (wide) classes.push(\"wide\");\n        /*\n        const header = (error ? <div className=\"error\">{error}</div> :\n            (label ? (<Label htmlFor={id} label={label}/>) : null));\n        */\n        const inputClassName = \"thm-ele-button \"\n            + (enabled ? 'thm-bg3' : 'thm-bg0');\n        return (<div\n                    className={classes.join(\" \")}\n                    style={{ width, maxWidth: width }}>\n            <Label htmlFor={id} label={label}/>\n            <input\n                ref={this.input}\n                autoFocus={focus}\n                className={inputClassName}\n                placeholder={placeholder}\n                disabled={!enabled}\n                type={type}\n                id={id}\n                size={size}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                onKeyDown={this.handleKeyDown}\n                value={value}/>\n        </div>);\n    }\n}\n\n\nlet globalId = 0;\nfunction nextId() {\n    return `tfw-view-input-${globalId++}`;\n}\n\n\nconst NUMBER_VALIDATOR = (value: string) => isNaN(parseFloat(value)) ? _('nan') : true;\n","/**\r\n * @example\r\n * import Storage from \"./tfw/storage\";\r\n * Storage.local.set(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * const state = Storage.local.get(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * Storage.local.del(\"state\");\r\n */\r\n\r\nexport default {\r\n    local: makeStorage(window.localStorage),\r\n    session: makeStorage(window.sessionStorage)\r\n};\r\n\r\ninterface IStorage {\r\n    getItem: (key: string)=>any;\r\n    setItem: (key: string, val: any)=>void;\r\n    removeItem: (key: string)=>void;\r\n}\r\n\r\nfunction makeStorage(storage:IStorage) {\r\n    return {\r\n        get(key: string, defaultValue: any): any {\r\n            const value = storage.getItem(key);\r\n            if( value === null) return defaultValue;\r\n            try {\r\n                return JSON.parse(value);\r\n            }\r\n            catch( ex ) {\r\n                console.error(`storage[\"${key}\"] is not parsable as a JSON object!\\n`\r\n                + `Its value is: \"${value}\".\\nThis item will be deleted.`);\r\n                storage.removeItem(key);\r\n                return defaultValue;\r\n            }\r\n        },\r\n\r\n        set(key: string, value: any) {\r\n            storage.setItem(key, JSON.stringify(value));\r\n        },\r\n\r\n        del(key: string) {\r\n            storage.removeItem(key);\r\n        }\r\n    }\r\n}\r\n","import React from \"react\"\nimport Input from \"../../../tfw/view/input\"\nimport Button from \"../../../tfw/view/button\"\nimport Storage from \"../../../tfw/storage\"\n\n\ninterface IHostNameInputProps {\n    onChange: (hostName: string) => void,\n    onEnterPressed: () => void\n}\n\ninterface IHostNameInputState {\n    hostName: string\n}\n\n\nexport default class HostNameInput extends React.Component<IHostNameInputProps, IHostNameInputState> {\n    constructor( props: IHostNameInputProps ) {\n        super( props );\n        this.state = { hostName: Storage.local.get(\"brayns-host-name\", \"http://r1i7n13.bbp.epfl.ch:5000\") };\n    }\n\n    handleChange = (hostName: string) => {\n        this.setState({ hostName });\n\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            onChange(hostName);\n            Storage.local.set(\"brayns-host-name\", hostName);\n        }\n    }\n\n    handleEnterPressed = () => {\n        const { onEnterPressed } = this.props;\n        if (typeof onEnterPressed === 'function') {\n            onEnterPressed();\n        }\n    }\n\n    componentDidMount() {\n        this.handleChange(this.state.hostName);\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-inputHostName\">\n            <Input\n                wide={true}\n                focus={true}\n                label=\"Brayns host name\"\n                value={this.state.hostName}\n                onEnterPressed={this.handleEnterPressed}\n                onChange={this.handleChange}/>\n            {/*\n            <Button\n                wide={true} flat={true}\n                label=\"How can I find that Brayns host name?\"\n                icon=\"help\"/>*/}\n        </div>)\n    }\n}\n","import { Client as BraynsClient } from \"brayns\"\nimport React from 'react';\nimport UrlArgs from \"../../tfw/url-args\"\nimport Dialog from \"../../tfw/factory/dialog\"\nimport Button from \"../../tfw/view/button\"\nimport InputHostName from \"../view/input-host-name\"\n\n// Timeout connection to Brayns service.\nconst CONNECTION_TIMEOUT = 5000;\n\n\nexport default { getHostName, connect }\n\n\n/**\n * Retrieve Brayns' host name from querystring of from user input.\n */\nasync function getHostName(ignoreQueryString: boolean): Promise<string> {\n    return new Promise(async resolve => {\n        if (!ignoreQueryString) {\n            const urlArgs = UrlArgs.parse();\n            const hostFromQueryString = urlArgs.host;\n            if (typeof hostFromQueryString === 'string') {\n                resolve(hostFromQueryString);\n                return;\n            }\n        }\n\n        let hostName = \"\";\n        let validated = false;\n        const onOk = () => {\n            validated = true;\n            dialog.hide();\n            resolve(hostName);\n        }\n        const input = <InputHostName\n            onEnterPressed={onOk}\n            onChange={(value: string) => hostName = value}/>;\n        const dialog = Dialog.show({\n            closeOnEscape: true,\n            content: input,\n            footer: <Button label=\"Connect to Brayns Service\"\n                            onClick={onOk}\n                            icon=\"plug\"/>,\n            icon: \"plug\",\n            title: \"Connect to Brayns Service\",\n            onClose: async () => {\n                if (validated) return;\n                await Dialog.alert((<p>Web-Brayns absolutly needs to be connected to the Brayns server...</p>));\n                location.reload();\n                resolve(\"\");\n            }\n        });\n    });\n}\n\n\n/**\n * Try to connect to a Brayns service and fails if it take too long.\n */\nasync function connect(hostName: string): Promise<BraynsClient> {\n    return new Promise((resolve, reject) => {\n        const timeout = window.setTimeout(reject, CONNECTION_TIMEOUT);\n        const client = new BraynsClient(hostName);\n        client.ready.subscribe(\n            isReady => {\n                console.info(\"isReady=\", isReady);\n                if (isReady) {\n                    window.clearTimeout(timeout);\n                    resolve(client);\n                }\n            },\n            err => { console.error(\"err=\", err); }\n        );\n    });\n}\n","\nimport Scene from './scene'\n\nexport default {\n   addClipPlane /* Add a clip plane; returns the clip plane descriptor */,\n   addLightAmbient /* Add an ambient light */,\n   addLightDirectional /* Add a directional light */,\n   addLightQuad /* Add a quad light */,\n   addLightSphere /* Add a sphere light */,\n   addLightSpot /* Add a spotlight, returns id */,\n   addModel /* Add model from remote path; returns model descriptor on success */,\n   chunk /* Indicate sending of a binary chunk after this message */,\n   clearLights /* Remove all lights in the scene */,\n   getAnimationParameters /* Get the current state of animation-parameters */,\n   getApplicationParameters /* Get the current state of application-parameters */,\n   getCamera /* Get the current state of camera */,\n   getCameraParams /* Get the params of the current camera */,\n   getClipPlanes /* Get all clip planes */,\n   getEnvironmentMap /* Get the environment map from the scene */,\n   getInstances /* Get instances */,\n   getLights /* get all lights */,\n   getLoaders /* Get all loaders */,\n   getModelProperties /* Get the properties of the given model */,\n   getModelTransferFunction /* Get the transfer function of the given model */,\n   getRenderer /* Get the current state of renderer */,\n   getRendererParams /* Get the params of the current renderer */,\n   getScene /* Get the current state of scene */,\n   getStatistics /* Get the current state of statistics */,\n   getVolumeParameters /* Get the current state of volume-parameters */,\n   imageJpeg /* Get the current state of image-jpeg */,\n   inspect /* Inspect the scene at x-y position */,\n   loadersSchema /* Get the schema for all loaders */,\n   modelPropertiesSchema /* Get the property schema of the model */,\n   quit /* Quit the application */,\n   removeClipPlanes /* Remove clip planes from the scene given their gids */,\n   removeLights /* Remove light given their IDs */,\n   removeModel /* Remove the model(s) with the given ID(s) from the scene */,\n   requestModelUpload /* Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success */,\n   resetCamera /* Resets the camera to its initial values */,\n   schema /* Get the schema of the given endpoint */,\n   setAnimationParameters /* Set the new state of animation-parameters */,\n   setApplicationParameters /* Set the new state of application-parameters */,\n   setCamera /* Set the new state of camera */,\n   setCameraParams /* Set the params on the current camera */,\n   setEnvironmentMap /* Set a environment map in the scene */,\n   setModelProperties /* Set the properties of the given model */,\n   setModelTransferFunction /* Set the transfer function of the given model */,\n   setRenderer /* Set the new state of renderer */,\n   setRendererParams /* Set the params on the current renderer */,\n   setScene /* Set the new state of scene */,\n   setVolumeParameters /* Set the new state of volume-parameters */,\n   snapshot /* Make a snapshot of the current view */,\n   updateClipPlane /* Update a clip plane with the given coefficients */,\n   updateInstance /* Update the instance with the given values */,\n   updateModel /* Update the model with the given values */}\n\n//========================================================================\n// \"add-clip-plane\" - Add a clip plane; returns the clip plane descriptor\n//------------------------------------------------------------------------\nexport type API_addClipPlane_Param0 = [\n   number,\n   number,\n   number,\n   number\n]\nexport type API_addClipPlane_Return = (\n   null\n   | {\n         id: (number /* Integer */);\n         plane: [\n            number,\n            number,\n            number,\n            number\n         ];\n      })\n/**\n * Add a clip plane; returns the clip plane descriptor\n */\nasync function addClipPlane(plane: API_addClipPlane_Param0): Promise<API_addClipPlane_Return> {\n   const out = await Scene.request(\"add-clip-plane\", plane)\n   return out as API_addClipPlane_Return\n}\n//============================================\n// \"add-light-ambient\" - Add an ambient light\n//--------------------------------------------\nexport type API_addLightAmbient_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightAmbient_Return = (number /* Integer */)\n/**\n * Add an ambient light\n */\nasync function addLightAmbient(light: API_addLightAmbient_Param0): Promise<API_addLightAmbient_Return> {\n   const out = await Scene.request(\"add-light-ambient\", light)\n   return out as API_addLightAmbient_Return\n}\n//===================================================\n// \"add-light-directional\" - Add a directional light\n//---------------------------------------------------\nexport type API_addLightDirectional_Param0 = {\n   angularDiameter: number;\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightDirectional_Return = (number /* Integer */)\n/**\n * Add a directional light\n */\nasync function addLightDirectional(light: API_addLightDirectional_Param0): Promise<API_addLightDirectional_Return> {\n   const out = await Scene.request(\"add-light-directional\", light)\n   return out as API_addLightDirectional_Return\n}\n//=====================================\n// \"add-light-quad\" - Add a quad light\n//-------------------------------------\nexport type API_addLightQuad_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   edge1: [\n      number,\n      number,\n      number\n   ];\n   edge2: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_addLightQuad_Return = (number /* Integer */)\n/**\n * Add a quad light\n */\nasync function addLightQuad(light: API_addLightQuad_Param0): Promise<API_addLightQuad_Return> {\n   const out = await Scene.request(\"add-light-quad\", light)\n   return out as API_addLightQuad_Return\n}\n//=========================================\n// \"add-light-sphere\" - Add a sphere light\n//-----------------------------------------\nexport type API_addLightSphere_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSphere_Return = (number /* Integer */)\n/**\n * Add a sphere light\n */\nasync function addLightSphere(light: API_addLightSphere_Param0): Promise<API_addLightSphere_Return> {\n   const out = await Scene.request(\"add-light-sphere\", light)\n   return out as API_addLightSphere_Return\n}\n//================================================\n// \"add-light-spot\" - Add a spotlight, returns id\n//------------------------------------------------\nexport type API_addLightSpot_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   openingAngle: number;\n   penumbraAngle: number;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSpot_Return = (number /* Integer */)\n/**\n * Add a spotlight, returns id\n */\nasync function addLightSpot(light: API_addLightSpot_Param0): Promise<API_addLightSpot_Return> {\n   const out = await Scene.request(\"add-light-spot\", light)\n   return out as API_addLightSpot_Return\n}\n//===============================================================================\n// \"add-model\" - Add model from remote path; returns model descriptor on success\n//-------------------------------------------------------------------------------\nexport type API_addModel_Param0 = {\n   bounding_box?: boolean;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_addModel_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Add model from remote path; returns model descriptor on success\n */\nasync function addModel(model_param: API_addModel_Param0): Promise<API_addModel_Return> {\n   const out = await Scene.request(\"add-model\", model_param)\n   return out as API_addModel_Return\n}\n//=================================================================\n// \"chunk\" - Indicate sending of a binary chunk after this message\n//-----------------------------------------------------------------\nexport type API_chunk_Param0 = {\n   id?: string;\n}\nexport type API_chunk_Return = undefined\n/**\n * Indicate sending of a binary chunk after this message\n */\nasync function chunk(chunk: API_chunk_Param0): Promise<API_chunk_Return> {\n   const out = await Scene.request(\"chunk\", chunk)\n   return out as API_chunk_Return\n}\n//=================================================\n// \"clear-lights\" - Remove all lights in the scene\n//-------------------------------------------------\nexport type API_clearLights_Return = undefined\n/**\n * Remove all lights in the scene\n */\nasync function clearLights(): Promise<API_clearLights_Return> {\n   const out = await Scene.request(\"clear-lights\", )\n   return out as API_clearLights_Return\n}\n//============================================================================\n// \"get-animation-parameters\" - Get the current state of animation-parameters\n//----------------------------------------------------------------------------\nexport type API_getAnimationParameters_Return = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\n/**\n * Get the current state of animation-parameters\n */\nasync function getAnimationParameters(): Promise<API_getAnimationParameters_Return> {\n   const out = await Scene.request(\"get-animation-parameters\", )\n   return out as API_getAnimationParameters_Return\n}\n//================================================================================\n// \"get-application-parameters\" - Get the current state of application-parameters\n//--------------------------------------------------------------------------------\nexport type API_getApplicationParameters_Return = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of application-parameters\n */\nasync function getApplicationParameters(): Promise<API_getApplicationParameters_Return> {\n   const out = await Scene.request(\"get-application-parameters\", )\n   return out as API_getApplicationParameters_Return\n}\n//================================================\n// \"get-camera\" - Get the current state of camera\n//------------------------------------------------\nexport type API_getCamera_Return = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\n/**\n * Get the current state of camera\n */\nasync function getCamera(): Promise<API_getCamera_Return> {\n   const out = await Scene.request(\"get-camera\", )\n   return out as API_getCamera_Return\n}\n//============================================================\n// \"get-camera-params\" - Get the params of the current camera\n//------------------------------------------------------------\nexport type API_getCameraParams_Return = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\n/**\n * Get the params of the current camera\n */\nasync function getCameraParams(): Promise<API_getCameraParams_Return> {\n   const out = await Scene.request(\"get-camera-params\", )\n   return out as API_getCameraParams_Return\n}\n//=========================================\n// \"get-clip-planes\" - Get all clip planes\n//-----------------------------------------\nexport type API_getClipPlanes_Return = (\n      null\n      | {\n            id: (number /* Integer */);\n            plane: [\n               number,\n               number,\n               number,\n               number\n            ];\n         })[]\n/**\n * Get all clip planes\n */\nasync function getClipPlanes(): Promise<API_getClipPlanes_Return> {\n   const out = await Scene.request(\"get-clip-planes\", )\n   return out as API_getClipPlanes_Return\n}\n//================================================================\n// \"get-environment-map\" - Get the environment map from the scene\n//----------------------------------------------------------------\nexport type API_getEnvironmentMap_Return = {\n   filename: string;\n}\n/**\n * Get the environment map from the scene\n */\nasync function getEnvironmentMap(): Promise<API_getEnvironmentMap_Return> {\n   const out = await Scene.request(\"get-environment-map\", )\n   return out as API_getEnvironmentMap_Return\n}\n//=================================\n// \"get-instances\" - Get instances\n//---------------------------------\nexport type API_getInstances_Param0 = {\n   id: (number /* Integer */);\n   result_range?: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_getInstances_Return = {\n      bounding_box?: boolean;\n      instance_id: (number /* Integer */);\n      model_id: (number /* Integer */);\n      transformation?: {\n         rotation: [\n            number,\n            number,\n            number,\n            number\n         ];\n         rotation_center?: [\n            number,\n            number,\n            number\n         ];\n         scale: [\n            number,\n            number,\n            number\n         ];\n         translation: [\n            number,\n            number,\n            number\n         ];\n      };\n      visible?: boolean;\n   }[]\n/**\n * Get instances\n */\nasync function getInstances(id, range: API_getInstances_Param0): Promise<API_getInstances_Return> {\n   const out = await Scene.request(\"get-instances\", id, range)\n   return out as API_getInstances_Return\n}\n//===============================\n// \"get-lights\" - get all lights\n//-------------------------------\nexport type API_getLights_Return = {\n      id: (number /* Integer */);\n      properties: {};\n      type: string;\n   }[]\n/**\n * get all lights\n */\nasync function getLights(): Promise<API_getLights_Return> {\n   const out = await Scene.request(\"get-lights\", )\n   return out as API_getLights_Return\n}\n//=================================\n// \"get-loaders\" - Get all loaders\n//---------------------------------\nexport type API_getLoaders_Return = {\n      extensions: string[];\n      name: string;\n      properties: {};\n   }[]\n/**\n * Get all loaders\n */\nasync function getLoaders(): Promise<API_getLoaders_Return> {\n   const out = await Scene.request(\"get-loaders\", )\n   return out as API_getLoaders_Return\n}\n//================================================================\n// \"get-model-properties\" - Get the properties of the given model\n//----------------------------------------------------------------\nexport type API_getModelProperties_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelProperties_Return = {}\n/**\n * Get the properties of the given model\n */\nasync function getModelProperties(id: API_getModelProperties_Param0): Promise<API_getModelProperties_Return> {\n   const out = await Scene.request(\"get-model-properties\", id)\n   return out as API_getModelProperties_Return\n}\n//==============================================================================\n// \"get-model-transfer-function\" - Get the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_getModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelTransferFunction_Return = {\n   colormap?: {\n      colors: [\n            number,\n            number,\n            number\n         ][];\n      name?: string;\n   };\n   opacity_curve?: [\n         number,\n         number\n      ][];\n   range?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the transfer function of the given model\n */\nasync function getModelTransferFunction(id: API_getModelTransferFunction_Param0): Promise<API_getModelTransferFunction_Return> {\n   const out = await Scene.request(\"get-model-transfer-function\", id)\n   return out as API_getModelTransferFunction_Return\n}\n//====================================================\n// \"get-renderer\" - Get the current state of renderer\n//----------------------------------------------------\nexport type API_getRenderer_Return = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\n/**\n * Get the current state of renderer\n */\nasync function getRenderer(): Promise<API_getRenderer_Return> {\n   const out = await Scene.request(\"get-renderer\", )\n   return out as API_getRenderer_Return\n}\n//================================================================\n// \"get-renderer-params\" - Get the params of the current renderer\n//----------------------------------------------------------------\nexport type API_getRendererParams_Return = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\n/**\n * Get the params of the current renderer\n */\nasync function getRendererParams(): Promise<API_getRendererParams_Return> {\n   const out = await Scene.request(\"get-renderer-params\", )\n   return out as API_getRendererParams_Return\n}\n//==============================================\n// \"get-scene\" - Get the current state of scene\n//----------------------------------------------\nexport type API_getScene_Return = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\n/**\n * Get the current state of scene\n */\nasync function getScene(): Promise<API_getScene_Return> {\n   const out = await Scene.request(\"get-scene\", )\n   return out as API_getScene_Return\n}\n//========================================================\n// \"get-statistics\" - Get the current state of statistics\n//--------------------------------------------------------\nexport type API_getStatistics_Return = {\n   fps: number;\n   scene_size_in_bytes: (number /* Integer */);\n}\n/**\n * Get the current state of statistics\n */\nasync function getStatistics(): Promise<API_getStatistics_Return> {\n   const out = await Scene.request(\"get-statistics\", )\n   return out as API_getStatistics_Return\n}\n//======================================================================\n// \"get-volume-parameters\" - Get the current state of volume-parameters\n//----------------------------------------------------------------------\nexport type API_getVolumeParameters_Return = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of volume-parameters\n */\nasync function getVolumeParameters(): Promise<API_getVolumeParameters_Return> {\n   const out = await Scene.request(\"get-volume-parameters\", )\n   return out as API_getVolumeParameters_Return\n}\n//====================================================\n// \"image-jpeg\" - Get the current state of image-jpeg\n//----------------------------------------------------\nexport type API_imageJpeg_Return = {\n   data: string;\n}\n/**\n * Get the current state of image-jpeg\n */\nasync function imageJpeg(): Promise<API_imageJpeg_Return> {\n   const out = await Scene.request(\"image-jpeg\", )\n   return out as API_imageJpeg_Return\n}\n//===============================================\n// \"inspect\" - Inspect the scene at x-y position\n//-----------------------------------------------\nexport type API_inspect_Param0 = [\n   number,\n   number\n]\nexport type API_inspect_Return = {\n   hit: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Inspect the scene at x-y position\n */\nasync function inspect(position: API_inspect_Param0): Promise<API_inspect_Return> {\n   const out = await Scene.request(\"inspect\", position)\n   return out as API_inspect_Return\n}\n//===================================================\n// \"loaders-schema\" - Get the schema for all loaders\n//---------------------------------------------------\nexport type API_loadersSchema_Return = {}[]\n/**\n * Get the schema for all loaders\n */\nasync function loadersSchema(): Promise<API_loadersSchema_Return> {\n   const out = await Scene.request(\"loaders-schema\", )\n   return out as API_loadersSchema_Return\n}\n//==================================================================\n// \"model-properties-schema\" - Get the property schema of the model\n//------------------------------------------------------------------\nexport type API_modelPropertiesSchema_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_modelPropertiesSchema_Return = string\n/**\n * Get the property schema of the model\n */\nasync function modelPropertiesSchema(id: API_modelPropertiesSchema_Param0): Promise<API_modelPropertiesSchema_Return> {\n   const out = await Scene.request(\"model-properties-schema\", id)\n   return out as API_modelPropertiesSchema_Return\n}\n//===============================\n// \"quit\" - Quit the application\n//-------------------------------\nexport type API_quit_Return = undefined\n/**\n * Quit the application\n */\nasync function quit(): Promise<API_quit_Return> {\n   const out = await Scene.request(\"quit\", )\n   return out as API_quit_Return\n}\n//===========================================================================\n// \"remove-clip-planes\" - Remove clip planes from the scene given their gids\n//---------------------------------------------------------------------------\nexport type API_removeClipPlanes_Param0 = (number /* Integer */)[]\nexport type API_removeClipPlanes_Return = boolean\n/**\n * Remove clip planes from the scene given their gids\n */\nasync function removeClipPlanes(ids: API_removeClipPlanes_Param0): Promise<API_removeClipPlanes_Return> {\n   const out = await Scene.request(\"remove-clip-planes\", ids)\n   return out as API_removeClipPlanes_Return\n}\n//================================================\n// \"remove-lights\" - Remove light given their IDs\n//------------------------------------------------\nexport type API_removeLights_Param0 = (number /* Integer */)[]\nexport type API_removeLights_Return = boolean\n/**\n * Remove light given their IDs\n */\nasync function removeLights(ids: API_removeLights_Param0): Promise<API_removeLights_Return> {\n   const out = await Scene.request(\"remove-lights\", ids)\n   return out as API_removeLights_Return\n}\n//==========================================================================\n// \"remove-model\" - Remove the model(s) with the given ID(s) from the scene\n//--------------------------------------------------------------------------\nexport type API_removeModel_Param0 = (number /* Integer */)[]\nexport type API_removeModel_Return = boolean\n/**\n * Remove the model(s) with the given ID(s) from the scene\n */\nasync function removeModel(ids: API_removeModel_Param0): Promise<API_removeModel_Return> {\n   const out = await Scene.request(\"remove-model\", ids)\n   return out as API_removeModel_Return\n}\n//==============================================================================================================================================\n// \"request-model-upload\" - Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n//----------------------------------------------------------------------------------------------------------------------------------------------\nexport type API_requestModelUpload_Param0 = {\n   bounding_box?: boolean;\n   chunks_id: string;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   size: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   type: string;\n   visible?: boolean;\n}\nexport type API_requestModelUpload_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n */\nasync function requestModelUpload(param: API_requestModelUpload_Param0): Promise<API_requestModelUpload_Return> {\n   const out = await Scene.request(\"request-model-upload\", param)\n   return out as API_requestModelUpload_Return\n}\n//==========================================================\n// \"reset-camera\" - Resets the camera to its initial values\n//----------------------------------------------------------\nexport type API_resetCamera_Return = undefined\n/**\n * Resets the camera to its initial values\n */\nasync function resetCamera(): Promise<API_resetCamera_Return> {\n   const out = await Scene.request(\"reset-camera\", )\n   return out as API_resetCamera_Return\n}\n//=================================================\n// \"schema\" - Get the schema of the given endpoint\n//-------------------------------------------------\nexport type API_schema_Param0 = {\n   endpoint: string;\n}\nexport type API_schema_Return = string\n/**\n * Get the schema of the given endpoint\n */\nasync function schema(endpoint: API_schema_Param0): Promise<API_schema_Return> {\n   const out = await Scene.request(\"schema\", endpoint)\n   return out as API_schema_Return\n}\n//========================================================================\n// \"set-animation-parameters\" - Set the new state of animation-parameters\n//------------------------------------------------------------------------\nexport type API_setAnimationParameters_Param0 = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\nexport type API_setAnimationParameters_Return = boolean\n/**\n * Set the new state of animation-parameters\n */\nasync function setAnimationParameters(param: API_setAnimationParameters_Param0): Promise<API_setAnimationParameters_Return> {\n   const out = await Scene.request(\"set-animation-parameters\", param)\n   return out as API_setAnimationParameters_Return\n}\n//============================================================================\n// \"set-application-parameters\" - Set the new state of application-parameters\n//----------------------------------------------------------------------------\nexport type API_setApplicationParameters_Param0 = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\nexport type API_setApplicationParameters_Return = boolean\n/**\n * Set the new state of application-parameters\n */\nasync function setApplicationParameters(param: API_setApplicationParameters_Param0): Promise<API_setApplicationParameters_Return> {\n   const out = await Scene.request(\"set-application-parameters\", param)\n   return out as API_setApplicationParameters_Return\n}\n//============================================\n// \"set-camera\" - Set the new state of camera\n//--------------------------------------------\nexport type API_setCamera_Param0 = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\nexport type API_setCamera_Return = boolean\n/**\n * Set the new state of camera\n */\nasync function setCamera(param: API_setCamera_Param0): Promise<API_setCamera_Return> {\n   const out = await Scene.request(\"set-camera\", param)\n   return out as API_setCamera_Return\n}\n//============================================================\n// \"set-camera-params\" - Set the params on the current camera\n//------------------------------------------------------------\nexport type API_setCameraParams_Param0 = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\nexport type API_setCameraParams_Return = boolean\n/**\n * Set the params on the current camera\n */\nasync function setCameraParams(input0: API_setCameraParams_Param0): Promise<API_setCameraParams_Return> {\n   const out = await Scene.request(\"set-camera-params\", input0)\n   return out as API_setCameraParams_Return\n}\n//============================================================\n// \"set-environment-map\" - Set a environment map in the scene\n//------------------------------------------------------------\nexport type API_setEnvironmentMap_Param0 = {\n   filename: string;\n}\nexport type API_setEnvironmentMap_Return = boolean\n/**\n * Set a environment map in the scene\n */\nasync function setEnvironmentMap(filename: API_setEnvironmentMap_Param0): Promise<API_setEnvironmentMap_Return> {\n   const out = await Scene.request(\"set-environment-map\", filename)\n   return out as API_setEnvironmentMap_Return\n}\n//================================================================\n// \"set-model-properties\" - Set the properties of the given model\n//----------------------------------------------------------------\nexport type API_setModelProperties_Param0 = {\n   id: (number /* Integer */);\n   properties: {};\n}\nexport type API_setModelProperties_Return = boolean\n/**\n * Set the properties of the given model\n */\nasync function setModelProperties(param: API_setModelProperties_Param0): Promise<API_setModelProperties_Return> {\n   const out = await Scene.request(\"set-model-properties\", param)\n   return out as API_setModelProperties_Return\n}\n//==============================================================================\n// \"set-model-transfer-function\" - Set the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_setModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n   transfer_function: {\n      colormap?: {\n         colors: [\n               number,\n               number,\n               number\n            ][];\n         name?: string;\n      };\n      opacity_curve?: [\n            number,\n            number\n         ][];\n      range?: [\n         number,\n         number\n      ];\n   };\n}\nexport type API_setModelTransferFunction_Return = boolean\n/**\n * Set the transfer function of the given model\n */\nasync function setModelTransferFunction(param: API_setModelTransferFunction_Param0): Promise<API_setModelTransferFunction_Return> {\n   const out = await Scene.request(\"set-model-transfer-function\", param)\n   return out as API_setModelTransferFunction_Return\n}\n//================================================\n// \"set-renderer\" - Set the new state of renderer\n//------------------------------------------------\nexport type API_setRenderer_Param0 = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\nexport type API_setRenderer_Return = boolean\n/**\n * Set the new state of renderer\n */\nasync function setRenderer(param: API_setRenderer_Param0): Promise<API_setRenderer_Return> {\n   const out = await Scene.request(\"set-renderer\", param)\n   return out as API_setRenderer_Return\n}\n//================================================================\n// \"set-renderer-params\" - Set the params on the current renderer\n//----------------------------------------------------------------\nexport type API_setRendererParams_Param0 = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\nexport type API_setRendererParams_Return = boolean\n/**\n * Set the params on the current renderer\n */\nasync function setRendererParams(input0: API_setRendererParams_Param0): Promise<API_setRendererParams_Return> {\n   const out = await Scene.request(\"set-renderer-params\", input0)\n   return out as API_setRendererParams_Return\n}\n//==========================================\n// \"set-scene\" - Set the new state of scene\n//------------------------------------------\nexport type API_setScene_Param0 = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\nexport type API_setScene_Return = boolean\n/**\n * Set the new state of scene\n */\nasync function setScene(param: API_setScene_Param0): Promise<API_setScene_Return> {\n   const out = await Scene.request(\"set-scene\", param)\n   return out as API_setScene_Return\n}\n//==================================================================\n// \"set-volume-parameters\" - Set the new state of volume-parameters\n//------------------------------------------------------------------\nexport type API_setVolumeParameters_Param0 = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_setVolumeParameters_Return = boolean\n/**\n * Set the new state of volume-parameters\n */\nasync function setVolumeParameters(param: API_setVolumeParameters_Param0): Promise<API_setVolumeParameters_Return> {\n   const out = await Scene.request(\"set-volume-parameters\", param)\n   return out as API_setVolumeParameters_Return\n}\n//==================================================\n// \"snapshot\" - Make a snapshot of the current view\n//--------------------------------------------------\nexport type API_snapshot_Param0 = {\n   animation_parameters?: (\n      null\n      | {\n            current?: (number /* Integer */);\n            delta?: (number /* Integer */);\n            dt?: number;\n            frame_count?: (number /* Integer */);\n            playing?: boolean;\n            unit?: string;\n         });\n   camera?: (\n      null\n      | {\n            current?: string;\n            orientation?: [\n               number,\n               number,\n               number,\n               number\n            ];\n            position?: [\n               number,\n               number,\n               number\n            ];\n            target?: [\n               number,\n               number,\n               number\n            ];\n            types?: string[];\n         });\n   format: string;\n   name?: string;\n   quality?: (number /* Integer */);\n   renderer?: (\n      null\n      | {\n            accumulation?: boolean;\n            background_color?: [\n               number,\n               number,\n               number\n            ];\n            current?: string;\n            head_light?: boolean;\n            max_accum_frames?: (number /* Integer */);\n            samples_per_pixel?: (number /* Integer */);\n            subsampling?: (number /* Integer */);\n            types?: string[];\n            variance_threshold?: number;\n         });\n   samples_per_pixel?: (number /* Integer */);\n   size: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_snapshot_Return = {\n   data: string;\n}\n/**\n * Make a snapshot of the current view\n */\nasync function snapshot(settings: API_snapshot_Param0): Promise<API_snapshot_Return> {\n   const out = await Scene.request(\"snapshot\", settings)\n   return out as API_snapshot_Return\n}\n//=======================================================================\n// \"update-clip-plane\" - Update a clip plane with the given coefficients\n//-----------------------------------------------------------------------\nexport type API_updateClipPlane_Param0 = {\n   id: (number /* Integer */);\n   plane: [\n      number,\n      number,\n      number,\n      number\n   ];\n}\nexport type API_updateClipPlane_Return = boolean\n/**\n * Update a clip plane with the given coefficients\n */\nasync function updateClipPlane(clip_plane: API_updateClipPlane_Param0): Promise<API_updateClipPlane_Return> {\n   const out = await Scene.request(\"update-clip-plane\", clip_plane)\n   return out as API_updateClipPlane_Return\n}\n//===============================================================\n// \"update-instance\" - Update the instance with the given values\n//---------------------------------------------------------------\nexport type API_updateInstance_Param0 = {\n   bounding_box?: boolean;\n   instance_id: (number /* Integer */);\n   model_id: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateInstance_Return = boolean\n/**\n * Update the instance with the given values\n */\nasync function updateInstance(model_instance: API_updateInstance_Param0): Promise<API_updateInstance_Return> {\n   const out = await Scene.request(\"update-instance\", model_instance)\n   return out as API_updateInstance_Return\n}\n//=========================================================\n// \"update-model\" - Update the model with the given values\n//---------------------------------------------------------\nexport type API_updateModel_Param0 = {\n   bounding_box?: boolean;\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   id: (number /* Integer */);\n   metadata?: {};\n   name?: string;\n   path?: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateModel_Return = boolean\n/**\n * Update the model with the given values\n */\nasync function updateModel(model: API_updateModel_Param0): Promise<API_updateModel_Return> {\n   const out = await Scene.request(\"update-model\", model)\n   return out as API_updateModel_Return\n}\n","import { IModel, IAction } from \"../types\"\n\nconst PREFIX = \"models:\"\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: IModel[], action: IAction): IModel[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"add\": return add(state, action);\n            case \"reset\": return reset(state, action);\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    add(model: IModel): IAction {\n        return { type: `${PREFIX}add`, model };\n    },\n\n    reset(models: IModel[]): IAction {\n        return { type: `${PREFIX}reset`, models };\n    },\n\n    update(model: IModel): IAction {\n        return { type: `${PREFIX}update`, model };\n    }\n}\n\n\nfunction add(state: IModel[], action: IAction): IModel[] {\n    const models = state.slice();\n    models.push(action.model);\n    return models;\n}\n\n/**\n * This function seem complicated, but it aism to remove doubles.\n * It's strange but its true thay Brayns can return doubles when you call \"get-scene\".\n */\nfunction reset(state: IModel[], action: IAction): IModel[] {\n    const alreadyAddedIds: number[] = [];\n    const models = action.models.filter( (model: {id: number}) => {\n        const id = model.id;\n        const alreadyHere = alreadyAddedIds.includes(id);\n        if (alreadyHere) return false;\n        alreadyAddedIds.push(id);\n        return true;\n    });\n    return models;\n}\n\n\nfunction update(state: IModel[], action: IAction): IModel[] {\n    const { model } = action;\n    const models = state.filter((m: IModel) => m.id !== model.id);\n    models.push(model);\n    return models;\n}\n","import { INavigation, IAction } from '../types'\n\nconst PREFIX = \"navigation:\"\n\nexport default {\n    INITIAL_STATE: {\n        panel: \"model\",\n        showConsole: false\n    },\n\n    reducer(state: INavigation, action: IAction): INavigation {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"set-panel\": return setPanel(state, action);\n            case \"toggle-console-visibility\": return toggleConsoleVisibility(state);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    setPanel(panel: string): IAction {\n        return { type: `${PREFIX}set-panel`, panel };\n    },\n\n    toggleConsoleVisibility(): IAction {\n        return { type: `${PREFIX}toggle-console-visibility` };\n    }\n}\n\n\nfunction setPanel(state: INavigation, action: IAction): INavigation {\n    return Object.assign( state, { panel: action.panel });\n}\n\nfunction toggleConsoleVisibility(state: INavigation): INavigation {\n    return Object.assign( state, { showConsole: !state.showConsole });\n}\n","import { ISlicerState, IAction } from '../types'\n\nconst PREFIX = \"slicer:\"\n\nexport default {\n    INITIAL_STATE: {\n        activated: false,\n        minX: 0,\n        maxX: 1,\n        latitude: 0,\n        longitude: 0,\n        collageDepth: 1\n    },\n\n    reducer(state: ISlicerState, action: IAction): ISlicerState {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(sliceInfo: Partial<ISlicerState>): IAction {\n        return { type: `${PREFIX}update`, sliceInfo };\n    }\n}\n\n\nfunction update(state: ISlicerState, action: IAction): ISlicerState {\n    return Object.assign( state, action.sliceInfo );\n}\n","import * as React from \"react\"\r\nimport \"./combo.css\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport Icon from \"./icon\"\r\nimport Label from \"./label\"\r\nimport Gesture from \"../gesture\"\r\nimport EscapeHandler from \"../escape-handler\"\r\n\r\ninterface IComboProps {\r\n    label?: string;\r\n    value?: string;\r\n    keys?: string[];\r\n    wide?: boolean;\r\n    onChange?: (value: string) => void;\r\n    children: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Combo extends React.Component<IComboProps, {}> {\r\n    readonly touchable: Touchable;\r\n\r\n    ref = React.createRef<HTMLButtonElement>()\r\n    list = React.createRef<HTMLDivElement>()\r\n    button = React.createRef<HTMLDivElement>()\r\n\r\n    bigList: HTMLElement | undefined;\r\n\r\n    keys: string[] = []\r\n    selectedKey: string = \"\"\r\n    selectedIndex: number = -1\r\n\r\n    constructor(props: IComboProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n    }\r\n\r\n    handleClick(event: React.MouseEvent) {\r\n        console.info(\"tap combo =>\", event);\r\n        this.expand();\r\n    }\r\n\r\n    /**\r\n     * If there are only two items, we don't open the list: we just swap them.\r\n     */\r\n    _swapItems() {\r\n        // With two items, clicking will immediatly switch to the next one.\r\n        for (const key of this.keys) {\r\n            if (this.props.value !== key) {\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(key);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    _computeDimensions(list: HTMLElement, button: HTMLElement): { left: number, top: number, width: number, height: number } {\r\n        let { left, top, height } = list.getBoundingClientRect();\r\n        const { width } = button.getBoundingClientRect();\r\n        height = Math.min(height, window.innerHeight - 32);\r\n        if (top + height > window.innerHeight) {\r\n            top -= 32 * Math.ceil(window.innerHeight - top - height / 32);\r\n        }\r\n        if (top < 0) {\r\n            top += 32 * Math.ceil(-top / 32);\r\n        }\r\n        return { left, top, width, height };\r\n    }\r\n\r\n    _showList(list: HTMLElement, button: HTMLElement, left: number, top: number, width: number, height: number): { screen: HTMLElement, bigList: HTMLElement } {\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-view-combo-screen\";\r\n        const bigList = document.createElement(\"div\");\r\n        bigList.className = \"thm-ele-nav thm-bg3\";\r\n        bigList.innerHTML = list.innerHTML;\r\n\r\n        bigList.style.top = `${top}px`;\r\n        bigList.style.left = `${left}px`;\r\n        bigList.style.width = `${width}px`;\r\n        bigList.style.height = `${height}px`;\r\n        screen.appendChild(bigList);\r\n        document.body.appendChild(screen);\r\n\r\n        this.bigList = bigList;\r\n        return { screen, bigList };\r\n    }\r\n\r\n    _ensureSelectionVisible() {\r\n        let index = 0;\r\n        const bigList: HTMLElement | undefined = this.bigList;\r\n        if (!bigList) return;\r\n        const items = bigList.querySelectorAll(\"div.item\");\r\n        for (const key of this.keys) {\r\n            const item = items[index];\r\n            if (key === this.selectedKey) {\r\n                const rect = bigList.getBoundingClientRect();\r\n                bigList.scrollTop = (32 * index) - rect.height / 2;\r\n                this.selectedIndex = index;\r\n                item.classList.add(\"thm-bgSL\");\r\n            } else {\r\n                item.classList.remove(\"thm-bgSL\");\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n    _handleKeyboard(event: React.KeyboardEvent) {\r\n        switch (event.key) {\r\n            case \"ArrowDown\":\r\n                this.selectedIndex++;\r\n                this.selectedKey = this.keys[this.selectedIndex % this.keys.length];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"ArrowUp\":\r\n                this.selectedIndex = (this.selectedIndex + this.keys.length - 1) % this.keys.length;\r\n                this.selectedKey = this.keys[this.selectedIndex];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"Enter\":\r\n            case \" \":\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(this.selectedKey);\r\n                }\r\n                EscapeHandler.fire();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n        }\r\n        console.log(\">>\", event.key);\r\n    }\r\n\r\n    expand() {\r\n        if (this.keys.length < 3) {\r\n            this._swapItems();\r\n            return;\r\n        }\r\n\r\n        const list = this.list.current;\r\n        const button = this.button.current;\r\n        if (!list || !button) return;\r\n\r\n        const { left, top, width, height } = this._computeDimensions(list, button);\r\n        const { screen, bigList } = this._showList(list, button, left, top, width, height);\r\n        this.selectedKey = this.props.value || \"\";\r\n        window.setTimeout(() => this._ensureSelectionVisible(bigList), 10);\r\n\r\n        const handleKeyboard = this._handleKeyboard.bind(this);\r\n        document.addEventListener(\"keydown\", handleKeyboard, true);\r\n        EscapeHandler.add(() => {\r\n            document.body.removeChild(screen)\r\n            document.removeEventListener(\"keydown\", handleKeyboard, true);\r\n        });\r\n        Gesture(screen).on({ tap: () => {\r\n            console.log(\"EscapeHandler\");\r\n            EscapeHandler.fire()\r\n        }});\r\n        Gesture(bigList).on({\r\n            tap: evt => {\r\n                console.info(\"tap bigList =>\", evt);\r\n                if (!evt || typeof evt.y === 'undefined') return;\r\n                const scroll = bigList.scrollTop;\r\n                const index = Math.floor((evt.y + scroll) / 32);\r\n                const value = this.keys[index];\r\n                EscapeHandler.fire()\r\n                requestAnimationFrame(() => {\r\n                    if (typeof this.props.onChange === 'function') {\r\n                        this.props.onChange(value)\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    render() {\r\n        const p = this.props;\r\n        const children = p.children;\r\n        const label = castString(p.label, \"\").trim();\r\n        const wide = castBoolean(p.wide, false);\r\n        const keys = ensureGoodKeys(p.keys, children);\r\n        const value = castString(p.value, keys[0]);\r\n        const classes = [\"tfw-view-combo\"];\r\n        const items = children.map(item => {\r\n            const key = item.key;\r\n            return (<div className=\"item\" key={key} > {item} </div>);\r\n        });\r\n\r\n        if (wide) classes.push(\"wide\");\r\n\r\n        this.keys = keys;\r\n\r\n        const index = getIndex(keys, value);\r\n\r\n        return (\r\n            <button ref={this.ref} className={classes.join(\" \")}>\r\n                {label.length > 0 ? <Label label={label}/> : null}\r\n                <div ref={this.button} className=\"button thm-bg3 thm-ele-button\">\r\n                    <div className=\"list-container\"\r\n                        style={{\r\n                            transform: `translateY(-${32 * index}px)`\r\n                        }}>\r\n                        <div ref={this.list} className=\"tfw-view-combo-list\" >{items}</div>\r\n                    </div>\r\n                    <div className=\"icon\" >\r\n                        <Icon size=\"24px\" content=\"down\" />\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getIndex(keys: string[], value: string) {\r\n    const index = keys.indexOf(value);\r\n    return Math.max(0, index);\r\n}\r\n\r\n/**\r\n * Keys must be non empty strings. If a key is not defined, it will take its index (stringified) as value.\r\n * And if a \"key\" its defined on a child, it will take precedence on anything else.\r\n *\r\n* @param  {string[]} keys\r\n* @param  {ReactElement[]} children\r\n          *\r\n* @return {string[]}\r\n*/\r\nfunction ensureGoodKeys(keys: string[] | undefined, children: React.ReactElement<any>[]): string[] {\r\n    const goodKeys: string[] = castStringArray(keys, []);\r\n    const minimalLength: number = children.length;\r\n\r\n    while (goodKeys.length < minimalLength) {\r\n        goodKeys.push(`${goodKeys.length}`);\r\n    }\r\n    for (let k = 0; k < goodKeys.length; k++) {\r\n        if (goodKeys[k].trim().length === 0) {\r\n            goodKeys[k] = `${k}`;\r\n        }\r\n    }\r\n    children.forEach((child, index) => {\r\n        const key = child.key;\r\n        if (typeof key === \"string\") {\r\n            goodKeys[index] = key;\r\n        } else {\r\n            child.key = goodKeys[index];\r\n        }\r\n    });\r\n\r\n    return goodKeys;\r\n}\r\n\r\n\r\nfunction onTap(elem: HTMLElement, handler: () => void) {\r\n    const slot = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        elem.removeEventListener(\"mousedown\", slot);\r\n        elem.removeEventListener(\"touchdown\", slot);\r\n        handler();\r\n    };\r\n    elem.addEventListener(\"mousedown\", slot, false);\r\n    elem.addEventListener(\"touchdown\", slot, false);\r\n}\r\n","import React from \"react\"\n\nimport Combo from '../../../tfw/view/combo'\nimport Input from '../../../tfw/view/input'\nimport Flex from '../../../tfw/layout/flex'\n\nimport { ISnapshot } from '../../types'\n\nexport const RESOLUTIONS: {[key: string]: [number,number]} = {\n    fullHD: [1920,1080],\n    thumbnail: [160,120],\n    presentation: [800,600],\n    ultraHD: [3840,2160]\n}\n\nexport const SAMPLINGS: {[key: string]: number} = {\n    medium: 50,\n    quick: 1,\n    low: 10,\n    high: 250,\n    ultra: 1250\n}\n\n\ninterface IProps extends ISnapshot {\n    onFilenameChange: (filename: string) => void,\n    onSizeKeyChange: (key: string) => void,\n    onWidthChange: (width: number) => void,\n    onHeightChange: (width: number) => void,\n    onSamplesKeyChange: (key: string) => void,\n    onSamplesChange: (samples: number) => void\n}\n\nfunction res(name: string): string {\n    const resolution = RESOLUTIONS[name];\n    if (!resolution) return '';\n    const [w,h] = resolution;\n    return `(${w} x ${h})`\n}\n\nexport default class Snapshot extends React.Component<IProps, {}> {\n    constructor( props: IProps ) {\n        super( props );\n    }\n\n    handleWidthChange = (width: string) => {\n        const value = parseInt(width, 10);\n        if (isNaN(value)) return;\n        this.props.onWidthChange(value);\n    }\n\n    handleHeightChange = (height: string) => {\n        const value = parseInt(height, 10);\n        if (isNaN(value)) return;\n        this.props.onHeightChange(value);\n    }\n\n    handleSizeKeyChange = (size: string) => {\n        this.props.onSizeKeyChange(size);\n    }\n\n    handleSamplesChange = (samples: string) => {\n        const value = parseInt(samples, 10);\n        if (isNaN(value)) return;\n        this.props.onSamplesChange(value);\n    }\n\n    handleSamplesKeyChange = (key: string) => {\n        this.props.onSamplesKeyChange(key);\n    }\n\n    handleFilenameChange = (filename: string) => {\n        this.props.onFilenameChange(filename);\n    }\n\n    render() {\n        const p = this.props;\n\n        return (<div className=\"webBrayns-dialog-screenshot\">\n            <Input wide={true}\n                   label=\"File name\"\n                   value={`${p.filename}`}\n                   onChange={this.handleFilenameChange}/>\n            <Combo value={p.sizeKey} wide={true} onChange={this.handleSizeKeyChange}>\n                <div key=\"ultraHD\">Ultra HD <em>{res(\"ultraHD\")}</em></div>\n                <div key=\"fullHD\">Full HD <em>{res(\"fullHD\")}</em></div>\n                <div key=\"presentation\">Presentation <em>{res(\"presentation\")}</em></div>\n                <div key=\"thumbnail\">Thumbnail <em>{res(\"thumbnail\")}</em></div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Flex>\n                <Input label=\"Width\" value={`${p.width}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleWidthChange}/>\n                <Input label=\"Height\" value={`${p.height}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleHeightChange}/>\n            </Flex>\n            <Combo value={p.samplesKey} wide={true} onChange={this.handleSamplesKeyChange}>\n                <div key=\"quick\">Quick and dirty</div>\n                <div key=\"low\">Low quality</div>\n                <div key=\"medium\">Medium quality</div>\n                <div key=\"high\">High quality</div>\n                <div key=\"ultra\">Very high quality</div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Input wide={true}\n                   label=\"Sampling\"\n                   value={`${p.samples}`}\n                   enabled={p.samplesKey === 'custom'}\n                   onChange={this.handleSamplesChange}/>\n        </div>)\n    }\n}\n","import { IDialogs, ISnapshot, IAction } from '../types'\nimport Storage from '../../tfw/storage'\nimport { RESOLUTIONS, SAMPLINGS } from '../view/snapshot'\n\nconst PREFIX = \"dialogs:\"\n\n\nconst RESOLUTION_NAME = Object.keys(RESOLUTIONS)[0];\nconst SAMPLING_NAME = Object.keys(SAMPLINGS)[0];\n\nexport default {\n    INITIAL_STATE: {\n        snapshot: Storage.local.get('state/dialogs/snapshot', {\n            filename: 'snapshot',\n            sizeKey: RESOLUTION_NAME,\n            width: RESOLUTIONS[RESOLUTION_NAME][0],\n            height: RESOLUTIONS[RESOLUTION_NAME][1],\n            samplesKey: SAMPLING_NAME,\n            samples: SAMPLINGS[SAMPLING_NAME]\n        })\n    },\n\n    reducer(state: IDialogs, action: IAction): IDialogs {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update-snapshot\": return updateSnapshot(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    updateSnapshot(snapshot: Partial<ISnapshot>): IAction {\n        return { type: `${PREFIX}update-snapshot`, snapshot };\n    }\n}\n\n\nfunction updateSnapshot(state: IDialogs, action: IAction): IDialogs {\n    const newState = Object.assign( state, {\n        snapshot: Object.assign( state.snapshot, action.snapshot )\n    });\n    Storage.local.set('state/dialogs/snapshot', newState.snapshot)\n    console.info(\"state=\", state);\n    console.info(\"action.snapshot=\", action.snapshot);\n    console.info(\"newState=\", newState);\n    return newState;\n}\n","/**\n * The full state of the application is stored and managed here.\n */\nimport { createStore } from 'redux'\nimport { IAppState, IAction } from \"../types\"\n\nimport Models from \"./models\"\nimport Navigation from './navigation'\nimport Slicer from './slicer'\nimport Dialogs from './dialogs'\n\n\nconst INITIAL_STATE: IAppState = {\n    dialogs: Dialogs.INITIAL_STATE,\n    models: Models.INITIAL_STATE,\n    navigation: Navigation.INITIAL_STATE,\n    slicer: Slicer.INITIAL_STATE\n};\n\nfunction reducer(state: IAppState | undefined = INITIAL_STATE, action: IAction): IAppState {\n    return {\n        dialogs: Dialogs.reducer(state.dialogs, action),\n        models: Models.reducer(state.models, action),\n        navigation: Navigation.reducer(state.navigation, action),\n        slicer: Slicer.reducer(state.slicer, action)\n    };\n}\n\nconst store = createStore(reducer);\nexport default {\n    store, dispatch: store.dispatch,\n    Dialogs,\n    Models,\n    Navigation,\n    Slicer\n};\n\n\nconsole.info(\"INITIAL_STATE.dialogs=\", INITIAL_STATE.dialogs);\n","import { Client as BraynsClient } from \"brayns\"\n\nimport Scene from './scene'\nimport State from '../state'\n\nimport { IModel, IVector } from '../types'\n\n\nexport default class Model {\n    private readonly brayns: BraynsClient;\n\n    constructor(private params: IModel) {\n        this.brayns = Scene.brayns || new BraynsClient('');\n    }\n\n    async locate(position: IVector): Promise<boolean> {\n        this.params.transformation.translation = position;\n        return await this.applyTransfo();\n    }\n\n    /**\n     * Remove this model from the Scene.\n     */\n    async remove() {\n        return await Scene.request(\"remove-model\", [this.params.id]);\n    }\n\n    /**\n     * When a model is selected, we show its boundingBox.\n     */\n    get seleted(): boolean {\n        return this.params.$selected;\n    }\n\n    async setSelected(selected: boolean) {\n        this.params.$selected = selected;\n        this.params.boundingBox = selected;\n        await Scene.request('update-model', {\n            id: this.params.id,\n            boundingBox: selected\n        });\n        this.updateState();\n    }\n\n    get visible(): boolean {\n        return this.params.visible;\n    }\n\n    async show() {\n        await Scene.request('update-model', {\n            id: this.params.id,\n            visible: true\n        });\n        this.params.visible = true;\n        this.updateState();\n    }\n\n    async hide() {\n        await Scene.request('update-model', {\n            id: this.params.id,\n            visible: false\n        });\n        this.params.visible = false;\n        this.updateState();\n    }\n\n    /**\n     * Make to camera to look at this model.\n     */\n    async focus(): Promise<boolean> {\n        const scene = await Scene.request('get-scene');\n        const model = scene.models.find( (m: any) => m.id === this.params.id );\n        if (!model) return false;\n        await Scene.camera.lookAtBounds(model.bounds);\n        return true;\n    }\n\n    private applyTransfo() {\n        return new Promise<boolean>((resolve, reject) => {\n            const requester = Scene.request(\n                \"update-model\", {\n                    id: this.params.id,\n                    transformation: this.params.transformation\n                });\n            requester.then(resolve, reject);\n        })\n    }\n\n    private updateState() {\n        State.dispatch(State.Models.update(this.params));\n    }\n}\n","import { IVector, IQuaternion } from '../types'\n\nexport default {\n    addVectors,\n    makeQuaternionAsAxisRotation,\n    multiplyQuaternions,\n    normalize,\n    rotateWithQuaternion,\n    scalarProduct,\n    scale,\n    vectorFromPoints\n}\n\n\nfunction addVectors(a: IVector, b: IVector): IVector {\n    return [\n        b[0] + a[0],\n        b[1] + a[1],\n        b[2] + a[2]\n    ];\n}\n\n\nfunction makeQuaternionAsAxisRotation(angle: number, axis: IVector): IQuaternion {\n    const halfAngle = angle * 0.5;\n    const c = Math.cos(halfAngle);\n    const s = Math.sin(halfAngle);\n    const [x, y, z] = axis;\n    return [ x * s, y * s, z * s, c ] as IQuaternion;\n}\n\n\nfunction multiplyQuaternions(q: IQuaternion, r: IQuaternion): IQuaternion {\n    const [q1, q2, q3, q0] = q;\n    const [r1, r2, r3, r0] = r;\n    return [\n        r0*q1 + r1*q0 - r2*q3 + r3*q2,\n        r0*q2 + r1*q3 + r2*q0 - r3*q1,\n        r0*q3 - r1*q2 + r2*q1 + r3*q0,\n        r0*q0 - r1*q1 - r2*q2 - r3*q3\n    ];\n}\n\n\nfunction normalize(vector: IVector): IVector {\n    const [x,y,z] = vector;\n    const len2 = x*x + y*y + z*z;\n    if (len2 < 0.000000001) return [0,0,0];\n    const f = 1 / Math.sqrt(len2);\n    return [x*f, y*f, z*f];\n}\n\n\nfunction scalarProduct(v1: IVector, v2: IVector): number {\n    const [x1, y1, z1] = v1;\n    const [x2, y2, z2] = v2;\n    return x1*x2 + y1*y2 + z1*z2;\n}\n\n\nfunction rotateWithQuaternion(point: IVector, quaternion: IQuaternion): IVector {\n    const Q = quaternion;\n    const [x, y, z] = point;\n    const [qx, qy, qz, qw] = Q;\n    const invQ: IQuaternion = [-qx, -qy, -qz, qw];\n    const P: IQuaternion = [x, y, z, 0];\n\n    const R = multiplyQuaternions(\n        Q, multiplyQuaternions(P, invQ)\n    )\n    return [R[0], R[1], R[2]];\n}\n\n\n/**\n * Multiply all coords by a scalar factor.\n */\nfunction scale(vector: IVector, factor: number): IVector {\n    return vector.map((n: number) => n * factor) as IVector;\n}\n\n\nfunction vectorFromPoints(a: IVector, b: IVector): IVector {\n    return [\n        b[0] - a[0],\n        b[1] - a[1],\n        b[2] - a[2]\n    ];\n}\n","import { IBounds, IModel, IBraynsModel } from './types'\n\nexport default {\n    createModelFromBraynsData,\n    getModelsBounds\n}\n\n\n/**\n * web-brayns models have more data than Brayns one.\n * This function will enrich data from Brayns to met our needs.\n */\nfunction createModelFromBraynsData(model: IBraynsModel): IModel {\n    return {\n        brayns: Object.assign({}, model),\n        parent: 0,\n        deleted: false,\n        selected: false\n    }\n}\n\n\n/**\n * Compute the bounds of deveral models.\n */\nfunction getModelsBounds(models: IModel[]): IBounds {\n    const point: IBounds = { min: [0,0,0], max: [0,0,0] }\n    if (models.length === 0) return point;\n    const bounds = models[0].brayns.bounds || point;\n\n    for( let i=1; i<models.length; i++ ) {\n        const model = models[i];\n        if (!model.brayns.visible) continue;\n        const b = model.brayns.bounds || point;\n        bounds.min[0] = Math.min(bounds.min[0], b.min[0]);\n        bounds.min[1] = Math.min(bounds.min[0], b.min[1]);\n        bounds.min[2] = Math.min(bounds.min[0], b.min[2]);\n        bounds.max[0] = Math.max(bounds.max[0], b.max[0]);\n        bounds.max[1] = Math.max(bounds.max[0], b.max[1]);\n        bounds.max[2] = Math.max(bounds.max[0], b.max[2]);\n    }\n    return bounds;\n}\n","/**\n * Everything related to Camera.\n */\n\nimport { BoundingBox } from \"brayns\"\nimport { ICamera, IVector, IQuaternion, IAxis } from '../types'\nimport Scene from './scene'\nimport Geom from '../geometry'\nimport Models from '../models'\nimport State from '../state'\n\n\n export default class Camera {\n     constructor(private params: ICamera) {}\n\n     private async applyCamera(): Promise<boolean> {\n         const { orientation, position, target } = this.params;\n         await Scene.request('set-camera', {\n             orientation, position, target\n         });\n         return true;\n     }\n\n     get position(): IVector {\n         return this.params.position.slice() as IVector;\n     }\n\n     setPosition(position: IVector) {\n         this.params.position = position;\n         this.applyCamera();\n     }\n\n     get orientation(): IQuaternion {\n         return this.params.orientation.slice() as IQuaternion;\n     }\n\n     setOrientation(orientation: IQuaternion) {\n         this.params.orientation = orientation;\n         this.applyCamera();\n     }\n\n     setPositionAndOrientation(position: IVector, orientation: IQuaternion) {\n         this.params.position = position;\n         this.params.orientation = orientation;\n         this.applyCamera();\n     }\n\n     get axis(): IAxis {\n         const [b, c, d, a] = this.orientation;\n         const aa = a*a;\n         const bb = b*b;\n         const cc = c*c;\n         const dd = d*d;\n         const ab2 = 2*a*b;\n         const ac2 = 2*a*c;\n         const ad2 = 2*a*d;\n         const bc2 = 2*b*c;\n         const bd2 = 2*b*d;\n         const cd2 = 2*c*d;\n         return {\n             x: [\n                 aa + bb + cc + dd,\n                 ad2 + bc2,\n                 bd2 - ac2\n             ],\n             y:[\n                 bc2 - ad2,\n                 aa - bb + cc - dd,\n                 ab2 + cd2\n             ],\n             z:[\n                 ac2 + bd2,\n                 cd2 - ab2,\n                 aa - bb - cc + dd\n             ]\n         }\n     }\n\n     get target(): IVector {\n         return this.params.target.slice() as IVector;\n     }\n\n     async setTarget(target: IVector) {\n         const direction = this.direction;\n         const distance = Geom.scalarProduct(\n             Geom.vectorFromPoints(this.params.position, target),\n             direction\n         );\n         this.params.position = Geom.addVectors(\n             target,\n             Geom.scale(direction, -distance)\n         );\n         this.params.target = target;\n         return await this.applyCamera();\n     }\n\n     async getCloser(target: IVector, distanceFactor: number) {\n         const direction = this.direction;\n         const distance = Geom.scalarProduct(\n             Geom.vectorFromPoints(this.params.position, target),\n             direction\n         ) * distanceFactor;\n         this.params.position = Geom.addVectors(\n             target,\n             Geom.scale(direction, -distance)\n         );\n         this.params.target = target;\n         return await this.applyCamera();\n     }\n\n     getTargetDistance(): number {\n         const vectorZ = this.axis.z;\n         // Warning! the camera's Z axis is turning its back to the target.\n         return Geom.scalarProduct(\n             vectorZ,\n             Geom.vectorFromPoints(\n                 this.params.target,\n                 this.params.position\n             )\n         )\n     }\n\n     /**\n      * Normalized vector giving the direction of sight.\n      */\n     get direction(): IVector {\n         const { position, target } = this.params;\n         return Geom.normalize(Geom.vectorFromPoints(position, target));\n     }\n\n     async moveForward(dist: number) {\n         const dir = this.direction;\n         const { position, target } = this.params;\n         this.params.position = [\n             position[0] + dir[0] * dist,\n             position[1] + dir[1] * dist,\n             position[2] + dir[2] * dist\n         ];\n         this.params.target = [\n             target[0] + dir[0] * dist,\n             target[1] + dir[1] * dist,\n             target[2] + dir[2] * dist\n         ];\n         await this.applyCamera();\n     }\n\n     async moveBackward(dist: number) {\n         const dir = this.direction;\n         const { position, target } = this.params;\n         this.params.position = [\n             position[0] - dir[0] * dist,\n             position[1] - dir[1] * dist,\n             position[2] - dir[2] * dist\n         ];\n         this.params.target = [\n             target[0] - dir[0] * dist,\n             target[1] - dir[1] * dist,\n             target[2] - dir[2] * dist\n         ];\n         await this.applyCamera();\n     }\n\n     async lookAtWholeScene() {\n         const bounds = Models.getModelsBounds(State.store.getState().models.map(m => (\n             {\n                 brayns: m\n             }\n         )))\n         await this.lookAtBounds(bounds);\n     }\n\n     async lookAtBounds(bounds: BoundingBox) {\n         const minX = bounds.min[0];\n         const minY = bounds.min[1];\n         const minZ = bounds.min[2];\n         const maxX = bounds.max[0];\n         const maxY = bounds.max[1];\n         const maxZ = bounds.max[2];\n         const centerX = (minX + maxX) / 2;\n         const centerY = (minY + maxY) / 2;\n         const centerZ = (minZ + maxZ) / 2;\n         const width = maxX - minX;\n         const height = maxY - minY;\n         const cameraZ = maxZ +Math.max(width + height) * 0.5;\n\n         this.params.orientation = [0,0,0,1];\n         this.params.position = [centerX, centerY, cameraZ];\n         this.params.target = [centerX, centerY, centerZ];\n         await this.applyCamera();\n     }\n }\n","import { Client as BraynsClient, IMAGE_JPEG } from \"brayns\"\n\nexport default class Renderer {\n    private _canvas: HTMLCanvasElement | null = null;\n    private ctx: CanvasRenderingContext2D | null = null;\n    private blob: Blob | null = null;\n    private blobIndex: number = 0;\n    private lastRederedBlobIndex: number = 0;\n\n    init(brayns: BraynsClient) {\n        brayns\n            .observe(\"image-jpeg\")\n            .subscribe((blob: Blob) => {\n                this.blob = blob;\n                this.blobIndex++;\n            });\n        requestAnimationFrame(this.paint);\n    }\n\n    get canvas() { return this._canvas; }\n    set canvas(canvas: HTMLCanvasElement | null) {\n        this._canvas = canvas;\n        if (!canvas) return;\n        this.ctx = canvas.getContext(\"2d\");\n    }\n\n    paint = async () => {\n        try {\n            // Did we already rendered this blob?\n            if (this.lastRederedBlobIndex === this.blobIndex) return;\n            const blob = this.blob;\n            if (!blob) return;\n            const canvas = this.canvas;\n            if (!canvas) return;\n            const ctx = this.ctx;\n            if (!ctx) return;\n            const img = await blobToImg(blob);\n            const srcW = img.naturalWidth;\n            const srcH = img.naturalHeight;\n            const dstW = canvas.width;\n            const dstH = canvas.height;\n            const dstX = (dstW - srcW) / 2;\n            const dstY = (dstH - srcH) / 2;\n            ctx.drawImage(\n                img,\n                dstX, dstY,\n                srcW, srcH\n            );\n            this.lastRederedBlobIndex = this.blobIndex;\n        }\n        finally {\n            requestAnimationFrame(this.paint);\n        }\n    }\n}\n\n\nfunction blobToImg(blob: Blob) {\n    const url = URL.createObjectURL(blob);\n    const img: any = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.src = url;\n        // https://medium.com/dailyjs/image-loading-with-image-decode-b03652e7d2d2\n        if (img.decode) {\n            img.decode()\n                // TODO: Figure out why decode() throws DOMException\n                .then(() => resolve(img));\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","type Action = (...args: any[]) => void;\r\n\r\n/**\r\n * The function to call as much as you want. It will perform the debouce for you.\r\n * Put in the same args as the `action` function.\r\n *\r\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\r\n * less than `delay` ms between them.\r\n * * delay - Number of milliseconds.\r\n */\r\nexport default function (action: Action, delay: number): Action {\r\n    let timer: number = 0;\r\n\r\n    return function(this: { delay: number }, ...args: any[]) {\r\n        if (timer) window.clearTimeout(timer);\r\n        timer = window.setTimeout(() => {\r\n            timer = 0;\r\n            action(...args);\r\n        }, delay) as number;\r\n    }\r\n}\r\n","import Scene from './scene'\nimport Geometry from '../geometry'\nimport Debouncer from '../../tfw/debouncer'\n\nimport { IVector, IQuaternion, IAxis, IScreenPoint, IPanningEvent } from '../types'\n\n\nexport default class GesturesHandler {\n    private savedTarget: IVector = [0,0,0];\n    private savedPosition: IVector = [0,0,0];\n    private savedOrientation: IQuaternion = [0,0,0,0];\n    private savedAxis: IAxis = {\n        x: [0,0,0], y: [0,0,0], z: [0,0,0]\n    };\n    private savedScreenPoint: IScreenPoint = { screenX: 0, screenY: 0 };\n    private savedTargetDistance: number = 0;\n\n    /**\n     * When panning starts, we should memorize the current Scene.camera/model rot/sca/loc params.\n     */\n    handlePanStart = (evt: IPanningEvent) => {\n        const axis = Scene.camera.axis;\n        this.savedTarget = Scene.camera.target;\n        this.savedPosition = Scene.camera.position;\n        this.savedOrientation = Scene.camera.orientation;\n        this.savedAxis = axis;\n        this.savedScreenPoint = {\n            screenX: evt.screenX,\n            screenY: evt.screenY,\n            aspect: evt.aspect\n        };\n        this.savedTargetDistance = Scene.camera.getTargetDistance();\n    }\n\n    handlePan = Debouncer((evt: IPanningEvent) => {\n        if (evt.button === 4) this.translateCamera(evt);\n        else if (evt.button === 1) this.orbitCamera(evt);\n        else this.rotateCamera(evt);\n    }, 10)\n\n    private translateCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldTranslation = this.savedPosition.slice() as IVector;\n        const factor = Scene.camera.getTargetDistance() * 1.0;\n        const newTranslation = Geometry.addVectors(\n            oldTranslation,\n            Geometry.addVectors(\n                Geometry.scale(axis.x, factor * x * evt.aspect),\n                Geometry.scale(axis.y, factor * y),\n            )\n        );\n        Scene.camera.setPosition(newTranslation);\n    }\n\n    private orbitCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldOrientation = this.savedOrientation.slice() as IQuaternion;\n        const angleX = -Math.PI * y;\n        const angleY = 2 * Math.PI * x;\n        const quaternionX = Geometry.makeQuaternionAsAxisRotation(angleX, axis.x);\n        const quaternionY = Geometry.makeQuaternionAsAxisRotation(angleY, axis.y);\n        const quaternionXY = Geometry.multiplyQuaternions(quaternionX, quaternionY);\n        const newOrientation = Geometry.multiplyQuaternions(quaternionXY, oldOrientation);\n\n        const positionVector = Geometry.vectorFromPoints(\n            this.savedTarget,\n            this.savedPosition\n        );\n        const rotatedPositionVector = Geometry.rotateWithQuaternion(\n            positionVector,\n            quaternionXY\n        );\n        const newPosition = Geometry.addVectors(this.savedTarget, rotatedPositionVector);\n\n        Scene.camera.setPositionAndOrientation(newPosition, newOrientation);\n        //Scene.camera.setPosition(newPosition);\n    }\n\n    private rotateCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldOrientation = this.savedOrientation.slice() as IQuaternion;\n        const angleX = 2 * Math.PI * y;\n        const angleY = -2 * Math.PI * x;\n        const quaternionX = Geometry.makeQuaternionAsAxisRotation(angleX, axis.x);\n        const quaternionY = Geometry.makeQuaternionAsAxisRotation(angleY, axis.y);\n        const quaternionXY = Geometry.multiplyQuaternions(quaternionX, quaternionY);\n        const newOrientation = Geometry.multiplyQuaternions(quaternionXY, oldOrientation);\n        Scene.camera.setOrientation(newOrientation);\n    }\n}\n","/**\n * There is only one scene in Brayns.\n */\nimport { Client as BraynsClient } from \"brayns\"\n\nimport Api from \"./api\"\nimport { IModel } from '../types'\nimport State from '../state'\nimport ServiceHost from '../service/host'\nimport Model from './model'\nimport Camera from './camera'\nimport Renderer from './renderer'\nimport GesturesHandler from './gestures-handler'\n\n// Brayns' client.\nconst Scene: {\n    brayns: (BraynsClient | null),\n    camera: (Camera | null),\n    renderer: Renderer,\n    gestures: GesturesHandler\n} = {\n    brayns: null,\n    camera: null,\n    renderer: new Renderer(),\n    gestures: new GesturesHandler()\n}\n\nexport default {\n    Api,\n    clear,\n    connect,\n    loadMeshFromPath,\n    request,\n    setViewPort,\n    get brayns() { return Scene.brayns; },\n    get camera(): Camera { return Scene.camera || new Camera({}); },\n    get renderer(): Renderer { return Scene.renderer },\n    get gestures(): GesturesHandler { return Scene.gestures }\n }\n\n/**\n * Try to connect to a Brayns service and fails if it takes too long.\n */\nasync function connect(hostName: string): Promise<BraynsClient> {\n    Scene.brayns = await ServiceHost.connect(hostName);\n    console.info(\"Scene.brayns=\", Scene.brayns);\n    const cameraParams = await request('get-camera-params');\n    Scene.camera = new Camera(cameraParams);\n    Scene.renderer.init(Scene.brayns);\n    return Scene.brayns;\n}\n\nasync function request(method: string, params: {} = {}) {\n    console.info(\"request(\", method, params, \")\");\n\n    return new Promise((resolve, reject) => {\n        if (!Scene.brayns) {\n            console.error(\"No BraynsService!\");\n            reject();\n            return;\n        }\n        const loader = Scene.brayns.request(method, params);\n        loader.then((output: any) => {\n            console.info(\"request(\", method, \") => \", output);\n            resolve(output)\n        }, reject);\n    })\n}\n\n/**\n * Remove everything from the scene.\n */\nasync function clear(): Promise<boolean> {\n    const scene: any = await request('get-scene');\n    if (!scene) return false;\n    const models = scene.models;\n    if (!models) return false;\n    const ids = models.map( (model: any) => model.id );\n    await request(\"remove-model\", ids);\n\n    const rendererParams: any = await request(\"get-renderer-params\", {});\n    if (rendererParams) {\n        // A bit brighter.\n        rendererParams.pixelAlpha = 1.7;\n        rendererParams.shadows = 1;\n        rendererParams.softShadows = 0.9;\n        await request(\"set-renderer-params\", rendererParams);\n    }\n\n    await request('set-renderer', {\n        accumulation: true,\n        backgroundColor: [.2,.1,0],\n        current: \"advanced_simulation\",\n        headLight: true,\n        maxAccumFrames: 1000,\n        samplesPerPixel: 1,\n        subsampling: 1\n    });\n\n    await request(\"set-environment-map\", {\n        filename: \"/gpfs/bbp.cscs.ch/project/proj3/resources/envmap/space.jpg\"\n    });\n\n    return true;\n}\n\nasync function setViewPort(width: number, height: number) {\n    //Scene.brayns.set_application_parameters(viewport=[800,600])\n    return await request(\"set-application-parameters\", {\n        viewport: [width, height]\n    });\n}\n\nasync function loadMeshFromPath(path: string): Promise<Model> {\n    const result = await request(\"add-model\", { path });\n    const model: IModel = result as IModel;\n    State.dispatch(State.Models.add(model));\n    return new Model(model);\n}\n","import SaveAsFile from 'save-as-file'\n\nimport Scene from '../scene'\nimport { ISnapshot } from '../types'\n\n\nexport default {\n    async getCanvas(options: ISnapshot): Promise<HTMLCanvasElement> {\n        const snapshot = await Scene.Api.snapshot({\n            samples_per_pixel: options.samples,\n            size: [options.width, options.height],\n            format: \"JPEG\"\n        });\n        const dataURI = `data:;base64,${snapshot.data}`\n        return new Promise( (resolve, reject) => {\n            const img = new Image();\n            img.onload = () => {\n                const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n                canvas.width = img.width;\n                canvas.height = img.height;\n                const ctx = canvas.getContext(\"2d\");\n                if (!ctx) {\n                    reject();\n                    return;\n                }\n                ctx.drawImage(img, 0, 0);\n                resolve(canvas);\n            }\n            img.onerror = reject;\n            img.src = dataURI;\n        })\n    },\n\n    async saveCanvasToFile(canvas: HTMLCanvasElement,\n                           filename: string,\n                           mimetype: string = \"image/jpeg\") {\n        canvas.toBlob(async (blob) => {\n            if (!blob) return;\n            const result = await SaveAsFile(blob, filename);\n            console.info(\"result=\", result);\n        }, mimetype, 100);\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../types\"\nimport State from \"../../state\"\nimport { default as snapshotView, RESOLUTIONS, SAMPLINGS } from \"./snapshot\"\n\nexport { RESOLUTIONS, SAMPLINGS } from './snapshot'\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        filename: state.dialogs.snapshot.filename,\n        sizeKey: state.dialogs.snapshot.sizeKey,\n        width: state.dialogs.snapshot.width,\n        height: state.dialogs.snapshot.height,\n        samplesKey: state.dialogs.snapshot.samplesKey,\n        samples: state.dialogs.snapshot.samples\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onFilenameChange(filename: string) {\n            dispatch(State.Dialogs.updateSnapshot({ filename }))\n        },\n\n        onSizeKeyChange(sizeKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ sizeKey }))\n            const res = RESOLUTIONS[sizeKey];\n            if (!res) return;\n            const [width, height] = res;\n            dispatch(State.Dialogs.updateSnapshot({ width, height }))\n        },\n\n        onWidthChange(width: number) {\n            dispatch(State.Dialogs.updateSnapshot({ width }))\n        },\n\n        onheightChange(height: number) {\n            dispatch(State.Dialogs.updateSnapshot({ height }))\n        },\n\n        onSamplesKeyChange(samplesKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ samplesKey }))\n            const samples = SAMPLINGS[samplesKey];\n            if (!samples) return;\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        },\n\n        onSamplesChange(samples: number) {\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(snapshotView);\n","import React from \"react\"\nimport { Provider } from 'react-redux'\n\nimport Dialog from '../../tfw/factory/dialog'\nimport { ISnapshot } from '../types'\nimport State from '../state'\nimport Snapshot from '../view/snapshot/snapshot.container'\n\nexport default {\n    async show(): Promise<ISnapshot | null> {\n        console.log('SHOW');\n        const answer = await Dialog.confirm(\n            \"Take snapshot\",\n            <Provider store={State.store}><Snapshot/></Provider>);\n        if (!answer) return null;\n        return State.store.getState().dialogs.snapshot;\n    }\n}\n","import React from 'react';\n\nimport SnapshotService from '../../service/snapshot'\nimport { IQuaternion, IScreenPoint, IHitPoint, IPanningEvent } from '../../types'\nimport Scene from '../../scene'\nimport Gesture from '../../../tfw/gesture'\nimport Button from '../../../tfw/view/button'\nimport Snapshot from '../../dialog/snapshot'\n\nimport { IEvent } from '../../../tfw/gesture/types'\n\nimport \"./image-stream.css\"\n\ninterface IImageStreamProps {\n    onHit?: (point: IHitPoint) => void,\n    // Hitting the void, actually\n    onTap?: (point: IScreenPoint) => void,\n    onPanStart?: (panning: IPanningEvent) => void,\n    onPan?: (panning: IPanningEvent) => void\n}\n\nexport default class ImageStream extends React.Component<IImageStreamProps> {\n    private readonly canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n    private orientation: IQuaternion = [0,0,0,1];\n\n    constructor(props: IImageStreamProps) {\n        super(props);\n    }\n\n    get canvas(): HTMLCanvasElement | null {\n        return this.canvasRef.current;\n    }\n\n    componentDidMount() {\n        // If there's no container el we can bind the camera to,\n        // there's no point in continuing\n        if (!this.canvas) {\n            return;\n        }\n\n        Scene.renderer.canvas = this.canvas;\n\n        const that = this;\n\n        Gesture(this.canvas).on({\n            down: this.handleDown,\n            async tap(evt) {\n                console.info(\"doubletap=\", evt);\n                const canvas = that.canvas;\n                if (!canvas) return;\n                const rect = canvas.getBoundingClientRect();\n                const x = evt.x / rect.width;\n                const y = 1 - (evt.y / rect.height);\n                const hitResult = await Scene.request('inspect', [x, y]);\n                if (hitResult.hit === true) {\n                    Scene.camera.getCloser(hitResult.position, 0.5);\n                }\n            },\n            wheel(evt) {\n                if (!Scene.camera) return;\n                if (evt.deltaY < 0) {\n                    Scene.camera.moveForward(10);\n                }\n                else if (evt.deltaY > 0) {\n                    Scene.camera.moveBackward(10);\n                }\n            },\n            pan: this.handlePan\n        });\n        this.updateViewPort();\n        window.onfocus = this.updateViewPort;\n    }\n\n    private handleDown = (evt: IEvent) => {\n        const handler = this.props.onPanStart;\n        if (typeof handler !== 'function') return;\n        evt.clear();\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    private handlePan = (evt: IEvent) => {\n        const handler = this.props.onPan;\n        if (typeof handler !== 'function') return;\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    /**\n     * Get pixel coordinates and return a ScreenPoint.\n     * In a screen point, every coordinate is a real number\n     * between 0 and 1.\n     */\n    private getScreenPoint(x: number, y: number): IScreenPoint {\n        if (!this.canvas) return { screenX: -1, screenY: -1, aspect: 1 };\n        const w = this.canvas.clientWidth;\n        const h = this.canvas.clientHeight;\n        return {\n            screenX: x / w,\n            screenY: 1 - (y / h),\n            aspect: w / h\n        }\n    }\n\n    private updateViewPort = async () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas ) return;\n        const rect = canvas.getBoundingClientRect();\n        const w = Math.floor(rect.width);\n        const h = Math.floor(rect.height);\n        canvas.width = w;\n        canvas.height = h;\n        await Scene.setViewPort(w, h);\n    }\n\n    private handleScreenShot = async () => {\n        console.log(\"handleScreenShot\");\n        const options = await Snapshot.show();\n        if (!options) return;  // Action cancelled.\n        const canvas = await SnapshotService.getCanvas(options);\n        await SnapshotService.saveCanvasToFile(canvas, `${options.filename}.jpg`);\n    }\n\n    // We use moz-opaque to improve the perf. of the canvas\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n    render() {\n        return (\n            <div className=\"webBrayns-view-ImageStream\">\n                <canvas\n                    ref={this.canvasRef}\n                    className=\"\"\n                    moz-opaque=\"true\" />\n                <div className=\"icons\">\n                    <Button\n                        icon=\"camera\"\n                        onClick={this.handleScreenShot}\n                        warning={true}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\"\r\nimport castArray from \"../converter/array\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport \"./stack.css\"\r\n\r\ninterface IStackProps {\r\n    value: string;\r\n    classNames?: string | string[];\r\n    fullscreen?: boolean;\r\n    scrollable?: boolean;\r\n    children: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Stack extends React.Component<IStackProps, {}> {\r\n    render() {\r\n        const children = castArray(this.props.children);\r\n        const scrollable = castBoolean(this.props.scrollable, false);\r\n        const fullscreen = castBoolean(this.props.fullscreen, false);\r\n        const classes = [\"tfw-layout-stack\"];\r\n        classes.push(...castStringArray(this.props.classNames));\r\n        if (scrollable) classes.push(\"scrollable\");\r\n        if (fullscreen) classes.push(\"fullscreen\");\r\n\r\n        return (\r\n            <div className={classes.join(\" \")}>{\r\n                children.filter(elem => elem.key == this.props.value)\r\n            }</div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Icon from '../../../tfw/view/icon'\nimport Input from '../../../tfw/view/input'\nimport Button from '../../../tfw/view/button'\nimport Storage from '../../../tfw/storage'\nimport Scene from '../../scene'\n\nimport \"./websocket-console.css\"\n\n\ninterface IWebsocketConsoleProps {\n    visible: boolean\n}\n\ninterface IWebsocketConsoleState {\n    method: string,\n    params: string,\n    output: string,\n    error: string | null,\n    querying: boolean\n}\n\n\nexport default class WebsocketConsole extends React.Component<IWebsocketConsoleProps, IWebsocketConsoleState> {\n    constructor( props: IWebsocketConsoleProps ) {\n        super( props );\n        this.state = {\n            method: get(\"method\", \"get-renderer-params\"),\n            params: get(\"params\", \"{}\"),\n            output: \"\",\n            error: null,\n            querying: false\n        }\n    }\n\n    handleMethodChange = (method: string) => {\n        this.setState({ method });\n    }\n\n    handleParamsChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setState({ params: event.target.value });\n    }\n\n    handleExecute = async () => {\n        const { method, params } = this.state;\n\n        set(\"method\", method);\n        set(\"params\", params);\n\n        this.setState({ querying: true, output: `${Date.now()}`, error: null });\n        try {\n            const input = parseJSON(params);\n            const output = await Scene.request(method, input);\n            this.setState({ error: null, output: JSON.stringify(output, null, '  ') });\n        }\n        catch( ex ) {\n            console.error(\"WebSocket console error:\", ex);\n            this.setState({ error: parseError(ex) });\n        }\n        finally {\n            this.setState({ querying: false });\n        }\n    }\n\n    render() {\n        const classNames = [\"webBrayns-view-WebsocketConsole\", \"thm-bg0\"];\n        if (this.props.visible) classNames.push(\"visible\");\n\n        return (<div className={classNames.join(' ')}>\n            <div className=\"head\">\n                <Input\n                    label=\"Method\"\n                    value={this.state.method}\n                    onChange={this.handleMethodChange}\n                    onEnterPressed={this.handleExecute}\n                    wide={true}/>\n            </div>\n            <textarea\n                className=\"input\"\n                onChange={this.handleParamsChange}\n                defaultValue={this.state.params}></textarea>\n            <div className=\"button\">\n                <Button\n                    label=\"Execute request\"\n                    wide={true}\n                    wait={this.state.querying}\n                    icon=\"gear\"\n                    onClick={this.handleExecute}/>\n            </div>\n            {\n                this.state.error ?\n                <div className=\"error\">{this.state.error}</div> :\n                <textarea\n                    className=\"output thm-bgPL\"\n                    readOnly={true}\n                    value={this.state.output}>\n                </textarea>\n            }\n        </div>)\n    }\n}\n\n\nconst STORAGE_PREFIX = 'websocket-console::';\n\nfunction get(key: string, defaultValue: any): any {\n    return Storage.local.get(`${STORAGE_PREFIX}${key}`, defaultValue);\n}\n\nfunction set(key: string, value: any): any {\n    return Storage.local.set(`${STORAGE_PREFIX}${key}`, value);\n}\n\n\nfunction parseJSON(json: string): any {\n    try {\n        return JSON.parse(json);\n    }\n    catch(ex) {\n        throw Error(`This parameter is not in valid JSON format:\\n${json}\\n\\nReason: ${ex}!`);\n    }\n}\n\n\nfunction parseError(ex: any) {\n    let output = JSON.stringify(ex, null, '  ');\n    if (ex && typeof ex.toString === 'function') {\n        output += '\\n\\n' + ex.toString();\n    }\n    return output;\n}\n","import React from \"react\"\n\nimport Input from '../../../tfw/view/input'\nimport LocalStorage from '../../service/local-storage'\n\n\nconst Storage = new LocalStorage(\"input-path\");\n\ninterface IInputPathProps {\n    onChange: (path: string) => void\n}\n\ninterface IInputPathState {\n    path: string\n}\n\nexport default class  extends React.Component<IInputPathProps, IInputPathState> {\n    constructor( props: IInputPathProps ) {\n        super( props );\n        this.state = { path: '' }\n\n        this.handleChange(\n            Storage.get(\"path\", '/gpfs/bbp.cscs.ch/project/proj3/resources/meshes/astrocytes/GLIA_000099.h5_decimated.off')\n        )\n    }\n\n    handleChange = (path: string) => {\n        const handler = this.props.onChange;\n        this.setState({ path });\n        Storage.set('path', path);\n        if (typeof handler !== 'function') return;\n        handler(path);\n    }\n\n    render() {\n        return <Input\n            label=\"Please type a model path\"\n            size={100}\n            value={this.state.path}\n            onChange={this.handleChange}\n            wide={true}/>\n    }\n}\n","import Storage from '../../tfw/storage'\n\nexport default class localStorage {\n    constructor(private prefix: string = '') {}\n\n    get(key: string, defaultValue: any): any {\n        return Storage.local.get(this.key(key), defaultValue);\n    }\n\n    set(key: string, val: any) {\n        Storage.local.set(this.key(key), val);\n    }\n\n    private key(key: string): string {\n        if (this.prefix.length === 0) return key;\n        return `${this.prefix}:\\t${key}`;\n    }\n}\n","import * as React from \"react\"\nimport castArray from \"../converter/array\"\nimport castFunction from \"../converter/function\"\nimport castBoolean from \"../converter/boolean\"\nimport TouchableBehavior from \"../behavior/touchable\"\nimport \"./touchable.css\"\n\ninterface ITouchableProps {\n    enabled?: boolean;\n    onClick?: ()=>void;\n    title?: string;\n    classNames?: string[];\n    color?: string;\n    children?: React.ReactElement<any>|React.ReactElement<any>[];\n}\n\nexport default class Touchable extends React.Component<ITouchableProps, {}> {\n    readonly touchable: TouchableBehavior;\n    private ref = React.createRef();\n\n    constructor(props: ITouchableProps) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.touchable = new TouchableBehavior({onTap: this.handleClick, color: props.color});\n    }\n\n    componentDidMount() {\n        const element = this.ref.current;\n        if (!element) return;\n        this.touchable.element = element;\n    }\n\n    handleClick() {\n        const handler = this.props.onClick;\n        if( typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    render() {\n        const p = this.props;\n        const enabled = castBoolean(p.enabled, true);\n        const classes = [\"tfw-view-touchable\"].concat(castArray(p.classNames));\n        if( enabled ) classes.push(\"enabled\");\n        return <div ref={this.ref}\n                tabIndex={0}\n                className={classes.join(\" \")}\n                title={p.title}>{\n            p.children\n        }</div>\n    }\n}\n","import React from \"react\"\n\nimport { IModel } from '../../types'\nimport Button from '../../../tfw/view/button'\nimport Model from '../../scene/model'\nimport Touchable from '../../../tfw/view/touchable'\n\nimport \"./model-button.css\"\n\ninterface IModelButtonProps {\n    model: IModel,\n    onToggleSelection: (model: IModel) => void\n}\n\nexport default class ModelButton extends React.Component<IModelButtonProps, {}> {\n    constructor( props: IModelButtonProps ) {\n        super( props );\n    }\n\n    handleToggleSelection = () => {\n        const handle = this.props.onToggleSelection;\n        if (typeof handle === 'function') handle(this.props.model);\n        console.info(\"this.props.model=\", this.props.model);\n    }\n\n    handleFocus = async () => {\n        const model = new Model(this.props.model);\n        await model.focus();\n    }\n\n    handleShow = async () => {\n        const model = new Model(this.props.model);\n        await model.show();\n    }\n\n    handleHide = async () => {\n        const model = new Model(this.props.model);\n        await model.hide();\n    }\n\n    render() {\n        const { model } = this.props;\n        const classNames = [\"webBrayns-view-ModelButton\", \"thm-ele-button\"];\n        if (model.visible) {\n            classNames.push(model.$selected ? \"thm-bgSL\" : \"thm-bg2\");\n        } else {\n            classNames.push(model.$selected ? \"thm-bgSD\" : \"thm-bg0\");\n        }\n        return (<Touchable classNames={classNames.join((\" \"))}\n                           onClick={this.handleToggleSelection}\n                           title={model.path}>\n                <div className=\"name\">\n                    <div className={model.visible ? \"visible\" : \"invisible\"}>{model.name}</div>\n                    <div className='id'>{`#${model.id}`}</div>\n                </div>\n                <div className=\"icons\">\n                    <div>\n                        <Button small={true} icon=\"gps\" onClick={this.handleFocus}/>\n                        <Button enabled={false} small={true} icon=\"more\"/>\n                    </div>\n                    {\n                        model.visible ?\n                        <Button small={true} icon=\"hide\" onClick={this.handleHide}/> :\n                        <Button small={true} icon=\"show\" onClick={this.handleShow}/>\n                    }\n                    <Button enabled={false} small={true} icon=\"delete\" warning={true}/>\n                </div>\n            </Touchable>)\n    }\n}\n","import * as React from \"react\"\nimport \"./list.css\"\nimport Debouncer from \"../../debouncer\";\nimport castUnit from \"../../converter/unit\"\nimport castBoolean from \"../../converter/boolean\"\nimport castInteger from \"../../converter/integer\"\nimport Gesture from \"../../gesture\"\n\ninterface IListProps {\n    // Array of all the items to hold.\n    items: any[];\n    // Function which takes an item and return a component.\n    mapper: (item: any) => React.ReactElement;\n    itemHeight?: number;\n    width?: string;\n    height?: string;\n    animateRefresh?: boolean;\n    onRefreshAsked?: () => void;\n}\n\ninterface IListState {\n    items: any[];\n}\n\nexport default class List extends React.Component<IListProps, IListState> {\n    private readonly refMain: React.RefObject<HTMLDivElement>;\n    private readonly refHead: React.RefObject<HTMLDivElement>;\n    private readonly refBody: React.RefObject<HTMLDivElement>;\n    private readonly refTail: React.RefObject<HTMLDivElement>;\n    private lastFirstItemIndex: number;\n    private lastVisibleItemsCount: number;\n    private lastItemsArray: any[];\n    private itemHeight: number = 36;\n\n    constructor(props: IListProps) {\n        super(props);\n        this.refMain = React.createRef();\n        this.refHead = React.createRef();\n        this.refBody = React.createRef();\n        this.refTail = React.createRef();\n        this.onScroll = Debouncer(this.onScroll.bind(this), 30);\n        this.onPanDown = this.onPanDown.bind(this);\n        this.lastFirstItemIndex = -1;\n        this.lastVisibleItemsCount = -1;\n        this.lastItemsArray = [];\n        this.state = { items: [] };\n    }\n\n    onPanDown() {\n        const main = this.refMain.current;\n        if (!main) return;\n        if (main.scrollTop > 0) return;\n\n        const onRefresh = this.props.onRefreshAsked;\n        if (typeof onRefresh !== 'function') return;\n        onRefresh();\n    }\n\n    onScroll(evt: any = null): void {\n        const main = this.refMain.current;\n        const head = this.refHead.current;\n        const body = this.refBody.current;\n        const tail = this.refTail.current;\n        if (!main || !head || !body || !tail) return;\n\n        if (this.props.animateRefresh) main.scrollTop = 0;\n\n        const rect = main.getBoundingClientRect();\n        const top = Math.floor(main.scrollTop);\n        const height = Math.floor(rect.height);\n        const itemsCount = this.props.items.length;\n        const firstItemIndex = Math.min(\n            itemsCount, Math.floor(top / this.itemHeight));\n        const visibleItemsCount = Math.min(\n            itemsCount - firstItemIndex,\n            1 + Math.ceil(height / this.itemHeight)\n        );\n        const tailCount = this.props.items.length - firstItemIndex - visibleItemsCount;\n\n        head.style.height = `${this.itemHeight * firstItemIndex}px`;\n        body.style.height = `${this.itemHeight * visibleItemsCount}px`;\n        tail.style.height = `${this.itemHeight * tailCount}px`;\n\n        main.scrollTop = top;\n\n        if (this.lastFirstItemIndex !== firstItemIndex\n            || this.lastVisibleItemsCount !== visibleItemsCount) {\n            this.lastFirstItemIndex = firstItemIndex;\n            this.lastVisibleItemsCount = visibleItemsCount;\n            this.setState({\n                items: this.props.items.slice(firstItemIndex, firstItemIndex + visibleItemsCount)\n            });\n        }\n\n        // Resize background image for head and tail.\n        const backgroundSize = `${main.clientWidth}px ${this.itemHeight}px`;\n        head.style.backgroundSize = backgroundSize;\n        tail.style.backgroundSize = backgroundSize;\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.onScroll, false);\n        const main = this.refMain.current;\n        if (!main) return;\n        Gesture(main).on({\n            pandown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                main.classList.add(\"animate-refresh\");\n            },\n            swipedown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                this.onPanDown();\n            },\n            up: () => main.classList.remove(\"animate-refresh\")\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onScroll, false);\n    }\n\n    render() {\n        this.itemHeight = castInteger(this.props.itemHeight, 36);\n        if (this.lastItemsArray !== this.props.items) {\n            this.lastVisibleItemsCount = -1;\n            this.lastItemsArray = this.props.items;\n        }\n        this.onScroll();\n\n        if (typeof this.props.mapper !== 'function') {\n            console.error(\"props =\", this.props);\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper must be a function which returns a ReactElement!`);\n        }\n        let children = null;\n        try {\n            children = this.state.items\n                .map(this.props.mapper)\n                .map(content => (\n                    <div className=\"item\" key={content.key}\n                        style={{\n                            height: `${this.itemHeight}px`,\n                            minHeight: `${this.itemHeight}px`,\n                            maxHeight: `${this.itemHeight}px`\n                        }}>{content}</div >\n                ));\n        }\n        catch (ex) {\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper returns an exception:\\n${ex}`);\n        }\n\n        const width = castUnit(this.props.width, \"auto\");\n        const height = castUnit(this.props.height, \"auto\");\n        const animateRefresh = castBoolean(this.props.animateRefresh, false);\n        const classes = [\"tfw-view-list\", \"thm-bg2\"];\n        if (animateRefresh) classes.push(\"animate-refresh\", \"refreshing\");\n\n        return (\n            <div className={classes.join(\" \")}\n                style={{ width, height }}\n                onScroll={this.onScroll}\n                ref={this.refMain}>\n                <div className=\"space\" ref={this.refHead} />\n                <div className=\"body\" ref={this.refBody}>{\n                    children\n                }</div>\n                <div className=\"space\" ref={this.refTail} />\n            </div>\n        );\n    }\n}\n","const RX_SEPARATOR = /[ \\t\\n\\r,.|<>:]+/g;\n\n/**\n * ```\n * const m = new Matcher(\"Pi cell\");\n * m.matches('This is a cells pie!') === true\n * m.matches('I bought pins and a cellular.') === 'true'\n * m.matcher('What a nive cellular!') === 'false'\n * ```\n */\nexport default class Matcher {\n  private items: string[];\n\n  constructor(textToMatchAgainst: string) {\n    this.items = textToMatchAgainst\n      .split(RX_SEPARATOR)\n      .map( (item: string) => item.trim().toLowerCase() )\n      .filter( (item: string) => item.length > 0 );\n  }\n\n  matches(text: string) {\n    if( this.items.length === 0 ) return true;\n    const lowerCaseText = text.toLowerCase();\n    for( const item of this.items ) {\n      const pos = lowerCaseText.indexOf( item );\n      if( pos === -1 ) return false;\n    }\n    return true;\n  }\n}\n","import React from \"react\"\n\nimport { IModel } from '../../types'\nimport ModelButton from '../model-button'\nimport List from '../../../tfw/view/list'\nimport Input from '../../../tfw/view/input'\nimport Combo from '../../../tfw/view/combo'\nimport Model from '../../scene/model'\nimport Matcher from '../../tool/matcher'\n\nimport \"./model-list.css\"\n\ninterface IModelListProps {\n    models: IModel[]\n}\n\ninterface IModelListState {\n    filter: string,\n    sort: \"name\" | \"volume\"\n}\n\nexport default class modelList extends React.Component<IModelListProps, IModelListState> {\n    constructor( props: IModelListProps ) {\n        super( props );\n        this.state = { filter: '', sort: 'name' }\n    }\n\n    handleToggleSelection = (model: IModel) => {\n        const currentlySelectedModel = this.props.models.find((m: IModel) => m.$selected);\n        if (currentlySelectedModel) {\n            const modelObject1 = new Model(currentlySelectedModel);\n            modelObject1.setSelected(false);\n        }\n        if (model !== currentlySelectedModel) {\n            const modelObject2 = new Model(model);\n            modelObject2.setSelected(true);\n        }\n    }\n\n    handleFilterChange = (value: string) => {\n        const filter = value.trim().toLowerCase();\n        this.setState({ filter });\n    }\n\n    handleSortChange = (sort: string) => {\n        this.setState({ sort });\n    }\n\n    private filter(): IModel[] {\n        const { filter } = this.state;\n        const { models } = this.props;\n        const matcher = new Matcher(filter);\n        return models.filter((model: IModel) => matcher.matches(model.name))\n            .sort(this.state.sort === 'name' ? sortByName : sortByVolume);\n    }\n\n    render() {\n        const models = this.props.models;\n        const filteredModels = this.filter();\n        const mapper = (model: IModel) => <ModelButton key={model.id}\n                                                       onToggleSelection={this.handleToggleSelection}\n                                                       model={model}/>;\n\n        return (<div className=\"webBrayns-view-ModelList\">\n            <header>\n                <Input\n                    label={`Filter by name (${filteredModels.length} / ${models.length})`}\n                    onChange={this.handleFilterChange}\n                    wide={true}/>\n                <Combo\n                    label=\"Sorting\"\n                    value={this.state.sort}\n                    onChange={this.handleSortChange}>\n                    <div key=\"name\">Name</div>\n                    <div key=\"volume\">Volume</div>\n                </Combo>\n            </header>\n            <List itemHeight={100}\n                  items={filteredModels}\n                  width=\"100%\"\n                  mapper={mapper}/>\n        </div>)\n    }\n}\n\n\nfunction sortByName(model1: IModel, model2: IModel) {\n    const name1 = model1.name.toLowerCase();\n    const name2 = model2.name.toLowerCase();\n    if (name1 < name2 ) return -1;\n    if (name1 > name2 ) return +1;\n    return 0;\n}\n\n\nfunction sortByVolume(model1: IModel, model2: IModel) {\n    return computeVolume(model2.bounds) - computeVolume(model1.bounds);\n}\n\n\nfunction computeVolume(bounds) {\n    const { max, min } = bounds;\n    return (max[0] - min[0]) * (max[1] - min[1]) * (max[2] - min[2])\n}\n","import { connect } from 'react-redux'\n\nimport { IAppState, IAction } from \"../../types\"\nimport ModelList from './model-list'\n\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        models: state.models\n    };\n}\n\nfunction mapDispatchToProps(dispatch: (action: IAction) => void) {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelList);\n","import React from \"react\"\n\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Dialog from '../../../../tfw/factory/dialog'\nimport Icon from '../../../../tfw/view/icon'\nimport InputPath from '../../../view/input-path'\nimport ModelList from '../../../view/model-list/container'\n\nimport \"./model.css\"\n\nexport default class Model extends React.Component<{}, {}> {\n    handleClip = () => {\n        State.dispatch(State.Navigation.setPanel(\"clip\"));\n    }\n\n    handleLoadMesh = async () => {\n        let path = '';\n        const confirmed = await Dialog.confirm(\n            \"Load Mesh\",\n            <InputPath onChange={(p: string) => path = p}/>);\n        if (!confirmed) return;\n        const model = await Scene.loadMeshFromPath(path);\n        console.info(\"model=\", model);\n    }\n\n    toggleConsoleVisibility = () => {\n        State.dispatch(State.Navigation.toggleConsoleVisibility())\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-panel-Model\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <p>Web-Brayns</p>\n                <div>\n                    <Icon content='cut' onClick={this.handleClip}/>\n                    <Icon content='import' onClick={this.handleLoadMesh}/>\n                    <Icon content='gps' onClick={() => Scene.camera.lookAtWholeScene()}/>\n                    <Icon content='bug' onClick={this.toggleConsoleVisibility}/>\n                </div>\n            </header>\n            <ModelList />\n        </div>)\n    }\n}\n","export default {\n    padNumber(value: number, size: number = 6, fillWith: string = '0'): string {\n        let text = `${value}`;\n        while (text.length < size) {\n            text = fillWith.charAt(0) + text;\n        }\n        return text;\n    },\n\n    clamp(value: number, min: number = 0, max: number = 1) {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    }\n}\n","export default function castDouble(v: any, defVal = 0): number {\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return v;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return num;\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Gesture from '../../gesture'\nimport Label from '../label'\nimport castInteger from \"../../converter/integer\"\nimport castString from \"../../converter/string\"\nimport castFloat from \"../../converter/double\"\n\nimport \"./slider.css\"\n\ninterface ISliderProps {\n    value: number,\n    label?: string,\n    text?: string,\n    step?: number,\n    min?: number,\n    max?: number,\n    onChange: (value: number) => void\n}\n\nexport default class Slider extends React.Component<ISliderProps, {}> {\n    private readonly ref: React.RefObject<HTMLDivElement> = React.createRef();\n\n    handleTapOrMove = (evt: any) => {\n        const div = this.ref.current;\n        if (!div) return;\n        const rect = div.getBoundingClientRect();\n        const percent = clamp(evt.x / rect.width);\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const value = this.constrainValue(\n            min + (max - min) * percent, min, max, step\n        );\n        console.info(\"evt, rect, value, percent=\", evt, rect, value, percent);\n        p.onChange(value);\n    }\n\n    componentDidMount() {\n        const div = this.ref.current;\n        if (!div) return;\n        Gesture(div).on({\n            tap: this.handleTapOrMove,\n            pan: this.handleTapOrMove\n        })\n    }\n\n    render() {\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const label = castString(p.label, '');\n        const value = this.constrainValue(p.value, min, max, step);\n        const text = castString(p.text, `${value}`);\n\n        return (<div className=\"tfw-view-Slider\"\n                     ref={this.ref}>\n            <Label label={label}/>\n            <div className=\"thm-ele-button thm-bgPD\">\n                <div className=\"thm-ele-nav thm-bgPL thm-fg\"\n                     style={{\n                         marginLeft: `calc(${100 * (value - min) / (max - min)}% - 16px)`\n                     }}>{text}</div>\n            </div>\n        </div>)\n    }\n\n    private constrainValue(value: number, min: number, max: number, step: number) {\n        let v = Math.max(min, Math.min(value, max));\n        if (step > 0) {\n            return min + step * Math.floor(step / 2 + (v - min) / step);\n        }\n        return v;\n    }\n}\n\n\nfunction clamp(value: number, min: number = 0, max: number = 1) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n}\n","import React from \"react\"\n\nimport Label from '../../../tfw/view/label'\nimport Gesture from '../../../tfw/gesture'\nimport Color from '../../../tfw/color'\n\nimport \"./range.css\"\n\n// Left and right margins for the range.\nconst MARGIN = 16;\n\ninterface IRangeProps {\n    label?: string,\n    min: number,\n    max: number,\n    color: string,    // CSS color string\n    onChange: (min: number, max: number) => void\n}\n\nexport default class Range extends React.Component<IRangeProps, {}> {\n    private readonly refCanvas: React.RefObject<HTMLCanvasElement> = React.createRef();\n    private ctx: CanvasRenderingContext2D | null = null;\n    // -1 left bound, +1 right bound, 0 center (to move both bounds).\n    private selection: number = 0;\n\n    constructor( props: IRangeProps ) {\n        super( props );\n    }\n\n    componentDidMount() {\n        const canvas = this.refCanvas.current;\n        if (!canvas) return;\n\n        this.ctx = canvas.getContext(\"2d\");\n        const rect = canvas.getBoundingClientRect();\n        canvas.setAttribute(\"width\", `${rect.width}`);\n        Gesture(canvas).on({\n            down: this.handleDown,\n            pan: this.handlePan\n        });\n\n        this.paint();\n    }\n\n    handleDown = (evt) => {\n        const x = this.getX(evt);\n        const { min, max, onChange } = this.props;\n        const A = Math.abs(min - x);\n        const B = Math.abs(max - x);\n        const M = Math.abs(x - (max + min) / 2);\n\n        if (A < M) {\n            if (A < B) this.selection = -1;\n            else this.selection = +1;\n        }\n        // M < A\n        else {\n            if (M <= B) this.selection = 0;\n            else this.selection = +1;\n        }\n        this.moveTo(x);\n    }\n\n    moveTo(x: number) {\n        const { min, max, onChange } = this.props;\n        const { selection } = this;\n\n        if (selection === -1) {\n            onChange(clamp(x, 0, max), max);\n        }\n        else if (selection === +1) {\n            onChange(min, clamp(x, min, 1));\n        }\n        else {\n            const shift = (max - min) / 2;\n            let A = x - shift;\n            let B = x + shift;\n            if (A < 0) {\n                B -= A;\n                A = 0;\n            }\n            else if (B > 1) {\n                A += B - 1;\n                B = 1;\n            }\n            onChange(A, B);\n        }\n    }\n\n    handlePan = (evt) => {\n        const x = this.getX(evt);\n        this.moveTo(x);\n    }\n\n    getX(evt) {\n        const canvas = this.refCanvas.current;\n        if (!canvas) return 0;\n\n        const rect = canvas.getBoundingClientRect();\n        return (evt.x - MARGIN) / (rect.width - 2 * MARGIN);\n    }\n\n    paint() {\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const { canvas } = ctx;\n\n        const rect = canvas.getBoundingClientRect();\n        const w = rect.width;\n        const h = rect.height;\n        canvas.width = w;\n        canvas.height = h;\n\n        ctx.clearRect(0, 0, w, h);\n        const space = w - 2 * MARGIN;\n        if (space < MARGIN) return;   // Too narrow to paint anything useful.\n\n        ctx.strokeStyle = \"#333\";\n        ctx.fillStyle = \"#999\";\n        ctx.beginPath();\n        ctx.rect(MARGIN, 0, space, h);\n        ctx.fill();\n        ctx.stroke();\n\n        const { min, max } = normalize(this.props.min, this.props.max);\n        const a = MARGIN + space * min;\n        const b = MARGIN + space * max;\n        const grad = ctx.createLinearGradient(0, 0, 0, h);\n        grad.addColorStop(0, \"#000\");\n        grad.addColorStop(1, this.props.color);\n        ctx.fillStyle = grad;\n        ctx.beginPath();\n        ctx.rect(a,0, b - a, h);\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.save();\n        ctx.beginPath();\n        ctx.fillStyle = \"#fff5\";\n        ctx.rect(a,0, b - a, h * .5);\n        ctx.fill();\n        ctx.restore();\n\n        ctx.beginPath();\n        ctx.moveTo(0,0);\n        ctx.lineTo(w,0);\n        ctx.moveTo(0,h);\n        ctx.lineTo(w,h);\n        ctx.stroke();\n\n    }\n\n    componentDidUpdate() {\n        this.paint();\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-Range\">\n            <div style={{ margin: `0 ${MARGIN}px`}}>\n                <Label label={this.props.label} />\n            </div>\n            <canvas ref={this.refCanvas} height=\"32\"></canvas>\n        </div>)\n    }\n}\n\n\nfunction clamp(v: number, min: number = 0, max: number = 1): number {\n    if (v < min) return min;\n    if (v > max) return max;\n    return v;\n}\n\n\nfunction normalize(min: number, max: number): { min: number, max: number } {\n    let a = clamp(min);\n    let b = clamp(max);\n    if (a > b) {\n        const tmp = a;\n        a = b;\n        b = tmp;\n    }\n\n    return { min: a, max: b };\n}\n","type Action = (...args: any[]) => void;\n\n/**\n * The function to call as much as you want. It will perform the debouce for you.\n * Put in the same args as the `action` function.\n *\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\n * less than `delay` ms between them.\n * * delay - Number of milliseconds.\n */\nexport default function(action: Action, delay: number): Action {\n    let timer = 0;\n    let timestamp = 0;\n    let nextAction: Action = () => {};\n    let nextArgs: any[] = [];\n    const throttleAction = () => {\n        timer = 0;\n        nextAction(...nextArgs);\n    }\n\n    return function(this: { delay: number }, ...args: any[]) {\n        nextAction = action;\n        nextArgs = args;\n        const now = Date.now();\n        const elapsedTime = now - timestamp;\n        timestamp = now;\n        if (elapsedTime > delay) {\n            throttleAction();\n        }\n        else if (timer === 0) {\n            timer = window.setTimeout(throttleAction, delay - elapsedTime);\n        }\n    }\n}\n","import React from \"react\"\n\nimport SnapshotService from '../../../service/snapshot'\nimport Snapshot from '../../../dialog/snapshot'\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Models from '../../../models'\nimport Geom from '../../../geometry'\nimport Util from '../../../../tfw/util'\nimport Icon from '../../../../tfw/view/icon'\nimport Button from '../../../../tfw/view/button'\nimport Slider from '../../../../tfw/view/slider'\nimport Range from '../../range'\nimport Throttler from '../../../../tfw/throttler'\nimport Debouncer from '../../../../tfw/debouncer'\nimport Theme from '../../../../tfw/theme'\n\nimport { IBounds } from '../../../types'\n\nimport \"./clip.css\"\n\ninterface IPlane {\n    id: number,\n    plane: [number, number, number, number]\n}\n\ninterface IClipProps {\n    activated: boolean,\n    minX: number,\n    maxX: number,\n    minY: number,\n    maxY: number,\n    minZ: number,\n    maxZ: number,\n    latitude: number,\n    longitude: number,\n    collageDepth: number\n}\n\nexport default class Model extends React.Component<IClipProps, {}> {\n    // 6 Planes for the slices. We hold the id in order to update them.\n    private minPlaneIndex: number = 0;\n    private maxPlaneIndex: number = 0;\n    // Most of the time, we display the main slice, but while you are sliding on\n    // the frames count slider, we display the last slice.\n    private indexOfFrameToShow: number = 0;\n\n    private sceneCenter: [number,number,number] = [0,0,0];\n    private sceneRadius: number = 1;\n\n    private resetIndexOfFrameToShow = Debouncer(() => {\n        this.indexOfFrameToShow = 0;\n        this.updatePlanes();\n    }, 600);\n\n    private async removeAllClipPlanes() {\n        const planes = await Scene.Api.getClipPlanes();\n        if (planes.length === 0) return;\n        const ids = planes.map(plane => plane ? plane.id : 0);\n        Scene.Api.removeClipPlanes(ids);\n    }\n\n    async componentDidMount() {\n        this.clear();\n\n        this.updatePlanes();\n    }\n\n    async componentDidUpdate() {\n        this.updatePlanes();\n    }\n\n    updatePlanes = Throttler(() => {\n        Scene.Api.updateClipPlane({id: this.minPlaneIndex, plane: this.getDefOfMinPlaneX()});\n        Scene.Api.updateClipPlane({id: this.maxPlaneIndex, plane: this.getDefOfMaxPlaneX()});\n    }, 100)\n\n    private computePlaneDirection(): [number, number, number] {\n        const lat = Math.PI * this.props.latitude / 180;\n        const lng = Math.PI * this.props.longitude / 180;\n        const y = Math.sin(lng);\n        const radius = Math.cos(lng);\n        const x = Math.cos(lat) * radius;\n        const z = Math.sin(lat) * radius;\n        return [x,y,z];\n    }\n\n    private computeThickness() {\n        const { sceneRadius, props } = this;\n        return sceneRadius * Math.abs(props.maxX - props.minX);\n    }\n\n    getDefOfMinPlaneX(): [number, number, number, number] {\n        const { sceneRadius, sceneCenter } = this;\n        const thickness = this.computeThickness();\n        const distanceFromCenter = sceneRadius * (this.props.minX - .5)\n            + thickness * this.indexOfFrameToShow;\n        const [x,y,z] = this.computePlaneDirection();\n        const pointOnPlan = Geom.addVectors(\n            sceneCenter,\n            Geom.scale([x,y,z], -distanceFromCenter)\n        );\n        const distanceFromOrigin = Geom.scalarProduct(\n            pointOnPlan, [x,y,z]\n        );\n        return [x, y, z, distanceFromOrigin];\n    }\n\n    getDefOfMaxPlaneX(): [number, number, number, number] {\n        const { sceneRadius, sceneCenter } = this;\n        const thickness = this.computeThickness();\n        const distanceFromCenter = sceneRadius * (this.props.maxX - .5)\n            + thickness * this.indexOfFrameToShow;\n        const [x,y,z] = Geom.scale(this.computePlaneDirection(), -1);\n        const pointOnPlan = Geom.addVectors(\n            sceneCenter,\n            Geom.scale([x,y,z], distanceFromCenter)\n        );\n        const distanceFromOrigin = Geom.scalarProduct(\n            pointOnPlan, [x,y,z]\n        );\n        return [x, y, z, distanceFromOrigin];\n    }\n\n    componentWillUnmount() {\n        //this.removeAllClipPlanes();\n    }\n\n    handleBack = () => {\n        State.dispatch(State.Navigation.setPanel(\"model\"));\n    }\n\n    handleActivatedChange = (activated: boolean) => {\n        State.dispatch(State.Slicer.update({ activated }))\n    }\n\n    handleXChange(min: number, max: number) {\n        State.dispatch(State.Slicer.update({ minX: min, maxX: max }));\n    }\n\n    handleLatitudeChange = (latitude: number) => {\n        console.info(\"latitude=\", latitude);\n        State.dispatch(State.Slicer.update({ latitude }));\n    }\n\n    handleLongitudeChange = (longitude: number) => {\n        State.dispatch(State.Slicer.update({ longitude }));\n    }\n\n    handleCollageDepthChange = (collageDepth: number) => {\n        this.indexOfFrameToShow = collageDepth;\n        this.resetIndexOfFrameToShow();\n        State.dispatch(State.Slicer.update({ collageDepth }));\n    }\n\n    clear = async () => {\n        // Computing current scene bounding box.]\n        const state = State.store.getState();\n        const models = state.models\n            .filter(m => m.visible)\n            .map(Models.createModelFromBraynsData);\n        const bounds = Models.getModelsBounds(models);\n        const [x,y,z] = bounds.min;\n        const [X,Y,Z] = bounds.max;\n        const xx = x - X;\n        const yy = x - X;\n        const zz = x - X;\n        this.sceneRadius = Math.sqrt(xx*xx + yy*yy + zz*zz);\n        this.sceneCenter[0] = (x + X) / 2;\n        this.sceneCenter[1] = (y + Y) / 2;\n        this.sceneCenter[2] = (z + Z) / 2;\n\n        // Trying to find our clipping planes and taking theirs ids.\n        const planes = await Scene.Api.getClipPlanes();\n        await Scene.Api.removeClipPlanes(planes.map(p => p.id));\n\n        this.minPlaneIndex = await addPlane(this.getDefOfMinPlaneX());\n        this.maxPlaneIndex = await addPlane(this.getDefOfMaxPlaneX());\n\n        State.dispatch(State.Slicer.update({\n            maxX: 1, minX: 0\n        }));\n    }\n\n    handleMovieClick = async () => {\n        const queryForPlanes = Scene.Api.getClipPlanes();\n        const snapshotOptions = await Snapshot.show();\n        if (!snapshotOptions) return;\n        const planes =await queryForPlanes;\n        const minPlane = planes.find(p => p.id === this.minPlaneIndex);\n        if (!minPlane) return;\n        const maxPlane = planes.find(p => p.id === this.maxPlaneIndex);\n        if (!maxPlane) return;\n        const planesPerFrame = this.getPlanesPerFrame(minPlane, maxPlane);\n        for( let frame = 0; frame < this.props.collageDepth; frame++ ) {\n            const [planeA, planeB] = planesPerFrame[frame];\n            console.info(\"frame, planeA, planeB=\", frame, planeA, planeB);\n            await Scene.Api.updateClipPlane(planeA);\n            await Scene.Api.updateClipPlane(planeB);\n            const canvas = await SnapshotService.getCanvas(snapshotOptions);\n            const filename = `${snapshotOptions.filename}-${Util.padNumber(frame)}.jpg`;\n            console.info(\"filename=\", filename);\n            await SnapshotService.saveCanvasToFile(canvas, filename);\n        }\n        this.updatePlanes();\n    }\n\n    private getPlanesPerFrame(minPlane: IPlane, maxPlane: IPlane) {\n        const planesPerFrame = [];\n        for( let frame = 0; frame < this.props.collageDepth; frame++ ) {\n            this.indexOfFrameToShow = frame;\n            planesPerFrame.push([\n                {\n                    id: minPlane.id,\n                    plane: this.getDefOfMinPlaneX()\n                },\n                {\n                    id: maxPlane.id,\n                    plane: this.getDefOfMaxPlaneX()\n                }\n            ])\n        }\n        this.indexOfFrameToShow = 0;\n        console.info(\"minPlane, maxPlane, planesPerFrame=\", minPlane, maxPlane, planesPerFrame);\n        return planesPerFrame;\n    }\n\n    render() {\n        console.info(\"this.props.latitude=\", this.props.latitude);\n        return (<div className=\"webBrayns-view-panel-Clip\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <div>\n                    <Icon content=\"back\" onClick={this.handleBack}/>\n                </div>\n                <p>Slicing</p>\n            </header>\n            <div>\n                <Button\n                    wide={true} warning={true}\n                    label=\"Remove all clipping planes\"\n                    icon=\"delete\"\n                    onClick={this.clear}/>\n                <p>\n                    Slide the colored bar below to set the thickness and position of the main slice.\n                </p>\n                <Range\n                    label=\"Main slice\"\n                    color={Theme.bgS()}\n                    min={this.props.minX}\n                    max={this.props.maxX}\n                    onChange={this.handleXChange}/>\n                <p>Orientation can be set by latitude/longitude.</p>\n                <Slider min={-180}\n                        max={180}\n                        onChange={this.handleLatitudeChange}\n                        step={1}\n                        label={`Latitude: ${this.props.latitude}`}\n                        text={`${this.props.latitude}`}\n                        value={this.props.latitude}/>\n                <Slider min={-90}\n                        max={90}\n                        onChange={this.handleLongitudeChange}\n                        step={1}\n                        label={`Longitude: ${this.props.longitude}`}\n                        text={`${this.props.longitude}`}\n                        value={this.props.longitude}/>\n                <br/>\n                <Button wide={true} flat={true}\n                    label=\"Make camera face the slice\"\n                    icon=\"camera\"/>\n                <p>Make snapshots of each adjacent slice.</p>\n                <Slider min={1}\n                        max={20}\n                        onChange={this.handleCollageDepthChange}\n                        step={1}\n                        label={`Frames count: ${this.props.collageDepth}`}\n                        text={`${this.props.collageDepth}`}\n                        value={this.props.collageDepth}/>\n                <Button wide={true}\n                        label=\"Create Filmstrip\"\n                        onClick={this.handleMovieClick}\n                        icon=\"movie\"/>\n            </div>\n        </div>)\n    }\n}\n\n\n/**\n * Create a plane and returns its ID.\n */\nasync function addPlane(def: [number, number, number, number]): Promise<number> {\n    const plane = await Scene.Api.addClipPlane(def);\n    if (!plane) return 0;\n    return plane.id;\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../../types\"\nimport ClipView from \"./clip\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        activated: state.slicer.activated,\n        minX: state.slicer.minX,\n        maxX: state.slicer.maxX,\n        minY: state.slicer.minY,\n        maxY: state.slicer.maxY,\n        minZ: state.slicer.minZ,\n        maxZ: state.slicer.maxZ,\n        latitude: state.slicer.latitude,\n        longitude: state.slicer.longitude,\n        collageDepth: state.slicer.collageDepth\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClipView);\n","import React from \"react\"\nimport { Client as BraynsClient } from \"brayns\"\n\nimport Scene from './web-brayns/scene'\nimport Model from './web-brayns/scene/model'\nimport ImageStream from './web-brayns/view/image-stream'\nimport Stack from './tfw/layout/stack'\nimport WebsocketConsole from './web-brayns/view/websocket-console'\nimport PanelModel from './web-brayns/view/panel/model'\nimport PanelClip from './web-brayns/view/panel/clip/container'\n\nimport { IVector } from './web-brayns/types'\n\nimport \"./app.css\"\n\n\ninterface IAppProps {\n    panel: string,\n    showConsole: boolean\n}\n\nexport default class App extends React.Component<IAppProps, {}> {\n    constructor( props: IAppProps ) {\n        super( props );\n    }\n\n    async componentDidMount() {\n        try {\n            /*\n            //Scene.clear();\n            let modelNumber = 1;\n            const factor = 200;\n            const models: Model[] = [];\n            const positions: IVector[] = [];\n\n            for (let x=-1; x<=1; x++) {\n                for (let y=-1; y<=1; y++) {\n                    for (let z=-1; z<=1; z++) {\n                        const astro = await loadAstrocyte(modelNumber++);\n                        models.push(astro);\n                        positions.push([\n                            factor * x,\n                            factor * y,\n                            factor * z\n                        ])\n                    }\n                }\n            }\n\n            models.forEach( async (model: Model, index: number) => {\n                await model.locate(positions[index]);\n            })*/\n\n            Scene.camera.lookAtWholeScene();\n        }\n        catch( ex ) {\n            console.error(ex);\n        }\n    }\n\n    render() {\n        return (<div className=\"App\">\n            <div className=\"panel\">\n                <Stack value={this.props.panel}>\n                    <PanelModel key=\"model\"/>\n                    <PanelClip key=\"clip\"/>\n                </Stack>\n            </div>\n            <div className='view'>\n                <ImageStream\n                    onPan={Scene.gestures.handlePan}\n                    onPanStart={Scene.gestures.handlePanStart}/>\n                <WebsocketConsole visible={this.props.showConsole}/>\n            </div>\n        </div>)\n    }\n}\n\n\nasync function loadAstrocyte(id: number): Promise<Model> {\n    const path = `/gpfs/bbp.cscs.ch/project/proj3/resources/meshes/astrocytes/GLIA_${pad(id)}.h5_decimated.off`;\n    return await Scene.loadMeshFromPath(path);\n}\n\n\nfunction pad(value: number): string {\n    let out = `${value}`;\n    while (out.length < 6 ) {\n        out = `0${out}`;\n    }\n    return out;\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"./web-brayns/types\"\nimport AppView from \"./app\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        panel: state.navigation.panel,\n        showConsole: state.navigation.showConsole\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppView);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport ServiceHost from \"./web-brayns/service/host\"\nimport Scene from \"./web-brayns/scene\"\nimport Dialog from \"./tfw/factory/dialog\"\nimport Theme from \"./tfw/theme\"\nimport App from './app.container';\nimport State from './web-brayns/state'\n\nimport \"./tfw/font/josefin.css\"\n\n\nTheme.apply(\"default\");\n\nasync function start() {\n    const hostName = await ServiceHost.getHostName(false);\n    console.info(\"hostName=\", hostName);\n\n    try {\n        const client = await Dialog.wait(\"Contacting Brayns...\", Scene.connect(hostName), false);\n        const scene = await Dialog.wait(\"Loading models...\", Scene.Api.getScene(), false);\n        const planes = await Scene.Api.getClipPlanes();\n        const planeIds = planes.map( p => p.id );\n        Scene.Api.removeClipPlanes(planeIds);\n\n        State.dispatch(State.Models.reset(scene.models));\n\n        // Entry point for our app\n        const root = document.getElementById('root') as HTMLElement;\n        ReactDOM.render(<Provider store={State.store}><App brayns={client}/></Provider>, root);\n\n        const splash = document.getElementById('splash-screen');\n        if (splash) {\n            splash.classList.add(\"vanish\");\n            window.setTimeout(() => document.body.removeChild(splash), 600);\n        }\n    }\n    catch(ex) {\n        await Dialog.alert(`Seems like Brayns is not reachable on ${hostName}!`);\n        location.reload();\n    }\n\n}\n\nstart();\n"],"sourceRoot":""}