{"version":3,"sources":["tfw/view/input/input.yaml","tfw/factory/dialog.yaml","web-brayns/service/python.ts","web-brayns/state/animation.ts","tfw/storage.ts","tfw/converter/string.ts","tfw/converter/boolean.ts","tfw/converter/string-array.ts","tfw/gesture/moves.ts","tfw/gesture/finger.ts","tfw/gesture/basic-handler.ts","tfw/gesture/gesture.ts","tfw/color.ts","tfw/theme.ts","tfw/converter/function.ts","tfw/behavior/touchable.ts","tfw/converter/integer.ts","tfw/converter/unit.ts","tfw/icons.ts","tfw/view/icon.tsx","tfw/view/label/label.tsx","tfw/escape-handler.ts","tfw/view/combo.tsx","tfw/intl.ts","tfw/view/input/input.tsx","tfw/layout/flex.tsx","web-brayns/view/snapshot/snapshot.tsx","web-brayns/state/dialogs.ts","web-brayns/state/models.ts","web-brayns/state/navigation.ts","web-brayns/state/path.ts","web-brayns/state/slicer.ts","web-brayns/state/state.ts","web-brayns/service/path.ts","tfw/url-args.ts","tfw/converter/array.ts","tfw/view/button.tsx","tfw/factory/dialog.tsx","web-brayns/view/input-host-name/input-host-name.tsx","web-brayns/service/host.tsx","web-brayns/scene/api.ts","web-brayns/scene/model.ts","web-brayns/geometry/geometry.ts","web-brayns/models/models.ts","web-brayns/scene/camera.ts","web-brayns/scene/renderer.ts","tfw/debouncer.ts","web-brayns/scene/gestures-handler.ts","web-brayns/scene/scene.ts","web-brayns/service/snapshot.ts","web-brayns/view/snapshot/snapshot.container.ts","web-brayns/dialog/snapshot.tsx","tfw/converter/double.ts","tfw/view/slider/slider.tsx","tfw/util.ts","web-brayns/view/animation-control/animation-control.tsx","web-brayns/view/animation-control/animation-control.container.ts","web-brayns/view/image-stream/image-stream.tsx","tfw/layout/stack.tsx","web-brayns/view/websocket-console/websocket-console.tsx","tfw/view/touchable.tsx","web-brayns/view/path-selector/path-bar/path-bar.tsx","web-brayns/view/path-selector/path-list/path-list.tsx","web-brayns/view/path-selector/path-selector.tsx","web-brayns/view/path-selector/path-selector.container.ts","web-brayns/view/input-path/input-path.tsx","web-brayns/service/local-storage.ts","web-brayns/view/model-button/model-button.tsx","tfw/view/list/list.tsx","web-brayns/tool/matcher.ts","web-brayns/view/model-list/model-list.tsx","web-brayns/view/model-list/container.ts","web-brayns/view/panel/model/model.tsx","web-brayns/view/range/range.tsx","tfw/throttler.ts","web-brayns/view/panel/clip/clip.tsx","web-brayns/view/panel/clip/container.ts","app.tsx","app.container.ts","index.tsx"],"names":["module","exports","en","nan","fr","it","cancel","close","ok","python","exec","_exec","Object","asyncToGenerator","regenerator_default","a","mark","_callee","serviceName","params","data","url","init","response","text","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","FormData","append","JSON","stringify","concat","method","body","credentials","fetch","sent","abrupt","parse","t0","Error","code","status","statusText","stop","_x","apply","this","state_animation","INITIAL_STATE","current","delta","dt","frameCount","playing","unit","reducer","state","action","type","startsWith","substr","assign","animation","update","storage","local","makeStorage","window","localStorage","session","sessionStorage","get","key","defaultValue","value","getItem","ex","error","removeItem","set","setItem","del","castString","t","isNaN","castBoolean","v","trim","toLowerCase","num","parseInt","castStringArray","defaultArray","defaultString","Array","isArray","map","item","CAPACITY","Moves","x","y","classCallCheck","_x0","_y0","_time0","_y","_time","_cursor","now","fill","shift","idx","Date","idx0","idx1","_index","time","time0","time1","time01","idx2","time12","x0","x1","y0","y1","Finger","fingers","identifier","index","indexOf","indexOfFirstNull","push","BasicHandler","element","handleDown","handleUp","handleMove","pointerType","pointerTypeTime","deviceHandlers","pressed","_this","handler","evt","checkPointerType","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","changedTouches","Symbol","iterator","done","touch","clientX","clientY","getIndex","buttons","pointer","clear","createClear","err","return","touchstart","addEventListener","call","_this2","mousedown","_this3","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","remove","touchend","_this4","log","mouseup","_this5","mouseout","_this6","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","touchmove","_this7","mousemove","delay","_this$deviceHandlers","removeEventListener","preventDefault","stopPropagation","SYMBOL","ID","STANDARD_EVENTS","Gesture","elem","handlers","pointers","id","bind","rawHandlers","_i2","_Object$keys","keys","eventName","wheel","deltaX","deltaY","deltaZ","wrapSpecialHandlers","forEach","_len","names","_key","_i","_names","name","isDown","moves","rect","left","top","width","height","event","ptr","getPointer","getBoundingClientRect","down","target","add","up","recognizeTap","recognizeSwipe","recognizePan","tap","elapsedTime","Math","abs","startX","startY","recognizePanDown","recognizePanUp","pan","_ptr$moves","hasHandlerFor","sx","speedX","speedY","dx","pandown","panvertical","panup","recognizeSwipeDown","recognizeSwipeUp","recognizeSwipeLeft","swipe","_ptr$moves2","dy","swipedown","swipevertical","swipeup","swipeleft","swipehorizontal","gesture","Color","codeCSS","R","G","B","H","S","L","A","input","toUpperCase","parseHexa","parseRGB","parseRGBA","parseHSL","luminance","color","hexa2","newColor","chroma","min","max","INV6","charAt","INV15","INV255","m","RX_RGB","clamp01","RX_RGBA","parseFloat","RX_HSL","INV359","INV99","hsl2rgb","luminanceStep","color1","color2","alpha","beta","newRGBA","newRGB","red","green","blue","out","floor","toString","tfw_theme","register","registerTheme","document","THEMES","css","classList","vars","bg0","makeGetCurrentColor","bg1","bg2","bg3","bgP","bgPD","bgPL","bgS","bgSD","bgSL","black","white","isDark","colorName","$isDark","average","mix","isThemeGloballyDark","varName","setFontSize","size","html","documentElement","normalize","completeWithDefaultValues","COLOR","THEME_COLOR_NAMES","themeName","_style","style","s","ALPHA_HEXA","pen","letter","codeVariables","codeBackground","elevationColor","addAlpha","ELEVATIONS","elevationKey","elevation","codeElevation","_loop","depth","tail","fgColorName","bgColorName","styleFgColorName","styleBgColorName","bgClass","fgClass","position","piecesFG","piecesSVG","piecesBG","pop","join","codeText","styleElement","createElement","getElementsByTagName","appendChild","textContent","0","2","4","6","8","9","10","11","12","16","24","completeBackgrounds","has0","has1","has2","has3","rgb2hsl","darkenBackground","color0","r0","g0","b0","color3","r3","g3","b3","dark","light","rotateHue","bg","hexa","EMPTY_FUNCTION","Touchable","args","_element","_enabled","accent","onTap","enabled","castFunction","that","on","keydown","fire","getComputedStyle","screen","div","className","createScreen","borderRadius","getPropertyValue","w","h","radius","ceil","sqrt","ripple","background","Theme","setTimeout","removeChild","castInteger","defVal","RX_CSS_UNIT","castUnit","scalar","draw","d","stroke","iconsBook","android","bug","camera","center","child","copy","counter","cut","delete","direction","down-double","edit","eraser","export","file","flag-jp","r","flag-fr","flag-it","flag-de","flag-en","folder","font","format-align-center","format-align-justify","format-align-left","format-align-right","format-bold","format-italic","format-float-center","format-float-left","format-float-none","format-float-right","format-header","format-underline","fullscreen","gear","gps","hand","heart","hide","home","image","import","improvement","left-double","link","location","logout","mail","map-layer","menu","minus","minus-o","minus-small","more","movie","pack","pause","play","plug","plus","plus-o","plus-small","print","question","redo","refresh","right","right-double","run","search","select","sitemap","unselect","share","show","skip-next","skip-next2","skip-prev","skip-prev2","speaker","speaker-off","split-vertical","split-horizontal","star","stat","switch","tri-down","tri-left","tri-right","tri-up","twitter","undo","up-double","user","wait","zoom-in","zoom-out","warning","synonyms","back","help","save","_Object$keys2","val","EnumPenColor","Icon","props","possibleConstructorReturn","getPrototypeOf","refIcon","visible","timeoutHandle","React","sort","elemIcon","clearTimeout","requestAnimationFrame","slot","onHide","p","animate","flipH","flipV","content","castContent","rotate","onClick","classes","svgContent","createSvgContent","transform","triggerVisibleAnimation","react","ref","viewBox","preserveAspectRatio","strokeWidth","strokeLinecap","strokeLinejoin","def","elementName","_parseDef","_ref","attributes","children","_ref2","slicedToArray","arg1","arg2","parseDef","attribs","split","attribName","attribValue","CLASSES","PENS","manageColors","objectSpread","Label","label","react_default","htmlFor","Component","escape_handler","listener","initialized","Combo","touchable","list","button","bigList","selectedKey","selectedIndex","handleClick","assertThisInitialized","expand","onChange","_list$getBoundingClie","innerHeight","innerHTML","items","querySelectorAll","scrollTop","_ensureSelectionVisible","EscapeHandler","_swapItems","_this$_computeDimensi","_computeDimensions","_this$_showList","_showList","handleKeyboard","_handleKeyboard","scroll","wide","goodKeys","minimalLength","k","ensureGoodKeys","label_Label","icon_Icon","Mode","gCurrentLanguage","navigator","language","Intl","translations","translation","addParams","languages","_languages","lang","instance","translate","defineProperty","intl","defaultText","toIntl","result","_value","output","mode","Text","paramIndex","c","Escape","Placeholder","make","require","Input","handleKeyDown","_this$props","onEnterPressed","onFocus","setSelectionRange","onBlur","placeholder","focus","globalId","inputClassName","maxWidth","autoFocus","disabled","onKeyDown","Flex","dir","justifyContent","alignItems","flexWrap","toConsumableArray","RESOLUTIONS","fullHD","thumbnail","presentation","ultraHD","SAMPLINGS","medium","quick","low","high","ultra","res","resolution","_resolution","Snapshot","handleWidthChange","onWidthChange","handleHeightChange","onHeightChange","handleSizeKeyChange","onSizeKeyChange","handleSamplesChange","samples","onSamplesChange","handleSamplesKeyChange","onSamplesKeyChange","handleFilenameChange","filename","onFilenameChange","input_Input","combo_Combo","sizeKey","flex_Flex","samplesKey","RESOLUTION_NAME","SAMPLING_NAME","dialogs","snapshot","Storage","newState","updateSnapshot","state_models","models","slice","model","alreadyAddedIds","filter","alreadyHere","includes","reset","navigation","panel","showConsole","setPanel","toggleConsoleVisibility","state_path","path","root","files","folders","slicer","activated","minX","maxX","latitude","longitude","collageDepth","sliceInfo","Animation","Dialogs","Models","Navigation","Path","Slicer","store","createStore","state_state","dispatch","service_path","browse","ROOT","Python","State","UrlArgs","substring","itemWithSpacesInsteadOfPlus","indexOfEqual","decodeURIComponent","castArray","Button","tag","icon","flat","small","tfw_factory_dialog","alert","Promise","resolve","dialog","Dialog","onClose","footer","button_Button","_","confirm","caption","title","confirmed","btnCancel","btnOK","options","_screen","_options","closeOnEscape","_hide","opt","header","ReactDOM","render","task","reject","then","HostNameInput","handleChange","hostName","setState","handleEnterPressed","CONNECTION_TIMEOUT","host","getHostName","connect","_callee3","ignoreQueryString","_context3","_callee2","urlArgs","hostFromQueryString","validated","onOk","_context2","input_host_name_HostNameInput","_onClose","reload","_x3","_callee4","_context4","timeout","client","BraynsClient","ready","subscribe","isReady","api","addClipPlane","addLightAmbient","addLightDirectional","addLightQuad","addLightSphere","addLightSpot","addModel","chunk","clearLights","getAnimationParameters","getApplicationParameters","getCamera","getCameraParams","getClipPlanes","getEnvironmentMap","getInstances","getLights","getLoaders","getModelProperties","getModelTransferFunction","getRenderer","getRendererParams","getScene","getStatistics","getVolumeParameters","imageJpeg","inspect","loadersSchema","modelPropertiesSchema","quit","removeClipPlanes","removeLights","removeModel","requestModelUpload","resetCamera","schema","setAnimationParameters","setApplicationParameters","setCamera","setCameraParams","setEnvironmentMap","setModelProperties","setModelTransferFunction","setRenderer","setRendererParams","setScene","setVolumeParameters","updateClipPlane","updateInstance","updateModel","plane","Scene","request","_callee5","_context5","_callee6","_context6","_callee7","model_param","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","_callee13","_context13","_callee14","_context14","_callee15","_context15","_callee16","range","_context16","_callee17","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","_context21","_callee22","_context22","_callee23","_context23","_callee24","_context24","_callee25","_context25","_callee26","_context26","_callee27","_context27","_callee28","_context28","_callee29","_context29","_callee30","_context30","_callee31","ids","_context31","_callee32","_context32","_callee33","_context33","_callee34","param","_context34","_callee35","_context35","_callee36","endpoint","_context36","_callee37","_context37","_callee38","_context38","_callee39","_context39","_callee40","input0","_context40","_callee41","_context41","_callee42","_context42","_callee43","_context43","_callee44","_context44","_callee45","_context45","_callee46","_context46","_callee47","_context47","_callee48","settings","_context48","_callee49","clip_plane","_context49","_callee50","model_instance","_context50","_callee51","_context51","Model","transformation","applyTransfo","selected","$selected","boundingBox","updateState","scene","find","lookAtBounds","bounds","geometry","addVectors","b","makeQuaternionAsAxisRotation","angle","axis","halfAngle","cos","sin","_axis","z","multiplyQuaternions","vector","_vector","len2","f","plane6to4","point","normal","scalarProduct","rotateWithQuaternion","quaternion","Q","_point","_Q","qx","qy","qz","qw","scale","factor","n","vectorFromPoints","q","_q","q1","q2","q3","q0","_r","r1","r2","v1","v2","_v","z1","_v2","models_models","createModelFromBraynsData","brayns","parent","deleted","getModelsBounds","i","Camera","orientation","applyCamera","distance","Geom","distanceFactor","vectorZ","dist","getState","minY","minZ","maxY","maxZ","centerX","centerY","centerZ","cameraZ","_this$orientation","aa","bb","cc","dd","ab2","ac2","ad2","bc2","bd2","cd2","_this$params4","Renderer","_canvas","ctx","blob","blobIndex","lastRederedBlobIndex","paint","canvas","img","srcW","srcH","dstW","dstH","dstX","dstY","blobToImg","naturalWidth","naturalHeight","drawImage","finish","observe","getContext","URL","createObjectURL","Image","src","decode","onload","debouncer","timer","GesturesHandler","savedTarget","savedPosition","savedOrientation","savedAxis","savedScreenPoint","screenX","screenY","savedTargetDistance","handlePanStart","aspect","getTargetDistance","handlePan","Debouncer","translateCamera","orbitCamera","rotateCamera","oldTranslation","newTranslation","Geometry","setPosition","oldOrientation","angleX","PI","angleY","quaternionX","quaternionY","quaternionXY","newOrientation","positionVector","rotatedPositionVector","newPosition","setPositionAndOrientation","setOrientation","renderer","gestures","scene_scene","Api","loadMeshFromPath","setViewPort","cameraParams","ServiceHost","_args2","rendererParams","pixelAlpha","shadows","softShadows","accumulation","backgroundColor","headLight","maxAccumFrames","samplesPerPixel","subsampling","viewport","service_snapshot","getCanvas","_getCanvas","dataURI","animation_parameters","samples_per_pixel","format","onerror","saveCanvasToFile","_saveCanvasToFile","mimetype","_args3","toBlob","SaveAsFile","_x4","_x2","_res","onheightChange","snapshotView","dialog_snapshot","_show","es","snapshot_container","castDouble","Slider","createRef","handleTapOrMove","percent","clamp","step","castFloat","constrainValue","marginLeft","util","padNumber","fillWith","AnimationControl","handleCurrentChange","handleSpeedChange","speedKey","keyToSpeed","handleNextClick","handleNext2Click","handlePrevClick","handlePrev2Click","speedToKey","speed","nextValue","Util","slider_Slider","SPEEDS","View","ImageStream","canvasRef","onPanStart","getScreenPoint","onPan","updateViewPort","handleScreenShot","SnapshotService","_tap","hitResult","hit","getCloser","moveForward","moveBackward","onfocus","clientWidth","clientHeight","moz-opaque","animation_control_container","Stack","scrollable","classNames","WebsocketConsole","handleMethodChange","handleParamsChange","handleExecute","_this$state","querying","parseJSON","parseError","readOnly","STORAGE_PREFIX","json","TouchableBehavior","tabIndex","PathBar","pieces","lastIndex","piece","view_touchable_Touchable","PathList","onFileClick","onFolderClick","PathSelector","path_bar_PathBar","path_list_PathList","concatPath","endsWith","_onFolderClick","PathService","prefix","_default","path_selector_container","ModelButton","handleToggleSelection","handle","onToggleSelection","handleFocus","handleShow","handleHide","List","refMain","refHead","refBody","refTail","lastFirstItemIndex","lastVisibleItemsCount","lastItemsArray","itemHeight","onScroll","onPanDown","main","onRefresh","onRefreshAsked","head","animateRefresh","itemsCount","firstItemIndex","visibleItemsCount","tailCount","backgroundSize","mapper","minHeight","maxHeight","RX_SEPARATOR","Matcher","textToMatchAgainst","lowerCaseText","modelList","currentlySelectedModel","setSelected","handleFilterInputChange","filterInput","handleFilterChange","handleSortChange","matcher","matches","sortByName","sortByVolume","filteredModels","list_List","model_button_ModelButton","model1","model2","name1","name2","computeVolume","ModelList","handleClip","handleLoadMesh","input_path_default","lookAtWholeScene","container","Range","refCanvas","selection","getX","M","moveTo","setAttribute","_this$props2","clearRect","space","strokeStyle","fillStyle","beginPath","_normalize","tmp","grad","createLinearGradient","addColorStop","restore","lineTo","margin","throttler","timestamp","nextAction","nextArgs","throttleAction","minPlaneIndex","maxPlaneIndex","indexOfFrameToShow","sceneCenter","sceneRadius","resetIndexOfFrameToShow","updatePlanes","Throttler","getDefOfMinPlane","getDefOfMaxPlane","handleBack","handleActivatedChange","handleLatitudeChange","handleLongitudeChange","handleCollageDepthChange","_bounds$min","_bounds$max","X","Y","Z","xx","yy","zz","planes","addPlane","handleMovieClick","queryForPlanes","snapshotOptions","minPlane","maxPlane","planesPerFrame","frame","_planesPerFrame$frame","planeA","planeB","getPlanesPerFrame","lat","lng","thickness","computeThickness","distanceFromCenter","computePlaneDirection","pointOnPlan","range_Range","handleXChange","ClipView","App","stack_Stack","model_model_Model","clip_container","image_stream_ImageStream","websocket_console_WebsocketConsole","AppView","planeIds","splash","getElementById","app_container","start"],"mappings":"+OAAAA,EAAAC,QAAA,CAAkBC,GAAA,CAAMC,IAAA,iBAAsBC,GAAA,CAAOD,IAAA,4BAAiCE,GAAA,CAAOF,IAAA,+FCA7FH,EAAAC,QAAA,CAAkBC,GAAA,CAAMI,OAAA,SAAAC,MAAA,QAAAC,GAAA,MAA4CJ,GAAA,CAAOE,OAAA,UAAAC,MAAA,SAAAC,GAAA,kaCA5DC,EAAA,CACLC,KADK,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,EACAC,GADA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAZ,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACqBX,EADrBM,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GACmC,GAC1CQ,QAAQC,KAAK,WAAYhB,EAAaC,IAChCC,EAAO,IAAIe,UACZC,OAAO,IAAKC,KAAKC,UAAUnB,IAE5BE,EANG,YAAAkB,OAMerB,EANf,OAOHI,EAAoB,CAAEkB,OAAQ,OAAQC,KAAMrB,EAAMsB,YAAa,WAP5Dd,EAAAE,KAAA,EAQca,MAAMtB,EAAKC,GARzB,YAQHC,EARGK,EAAAgB,MASMpC,GATN,CAAAoB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAUgBP,EAASC,OAVzB,eAUGA,EAVHI,EAAAgB,KAAAhB,EAAAC,KAAA,GAAAD,EAAAiB,OAAA,SAYQR,KAAKS,MAAMtB,IAZnB,cAAAI,EAAAC,KAAA,GAAAD,EAAAmB,GAAAnB,EAAA,UAeOoB,MAAMxB,GAfb,aAkBD,CACFyB,KAAM1B,EAAS2B,OACf1B,KAAMD,EAAS4B,YApBZ,yBAAAvB,EAAAwB,SAAAnC,EAAA,mCAAAoC,GAAA,OAAA1C,EAAA2C,MAAAC,KAAA7B,YAAA,YCKA8B,EAAA,CACXC,cAAe,CACXC,QAAS,EACTC,MAAO,EACPC,GAAI,EACJC,WAAY,EACZC,SAAS,EACTC,KAAM,IAGVC,QAVW,SAUHC,EAAmBC,GAA6B,IAC5CC,EAASD,EAATC,KACR,IAAKA,EAAKC,WAfH,cAeuB,OAAOH,EAGrC,OADgBC,EAAOC,KAAKE,OAjBrB,aAiBmCtC,SAEtC,IAAK,SAAU,OAW3B,SAAgBkC,EAAmBC,GAC/B,OAAOtD,OAAO0D,OAAQL,EAAOC,EAAOK,WAZNC,CAAOP,EAAOC,GACpC,QAAS,MAAMlB,MAAK,mBAAAT,OAAoB4B,EAApB,SAI5BK,OArBW,SAqBJD,GACH,MAAO,CAAEJ,KAAI,GAAA5B,OAzBN,aAyBM,UAAqBgC,eCnB3B,IAAAE,EAAA,CACXC,MAAOC,EAAYC,OAAOC,cAC1BC,QAASH,EAAYC,OAAOG,iBAShC,SAASJ,EAAYF,GACjB,MAAO,CACHO,IADG,SACCC,EAAaC,GACb,IAAMC,EAAQV,EAAQW,QAAQH,GAC9B,GAAc,OAAVE,EAAgB,OAAOD,EAC3B,IACI,OAAO7C,KAAKS,MAAMqC,GAEtB,MAAOE,GAIH,OAHApD,QAAQqD,MAAM,YAAA/C,OAAY0C,EAAZ,4DAAA1C,OACM4C,EADN,mCAEdV,EAAQc,WAAWN,GACZC,IAIfM,IAfG,SAeCP,EAAaE,GACbV,EAAQgB,QAAQR,EAAK5C,KAAKC,UAAU6C,KAGxCO,IAnBG,SAmBCT,GACAR,EAAQc,WAAWN,iECxChB,SAASU,EAAWR,EAAYD,GAC3C,IAAMU,SAAWT,EACjB,MAAU,WAANS,GAAmBC,MAAMV,GAGnB,WAANS,EAAuBT,EACpBD,EAHH,GAAA3C,OAAU4C,GCHH,SAASW,EAAYC,GAAuC,IAA/Bb,EAA+BxD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,IAAAA,UAAA,GACvE,cAAeqE,GACX,IAAK,YACD,OAAOb,EACX,IAAK,UACD,OAAOa,EACX,IAAK,SACD,OAAY,GAALA,EACX,IAAK,SACD,IAAMvE,EAAOuE,EAAEC,OAAOC,cACtB,GAAa,SAATzE,GAA4B,QAATA,EAAgB,OAAO,EAC9C,IAAM0E,EAAMC,SAAS3E,GACrB,OAAKqE,MAAMK,IAAqB,IAARA,EAE5B,QACI,OAAO,GCHJ,SAASE,EACpBjB,GACF,IADckB,EACd3E,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GADuC,GAAI4E,EAC3C5E,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GADmE,GAEjE,MAAqB,kBAAVyD,EAA2B,CAACA,GAClCoB,MAAMC,QAAQrB,GACU,qBAAlBmB,EAAsCnB,EAC1CA,EAAMsB,IAAI,SAAAC,GAAI,OAAIf,EAAWe,EAAMJ,KAFRD,EChBtC,IAAMM,EAAW,EAQIC,aASjB,SAAAA,IAA0C,IAA9BC,EAA8BnF,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAlB,EAAGoF,EAAepF,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAH,EAAGd,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAqD,GAAArD,KARlCyD,SAQkC,EAAAzD,KAPlC0D,SAOkC,EAAA1D,KANlC2D,YAMkC,EAAA3D,KALlCF,GAAe,IAAIkD,MAAMI,GAKSpD,KAJlC4D,GAAe,IAAIZ,MAAMI,GAISpD,KAHlC6D,MAAkB,IAAIb,MAAMI,GAGMpD,KAFlC8D,QAAkB,EAGtB9D,KAAKjC,KAAKuF,EAAGC,oDAGZD,EAAWC,GACZvD,KAAK2D,OAAS3D,KAAK+D,IACnB/D,KAAKyD,IAAMH,EACXtD,KAAK0D,IAAMH,EACXvD,KAAKF,GAAKE,KAAKF,GAAGkE,KAAKhE,KAAKyD,IAAK,EAAGL,GACpCpD,KAAK4D,GAAK5D,KAAK4D,GAAGI,KAAKhE,KAAK0D,IAAK,EAAGN,GACpCpD,KAAK6D,MAAQ7D,KAAK6D,MAAMG,KAAKhE,KAAK2D,OAAQ,EAAGP,kCAG1Ca,GACH,OAAQjE,KAAK8D,QAAUG,GAASb,8BAKhCE,EAAWC,GACX,IAAMW,GAAOlE,KAAK8D,QAAUV,EAAW,GAAKA,EAC5CpD,KAAK6D,MAAMK,GAAOlE,KAAK+D,IACvB/D,KAAKF,GAAGoE,GAAOZ,EACftD,KAAK4D,GAAGM,GAAOX,EACfvD,KAAK8D,QAAUI,8BAPP,OAAOC,KAAKJ,0CAUJ,OAAO/D,KAAK+D,IAAM/D,KAAK2D,iCAEjC,OAAO3D,KAAKF,GAAGE,KAAK8D,mCACpB,OAAO9D,KAAK4D,GAAG5D,KAAK8D,wCAEf,OAAO9D,KAAKyD,mCACZ,OAAOzD,KAAK0D,mCAGvB,IAAMU,EAAOpE,KAAK8D,QACZO,EAAOrE,KAAKsE,OAAO,GACnBC,EAAOvE,KAAK6D,MAAMO,GAAQpE,KAAK6D,MAAMQ,GAC3C,OAAIE,GAAQ,EAAU,GACdvE,KAAKF,GAAGsE,GAAQpE,KAAKF,GAAGuE,IAASE,iCAIzC,IAAMH,EAAOpE,KAAK8D,QACZO,EAAOrE,KAAKsE,OAAO,GACnBC,EAAOvE,KAAK6D,MAAMO,GAAQpE,KAAK6D,MAAMQ,GAC3C,OAAIE,GAAQ,EAAU,GACdvE,KAAK4D,GAAGQ,GAAQpE,KAAK4D,GAAGS,IAASE,iCAIzC,IAAMH,EAAOpE,KAAKsE,OAAO,GACnBE,EAAQxE,KAAK6D,MAAMO,GAEnBC,EAAOrE,KAAKsE,OAAO,GACnBG,EAAQzE,KAAK6D,MAAMQ,GAEnBK,EAASF,EAAQC,EAEvB,GAAIC,GAAU,EAAG,OAAO,EAExB,IAAMC,EAAO3E,KAAKsE,OAAO,GAGnBM,EAASH,EAFDzE,KAAK6D,MAAMc,GAIzB,GAAIC,GAAU,EAAG,OAAO,EAExB,IAAMC,EAAK7E,KAAKF,GAAGsE,GACbU,EAAK9E,KAAKF,GAAGuE,GAMnB,QAHiBQ,EAAKC,GAAMJ,GACXI,EAHN9E,KAAKF,GAAG6E,IAGSC,GAECF,iCAI7B,IAAMN,EAAOpE,KAAKsE,OAAO,GACnBE,EAAQxE,KAAK6D,MAAMO,GAEnBC,EAAOrE,KAAKsE,OAAO,GACnBG,EAAQzE,KAAK6D,MAAMQ,GAEnBK,EAASF,EAAQC,EAEvB,GAAIC,GAAU,EAAG,OAAO,EAExB,IAAMC,EAAO3E,KAAKsE,OAAO,GAGnBM,EAASH,EAFDzE,KAAK6D,MAAMc,GAIzB,GAAIC,GAAU,EAAG,OAAO,EAExB,IAAMG,EAAK/E,KAAK4D,GAAGQ,GACbY,EAAKhF,KAAK4D,GAAGS,GAMnB,QAHiBU,EAAKC,GAAMN,GACXM,EAHNhF,KAAK4D,GAAGe,IAGSC,GAECF,WCvHhBO,mDACTC,QAAyB,wDAExBC,GACL,IAAMC,EAAQpF,KAAKkF,QAAQG,QAAQF,GACnC,IAAe,IAAXC,EAAc,OAAOA,EACzB,IAAME,EAAmBtF,KAAKkF,QAAQG,QAAQ,MAC9C,OAA0B,IAAtBC,GACAtF,KAAKkF,QAAQI,GAAoBH,EAC1BG,IAEXtF,KAAKkF,QAAQK,KAAKJ,GACXnF,KAAKkF,QAAQ1G,OAAS,kCAG1B2G,GACH,IAAMC,EAAQpF,KAAKkF,QAAQG,QAAQF,IACpB,IAAXC,IAAcpF,KAAKkF,QAAQE,GAAS,eCuB3BI,aAQjB,SAAAA,EAAYC,EACRC,EACAC,EACAC,GAA4BvI,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAwF,GAAAxF,KAVvByF,aAUsB,EAAAzF,KAT/B6F,YAAsB,GASS7F,KAR/B8F,gBAA0B,EAQK9F,KAP/B+F,eAAkC,GAOH/F,KAN/BkF,QAAkB,IAAID,EAMSjF,KAL/BgG,SAAmB,EAMfhG,KAAKyF,QAAUA,EA0CvB,SAA6CC,IAM7C,SAAkDA,GAA2B,IAAAO,EAAAjG,KACjEyF,EAA4BzF,KAA5ByF,QAASM,EAAmB/F,KAAnB+F,eACXG,EAAU,SAACC,GACb,GAAKF,EAAKG,iBAAiB,SAA3B,CADiC,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA9H,EAAA,IAEjC,QAAA+H,EAAAC,EAAoBN,EAAIO,eAAxBC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAlI,QAAAsI,MAAAR,GAAA,EAAwC,KAA7BS,EAA6BN,EAAA5E,MACpC8D,EAAW,CACPpC,EAAGwD,EAAMC,QACTxD,EAAGuD,EAAME,QACT5B,MAAOa,EAAKf,QAAQ+B,SAASH,EAAM3B,YACnC+B,QAAS,EACTC,QAAS,QACTC,MAAOC,EAAYlB,MATM,MAAAmB,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,MAarCR,EAAeyB,WAAatB,EAC5BT,EAAQgC,iBAAiB,aAAcvB,GAAS,KArB3BwB,KAAK1H,KAAM0F,GAyBpC,SAAkDA,GAA2B,IAAAiC,EAAA3H,KACjEyF,EAA4BzF,KAA5ByF,QAASM,EAAmB/F,KAAnB+F,eACXG,EAAU,SAACC,GACRwB,EAAKvB,iBAAiB,WAC3BuB,EAAK3B,SAAU,EACfN,EAAW,CACPpC,EAAG6C,EAAIY,QACPxD,EAAG4C,EAAIa,QACP5B,MAAO,EACP8B,QAASf,EAAIe,QACbC,QAAS,QACTC,MAAOC,EAAYlB,OAG3BJ,EAAe6B,UAAY1B,EAC3BT,EAAQgC,iBAAiB,YAAavB,GAAS,IAvC1BwB,KAAK1H,KAAM0F,IA3CZgC,KAAK1H,KAAM0F,GAsFnC,SAA2CC,IAQ3C,SAAgDA,GAAyB,IAAAkC,EAAA7H,KAC7DyF,EAA4BzF,KAA5ByF,QAASM,EAAmB/F,KAAnB+F,eACXG,EAAU,SAACC,GACb,GAAK0B,EAAKzB,iBAAiB,SAA3B,CADiC,IAAA0B,GAAA,EAAAC,GAAA,EAAAC,OAAAvJ,EAAA,IAEjC,QAAAwJ,EAAAC,EAAoB/B,EAAIO,eAAxBC,OAAAC,cAAAkB,GAAAG,EAAAC,EAAA3J,QAAAsI,MAAAiB,GAAA,EAAwC,KAA7BhB,EAA6BmB,EAAArG,MACpC+D,EAAS,CACLrC,EAAGwD,EAAMC,QACTxD,EAAGuD,EAAME,QACT5B,MAAOyC,EAAK3C,QAAQ+B,SAASH,EAAM3B,YACnC+B,QAAS,EACTC,QAAS,QACTC,MAAOC,EAAYlB,KAEvB0B,EAAK3C,QAAQiD,OAAOrB,EAAM3B,aAXG,MAAAmC,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,MAcrCjC,EAAeqC,SAAWlC,EAC1BT,EAAQgC,iBAAiB,WAAYvB,GAAS,KAxB3BwB,KAAK1H,KAAM2F,GA4BlC,SAAgDA,GAAyB,IAAA0C,EAAArI,KAC7DyF,EAA4BzF,KAA5ByF,QAASM,EAAmB/F,KAAnB+F,eACXG,EAAU,SAACC,GACRkC,EAAKjC,iBAAiB,WAC3BiC,EAAKrC,SAAU,EACftH,QAAQ4J,IAAI,YACZ3C,EAAS,CACLrC,EAAG6C,EAAIY,QACPxD,EAAG4C,EAAIa,QACP5B,MAAO,EACP8B,QAASf,EAAIe,QACbC,QAAS,QACTC,MAAOC,EAAYlB,OAG3BJ,EAAewC,QAAUrC,EACzBT,EAAQgC,iBAAiB,UAAWvB,GAAS,IA3C1BwB,KAAK1H,KAAM2F,GA+ClC,SAA8CA,GAAyB,IAAA6C,EAAAxI,KAC3DyF,EAA4BzF,KAA5ByF,QAASM,EAAmB/F,KAAnB+F,eACXG,EAAU,SAACC,GACRqC,EAAKxC,SAAYwC,EAAKpC,iBAAiB,WAC5C1H,QAAQ4J,IAAI,aACZ3C,EAAS,CACLrC,EAAG6C,EAAIY,QACPxD,EAAG4C,EAAIa,QACP5B,MAAO,EACP8B,QAASf,EAAIe,QACbC,QAAS,QACTC,MAAOC,EAAYlB,OAG3BJ,EAAe0C,SAAWvC,EAC1BT,EAAQgC,iBAAiB,WAAYvB,GAAS,IA5D7BwB,KAAK1H,KAAM2F,IAzFV+B,KAAK1H,KAAM2F,GA2JjC,SAA6CC,IAM7C,SAAkDA,GAA2B,IAAA8C,EAAA1I,KACjEyF,EAA4BzF,KAA5ByF,QAASM,EAAmB/F,KAAnB+F,eACXG,EAAU,SAACC,GACb,GAAKuC,EAAKtC,iBAAiB,SAA3B,CADiC,IAAAuC,GAAA,EAAAC,GAAA,EAAAC,OAAApK,EAAA,IAEjC,QAAAqK,EAAAC,EAAoB5C,EAAIO,eAAxBC,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAxK,QAAAsI,MAAA8B,GAAA,EAAwC,KAA7B7B,EAA6BgC,EAAAlH,MACpCgE,EAAW,CACPtC,EAAGwD,EAAMC,QACTxD,EAAGuD,EAAME,QACT5B,MAAOsD,EAAKxD,QAAQ+B,SAASH,EAAM3B,YACnC+B,QAAS,EACTC,QAAS,QACTC,MAAOC,EAAYlB,KAEvBuC,EAAKxD,QAAQiD,OAAOrB,EAAM3B,aAXG,MAAAmC,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,YAAAqB,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAqB,EAAA,MAAAC,MAcrC9C,EAAeiD,UAAY9C,EAC3BT,EAAQgC,iBAAiB,YAAavB,GAAS,KAtB1BwB,KAAK1H,KAAM4F,GA0BpC,SAAkDA,GAA2B,IAAAqD,EAAAjJ,KACjEyF,EAA4BzF,KAA5ByF,QAASM,EAAmB/F,KAAnB+F,eACXG,EAAU,SAACC,GACR8C,EAAK7C,iBAAiB,UAC3BR,EAAW,CACPtC,EAAG6C,EAAIY,QACPxD,EAAG4C,EAAIa,QACP5B,MAAO,EACP8B,QAASf,EAAIe,QACbC,QAAS,QACTC,MAAOC,EAAYlB,MAG3BJ,EAAemD,UAAYhD,EAC3BT,EAAQgC,iBAAiB,YAAavB,GAAS,IAvC1BwB,KAAK1H,KAAM4F,IA5JZ8B,KAAK1H,KAAM4F,gEAUdC,GACb,IAAM9B,EAAMI,KAAKJ,MACXoF,EAAQpF,EAAM/D,KAAK8F,gBAEzB,OADA9F,KAAK8F,gBAAkB/B,EACS,IAA5B/D,KAAK6F,YAAYrH,QAAgB2K,EAAQ,KAEzCnJ,KAAK6F,YAAcA,GACZ,GAEJ7F,KAAK6F,cAAgBA,yCAI5B,IAAMJ,EAAUzF,KAAKyF,QADV2D,EAIPpJ,KAAK+F,eADLyB,EAHO4B,EAGP5B,WAAYY,EAHLgB,EAGKhB,SAAUY,EAHfI,EAGeJ,UAAWpB,EAH1BwB,EAG0BxB,UAAWW,EAHrCa,EAGqCb,QAASE,EAH9CW,EAG8CX,SAAUS,EAHxDE,EAGwDF,UAG/D1B,GAAY/B,EAAQ4D,oBAAoB,aAAc7B,GAAY,GAClEY,GAAU3C,EAAQ4D,oBAAoB,WAAYjB,GAAU,GAC5DY,GAAWvD,EAAQ4D,oBAAoB,YAAaL,GAAW,GAC/DpB,GAAWnC,EAAQ4D,oBAAoB,YAAazB,GAAW,GAC/DW,GAAS9C,EAAQ4D,oBAAoB,UAAWd,GAAS,GACzDE,GAAUhD,EAAQ4D,oBAAoB,WAAYZ,GAAU,GAC5DS,GAAWzD,EAAQ4D,oBAAoB,YAAaH,GAAW,YAqK3E,SAAS7B,EAAYlB,GACjB,OAAO,WACHA,EAAImD,iBACJnD,EAAIoD,mBCvPZ,IAAMC,EAAS7C,OAAO,WAElB8C,EAAK,EAwCHC,EAAkB,CAAC,UAAW,QAAS,SAEvCC,aAOF,SAAAA,EAAYC,GAAgCvM,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA2J,GAAA3J,KALpC6J,cAKmC,EAAA7J,KAJnCyF,aAImC,EAAAzF,KAH1B8J,cAG0B,EAAA9J,KAF1B+J,QAE0B,EACvCH,EAAKJ,GAAUxJ,KACfA,KAAK+J,GAAKN,IACVzJ,KAAKyF,QAAUmE,EACf5J,KAAK6J,SAAW,GAChB,IAAIrE,EACAoE,EACA5J,KAAK0F,WAAWsE,KAAKhK,MACrBA,KAAK2F,SAASqE,KAAKhK,MACnBA,KAAK4F,WAAWoE,KAAKhK,OAEzBA,KAAK8J,SAAW,IAAI9G,MAAM,kDAK3B6G,GAAqB,IAAA5D,EAAAjG,KACpBA,KAAK6J,SA8Ob,SAA6BI,GAEzB,IADA,IAAMJ,EAAsB,GAC5BK,EAAA,EAAAC,EAAwB9M,OAAO+M,KAAKH,GAApCC,EAAAC,EAAA3L,OAAA0L,IAAmD,CAA9C,IAAMG,EAASF,EAAAD,GACE,UAAdG,EAYJR,EAASQ,GAAaJ,EAAYI,GAX9BR,EAASS,MAAQ,SAACnE,GACd8D,EAAYK,MAAM,CACdC,OAAQpE,EAAIoE,OACZC,OAAQrE,EAAIqE,OACZC,OAAQtE,EAAIsE,OACZnH,EAAG,EACHC,EAAG,KAOnB,OAAOsG,EA/Paa,CAAoBrN,OAAO0D,OAAOf,KAAK6J,SAAUA,IACjExM,OAAO+M,KAAKpK,KAAK6J,UAAUc,QAAQ,SAAAN,GAC/B,IAA4C,IAAxCX,EAAgBrE,QAAQgF,GAA5B,CAEA,IAAMnE,EAAUD,EAAK4D,SAASQ,GACP,oBAAZnE,GACPD,EAAKR,QAAQgC,iBAAiB4C,EAAWnE,GAAS,8CAQpB,QAAA0E,EAAAzM,UAAAK,OAAjBqM,EAAiB,IAAA7H,MAAA4H,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAjBD,EAAiBC,GAAA3M,UAAA2M,GACtC,QAAAC,EAAA,EAAAC,EAAmBH,EAAnBE,EAAAC,EAAAxM,OAAAuM,IAA2B,CAAtB,IAAME,EAAID,EAAAD,GACX,GAAI/K,KAAK6J,SAASoB,GAAO,OAAO,EAEpC,OAAO,qCAGQ7F,GACf,IAAM0E,EAAW9J,KAAK8J,SAQtB,MAP+B,qBAApBA,EAAS1E,KAChB0E,EAAS1E,GAAS,CACd8F,QAAQ,EACRC,MAAO,IAAI9H,EAAM,EAAG,GACpB+H,KAAM,CAAEC,KAAM,EAAGC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,KAG5C1B,EAAS1E,sCAGDqG,GAEf,KAAIA,EAAMrG,MAAQ,GAAlB,CAFmC,IAI3BK,EAAYzF,KAAZyF,QACFiG,EAAM1L,KAAK2L,WAAWF,EAAMrG,OAClCsG,EAAIR,QAAS,EACbQ,EAAIN,KAAO3F,EAAQmG,wBACnB,IAAMtI,EAAImI,EAAMnI,EAAIoI,EAAIN,KAAKC,KACvB9H,EAAIkI,EAAMlI,EAAImI,EAAIN,KAAKE,IAC7BI,EAAIP,MAAMpN,KAAKuF,EAAGC,GAEdvD,KAAK6J,SAASgC,MACd7L,KAAK6J,SAASgC,KAAKxO,OAAO0D,OAAO0K,EAAO,CAAEnI,IAAGC,IAAGuI,OAAQrG,uCAI/CgG,GAEb,KAAIA,EAAMrG,MAAQ,GAAlB,CAEA,IAAMsG,EAAM1L,KAAK2L,WAAWF,EAAMrG,OAClCsG,EAAIR,QAAS,EACb,IAAM5H,EAAImI,EAAMnI,EAAIoI,EAAIN,KAAKC,KACvB9H,EAAIkI,EAAMlI,EAAImI,EAAIN,KAAKE,IAC7BI,EAAIP,MAAMY,IAAIzI,EAAGC,GAEbvD,KAAK6J,SAASmC,IACdhM,KAAK6J,SAASmC,GAAG3O,OAAO0D,OAAO0K,EAAO,CAAEnI,IAAGC,IAAGuI,OAAQ9L,KAAKyF,WAE/DzF,KAAKiM,aAAaR,EAAOC,GACzB1L,KAAKkM,eAAeT,EAAOC,uCAGZD,GAEf,KAAIA,EAAMrG,MAAQ,GAAlB,CAEA,IAAMsG,EAAM1L,KAAK2L,WAAWF,EAAMrG,OAC5B9B,EAAImI,EAAMnI,EAAIoI,EAAIN,KAAKC,KACvB9H,EAAIkI,EAAMlI,EAAImI,EAAIN,KAAKE,IAC7BI,EAAIP,MAAMY,IAAIzI,EAAGC,GACjBvD,KAAKmM,aAAaV,EAAOC,yCAGRvF,EAAkBuF,GAInC,GAAK1L,KAAK6J,SAASuC,OAAOV,EAAIP,MAAMkB,YAAc,KAAlD,CACA,IAAMlB,EAAQO,EAAIP,MAElB,KADWmB,KAAKC,IAAIpB,EAAM7H,EAAI6H,EAAMqB,QAC3B,IACEF,KAAKC,IAAIpB,EAAM5H,EAAI4H,EAAMsB,QAC3B,KAETtG,EAAIiB,QACJpH,KAAK6J,SAASuC,IAAI/O,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,kDAG3DU,EAAkBuF,GACnC,GAAKA,EAAIR,SACTlL,KAAK0M,iBAAiBvG,EAAKuF,GAC3B1L,KAAK2M,eAAexG,EAAKuF,GACrB1L,KAAK6J,SAAS+C,KAAK,KAAAC,EACcnB,EAAIP,MAA7B7H,EADWuJ,EACXvJ,EAAGC,EADQsJ,EACRtJ,EAAGiJ,EADKK,EACLL,OAAQC,EADHI,EACGJ,OACtBzM,KAAK6J,SAAS+C,IAAIvP,OAAO0D,OAAOoF,EAAK,CAAE7C,IAAGC,IAAGiJ,SAAQC,SAAQX,OAAQ9L,KAAKyF,qDAIzDU,EAAkBuF,GACvC,GAAK1L,KAAK8M,cAAc,UAAW,eAAnC,CAGA,IAAM3B,EAAQO,EAAIP,MACZ4B,EAAKT,KAAKC,IAAIpB,EAAM6B,QAE1B,KADW7B,EAAM8B,OACRF,GAAT,CAEA,IAAMG,EAAKZ,KAAKC,IAAIpB,EAAM7H,EAAI6H,EAAMqB,QACzBrB,EAAM5H,EAAI4H,EAAMsB,OAClBS,IAELlN,KAAK6J,SAASsD,SACdnN,KAAK6J,SAASsD,QAAQ9P,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,WAEhFzF,KAAK6J,SAASuD,aACdpN,KAAK6J,SAASuD,YAAY/P,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,qDAIrEU,EAAkBuF,GACrC,GAAK1L,KAAK8M,cAAc,QAAS,eAAjC,CAGA,IAAM3B,EAAQO,EAAIP,MACZ4B,EAAKT,KAAKC,IAAIpB,EAAM6B,QAE1B,MADY7B,EAAM8B,OACTF,GAAT,CAEA,IAAMG,EAAKZ,KAAKC,IAAIpB,EAAM7H,EAAI6H,EAAMqB,QACzBrB,EAAMsB,OAAStB,EAAM5H,EACvB2J,IAELlN,KAAK6J,SAASwD,OACdrN,KAAK6J,SAASwD,MAAMhQ,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,WAE9EzF,KAAK6J,SAASuD,aACdpN,KAAK6J,SAASuD,YAAY/P,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,qDAIrEU,EAAkBuF,GAIrC,GAHA1L,KAAKsN,mBAAmBnH,EAAKuF,GAC7B1L,KAAKuN,iBAAiBpH,EAAKuF,GAC3B1L,KAAKwN,mBAAmBrH,EAAKuF,GACzB1L,KAAK6J,SAAS4D,MAAO,KAAAC,EACYhC,EAAIP,MAA7B7H,EADaoK,EACbpK,EAAGC,EADUmK,EACVnK,EAAGiJ,EADOkB,EACPlB,OAAQC,EADDiB,EACCjB,OACtBzM,KAAK6J,SAAS4D,MAAMpQ,OAAO0D,OAAOoF,EAAK,CAAE7C,IAAGC,IAAGiJ,SAAQC,SAAQX,OAAQ9L,KAAKyF,uDAIzDU,EAAkBuF,GACzC,GAAK1L,KAAK8M,cAAc,YAAa,iBAArC,CAGA,IAAM3B,EAAQO,EAAIP,MACZ4B,EAAKT,KAAKC,IAAIpB,EAAM6B,QAE1B,KADW7B,EAAM8B,OACRF,GAAT,CAEA,IAAMG,EAAKZ,KAAKC,IAAIpB,EAAM7H,EAAI6H,EAAMqB,QAC9BmB,EAAKxC,EAAM5H,EAAI4H,EAAMsB,OAC3B,KAAIkB,EAAKT,GAEKS,EAAKxC,EAAMkB,YACb,KACRrM,KAAK6J,SAAS+D,WACd5N,KAAK6J,SAAS+D,UAAUvQ,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,WAElFzF,KAAK6J,SAASgE,eACd7N,KAAK6J,SAASgE,cAAcxQ,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,uDAIrEU,EAAkBuF,GACvC,GAAK1L,KAAK8M,cAAc,UAAW,iBAAnC,CAGA,IAAM3B,EAAQO,EAAIP,MACZ4B,EAAKT,KAAKC,IAAIpB,EAAM6B,QAE1B,KADW7B,EAAM8B,OACRF,GAAT,CAEA,IAAMG,EAAKZ,KAAKC,IAAIpB,EAAM7H,EAAI6H,EAAMqB,QAC9BmB,EAAKxC,EAAM5H,EAAI4H,EAAMsB,OAC3B,KAAIkB,EAAKT,GAEKS,EAAKxC,EAAMkB,YACb,KACRrM,KAAK6J,SAASiE,SACd9N,KAAK6J,SAASiE,QAAQzQ,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,WAEhFzF,KAAK6J,SAASgE,eACd7N,KAAK6J,SAASgE,cAAcxQ,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,yDAInEU,EAAkBuF,GACzC,GAAK1L,KAAK8M,cAAc,YAAa,mBAArC,CAGA,IAAM3B,EAAQO,EAAIP,MAGlB,MAFYA,EAAM6B,OACPV,KAAKC,IAAIpB,EAAM8B,SAC1B,CAEA,IAAMC,EAAK/B,EAAMqB,OAASrB,EAAM7H,EAEhC,KAAI4J,EADOZ,KAAKC,IAAIpB,EAAM5H,EAAI4H,EAAMsB,SAGtBS,EAAK/B,EAAMkB,YACb,KACRrM,KAAK6J,SAASkE,WACd/N,KAAK6J,SAASkE,UAAU1Q,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,WAElFzF,KAAK6J,SAASmE,iBACdhO,KAAK6J,SAASmE,gBAAgB3Q,OAAO0D,OAAOoF,EAAK,CAAE7C,EAAG6H,EAAM7H,EAAGC,EAAG4H,EAAM5H,EAAGuI,OAAQ9L,KAAKyF,iDA/N7E,OAAOzF,KAAK+J,YAoOpBkE,EAAA,SAASrE,GACpB,IAAIqE,EAAUrE,EAAKJ,GACnB,OAAIyE,IACJA,EAAU,IAAItE,EAAQC,GACtBA,EAAKJ,GAAUyE,EACRA,cChTUC,aASjB,SAAAA,IAAyC,IAA7BC,EAA6BhQ,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAX,UAAWd,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAkO,GAAAlO,KARlCoO,OAQkC,EAAApO,KAPlCqO,OAOkC,EAAArO,KANlCsO,OAMkC,EAAAtO,KALlCuO,OAKkC,EAAAvO,KAJlCwO,OAIkC,EAAAxO,KAHlCyO,OAGkC,EAAAzO,KAFlC0O,OAEkC,EACrC1O,KAAKoO,EAAI,EACTpO,KAAKqO,EAAI,EACTrO,KAAKsO,EAAI,EACTtO,KAAKuO,EAAI,EACTvO,KAAKwO,EAAI,EACTxO,KAAKyO,EAAI,EACTzO,KAAK0O,EAAI,EAET1O,KAAKT,MAAM4O,uDA8F0B,IAC/BQ,GAD+BxQ,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAApB,WACEsE,OAAOmM,cAC1B,QAAI5O,KAAK6O,UAAUnH,KAAK1H,KAAM2O,OAC1B3O,KAAK8O,SAASpH,KAAK1H,KAAM2O,OACzB3O,KAAK+O,UAAUrH,KAAK1H,KAAM2O,MAC1B3O,KAAKgP,SAAStH,KAAK1H,KAAM2O,yCAW7B,MAAQ,MAAS3O,KAAKoO,EAAM,MAASpO,KAAKqO,EAAM,MAASrO,KAAKsO,0CAO9D,OAAOtO,KAAKiP,YAAc,GAAK,EAAI,sCAQnC,IAAIC,EAAQC,EAAe,IAATnP,KAAKoO,GAAWe,EAAe,IAATnP,KAAKqO,GAAWc,EAAe,IAATnP,KAAKsO,GAInE,OAHItO,KAAK0O,EAAI,IACTQ,GAASC,EAAe,IAATnP,KAAK0O,IAExB,IAAA1P,OAAWkQ,kCAIX,IAAME,EAAW,IAAIlB,EAQrB,OAPAkB,EAAShB,EAAIpO,KAAKoO,EAClBgB,EAASf,EAAIrO,KAAKqO,EAClBe,EAASd,EAAItO,KAAKsO,EAClBc,EAASV,EAAI1O,KAAK0O,EAClBU,EAASb,EAAIvO,KAAKuO,EAClBa,EAASZ,EAAIxO,KAAKwO,EAClBY,EAASX,EAAIzO,KAAKyO,EACXW,oCASP,IACIb,EAAI,EAAIvO,KAAKuO,EACbC,EAAIxO,KAAKwO,EACTC,EAAIzO,KAAKyO,EACTY,GAAU,EAAI/C,KAAKC,IAAI,EAAIkC,EAAI,IAAMD,EACrClL,EAAI+L,GAAU,EAAI/C,KAAKC,IAAIgC,EAAI,EAAI,IAEnCH,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAElBC,EAAI,EACAA,EAAI,GACJH,EAAIiB,EAAQhB,EAAI/K,EAAGgL,EAAI,GAChBC,EAAI,GACXH,EAAI9K,EAAG+K,EAAIgB,EAAQf,EAAI,IAGvBF,EAAI,EAAGC,EAAIgB,EAAQf,EAAIhL,GAEpBiL,EAAI,GACXH,EAAI,EAAGC,EAAI/K,EAAGgL,EAAIe,GACXd,EAAI,GACXH,EAAI9K,EAAG+K,EAAI,EAAGC,EAAIe,IAElBjB,EAAIiB,EAAQhB,EAAI,EAAGC,EAAIhL,GAG3B,IAAMW,EAAQwK,EAAa,GAATY,EAClBrP,KAAKoO,EAAIA,EAAInK,EACbjE,KAAKqO,EAAIA,EAAIpK,EACbjE,KAAKsO,EAAIA,EAAIrK,oCAIb,IAAMmK,EAAIpO,KAAKoO,EACTC,EAAIrO,KAAKqO,EACTC,EAAItO,KAAKsO,EAETgB,EAAMhD,KAAKgD,IAAIlB,EAAGC,EAAGC,GACrBiB,EAAMjD,KAAKiD,IAAInB,EAAGC,EAAGC,GACrBlO,EAAQmP,EAAMD,EAEpBtP,KAAKyO,EAAI,IAAOc,EAAMD,GAElBlP,EAAQ,MACRJ,KAAKuO,EAAI,EACTvO,KAAKwO,EAAI,IAGTxO,KAAKwO,EAAIpO,GAAS,EAAIkM,KAAKC,IAAI,EAAIvM,KAAKyO,EAAI,IAGpCzO,KAAKuO,EAFTgB,IAAQnB,EACJC,GAAKC,EACIkB,IAASnB,EAAIC,GAAKlO,GAElB,EAAIoP,IAASlB,EAAID,GAAKjO,GAG9BmP,IAAQlB,EACJmB,GAAQ,GAAKlB,EAAIF,GAAKhO,GAGtBoP,GAAQ,GAAKpB,EAAIC,GAAKjO,sCAKzBnC,GACd,GAAuB,MAAnBA,EAAKwR,OAAO,GAAY,OAAO,EACnC,IAAIrB,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGI,EAAI,EAE7B,OAAQzQ,EAAKO,QACT,KAAK,EACD4P,EAAIxL,SAAS3E,EAAKwR,OAAO,GAAI,IAAMC,EACnCrB,EAAIzL,SAAS3E,EAAKwR,OAAO,GAAI,IAAMC,EACnCpB,EAAI1L,SAAS3E,EAAKwR,OAAO,GAAI,IAAMC,EACnC,MACJ,KAAK,EACDtB,EAAIxL,SAAS3E,EAAKwR,OAAO,GAAI,IAAMC,EACnCrB,EAAIzL,SAAS3E,EAAKwR,OAAO,GAAI,IAAMC,EACnCpB,EAAI1L,SAAS3E,EAAKwR,OAAO,GAAI,IAAMC,EACnChB,EAAI9L,SAAS3E,EAAKwR,OAAO,GAAI,IAAMC,EACnC,MACJ,KAAK,EACDtB,EAAIxL,SAAS3E,EAAK6C,OAAO,EAAG,GAAI,IAAM6O,EACtCtB,EAAIzL,SAAS3E,EAAK6C,OAAO,EAAG,GAAI,IAAM6O,EACtCrB,EAAI1L,SAAS3E,EAAK6C,OAAO,EAAG,GAAI,IAAM6O,EACtC,MACJ,KAAK,EACDvB,EAAIxL,SAAS3E,EAAK6C,OAAO,EAAG,GAAI,IAAM6O,EACtCtB,EAAIzL,SAAS3E,EAAK6C,OAAO,EAAG,GAAI,IAAM6O,EACtCrB,EAAI1L,SAAS3E,EAAK6C,OAAO,EAAG,GAAI,IAAM6O,EACtCjB,EAAI9L,SAAS3E,EAAK6C,OAAO,EAAG,GAAI,IAAM6O,EAc9C,OATIrN,MAAM8L,IAAM9L,MAAM+L,IAAM/L,MAAMgM,IAAMhM,MAAMoM,GAC1C1O,KAAKoO,EAAIpO,KAAKqO,EAAIrO,KAAKsO,EAAItO,KAAK0O,EAAI,GAEpC1O,KAAKoO,EAAIA,EACTpO,KAAKqO,EAAIA,EACTrO,KAAKsO,EAAIA,EACTtO,KAAK0O,EAAIA,IAGN,mCAOMzQ,GACb,IAAM2R,EAAIC,EAAO1S,KAAKc,GACtB,QAAK2R,IACL5P,KAAKoO,EAAI0B,EAAQlN,SAASgN,EAAE,GAAI,IAAMD,GACtC3P,KAAKqO,EAAIyB,EAAQlN,SAASgN,EAAE,GAAI,IAAMD,GACtC3P,KAAKsO,EAAIwB,EAAQlN,SAASgN,EAAE,GAAI,IAAMD,GACtC3P,KAAK0O,EAAI,GACF,qCAOOzQ,GACd,IAAM2R,EAAIG,EAAQ5S,KAAKc,GACvB,QAAK2R,IACL5P,KAAKoO,EAAI0B,EAAQlN,SAASgN,EAAE,GAAI,IAAMD,GACtC3P,KAAKqO,EAAIyB,EAAQlN,SAASgN,EAAE,GAAI,IAAMD,GACtC3P,KAAKsO,EAAIwB,EAAQlN,SAASgN,EAAE,GAAI,IAAMD,GACtC3P,KAAK0O,EAAIoB,EAAQE,WAAWJ,EAAE,MACvB,oCAOM3R,GACb,IAAM2R,EAAIK,EAAO9S,KAAKc,GACtB,QAAK2R,IACL5P,KAAKuO,EAAIuB,EAAQlN,SAASgN,EAAE,GAAI,IAAMM,GACtClQ,KAAKwO,EAAIsB,EAAQlN,SAASgN,EAAE,GAAI,IAAMO,GACtCnQ,KAAKyO,EAAIqB,EAAQlN,SAASgN,EAAE,GAAI,IAAMO,GACtCnQ,KAAK0O,EAAI,EACT1O,KAAKoQ,WACE,qCAtSIjC,GACX,GAAuB,kBAAZA,EAAuB,OAAO,EACzC,GAA0B,MAAtBA,EAAQsB,OAAO,GAAa,OAAO,EACvC,OAAQtB,EAAQ3P,QACZ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACD,OAAO,EAGf,OAAO,oCAGM2P,GAEb,OADc,IAAID,EAAMC,GACXpP,8CAGAoP,GAEb,OADc,IAAID,EAAMC,GACXc,kDAMId,GAEjB,OADc,IAAID,EAAMC,GACXkC,4CAGNC,EAAeC,GAAiC,IAAlBC,EAAkBrS,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAJ,GAC7CsS,EAAO,EAAID,EACjB,OAAOtC,EAAMwC,QACTF,EAAQD,EAAOnC,EAAIqC,EAAOH,EAAOlC,EACjCoC,EAAQD,EAAOlC,EAAIoC,EAAOH,EAAOjC,EACjCmC,EAAQD,EAAOjC,EAAImC,EAAOH,EAAOhC,EACjCkC,EAAQD,EAAO7B,EAAI+B,EAAOH,EAAO5B,sCAKrC,OAAOR,EAAMyC,OAAO,EAAG,EAAG,sCAI1B,OAAOzC,EAAMyC,OAAO,EAAG,EAAG,kCAWhBC,EAAaC,EAAeC,GACtC,IAAM5B,EAAQ,IAAIhB,EAKlB,OAJAgB,EAAMd,EAAIwC,EACV1B,EAAMb,EAAIwC,EACV3B,EAAMZ,EAAIwC,EACV5B,EAAMR,EAAI,EACHQ,kCAYI0B,EAAaC,EAAeC,EAAcN,GACrD,IAAMtB,EAAQ,IAAIhB,EAKlB,OAJAgB,EAAMd,EAAIwC,EACV1B,EAAMb,EAAIwC,EACV3B,EAAMZ,EAAIwC,EACV5B,EAAMR,EAAI8B,EACHtB,WAyNXM,EAAO,EAAI,EACXE,EAAQ,EAAI,GACZS,EAAQ,EAAI,GACZR,EAAS,EAAI,IACbO,EAAS,EAAI,IAEXL,EAAS,oDACTE,EAAU,wEACVE,EAAS,oDAEf,SAASH,EAAQlO,GACb,OAAIA,EAAQ,EAAU,EAClBA,EAAQ,EAAU,EACfA,EAGX,SAASuN,EAAMvN,GACX,IAAImP,EAAMzE,KAAK0E,MAAMpP,GAAOqP,SAAS,IAErC,OADIF,EAAIvS,OAAS,IAAGuS,EAAM,IAAMA,GACzBA,ECtVI,IAAAG,EAAA,CACXC,SAAUC,EACVrR,MAoPJ,SAAoBkL,GAAmD9M,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAfkT,SAASnS,KAC7D,IAAKoS,EAAOC,IAAItG,GAEZ,YADAvM,QAAQqD,MAAM,uCAAwCkJ,GAG1D,IAAI/L,EAAOmS,SAASnS,KACU,kBAAnBoS,EAAOnR,SACdjB,EAAKsS,UAAUrJ,OAAf,aAAAnJ,OAAmCsS,EAAOnR,UAE9CmR,EAAOnR,QAAU8K,EACjB/L,EAAKsS,UAAUzF,IAAf,aAAA/M,OAAgCsS,EAAOnR,WA7PvCsB,IAgQJ,WAAoD,IAAlCwJ,EAAkC9M,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAnB,UAC7B,OAAOmT,EAAOG,KAAKxG,IAhQnByG,IAAKC,GAAoB,OACzBC,IAAKD,GAAoB,OACzBE,IAAKF,GAAoB,OACzBG,IAAKH,GAAoB,OACzBI,IAAKJ,GAAoB,OACzBK,KAAML,GAAoB,QAC1BM,KAAMN,GAAoB,QAC1BO,IAAKP,GAAoB,OACzBQ,KAAMR,GAAoB,QAC1BS,KAAMT,GAAoB,QAC1BU,MAAOV,GAAoB,SAC3BW,MAAOX,GAAoB,SAC3BY,OA6WJ,WAAiD,IAAjCC,EAAiCrU,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAb,GAChC,GAAkB,KAAdqU,EAAkB,OAY1B,WACI,IAAMf,EAAOH,EAAOG,KAAKH,EAAOnR,SAAW,WACvCoS,EAASd,EAAKgB,QAClB,GAAsB,mBAAXF,EAAsB,OAAOA,EAExC,IAAMb,EAAM,IAAIxD,EAAMuD,EAAKC,KACrBE,EAAM,IAAI1D,EAAMuD,EAAKG,KACrBC,EAAM,IAAI3D,EAAMuD,EAAKI,KACrBC,EAAM,IAAI5D,EAAMuD,EAAKK,KACrBY,EAAUxE,EAAMyE,IAClBzE,EAAMyE,IAAIjB,EAAKE,GACf1D,EAAMyE,IAAId,EAAKC,IAGnB,OADAL,EAAKgB,SAAWC,EAAQrC,gBACjBoB,EAAKgB,QA1BiBG,GAE7B,IAAMnB,EAAOH,EAAOG,KAAKH,EAAOnR,SAAW,WACrC0S,EAAO,WAAA7T,OAAcwT,GACvBD,EAASd,EAAKoB,GAClB,GAAsB,mBAAXN,EAAsB,OAAOA,EAExC,IAAMrD,EAAQ,IAAIhB,EAAMuD,EAAKe,IAE7B,OADAf,EAAKoB,IAAY3D,EAAMmB,gBAChBoB,EAAKoB,IAtXZC,YA8YJ,SAAqBC,GACjB,IAAMC,EAAO3B,SAAS4B,gBACtBD,EAAKxB,UAAUrJ,OAAf,uBACA6K,EAAKxB,UAAUrJ,OAAf,wBACA6K,EAAKxB,UAAUrJ,OAAf,uBACA6K,EAAKxB,UAAUzF,IAAf,iBAAA/M,OAAoC+T,KAlZpCG,UAAWC,IA0DTC,EAAQ,IAAIlF,EAEZmF,EAAoB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,MACrE/B,EAAkB,CACpBC,IAAK,GACLE,KAAM,GACNtR,QAAS,MAGb,SAASiR,EAAckC,EAAmBC,GACtC,IAAMC,EAAQL,GAA0BI,GACxCjC,EAAOG,KAAK6B,GAAaE,EAEzB,IAAIrF,EA8DR,SAAuBmF,EAAmBE,GACtC,IAAIrF,EAAU,kBAAoBmF,EAAY,MAC9CD,EAAkB1I,QAAQ,SAAS6H,GAC/B,IAAMiB,EAAID,EAAK,KAAAxU,OAAMwT,IACrBrE,GAAO,aAAAnP,OAAiBwT,EAAjB,MAAAxT,OAA+ByU,EAA/B,OAFmC,IAAApN,GAAA,EAAAC,GAAA,EAAAC,OAAA9H,EAAA,IAG1C,QAAA+H,EAAAC,EAAgBiN,EAAhB/M,OAAAC,cAAAP,GAAAG,EAAAC,EAAAlI,QAAAsI,MAAAR,GAAA,EAA4B,KAAjB7I,EAAiBgJ,EAAA5E,MACxBuM,GAAO,aAAAnP,OAAiBwT,EAAjB,KAAAxT,OAA8BxB,EAA9B,MAAAwB,OAAoCyU,GAApCzU,OAAwCxB,GAAxCwB,OAA4CxB,EAA5C,QAJ+B,MAAA8J,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,GAM1C6M,EAAM7T,MAAMkU,GACZ,IAAME,EAAMP,EAAM/C,gBAAkBmD,EAAMnB,MAAQmB,EAAMlB,MACxDnE,GAAO,aAAAnP,OAAiBwT,EAAjB,MAAAxT,OAA+B2U,EAA/B,OARmC,IAAA7L,GAAA,EAAAC,GAAA,EAAAC,OAAAvJ,EAAA,IAS1C,QAAAwJ,EAAAC,EAAgBwL,EAAhB/M,OAAAC,cAAAkB,GAAAG,EAAAC,EAAA3J,QAAAsI,MAAAiB,GAAA,EAA4B,KAAjBtK,EAAiByK,EAAArG,MACxBuM,GAAO,aAAAnP,OAAiBwT,EAAjB,KAAAxT,OAA8BxB,EAA9B,MAAAwB,OAAoC2U,GAApC3U,OAA0CxB,GAA1CwB,OAA8CxB,EAA9C,QAV+B,MAAA8J,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,MAa9CwL,EAAMlB,MAAQY,GAAUM,EAAMlB,OAC9BkB,EAAMnB,MAAQa,GAAUM,EAAMnB,OAC9BlE,GAAO,kBAAAnP,OAAsBwU,EAAMlB,MAA5B,OACPnE,GAAO,kBAAAnP,OAAsBwU,EAAMnB,MAA5B,OAlB8C,IAAA1J,GAAA,EAAAC,GAAA,EAAAC,OAAApK,EAAA,IAmBrD,QAAAqK,EAAAC,EAAqB2K,EAArB/M,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAxK,QAAAsI,MAAA8B,GAAA,EAAiC,KAAtBiL,EAAsB9K,EAAAlH,MAC7BuM,GAAO,iBAAAnP,OAAqB4U,EAArB,MAAA5U,OAAgCwU,EAAMlB,OAAtCtT,OAA8C4U,GAA9C5U,OAAuD4U,EAAvD,OACPzF,GAAO,iBAAAnP,OAAqB4U,EAArB,MAAA5U,OAAgCwU,EAAMnB,OAAtCrT,OAA8C4U,GAA9C5U,OAAuD4U,EAAvD,QArB0C,MAAAtM,GAAAsB,GAAA,EAAAC,EAAAvB,EAAA,YAAAqB,GAAA,MAAAI,EAAAxB,QAAAwB,EAAAxB,SAAA,WAAAqB,EAAA,MAAAC,GAwBrD,OADAsF,GAAW,MArFG0F,CAAcP,EAAWE,GACvCrF,GAyFJ,SAAwBmF,EAAmBE,GACvC,IAAIrF,EAAU,GA+Bd,OA9BAkF,EAAkB1I,QAAQ,SAAS6H,GAC/BrE,GAAW,kBAAoBmF,EAAY,UAAYd,EACjD,wBAA0BgB,EAAK,KAAAxU,OAAMwT,IAAe,OAC1DrE,GAAW,kBAAoBmF,EAAY,WAAad,EAClD,aAAegB,EAAK,KAAAxU,OAAMwT,IAAe,OAC/CrE,GAAW,kBAAoBmF,EAAY,WAAad,EAClD,wBAA0BgB,EAAK,KAAAxU,OAAMwT,IAAe,OAC1DrE,GAAW,kBAAAnP,OAAkBsU,EAAlB,YAAAtU,OAAsCwT,EAAtC,SACL,wBAA0BgB,EAAK,KAAAxU,OAAMwT,IAAe,OAC1DrE,GAAW,kBAAoBmF,EAAY,WAAad,EAAY,gDAE9DgB,EAAK,KAAAxU,OAAMwT,IAAe,oBAChCrE,GAAW,kBAAoBmF,EAAY,WAAad,EAAY,gDAE9DgB,EAAK,KAAAxU,OAAMwT,IAAe,oBAChCrE,GAAW,kBAAoBmF,EAAY,WAAad,EAAY,gDAE9DgB,EAAK,KAAAxU,OAAMwT,IAAe,oBAChCrE,GAAW,kBAAoBmF,EAAY,WAAad,EAAY,gDAE9DgB,EAAK,KAAAxU,OAAMwT,IAAe,oBAE3BlQ,MAAMM,SAAS4P,MACpBrE,GAAW,kBAAoBmF,EAAY,iBAAmBd,EACxD,YACAgB,EAAK,KAAAxU,OAAMwT,IAAe,OAChCrE,GAAW,kBAAoBmF,EAAY,mBAAqBd,EAC1D,cACAgB,EAAK,KAAAxU,OAAMwT,IAAe,UAE7BrE,EAzHI2F,CAAeR,EAAWE,GACrCrF,GAwIJ,SAAuBmF,EAAmBE,GACtCJ,EAAM7T,MAAMiU,EAAM3B,KAClB,IACIkC,EADcX,EAAMnE,YACS,GAC3B+E,GAASR,EAAMlB,MAAO,GACtB0B,GAASR,EAAMnB,MAAO,GACxBlE,EAAU,GAUd,OATsB9Q,OAAO+M,KAAK6J,GACpBtJ,QAAQ,SAASuJ,GAC3B,IAAMC,EAAYvR,SAASsR,EAAc,IACzCD,EAAWC,GAAcvJ,QAAQ,SAAAM,GAC7BkD,GAAO,kBAAAnP,OAAsBsU,EAAtB,cAAAtU,OAA4CiM,EAA5C,wBAAAjM,OACDmV,EADC,OAAAnV,OACc,EAAImV,EADlB,OAAAnV,OACiC+U,EADjC,aAKR5F,EAxJIiG,CAAcd,EAAWE,GACpCrF,GAYJ,SAAkBmF,EAAmBE,GAEjC,IADA,IAAIrF,EAAU,GADkCkG,EAAA,SAEvCC,GACLjB,EAAkB1I,QAAQ,SAAS6H,GAO/B,IANA,IA6QQvU,EAAcsW,EA7QhBC,EAAW,KAAAxV,OAAQwT,GACnBiC,EAAW,KAAAzV,OAAQwT,GACnBkC,EAA2BlB,EAAMgB,GACjCG,EAA2BnB,EAAMiB,GACjCG,EAAU,UAAYpC,EACtBqC,EAAU,UAAYrC,EACnBsC,EAAW,EAAGA,GAAYR,EAAOQ,IAAY,CAIlD,IAHA,IAAMC,EAAW,GACXC,EAAY,GACZC,EAAW,GACR7P,EAAQ,EAAGA,GAASkP,EAAOlP,IAChC6P,EAAS1P,KAAKuP,IAAa1P,EAAQwP,EAAU,KAC7CI,EAAUzP,KAAKuP,IAAa1P,EAAQwP,EAAU,KAC9CG,EAASxP,KAAKuP,IAAa1P,EAAQyP,EAAU,KACzCzP,IAAUkP,IACVW,EAAS1P,KAAK0P,EAASC,MAAQ,WAC/BH,EAASxP,KAAKwP,EAASG,MAAQL,IAGvC1G,GAAW,kBAAoBmF,EAAY,IACrC2B,EAASE,KAAK,OACd,aAAeT,EAAmB,OACxCvG,GAAW,kBAAoBmF,EAAY,KAuPvCrV,EAtPagX,EAASE,KAAK,OAsPbZ,EAtPqB,UAuP5CtW,EAAK6C,OAAO,EAAG7C,EAAKO,OAAS+V,EAAK/V,SAtPvB,aAAekW,EAAmB,OACxCvG,GAAW,kBAAoBmF,EAAY,IACrCyB,EAASI,KAAK,OACd,aAAeR,EAAmB,OACxCxG,GAAW,kBAAoBmF,EAAY,IACrC0B,EAAUG,KAAK,OACf,2BACcT,EAAmB,OACvCvG,GAAW,kBAAoBmF,EAAY,IACrC0B,EAAUG,KAAK,OACf,+BACgBT,EAAmB,WArC5CJ,EAAQ,EAAGA,GAAS,GAAIA,IAASD,EAAjCC,GAyCT,OAAOnG,EAvDIiH,CAAS9B,EAAWE,GAE/B,IAAI6B,EAAe/D,EAAOC,IAAI+B,GACzB+B,IACDA,EAAehE,SAASiE,cAAc,SACtCjE,SAASkE,qBAAqB,QAAQ,GAAGC,YAAYH,GACrD/D,EAAOC,IAAI+B,GAAa+B,GAG5BA,EAAaI,YAActH,EAiD/B,IAAMuF,EAAa,iBAgEnB,IAAMO,EAA0C,CAC5CyB,EAAK,CAAC,QACNC,EAAK,CAAC,SAAU,QAChBC,EAAK,CAAC,OACNC,EAAK,CAAC,YACNC,EAAK,CAAC,gBAAiB,gBAAiB,eACxCC,EAAK,CAAC,aACNC,GAAM,CAAC,aACPC,GAAM,CAAC,aACPC,GAAM,CAAC,mBACPC,GAAM,CAAC,OACPC,GAAM,CAAC,WAsCX,SAASC,GAAoB7C,GACzB,IAAI8C,EAA4B,kBAAd9C,EAAM9B,IAClB6E,EAA4B,kBAAd/C,EAAM5B,IACpB4E,EAA4B,kBAAdhD,EAAM3B,IACtB4E,EAA4B,kBAAdjD,EAAM1B,IAExB,KAAIwE,GAAQC,GAAQC,GAAQC,GAA5B,CAEA,IAAKH,IAASC,IAASC,IAASC,EAK5B,OAJAjD,EAAM9B,IAAM,UACZ8B,EAAM5B,IAAM,UACZ4B,EAAM3B,IAAM,eACZ2B,EAAM1B,IAAM,QA4EpB,IAA2B5C,GAzEnBoH,GAASC,GAASC,GAASC,IAC3BjD,EAAM1B,KAwEa5C,EAxEWsE,EAAM9B,IAyExC0B,EAAM7T,MAAM2P,GACZkE,EAAMsD,UACNtD,EAAM3E,EAAInC,KAAKgD,IAAI,EAAG8D,EAAM3E,EAAI,IAChC2E,EAAMhD,UACCgD,EAAMrU,aA5ET0X,GAAO,GAENH,GAASC,GAASC,IAAQC,IAC3BjD,EAAM9B,IAmDd,SAA0BxC,GAKtB,OAJAkE,EAAM7T,MAAM2P,GACZkE,EAAMsD,UACNtD,EAAM3E,EAAInC,KAAKiD,IAAI,EAAG6D,EAAM3E,EAAI,KAChC2E,EAAMhD,UACCgD,EAAMrU,YAxDG4X,CAAiBnD,EAAM1B,KACnC2E,GAAO,GAEX,IAAMG,EAAS,IAAI1I,EAAMsF,EAAM9B,KACzBmF,EAAKD,EAAOxI,EACZ0I,EAAKF,EAAOvI,EACZ0I,EAAKH,EAAOtI,EACZ0I,EAAS,IAAI9I,EAAMsF,EAAM1B,KACzBmF,EAAKD,EAAO5I,EACZ8I,EAAKF,EAAO3I,EACZ8I,EAAKH,EAAO1I,EACZgC,EAASpC,EAAMyC,QAAQ,EAAIkG,EAAKI,GAAM,GAAI,EAAIH,EAAKI,GAAM,GAAI,EAAIH,EAAKI,GAAM,GAC5E5G,EAASrC,EAAMyC,QAAQkG,EAAK,EAAII,GAAM,GAAIH,EAAK,EAAII,GAAM,GAAIH,EAAK,EAAII,GAAM,GAClF3D,EAAM5B,IAAMtB,EAAOvR,YACnByU,EAAM3B,IAAMtB,EAAOxR,aAGvB,SAASoU,GAA0BK,GAsB/B,MArBqB,qBAAVA,IAAuBA,EAAQ,IAE1C6C,GAAoB7C,GAEK,kBAAdA,EAAMzB,MAAkByB,EAAMzB,IAAM,WACrB,kBAAfyB,EAAMxB,OAAmBwB,EAAMxB,KAAOoF,GAAK5D,EAAMzB,MAClC,kBAAfyB,EAAMvB,OAAmBuB,EAAMvB,KAAOoF,GAAM7D,EAAMzB,MACpC,kBAAdyB,EAAMtB,MAAkBsB,EAAMtB,IAmD7C,SAAmBhD,GACfkE,EAAM7T,MAAM2P,GACZkE,EAAMsD,UACNtD,EAAM7E,EAAI6E,EAAM7E,EAAI,GAChB6E,EAAM7E,EAAI,GAAG6E,EAAM7E,IAEvB,OADA6E,EAAMhD,UACCgD,EAAMrU,YAzDkCuY,CAAU9D,EAAMzB,MACrC,kBAAfyB,EAAMrB,OAAmBqB,EAAMrB,KAAOiF,GAAK5D,EAAMtB,MAClC,kBAAfsB,EAAMpB,OAAmBoB,EAAMpB,KAAOiF,GAAM7D,EAAMtB,MAElC,kBAAhBsB,EAAMlB,QAAoBkB,EAAMlB,MAAQ,QACxB,kBAAhBkB,EAAMnB,QAAoBmB,EAAMnB,MAAQ,QAEnDgB,EAAkB1I,QAAQ,SAASM,GAC/B,IAAMsM,EAAa/D,EAAK,KAAAxU,OAAMiM,KAAW,OACzCmI,EAAM7T,MAAMgY,GACZ,IAAItI,EAAYmE,EAAMnE,YACtBuE,EAAK,KAAAxU,OAAMiM,IAAUgE,EAAY,GAAKuE,EAAMlB,MAAQkB,EAAMnB,QAGvDmB,EAGX,SAAS4D,GAAKlI,GAMV,OAJAkE,EAAM7T,MAAM2P,GACZkE,EAAMsD,UACNtD,EAAM3E,GAAK,IACX2E,EAAMhD,UACCgD,EAAMrU,YAWjB,SAASsY,GAAMnI,GAMX,OAJAkE,EAAM7T,MAAM2P,GACZkE,EAAMsD,UACNtD,EAAM3E,EAHQ,GAGM,GAAgB2E,EAAM3E,EAC1C2E,EAAMhD,UACCgD,EAAMrU,YAwBjB,SAASiV,GAAS9E,EAAesB,GAC7B,OAAItB,EAAM1Q,OAAS,EAAU0Q,EAAQsB,EAC9BtB,EAAQsB,EAAQA,EAqC3B,SAASmB,GAAoBa,GACzB,OAAO,kBAAMlB,EAAOG,KAAKH,EAAOnR,SAAW,WAAWqS,IAW1D,SAASU,GAAUsE,GAEf,OADc,IAAItJ,EAAMsJ,GACXzY,YAGjBqS,EAAc,UAAW,CAAEW,IAAK,YC/ahC,IAAM0F,GAAiB,uBCqBFC,cAOjB,SAAAA,EAAYC,GAActa,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA0X,GAAA1X,KAN1B4X,cAMyB,EAAA5X,KALzB6X,UAAoB,EAKK7X,KAJzBkP,MAAgB,OAISlP,KAHzB8X,QAAkB,EAGO9X,KAFzB+X,WAEyB,EACrB/X,KAAKyF,QAAUkS,EAAKlS,QACpBzF,KAAKgY,QAAUzV,EAAYoV,EAAKK,SAAS,GACzChY,KAAKkP,MAAQ9M,EAAWuV,EAAKzI,MAAO,IACpClP,KAAK+X,MD3BE,SAAqBnW,GAAiE,IAArDD,EAAqDxD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAA3BsZ,GACtE,MAAqB,oBAAV7V,EAA6BA,EACjCD,ECyBUsW,CAAaN,EAAKI,0DAI/B,GAAK/X,KAAKgY,QAAV,CAEA,IAAM9R,EAAUlG,KAAK+X,MACE,oBAAZ7R,GACPA,qCAIQ,OAAOlG,KAAK6X,uBAChBjW,GAAkB5B,KAAK6X,SAAWjW,kCAE9B,OAAO5B,KAAK4X,uBAChBnS,GACR,IAAMyS,EAAOlY,KACU,qBAAZyF,GACXkE,EAAQlE,GAAS0S,GAAG,CAChBC,QADgB,SACRjS,GACJ,GAAK+R,EAAKF,QAAV,CAEA,IAAMtW,EAAMyE,EAAIzE,IACJ,MAARA,GAAuB,UAARA,IACfyE,EAAImD,iBACJnD,EAAIoD,kBACJ2O,EAAKG,UAIbxM,KAZgB,SAYX1F,GACI+R,EAAKF,SAGd5L,IAhBgB,SAgBZjG,GACA,GAAK+R,EAAKF,QAAV,CACAE,EAAKG,OAEL,IAAMjN,EAAO3F,EAAQmG,wBACf4H,EAAQnS,OAAOiX,iBAAiB7S,GAChC8S,EA0BtB,SAAsBnN,GAClB,IAAMoN,EAAMnH,SAASiE,cAAc,OAOnC,OANAkD,EAAIC,UAAY,yBAChBD,EAAIhF,MAAMnI,KAAV,GAAArM,OAAoBoM,EAAKC,KAAzB,MACAmN,EAAIhF,MAAMlI,IAAV,GAAAtM,OAAmBoM,EAAKE,IAAxB,MACAkN,EAAIhF,MAAMjI,MAAV,GAAAvM,OAAqBoM,EAAKG,MAA1B,MACAiN,EAAIhF,MAAMhI,OAAV,GAAAxM,OAAsBoM,EAAKI,OAA3B,MACA6F,SAASnS,KAAKsW,YAAYgD,GACnBA,EAlCoBE,CAAatN,GAC5BmN,EAAO/E,MAAMmF,aAAenF,EAAMoF,iBAAiB,iBACnD,IAAMtV,EAAI6C,EAAI7C,GAAK,EACbC,EAAI4C,EAAI5C,GAAK,EACbsV,EAAIvM,KAAKiD,IAAIjM,EAAG8H,EAAKG,MAAQjI,GAC7BwV,EAAIxM,KAAKiD,IAAIhM,EAAG6H,EAAKI,OAASjI,GAC9BwV,EAASzM,KAAK0M,KAAK,IAAM1M,KAAK2M,KAAKJ,EAAIA,EAAIC,EAAIA,IAC/CI,EAAS7H,SAASiE,cAAc,OACtCiD,EAAO/C,YAAY0D,GACnBA,EAAO1F,MAAMnI,KAAb,GAAArM,OAAuBsE,EAAIyV,EAA3B,MACAG,EAAO1F,MAAMlI,IAAb,GAAAtM,OAAsBuE,EAAIwV,EAA1B,MACAG,EAAO1F,MAAMjI,MAAb,GAAAvM,OAAwB,EAAI+Z,EAA5B,MACAG,EAAO1F,MAAMhI,OAAb,GAAAxM,OAAyB,EAAI+Z,EAA7B,MACIb,EAAKhJ,MAAM1Q,OAAS,EACpB0a,EAAO1F,MAAM2F,WAAajB,EAAKhJ,MAE/BgK,EAAO1F,MAAM2F,WAAaC,EAAM7G,SAAW,OAAS,OAExDlR,OAAOgY,WAAW,kBAAMH,EAAOT,UAAY,SAC3CpX,OAAOgY,WAAW,kBAAMhI,SAASnS,KAAKoa,YAAYf,IAAS,+BC5F5D,SAASgB,GAAY/W,GAAkC,IAA1Bb,EAA0BxD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAX,EACjDqb,EAASlN,KAAK0E,MAAM,GAAKrP,GAE/B,cAAea,GACX,IAAK,UACD,OAAOA,EAAI,EAAI,EACnB,IAAK,SACD,OAAO8J,KAAK0E,MAAM,GAAKxO,GAC3B,IAAK,SACD,IAAMvE,EAAOuE,EAAEC,OAAOC,cACtB,GAAIzE,EAAK4C,WAAW,MAAO,CACvB,IAAM2W,EAAO5U,SAAS3E,EAAK6C,OAAO,GAAI,IACtC,OAAOwB,MAAMkV,GAAQgC,EAAShC,EAElC,GAAIvZ,EAAK4C,WAAW,MAAO,CACvB,IAAM2W,EAAO5U,SAAS3E,EAAK6C,OAAO,GAAI,GACtC,OAAOwB,MAAMkV,GAAQgC,EAAShC,EAElC,GAAIvZ,EAAK4C,WAAW,MAAO,CACvB,IAAM2W,EAAO5U,SAAS3E,EAAK6C,OAAO,GAAI,GACtC,OAAOwB,MAAMkV,GAAQgC,EAAShC,EAElC,IAAM7U,EAAMqN,WAAW/R,GACvB,OAAIqE,MAAMK,GAAa6W,EAChBlN,KAAK0E,MAAM,GAAKrO,GAC3B,QACI,OAAO6W,GCxBnB,IAAMC,GAAc,gCAEL,SAASC,GAASlX,GAAuC,IAA/Bb,EAA+BxD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAR,OAC5D,GAAiB,kBAANqE,EAAgB,SAAAxD,OAAUwD,EAAV,MAC3B,GAAiB,kBAANA,EAAgB,OAAOb,EAClC,IAAM1D,EAAO,GAAAe,OAAGwD,GAAIC,OAAOC,cAC3B,GAAa,SAATzE,GAA4B,YAATA,EAAoB,OAAOA,EAClD,GAAIA,EAAK4C,WAAW,SAAU,OAAO5C,EACrC,IAAM2R,EAAI6J,GAAYtc,KAAKc,GAC3B,IAAK2R,EAAG,OAAOjO,EACf,IAAMgY,EAAS3J,WAAWJ,EAAE,IAC5B,GAAItN,MAAMqX,IAAsB,IAAXA,EAAc,MAAO,IAC1C,IAAMnZ,EAAOoP,EAAE,GAAGpR,OAAS,EAAI,KAAOoR,EAAE,GACxC,SAAA5Q,OAAU2a,GAAV3a,OAAmBwB,GC0BvB,SAASoZ,GAAKC,GACV,MAAO,CAAC,OAAQ,CAAEA,IAAGC,OAAQ,OAAQ9V,KAAM,IAyQ/C,IArQO,IAAM+V,GAA8B,CACvCC,QAASJ,GAAK,+iBACdK,IAAKL,GAAK,wWACVM,OAAQN,GAAK,qRACb7c,OAAQ6c,GAAK,mFACbO,OAAQP,GACJ,sQAEJQ,MAAOR,GAAK,0WACZ5c,MAAO4c,GAAK,0KACZla,KAAMka,GAAK,gGACXS,KAAMT,GAAK,wKACXU,QAASV,GAAK,wdACdW,IAAKX,GAAK,qhBACVY,OAAQZ,GACJ,uGACJa,UAAWb,GAAK,kKAChB/N,KAAM+N,GAAK,wBACXc,cAAed,GAAK,2CACpBe,KAAMf,GACF,4LAEJgB,OAAQhB,GAAK,4KACbiB,OAAUjB,GAAK,4DACfkB,KAAMlB,GAAK,oHACXmB,UAAW,CAAC,IAAK,CACbjB,OAAQ,QAER,CACI,CAAC,OAAQ,CACL9V,KAAM,OACN6V,EAAG,2BAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,0BAEP,CAAC,SAAU,CACP7V,KAAM,UACNgX,EAAG,OAIfC,UAAW,CAAC,IAAK,CACbnB,OAAQ,QAER,CACI,CAAC,OAAQ,CACL9V,KAAM,OACN6V,EAAG,2BAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,wBAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,wBAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,yBAIfqB,UAAW,CAAC,IAAK,CACbpB,OAAQ,QAER,CACI,CAAC,OAAQ,CACL9V,KAAM,OACN6V,EAAG,2BAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,wBAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,wBAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,yBAIfsB,UAAW,CAAC,IAAK,CACbrB,OAAQ,QAER,CACI,CAAC,OAAQ,CACL9V,KAAM,OACN6V,EAAG,0BAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,0BAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,4BAIfuB,UAAW,CAAC,IAAK,CACbtB,OAAQ,QAER,CACI,CAAC,OAAQ,CACL9V,KAAM,OACN6V,EAAG,0BAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,0BAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,wBAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,wBAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,uBAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,wBAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,yBAEP,CAAC,OAAQ,CACL7V,KAAM,OACN6V,EAAG,yBAEP,CAAC,OAAQ,CACL7V,KAAM,UACN6V,EAAG,0BAKfwB,OAAQzB,GAAK,uIACb0B,KAAM1B,GAAK,+LACX2B,sBAAuB3B,GAAK,8GAC5B4B,uBAAwB5B,GAAK,8GAC7B6B,oBAAqB7B,GAAK,8GAC1B8B,qBAAsB9B,GAAK,gHAC3B+B,cAAe/B,GAAK,2LACpBgC,gBAAiBhC,GAAK,4DACtBiC,sBAAuBjC,GAAK,yFAC5BkC,oBAAqBlC,GAAK,gIAC1BmC,oBAAqBnC,GAAK,2GAC1BoC,qBAAsBpC,GAAK,+HAC3BqC,gBAAiBrC,GAAK,oGACtBsC,mBAAoBtC,GAChB,0HAEJuC,WAAYvC,GAAK,qHACjBwC,KAAMxC,GACF,imBAEJyC,IAAKzC,GACD,yRAEJ0C,KAAM1C,GACF,2MAEJ2C,MAAO3C,GAAK,gJACZ4C,KAAM5C,GACF,obAEJ6C,KAAM7C,GAAK,oDACX8C,MAAO9C,GAAK,4OACZ+C,OAAQ/C,GAAK,+DACbgD,YAAahD,GAAK,iHAClBjb,KAAMib,GAAK,0SACXvO,KAAM,CAAC,OAAQ,CAAErH,KAAM,EAAG6V,EAAG,wDAC7BgD,cAAejD,GAAK,2CACpBkD,KAAMlD,GAAK,saACXmD,SAAUnD,GAAK,mKACfoD,OAAQpD,GACJ,+JAEJqD,KAAMrD,GACF,iKAEJ1W,IAAK0W,GAAK,2MACVsD,YAAatD,GAAK,mFAClBuD,KAAMvD,GAAK,mEACXwD,MAAOxD,GAAK,sBACZyD,UAAWzD,GAAK,mLAChB0D,cAAe1D,GAAK,gJACpB2D,KAAM3D,GAAK,8OACX4D,MAAO5D,GAAK,0OACZ3c,GAAI2c,GAAK,oDACT6D,KAAM,CAAC,OAAQ,CAAEzZ,KAAM,EAAG6V,EAAG,4TAC7B6D,MAAO9D,GAAK,2CACZ+D,KAAM/D,GAAK,6BACXgE,KAAMhE,GAAK,qHACXiE,KAAMjE,GAAK,4CACXkE,SAAUlE,GAAK,4MACfmE,aAAcnE,GAAK,uKACnBoE,MAAO,CAAC,OAAQ,CACZha,KAAM,EACN6V,EAAG,oLAEPoE,SAAUrE,GAAK,oLACfsE,KAAMtE,GAAK,kHACXuE,QAASvE,GAAK,oLACdwE,MAAO,CAAC,OAAQ,CAAEpa,KAAM,EAAG6V,EAAG,yDAC9BwE,eAAgBzE,GAAK,2CACrB0E,IAAK1E,GAAK,oaACV2E,OAAQ3E,GAAK,uOACb4E,OAAQ5E,GAAK,uJACb6E,QAAS7E,GAAK,uJACd8E,SAAU9E,GAAK,iIACf+E,MAAO/E,GAAK,4VACZgF,KAAMhF,GAAK,gPACXiF,YAAajF,GAAK,4CAClBkF,aAAclF,GAAK,oDACnBmF,YAAanF,GAAK,iDAClBoF,aAAcpF,GAAK,oDACnBqF,QAASrF,GAAK,uhBACdsF,cAAetF,GAAK,4YACpBuF,iBAAkBvF,GAAK,mGACvBwF,mBAAoBxF,GAAK,oGACzByF,KAAMzF,GAAK,6EACX0F,KAAM1F,GAAK,kEACX2F,OAAU3F,GAAK,yKACf4F,WAAY5F,GAAK,oDACjB6F,WAAY7F,GAAK,gDACjB8F,YAAa9F,GAAK,mDAClB+F,SAAU/F,GAAK,iDACfgG,QAAShG,GAAK,4cACdiG,KAAMjG,GAAK,kHACX5N,GAAI4N,GAAK,uBACTkG,YAAalG,GAAK,2CAClBmG,KAAMnG,GACF,wIAEJoG,KAAMpG,GAAK,kYACXqG,UAAWrG,GAAK,sRAChBsG,WAAYtG,GAAK,0PACjBuG,QAASvG,GAAK,mEAKZwG,GAAuC,CACzCrU,IAAK,OACLsU,KAAM,OACNC,KAAM,WACNC,KAAM,UAEVrW,GAAA,EAAAsW,GAAkBnjB,OAAO+M,KAAKgW,IAA9BlW,GAAAsW,GAAAhiB,OAAA0L,KAAyC,CAApC,IAAMxI,GAAG8e,GAAAtW,IACJuW,GAAcL,GAAS1e,IAC7BqY,GAAUrY,IAAOqY,GAAU0G,QC5S1BC,wJAuBgBC,eAajB,SAAAA,EAAYC,GAAmB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA2gB,IAC3B1a,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAsjB,GAAAjZ,KAAA1H,KAAM4gB,KALFG,aAIuB,EAAA9a,EAHvB+a,aAGuB,EAAA/a,EAFvBgb,mBAEuB,EAE3Bhb,EAAK8a,QAAUG,cACfjb,EAAK+a,SAAU,EACf/a,EAAKgb,cAAgB,EAJMhb,oFAZRgF,GACnB,MAAkC,qBAApB8O,GAAU9O,6CAIxB,OAAO5N,OAAO+M,KAAK2P,IAAWoH,0EAcR,IAAAxZ,EAAA3H,KAElBohB,EAAWphB,KAAK+gB,QAAQ5gB,QACxB6gB,EAAUhhB,KAAKghB,QACdI,IACDphB,KAAKihB,gBACL5f,OAAOggB,aAAarhB,KAAKihB,eACzBjhB,KAAKihB,cAAgB,GAEzBK,sBAAsB,WAClB,GAAIN,EAASI,EAAS5P,UAAUrJ,OAAO,YAClC,CACDiZ,EAAS5P,UAAUzF,IAAI,QACvB,IAAMwV,EAAO5Z,EAAKiZ,MAAMY,OACJ,oBAATD,IACP5Z,EAAKsZ,cAAgB5f,OAAOgY,WAAWkI,EAAM,2CAMpD,IAAA1Z,EAAA7H,KAEDyhB,EAAIzhB,KAAK4gB,MACTI,EAAUze,EAAYkf,EAAET,SAAS,GACjChJ,EAAUzV,EAAYkf,EAAEzJ,SAAS,GACjC0J,EAAUnf,EAAYkf,EAAEC,SAAS,GACjCC,EAAQpf,EAAYkf,EAAEE,OAAO,GAC7BC,EAAQrf,EAAYkf,EAAEG,OAAO,GAC7B7O,EAAO2G,GAAS+H,EAAE1O,KAAM,QACxB8O,EAyHZ,WAAgF,IAA3DA,EAA2D1jB,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAvB,KACrD,OAAI6E,MAAMC,QAAQ4e,GAAiBA,EAC5B9H,GAAU8H,IAAY,GA3HXC,CAAYL,EAAEI,SACxBE,EAASxI,GAAYkI,EAAEM,OAAQ,GAC/BC,EAAUP,EAAEO,QACZC,EAAU,CAAC,iBACTC,EAAaC,GAAiBN,EAASJ,GAC7C,IAAKS,EAAY,OAAO,KAEnBlK,GAASiK,EAAQ1c,KAAK,YACvBmc,GAASO,EAAQ1c,KAAK,WACtByb,GAASiB,EAAQ1c,KAAK,QACH,oBAAZyc,GAA0BhK,GAASiK,EAAQ1c,KAAK,UAE3D,IAAI6c,EAAY,GACD,IAAXL,IACAK,GAAS,UAAApjB,OAAc+iB,EAAd,WAETJ,GAASC,KACTQ,GAAS,SAAApjB,OAAa2iB,GAAS,EAAI,EAA1B,KAAA3iB,OAA+B4iB,GAAS,EAAI,EAA5C,MAEb,IAAMpO,EAA6B,CAAEjI,MAAOwH,EAAMvH,OAAQuH,GAM1D,OALIqP,EAAU5jB,OAAS,IAAGgV,EAAM4O,UAAYA,GAE5Cd,sBAAsB,kBAAMzZ,EAAKwa,4BACjCriB,KAAKghB,QAAUA,EAGXsB,EAAA,qBAAK7J,UAAWwJ,EAAQ9M,KAAK,KACzBoN,IAAKviB,KAAK+gB,QACVyB,QAAQ,kBACRC,oBAAoB,WACpBlX,MAAOwH,EACPvH,OAAQuH,EACRiP,QAAShK,EAAUgK,OAAUvjB,EAC7B+U,MAAOA,GACN0O,EACDI,EAAA,mBAAII,YAAY,IAAI1e,KAAK,OAAO2e,cAAc,QAAQC,eAAe,SAChET,GAAiBN,EAASJ,YAtFbP,aA6FlC,SAASiB,GAAiBU,EAAsBjC,GAA0C,IAAvBlf,EAAuBvD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAT,GAEzE2kB,EAAcD,EAAI,GAAlBE,EA6DR,SAAAC,GAAuD,IAC/CC,EACAC,EAF+CC,EAAA9lB,OAAA+lB,EAAA,EAAA/lB,CAAA2lB,EAAA,GAA9BK,GAA8BF,EAAA,GAAAA,EAAA,IAAxBG,EAAwBH,EAAA,GAI/CngB,MAAMC,QAAQogB,GAAOH,EAAWG,EACX,qBAATA,IAAsBJ,EAAaI,GAC/CrgB,MAAMC,QAAQqgB,GAAOJ,EAAWI,EACX,qBAATA,IAAsBL,EAAaK,GAEzB,qBAAfL,IAA4BA,EAAa,IAC5B,qBAAbC,IAA0BA,EAAW,IAEhD,MAAO,CAAED,aAAYC,YAxEUK,CAASV,GAAlCI,EADFF,EACEE,WAAYC,EADdH,EACcG,SAElB,GAA2B,qBAAhBJ,EAA6B,OAAOR,EAAA,wBAE/C,IAAMkB,EAyBV,SAAsBA,EAAiC5C,GAEnD,IAAMqB,GAAWuB,EAAQ/K,WAAa,IAAIgL,MAAM,KA0BhD,MAxBA,CAAC,OAAQ,UAAU9Y,QAAQ,SAAA+Y,GACvB,IAAMC,EAAW,GAAA3kB,OAAMwkB,EAAQE,IAC/B,GAA2B,qBAAhBC,GACS,cAAhBA,EAAJ,CACA,IAAMjiB,EAAM,GAAA1C,OAAG2kB,GAAc/U,cAC7B,IAA8B,IAA1BgV,GAAQve,QAAQ3D,KAAsC,IAAvBmiB,GAAKxe,QAAQ3D,GAAhD,CACA,IAAmC,IAA/BmiB,GAAKxe,QAAQse,GAAsB,CAEnC,IAAMhQ,EAAMiN,EAAK,MAAA5hB,OAAO2kB,IACxB,GAAmB,kBAARhQ,EAOP,aAN8B,IAA1BiQ,GAAQve,QAAQsO,GAChB6P,EAAQE,GAAc/P,UAEf6P,EAAQE,GACfzB,EAAQ1c,KAAR,WAAAvG,OAAwB0kB,GAAxB1kB,OAAqC2U,aAK1C6P,EAAQE,GACfzB,EAAQ1c,KAAR,WAAAvG,OAAwB0kB,GAAxB1kB,OAAqC0C,QAGzC8hB,EAAQ/K,UAAYwJ,EAAQ9M,KAAK,KAAK1S,OAC/B+gB,EArD2BM,CAAazmB,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAK4lB,GAAcrC,GAGlE,OAFIlf,EAAIlD,OAAS,IAAGykB,EAAWvhB,IAAMA,GAE9Bwf,gBACH4B,EACAU,EACAN,EAAShgB,IAAI,SAACkX,EAAOhV,GAAR,OAAkB+c,GAAiB/H,EAAOwG,EAAR,GAAA5hB,OAAkBoG,OAIzE,IAAMwe,GAAU,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,MACvCC,GAAO,qBCtIQG,eACjB,SAAAA,EAAapD,GAAsB,OAAAvjB,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAgkB,GAAA3mB,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAA2mB,GAAAtc,KAAA1H,KACxB4gB,0EAIP,IAAMqD,EAAQjkB,KAAK4gB,MAAMqD,MACzB,MAAqB,kBAAVA,GAA8C,IAAxBA,EAAMxhB,OAAOjE,OAAsB,KAC5D0lB,EAAA1mB,EAAA8X,cAAA,SAAOmD,UAAU,iBAAiB0L,QAASnkB,KAAK4gB,MAAMuD,SAC1DnkB,KAAK4gB,MAAMqD,cATY/C,IAAMkD,WCC1BC,GAAA,CAACtY,IAOT,SAAauY,GACXC,KACDA,IAAc,EAclBlT,SAAS5J,iBAAiB,UAAW,SAAAtB,GACjB,WAAZA,EAAIzE,KACR2W,OACD,IAbHxO,GAAStE,KAAK+e,IAbGjM,SAIjBxO,GAAsB,GACtB0a,IAAc,EAWX,SAASlM,KACZ,GAAwB,IAApBxO,GAASrL,OAAb,CACA,IAAM0H,EAAU2D,GAASqL,MACF,oBAAZhP,GAAwBA,SCTlBse,eAajB,SAAAA,EAAY5D,GAAoB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAwkB,IAC5Bve,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAmnB,GAAA9c,KAAA1H,KAAM4gB,KAbD6D,eAYuB,EAAAxe,EAVhCsc,IAAMrB,cAU0Bjb,EAThCye,KAAOxD,cASyBjb,EARhC0e,OAASzD,cAQuBjb,EANhC2e,aAMgC,EAAA3e,EAJhCmE,KAAiB,GAIenE,EAHhC4e,YAAsB,GAGU5e,EAFhC6e,eAAyB,EAIrB7e,EAAK8e,YAAc9e,EAAK8e,YAAY/a,KAAjB3M,OAAA2nB,EAAA,EAAA3nB,QAAA2nB,EAAA,EAAA3nB,CAAA4I,KACnBA,EAAKwe,UAAY,IAAI/M,GAAU,CAAEK,MAAO9R,EAAK8e,cAHjB9e,2EAMpBwF,GACR/M,QAAQC,KAAK,eAAgB8M,GAC7BzL,KAAKilB,8CAMI,IAAA5e,GAAA,EAAAC,GAAA,EAAAC,OAAA9H,EAAA,IAET,QAAA+H,EAAAC,EAAkBzG,KAAKoK,KAAvBzD,OAAAC,cAAAP,GAAAG,EAAAC,EAAAlI,QAAAsI,MAAAR,GAAA,EAA6B,KAAlB3E,EAAkB8E,EAAA5E,MACzB,GAAI5B,KAAK4gB,MAAMhf,QAAUF,EAAK,CAC1B,IAAM6f,EAAOvhB,KAAK4gB,MAAMsE,SAIxB,YAHoB,oBAAT3D,GACPA,EAAK7f,MANR,MAAA4F,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,+CAaMme,EAAmBC,GAAmF,IAAAQ,EACzFT,EAAK9Y,wBAA3BP,EAD+G8Z,EAC/G9Z,KAAMC,EADyG6Z,EACzG7Z,IAAKE,EADoG2Z,EACpG3Z,OACTD,EAAUoZ,EAAO/Y,wBAAjBL,MAQR,OANID,GADJE,EAASc,KAAKgD,IAAI9D,EAAQnK,OAAO+jB,YAAc,KAC5B/jB,OAAO+jB,cACtB9Z,GAAO,GAAKgB,KAAK0M,KAAK3X,OAAO+jB,YAAc9Z,EAAME,EAAS,KAE1DF,EAAM,IACNA,GAAO,GAAKgB,KAAK0M,MAAM1N,EAAM,KAE1B,CAAED,OAAMC,MAAKC,QAAOC,4CAGrBkZ,EAAmBC,EAAqBtZ,EAAcC,EAAaC,EAAeC,GACxF,IAAM+M,EAASlH,SAASiE,cAAc,OACtCiD,EAAOE,UAAY,wBACnB,IAAMmM,EAAUvT,SAASiE,cAAc,OAYvC,OAXAsP,EAAQnM,UAAY,sBACpBmM,EAAQS,UAAYX,EAAKW,UAEzBT,EAAQpR,MAAMlI,IAAd,GAAAtM,OAAuBsM,EAAvB,MACAsZ,EAAQpR,MAAMnI,KAAd,GAAArM,OAAwBqM,EAAxB,MACAuZ,EAAQpR,MAAMjI,MAAd,GAAAvM,OAAyBuM,EAAzB,MACAqZ,EAAQpR,MAAMhI,OAAd,GAAAxM,OAA0BwM,EAA1B,MACA+M,EAAO/C,YAAYoP,GACnBvT,SAASnS,KAAKsW,YAAY+C,GAE1BvY,KAAK4kB,QAAUA,EACR,CAAErM,SAAQqM,6DAIjB,IAAIxf,EAAQ,EACNwf,EAAmC5kB,KAAK4kB,QAC9C,GAAKA,EAAL,CACA,IAAMU,EAAQV,EAAQW,iBAAiB,YAJjBzd,GAAA,EAAAC,GAAA,EAAAC,OAAAvJ,EAAA,IAKtB,QAAAwJ,EAAAC,EAAkBlI,KAAKoK,KAAvBzD,OAAAC,cAAAkB,GAAAG,EAAAC,EAAA3J,QAAAsI,MAAAiB,GAAA,EAA6B,KAAlBpG,EAAkBuG,EAAArG,MACnBuB,EAAOmiB,EAAMlgB,GACnB,GAAI1D,IAAQ1B,KAAK6kB,YAAa,CAC1B,IAAMzZ,EAAOwZ,EAAQhZ,wBACrBgZ,EAAQY,UAAa,GAAKpgB,EAASgG,EAAKI,OAAS,EACjDxL,KAAK8kB,cAAgB1f,EACrBjC,EAAKqO,UAAUzF,IAAI,iBAEnB5I,EAAKqO,UAAUrJ,OAAO,YAE1B/C,KAfkB,MAAAkC,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,6CAmBVyD,GACZ,OAAQA,EAAM/J,KACV,IAAK,YAMD,OALA1B,KAAK8kB,gBACL9kB,KAAK6kB,YAAc7kB,KAAKoK,KAAKpK,KAAK8kB,cAAgB9kB,KAAKoK,KAAK5L,QAC5DwB,KAAKylB,0BACLha,EAAMnC,sBACNmC,EAAMlC,kBAEV,IAAK,UAMD,OALAvJ,KAAK8kB,eAAiB9kB,KAAK8kB,cAAgB9kB,KAAKoK,KAAK5L,OAAS,GAAKwB,KAAKoK,KAAK5L,OAC7EwB,KAAK6kB,YAAc7kB,KAAKoK,KAAKpK,KAAK8kB,eAClC9kB,KAAKylB,0BACLha,EAAMnC,sBACNmC,EAAMlC,kBAEV,IAAK,QACL,IAAK,IACD,IAAMgY,EAAOvhB,KAAK4gB,MAAMsE,SAOxB,MANoB,oBAAT3D,GACPA,EAAKvhB,KAAK6kB,aAEda,GAAcrN,OACd5M,EAAMnC,sBACNmC,EAAMlC,kBAGd7K,QAAQ4J,IAAI,KAAMmD,EAAM/J,sCAGnB,IAAAiG,EAAA3H,KACL,GAAIA,KAAKoK,KAAK5L,OAAS,EACnBwB,KAAK2lB,iBADT,CAKA,IAAMjB,EAAO1kB,KAAK0kB,KAAKvkB,QACjBwkB,EAAS3kB,KAAK2kB,OAAOxkB,QAC3B,GAAKukB,GAASC,EAAd,CARK,IAAAiB,EAUgC5lB,KAAK6lB,mBAAmBnB,EAAMC,GAA3DtZ,EAVHua,EAUGva,KAAMC,EAVTsa,EAUSta,IAAKC,EAVdqa,EAUcra,MAAOC,EAVrBoa,EAUqBpa,OAVrBsa,EAWuB9lB,KAAK+lB,UAAUrB,EAAMC,EAAQtZ,EAAMC,EAAKC,EAAOC,GAAnE+M,EAXHuN,EAWGvN,OAAQqM,EAXXkB,EAWWlB,QAChB5kB,KAAK6kB,YAAc7kB,KAAK4gB,MAAMhf,OAAS,GACvCP,OAAOgY,WAAW,kBAAM1R,EAAK8d,wBAAwBb,IAAU,IAE/D,IAAMoB,EAAiBhmB,KAAKimB,gBAAgBjc,KAAKhK,MACjDqR,SAAS5J,iBAAiB,UAAWue,GAAgB,GACrDN,GAAc3Z,IAAI,WACdsF,SAASnS,KAAKoa,YAAYf,GAC1BlH,SAAShI,oBAAoB,UAAW2c,GAAgB,KAE5Drc,EAAQ4O,GAAQJ,GAAG,CAAE/L,IAAK,WACtB1N,QAAQ4J,IAAI,iBACZod,GAAcrN,UAElB1O,EAAQib,GAASzM,GAAG,CAChB/L,IAAK,SAAAjG,GAED,GADAzH,QAAQC,KAAK,iBAAkBwH,GAC1BA,GAAwB,qBAAVA,EAAI5C,EAAvB,CACA,IAAM2iB,EAAStB,EAAQY,UACjBpgB,EAAQkH,KAAK0E,OAAO7K,EAAI5C,EAAI2iB,GAAU,IACtCtkB,EAAQ+F,EAAKyC,KAAKhF,GACxBsgB,GAAcrN,OACdiJ,sBAAsB,WACiB,oBAAxB3Z,EAAKiZ,MAAMsE,UAClBvd,EAAKiZ,MAAMsE,SAAStjB,uDAQpC,IAAM6D,EAAUzF,KAAKuiB,IAAIpiB,QACpBsF,IACLzF,KAAKykB,UAAUhf,QAAUA,oCAIzB,IAAMgc,EAAIzhB,KAAK4gB,MACTsC,EAAWzB,EAAEyB,SACbe,EAAQ7hB,EAAWqf,EAAEwC,MAAO,IAAIxhB,OAChC0jB,EAAO5jB,EAAYkf,EAAE0E,MAAM,GAC3B/b,EA+Cd,SAAwBA,EAA4B8Y,GAChD,IAAMkD,EAAqBvjB,EAAgBuH,EAAM,IAC3Cic,EAAwBnD,EAAS1kB,OAEvC,KAAO4nB,EAAS5nB,OAAS6nB,GACrBD,EAAS7gB,KAAT,GAAAvG,OAAiBonB,EAAS5nB,SAE9B,IAAK,IAAI8nB,EAAI,EAAGA,EAAIF,EAAS5nB,OAAQ8nB,IACC,IAA9BF,EAASE,GAAG7jB,OAAOjE,SACnB4nB,EAASE,GAAT,GAAAtnB,OAAiBsnB,IAYzB,OATApD,EAASvY,QAAQ,SAACyP,EAAOhV,GACrB,IAAM1D,EAAM0Y,EAAM1Y,IACC,kBAARA,EACP0kB,EAAShhB,GAAS1D,EAElB0Y,EAAM1Y,IAAM0kB,EAAShhB,KAItBghB,EApEUG,CAAe9E,EAAErX,KAAM8Y,GAC9BthB,EAAQQ,EAAWqf,EAAE7f,MAAOwI,EAAK,IACjC6X,EAAU,CAAC,kBACXqD,EAAQpC,EAAShgB,IAAI,SAAAC,GACvB,IAAMzB,EAAMyB,EAAKzB,IACjB,OAAQ4gB,EAAA,qBAAK7J,UAAU,OAAO/W,IAAKA,GAA3B,IAAmCyB,EAAnC,OAGRgjB,GAAMlE,EAAQ1c,KAAK,QAEvBvF,KAAKoK,KAAOA,EAEZ,IAAMhF,EAqBd,SAAkBgF,EAAgBxI,GAC9B,IAAMwD,EAAQgF,EAAK/E,QAAQzD,GAC3B,OAAO0K,KAAKiD,IAAI,EAAGnK,GAvBD6B,CAASmD,EAAMxI,GAE7B,OACI0gB,EAAA,wBAAQC,IAAKviB,KAAKuiB,IAAK9J,UAAWwJ,EAAQ9M,KAAK,MAC1C8O,EAAMzlB,OAAS,EAAI8jB,EAAA,cAACkE,GAAD,CAAOvC,MAAOA,IAAW,KAC7C3B,EAAA,qBAAKC,IAAKviB,KAAK2kB,OAAQlM,UAAU,iCAC7B6J,EAAA,qBAAK7J,UAAU,iBACXjF,MAAO,CACH4O,UAAS,eAAApjB,OAAiB,GAAKoG,EAAtB,SAEbkd,EAAA,qBAAKC,IAAKviB,KAAK0kB,KAAMjM,UAAU,uBAAwB6M,IAE3DhD,EAAA,qBAAK7J,UAAU,QACX6J,EAAA,cAACmE,GAAD,CAAM1T,KAAK,OAAO8O,QAAQ,mBAtMfX,uBC+D9BwF,YA7EDC,GACArlB,aAAaO,QAAQ,oBAAsB+kB,UAAUC,SAASpD,MAAM,KAAK,GAExDqD,cACjB,SAAAA,EAAoBC,GAA8B1pB,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA8mB,GAAA9mB,KAA9B+mB,qEA6CV5jB,GACN,IAAI,QAAAyH,EAAAzM,UAAAK,OADmBZ,EACnB,IAAAoF,MAAA4H,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IADmBlN,EACnBkN,EAAA,GAAA3M,UAAA2M,GACA,GAAI9K,KAAK+mB,aAAaJ,IAAmB,CACrC,IAAMK,EAAchnB,KAAK+mB,aAAaJ,IAAkBxjB,GACxD,GAAI6jB,EAAa,OAAOC,GAAUD,EAAappB,GAMnD,IADA,IAAMspB,EAAY7pB,OAAO+M,KAAKpK,KAAK+mB,cACnChc,EAAA,EAAAoc,EAAmBD,EAAnBnc,EAAAoc,EAAA3oB,OAAAuM,IAA8B,CAAzB,IAAMqc,EAAID,EAAApc,GAELic,EADahnB,KAAK+mB,aAAaK,GACNjkB,GAC/B,GAA2B,kBAAhB6jB,EACX,OAAOC,GAAUD,EAAappB,GAIlC,OADAc,QAAQqD,MAAR,iCAAA/C,OAA+CmE,EAA/C,MAAyDvF,GAClD,GAEX,MAAOkE,GACH,MAAMrC,MAAK,6CAAAT,OAA8CmE,EAA9C,QAAAnE,OAAyD8C,oCAhEhEilB,GACR,IAAMM,EAAW,IAAIP,EAAKC,GAC1B,OAAOM,EAASC,UAAUtd,KAAKqd,kCAGrBppB,GAAwE,IAAvCmpB,EAAuCjpB,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAjB,KACjE,OAAKF,EACe,kBAATA,EAA0BA,EAC9BZ,OAAAkqB,GAAA,EAAAlqB,CAAA,GAAG+pB,GAAQN,EAAKM,KAAOnpB,GAFZZ,OAAAkqB,GAAA,EAAAlqB,CAAA,GAAG+pB,GAAQN,EAAKM,KAAO,mCAK/BI,EAAiCJ,GAC3C,IAAKI,EAAM,MAAO,GAClB,GAAoB,kBAATA,EAAmB,OAAOA,EACjB,qBAATJ,IAAsBA,EAAON,EAAKM,MAC7C,IAAMnpB,EAAOupB,EAAKJ,GAClB,GAAoB,kBAATnpB,EAAmB,OAAOA,EACrC,IAAMwpB,EAAcD,EAAKnqB,OAAO+M,KAAKod,GAAM,IAC3C,MAA2B,kBAAhBC,EAAiCA,EACrC,yCAGUL,EAAcnpB,EAAcupB,IAC7CA,EAAOV,EAAKY,OAAOF,EAAMJ,IACpBA,GAAQnpB,EAEb,IADA,IAAM0pB,EAAoB,GAC1Bzd,EAAA,EAAAC,EAAkB9M,OAAO+M,KAAKod,GAA9Btd,EAAAC,EAAA3L,OAAA0L,IAAqC,CAAhC,IAAMxI,EAAGyI,EAAAD,GACJuW,EAAM+G,EAAK9lB,GACS,IAAtB+e,EAAIhe,OAAOjE,SACfmpB,EAAOjmB,GAAO+e,GAElB,OAAOkH,+BAGS,OAAOhB,iBAEXiB,GACZ,GAAsB,kBAAXA,EAAX,CACA,IAAMhmB,EAAQgmB,EAAOnE,MAAM,KAAK,GAChCkD,GAAmB/kB,EACnBN,aAAaY,QAAQ,kBAAmBN,aA8ChD,SAASqlB,GAAUD,EAAqBppB,GAOpC,IANA,IAAIiqB,EAAS,GACTpqB,EAAO,EACPqqB,EAAapB,GAAKqB,KAClBC,GAAc,EAGT5iB,EAAQ,EAAGA,EAAQ4hB,EAAYxoB,OAAQ4G,IAAS,CACrD,IAAM6iB,EAAIjB,EAAYvX,OAAOrK,GAC7B,OAAQ0iB,GACJ,KAAKpB,GAAKqB,KACI,OAANE,GACAH,EAAOpB,GAAKwB,OACZL,GAAUb,EAAYlmB,OAAOrD,EAAM2H,EAAQ3H,GAC3CA,EAAO2H,EAAQ,GAEJ,MAAN6iB,IACLH,EAAOpB,GAAKyB,YACZN,GAAUb,EAAYlmB,OAAOrD,EAAM2H,EAAQ3H,GAC3CA,EAAO2H,EAAQ,GAEnB,MACJ,KAAKshB,GAAKwB,OACNJ,EAAOpB,GAAKqB,KACZ,MACJ,KAAKrB,GAAKyB,YAGN,GAFAL,EAAOpB,GAAKqB,KACZC,EAAaplB,SAASqlB,EAAG,IACrB3lB,MAAM0lB,GACN,MAAMvoB,MAAK,6BAAAT,OAA8BoG,EAA9B,sBAAApG,OAAwDgoB,EAAxD,4DAGfa,GADajqB,EAAOoqB,EAAa,IAAM,GAEvC,MACJ,QACIF,EAAOpB,GAAKqB,MAIxB,OAAOF,EAASb,EAAYlmB,OAAOrD,aAtDlCipB,4FC1EKI,GAAKsB,KAAKC,EAAQ,KAA5B,IAwBqBC,8MACA3Z,MAA2CuS,gBAE5DqH,cAAgB,SAACpiB,GACb,GAAgB,UAAZA,EAAIzE,IAAiB,CACrByE,EAAImD,iBACJnD,EAAIoD,kBAFiB,IAAAif,EAGaviB,EAAK2a,MAA/B6H,EAHaD,EAGbC,eAAgB7mB,EAHH4mB,EAGG5mB,MACM,oBAAnB6mB,GACPA,EAAe7mB,OAK3B8mB,QAAU,SAACjd,GACP,IAAMkD,EAAQ1I,EAAK0I,MAAQ1I,EAAK0I,MAAMxO,QAAU,KAC3CwO,GACAA,EAAM6C,YACX7C,EAAM6C,UAAUrJ,OAAO,WACvBwG,EAAM6C,UAAUzF,IAAI,YACI,WAApB9F,EAAK2a,MAAMhgB,MAEX+N,EAAMga,kBAAkB,EAAGha,EAAM/M,MAAMpD,YAI/CoqB,OAAS,SAACnd,GACN,IAAMkD,EAAQ1I,EAAK0I,MAAQ1I,EAAK0I,MAAMxO,QAAU,KAC3CwO,GACAA,EAAM6C,YACX7C,EAAM6C,UAAUzF,IAAI,WACpB4C,EAAM6C,UAAUrJ,OAAO,gBAG3B+c,SAAW,SAACzZ,GAAqD,IAErDyZ,EAAajf,EAAK2a,MAAlBsE,SACgB,oBAAbA,IACPzZ,EAAMnC,iBACN4b,EAASzZ,EAAMK,OAAOlK,iFAK1B,IACI6f,EAAIzhB,KAAK4gB,MACThgB,EAAOwB,EAAWqf,EAAE7gB,KAAM,QAC1BqjB,EAAQ7hB,EAAWqf,EAAEwC,MAAO,IAC5BriB,EAAQQ,EAAWqf,EAAE7f,MAAO,IAC5BinB,EAAczmB,EAAWqf,EAAEoH,YAAa,IACxC1C,EAAO5jB,EAAYkf,EAAE0E,MAAM,GAC3B2C,EAAQvmB,EAAYkf,EAAEqH,OAAO,GAC7B9Q,EAAUzV,EAAYkf,EAAEzJ,SAAS,GACjCjF,EAAOzG,KAAKiD,IAAI,EAAGgK,GAAYkI,EAAE1O,KAAM,IACvCxH,EAAQmO,GAAS+H,EAAElW,MAAO,QAC1BxB,EAkCR,kBAAA/K,OAAyB+pB,MAjCf9G,EAAU,CAAC,kBACbkE,GAAMlE,EAAQ1c,KAAK,QAKvB,IAAMyjB,EAAiB,mBAChBhR,EAAU,UAAY,WAC7B,OAAQsK,EAAA,qBACI7J,UAAWwJ,EAAQ9M,KAAK,KACxB3B,MAAO,CAAEjI,QAAO0d,SAAU1d,IAClC+W,EAAA,cAACkE,GAAD,CAAOrC,QAASpa,EAAIka,MAAOA,IAC3B3B,EAAA,uBACIC,IAAKviB,KAAK2O,MACVua,UAAWJ,EACXrQ,UAAWuQ,EACXH,YAAaA,EACbM,UAAWnR,EACXpX,KAAMA,EACNmJ,GAAIA,EACJgJ,KAAMA,EACN2V,QAAS1oB,KAAK0oB,QACdE,OAAQ5oB,KAAK4oB,OACb1D,SAAUllB,KAAKklB,SACfkE,UAAWppB,KAAKuoB,cAChB3mB,MAAOA,YAjFYsf,aAuF/B6H,GAAW,EAMf,aC9GqBM,2LAEb,IAAM5H,EAAIzhB,KAAK4gB,MACTuF,EAAO5jB,EAAYkf,EAAE0E,MAAM,GAC3BmD,EAAMlnB,EAAWqf,EAAE6H,IAAK,OACxB9V,EAA6B,CAC/B+V,eAAgBnnB,EAAWqf,EAAE8H,eAAgB,gBAC7CC,WAAYpnB,EAAWqf,EAAE+H,WAAY,UACrCC,SAAUrnB,EAAWqf,EAAErjB,KAAM,SAE3B6jB,EAAU,CAAC,gBAAD,OAAAjjB,OAAyBsqB,IAKzC,OAJArH,EAAQ1c,KAARxF,MAAAkiB,EAAO5kB,OAAAqsB,GAAA,EAAArsB,CAASwF,EAAgB4e,EAAEQ,WAE9BkE,GAAMlE,EAAQ1c,KAAK,QAGnB+c,EAAA,qBAAK7J,UAAWwJ,EAAQ9M,KAAK,KAAM3B,MAAOA,GACtCiO,EAAEyB,iBAjBgBhC,cCRrByI,GAAgD,CACzDC,OAAQ,CAAC,KAAK,MACdC,UAAW,CAAC,IAAI,KAChBC,aAAc,CAAC,IAAI,KACnBC,QAAS,CAAC,KAAK,OAGNC,GAAqC,CAC9CC,OAAQ,GACRC,MAAO,EACPC,IAAK,GACLC,KAAM,IACNC,MAAO,MAaX,SAASC,GAAIrf,GACT,IAAMsf,EAAaZ,GAAY1e,GAC/B,IAAKsf,EAAY,MAAO,GAFO,IAAAC,EAAAntB,OAAA+lB,EAAA,EAAA/lB,CAGjBktB,EAHiB,GAGxB1R,EAHwB2R,EAAA,GAGtB1R,EAHsB0R,EAAA,GAI/B,UAAAxrB,OAAW6Z,EAAX,OAAA7Z,OAAkB8Z,EAAlB,SAGiB2R,eACjB,SAAAA,EAAa7J,GAAgB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAyqB,IACzBxkB,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAotB,GAAA/iB,KAAA1H,KAAO4gB,KAGX8J,kBAAoB,SAACnf,GACjB,IAAM3J,EAAQgB,SAAS2I,EAAO,IAC1BjJ,MAAMV,IACVqE,EAAK2a,MAAM+J,cAAc/oB,IAPAqE,EAU7B2kB,mBAAqB,SAACpf,GAClB,IAAM5J,EAAQgB,SAAS4I,EAAQ,IAC3BlJ,MAAMV,IACVqE,EAAK2a,MAAMiK,eAAejpB,IAbDqE,EAgB7B6kB,oBAAsB,SAAC/X,GACnB9M,EAAK2a,MAAMmK,gBAAgBhY,IAjBF9M,EAoB7B+kB,oBAAsB,SAACC,GACnB,IAAMrpB,EAAQgB,SAASqoB,EAAS,IAC5B3oB,MAAMV,IACVqE,EAAK2a,MAAMsK,gBAAgBtpB,IAvBFqE,EA0B7BklB,uBAAyB,SAACzpB,GACtBuE,EAAK2a,MAAMwK,mBAAmB1pB,IA3BLuE,EA8B7BolB,qBAAuB,SAACC,GACpBrlB,EAAK2a,MAAM2K,iBAAiBD,IA/BHrlB,wEAmCzB,IAAMwb,EAAIzhB,KAAK4gB,MAEf,OAAQsD,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,+BACnByL,EAAA1mB,EAAA8X,cAACkW,GAAD,CAAOrF,MAAM,EACNlC,MAAM,YACNriB,MAAK,GAAA5C,OAAKyiB,EAAE6J,UACZpG,SAAUllB,KAAKqrB,uBACtBnH,EAAA1mB,EAAA8X,cAACmW,GAAD,CAAO7pB,MAAO6f,EAAEiK,QAASvF,MAAM,EAAMjB,SAAUllB,KAAK8qB,qBAChD5G,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,WAAT,YAA4BwiB,EAAA1mB,EAAA8X,cAAA,UAAKgV,GAAI,aACrCpG,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,UAAT,WAA0BwiB,EAAA1mB,EAAA8X,cAAA,UAAKgV,GAAI,YACnCpG,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,gBAAT,gBAAqCwiB,EAAA1mB,EAAA8X,cAAA,UAAKgV,GAAI,kBAC9CpG,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,aAAT,aAA+BwiB,EAAA1mB,EAAA8X,cAAA,UAAKgV,GAAI,eACxCpG,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,UAAT,cAEJwiB,EAAA1mB,EAAA8X,cAACqW,GAAD,KACIzH,EAAA1mB,EAAA8X,cAACkW,GAAD,CAAOvH,MAAM,QAAQriB,MAAK,GAAA5C,OAAKyiB,EAAElW,OAC1ByM,QAAuB,WAAdyJ,EAAEiK,QACXxG,SAAUllB,KAAK0qB,oBACtBxG,EAAA1mB,EAAA8X,cAACkW,GAAD,CAAOvH,MAAM,SAASriB,MAAK,GAAA5C,OAAKyiB,EAAEjW,QAC3BwM,QAAuB,WAAdyJ,EAAEiK,QACXxG,SAAUllB,KAAK4qB,sBAE1B1G,EAAA1mB,EAAA8X,cAACmW,GAAD,CAAO7pB,MAAO6f,EAAEmK,WAAYzF,MAAM,EAAMjB,SAAUllB,KAAKmrB,wBACnDjH,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,SAAT,mBACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,OAAT,eACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,UAAT,kBACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,QAAT,gBACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,SAAT,qBACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,UAAT,cAEJwiB,EAAA1mB,EAAA8X,cAACkW,GAAD,CAAOrF,MAAM,EACNlC,MAAM,WACNriB,MAAK,GAAA5C,OAAKyiB,EAAEwJ,SACZjT,QAA0B,WAAjByJ,EAAEmK,WACX1G,SAAUllB,KAAKgrB,8BAtEI9J,IAAMkD,WCjCtCyH,GAAkBxuB,OAAO+M,KAAKuf,IAAa,GAC3CmC,GAAgBzuB,OAAO+M,KAAK4f,IAAW,GAE9B+B,GAAA,CACX7rB,cAAe,CACX8rB,SAAUC,EAAQ9qB,MAAMM,IAAI,yBAA0B,CAClD6pB,SAAU,WACVI,QAASG,GACTtgB,MAAOoe,GAAYkC,IAAiB,GACpCrgB,OAAQme,GAAYkC,IAAiB,GACrCD,WAAYE,GACZb,QAASjB,GAAU8B,OAI3BrrB,QAZW,SAYHC,EAAiBC,GAA2B,IACxCC,EAASD,EAATC,KACR,IAAKA,EAAKC,WApBH,YAoBuB,OAAOH,EAGrC,OADgBC,EAAOC,KAAKE,OAtBrB,WAsBmCtC,SAEtC,IAAK,kBAAmB,OAWpC,SAAwBkC,EAAiBC,GACrC,IAAMurB,EAAW7uB,OAAO0D,OAAQL,EAAO,CACnCsrB,SAAU3uB,OAAO0D,OAAQL,EAAMsrB,SAAUrrB,EAAOqrB,YAMpD,OAJAC,EAAQ9qB,MAAMc,IAAI,yBAA0BiqB,EAASF,UACrDttB,QAAQC,KAAK,SAAU+B,GACvBhC,QAAQC,KAAK,mBAAoBgC,EAAOqrB,UACxCttB,QAAQC,KAAK,YAAautB,GACnBA,EAnBgCC,CAAezrB,EAAOC,GACrD,QAAS,MAAMlB,MAAK,mBAAAT,OAAoB4B,EAApB,SAI5BurB,eAvBW,SAuBIH,GACX,MAAO,CAAEprB,KAAI,GAAA5B,OA9BN,WA8BM,mBAA8BgtB,cChCnD,IAEeI,GAAA,CACXlsB,cAAe,GAEfO,QAHW,SAGHC,EAAiBC,GAA2B,IACxCC,EAASD,EAATC,KACR,IAAKA,EAAKC,WAPH,WAOuB,OAAOH,EAGrC,OADgBC,EAAOC,KAAKE,OATrB,UASmCtC,SAEtC,IAAK,MAAO,OAqBxB,SAAakC,EAAiBC,GAC1B,IAAM0rB,EAAS3rB,EAAM4rB,QAErB,OADAD,EAAO9mB,KAAK5E,EAAO4rB,OACZF,EAxBoBtgB,CAAIrL,EAAOC,GAC9B,IAAK,QAAS,OA8B1B,SAAeD,EAAiBC,GAC5B,IAAM6rB,EAA4B,GAQlC,OAPe7rB,EAAO0rB,OAAOI,OAAQ,SAACF,GAClC,IAAMxiB,EAAKwiB,EAAMxiB,GACX2iB,EAAcF,EAAgBG,SAAS5iB,GAC7C,OAAI2iB,IACJF,EAAgBjnB,KAAKwE,IACd,KArCkB6iB,CAAMlsB,EAAOC,GAClC,IAAK,SAAU,OA0C3B,SAAgBD,EAAiBC,GAA2B,IAChD4rB,EAAU5rB,EAAV4rB,MACFF,EAAS3rB,EAAM+rB,OAAO,SAAC7c,GAAD,OAAeA,EAAE7F,KAAOwiB,EAAMxiB,KAE1D,OADAsiB,EAAO9mB,KAAKgnB,GACLF,EA9CuBprB,CAAOP,EAAOC,GACpC,QAAS,MAAMlB,MAAK,mBAAAT,OAAoB4B,EAApB,SAI5BmL,IAhBW,SAgBPwgB,GACA,MAAO,CAAE3rB,KAAI,GAAA5B,OAnBN,UAmBM,OAAkButB,UAGnCK,MApBW,SAoBLP,GACF,MAAO,CAAEzrB,KAAI,GAAA5B,OAvBN,UAuBM,SAAoBqtB,WAGrCprB,OAxBW,SAwBJsrB,GACH,MAAO,CAAE3rB,KAAI,GAAA5B,OA3BN,UA2BM,UAAqButB,WC3B1C,IAEeM,GAAA,CACX3sB,cAAe,CACX4sB,MAAO,QACPC,aAAa,GAGjBtsB,QANW,SAMHC,EAAoBC,GAA8B,IAC9CC,EAASD,EAATC,KACR,IAAKA,EAAKC,WAVH,eAUuB,OAAOH,EAGrC,OADgBC,EAAOC,KAAKE,OAZrB,cAYmCtC,SAEtC,IAAK,YAAa,OAgB9B,SAAkBkC,EAAoBC,GAClC,OAAOtD,OAAO0D,OAAQL,EAAO,CAAEosB,MAAOnsB,EAAOmsB,QAjBZE,CAAStsB,EAAOC,GACzC,IAAK,4BAA6B,OAmB9C,SAAiCD,GAC7B,OAAOrD,OAAO0D,OAAQL,EAAO,CAAEqsB,aAAcrsB,EAAMqsB,cApBFE,CAAwBvsB,GACjE,QAAS,MAAMjB,MAAK,mBAAAT,OAAoB4B,EAApB,SAI5BosB,SAlBW,SAkBFF,GACL,MAAO,CAAElsB,KAAI,GAAA5B,OArBN,cAqBM,aAAwB8tB,UAGzCG,wBAtBW,WAuBP,MAAO,CAAErsB,KAAI,GAAA5B,OAzBN,cAyBM,gCCzBrB,IAEekuB,GAAA,CACXhtB,cAAe,CACXitB,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,QAAS,IAGb7sB,QARW,SAQHC,EAAmBC,GAA6B,IAC5CC,EAASD,EAATC,KACR,IAAKA,EAAKC,WAZH,SAYuB,OAAOH,EAGrC,OADgBC,EAAOC,KAAKE,OAdrB,QAcmCtC,SAEtC,IAAK,SAAU,OAW3B,SAAgBkC,EAAmBC,GAC/B,OAAOtD,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAKqD,EAAUC,EAAOD,OAZCO,CAAOP,EAAOC,GACpC,QAAS,MAAMlB,MAAK,mBAAAT,OAAoB4B,EAApB,SAI5BK,OAnBW,SAmBJP,GACH,MAAO,CAAEE,KAAI,GAAA5B,OAtBN,QAsBM,UAAqB0B,WCtB1C,IAEe6sB,GAAA,CACXrtB,cAAe,CACXstB,WAAW,EACXC,KAAM,EACNC,KAAM,EACNC,SAAU,EACVC,UAAW,EACXC,aAAc,GAGlBptB,QAVW,SAUHC,EAAqBC,GAA+B,IAChDC,EAASD,EAATC,KACR,IAAKA,EAAKC,WAdH,WAcuB,OAAOH,EAGrC,OADgBC,EAAOC,KAAKE,OAhBrB,UAgBmCtC,SAEtC,IAAK,SAAU,OAW3B,SAAgBkC,EAAqBC,GACjC,OAAOtD,OAAO0D,OAAQL,EAAOC,EAAOmtB,WAZN7sB,CAAOP,EAAOC,GACpC,QAAS,MAAMlB,MAAK,mBAAAT,OAAoB4B,EAApB,SAI5BK,OArBW,SAqBJ6sB,GACH,MAAO,CAAEltB,KAAI,GAAA5B,OAxBN,UAwBM,UAAqB8uB,eCZ1C,IAAM5tB,GAA2B,CAC7Bc,UAAW+sB,EAAU7tB,cACrB6rB,QAASiC,GAAQ9tB,cACjBmsB,OAAQ4B,GAAO/tB,cACf2sB,WAAYqB,GAAWhuB,cACvBitB,KAAMgB,GAAKjuB,cACXqtB,OAAQa,GAAOluB,eAcnB,IAAMmuB,GAAQC,YAXd,WAA2F,IAA1E5tB,EAA0EvC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAA3C+B,GAAeS,EAA4BxC,UAAAK,OAAA,EAAAL,UAAA,QAAAM,EACvF,MAAO,CACHuC,UAAW+sB,EAAUttB,QAAQC,EAAMM,UAAWL,GAC9CorB,QAASiC,GAAQvtB,QAAQC,EAAMqrB,QAASprB,GACxC0rB,OAAQ4B,GAAOxtB,QAAQC,EAAM2rB,OAAQ1rB,GACrCksB,WAAYqB,GAAWztB,QAAQC,EAAMmsB,WAAYlsB,GACjDwsB,KAAMgB,GAAK1tB,QAAQC,EAAMysB,KAAMxsB,GAC/B4sB,OAAQa,GAAO3tB,QAAQC,EAAM6sB,OAAQ5sB,MAK9B4tB,GAAA,CACXF,SAAOG,SAAUH,GAAMG,SACvBT,YACAC,WACAC,UACAC,cACAC,QACAC,WAIJ1vB,QAAQC,KAAK,yBAA0BuB,GAAc6rB,SC3CtC,IAAA0C,GAAA,CAAEC,oDAEXC,GAAO,0EAKb,SAAAjxB,IAAA,IAAA4rB,EAAA3B,EAAAzE,EAAAiK,EAAAE,EAAAC,EAAA5sB,EAAAxC,EAAAC,UAAA,OAAAZ,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAsB+qB,EAAtBprB,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAoC,GAApCG,EAAAE,KAAA,EACyBqwB,EAAOzxB,KAAK,MAAO,CAAEgwB,KAAM7D,IADpD,UAE+B,kBADrB3B,EADVtpB,EAAAgB,MAEsBK,KAFtB,CAAArB,EAAAE,KAAA,cAGcopB,EAHd,cAKUzE,EAAWyE,EAAOzE,SAClBiK,EAAOxF,EAAOwF,KACdE,EAAkB,GAClBC,EAAoB,GAE1BpK,EAASvY,QAAQ,SAACxH,GAAc,IACpB8H,EAAe9H,EAAf8H,KACY,qBADG9H,EAAT4P,KACmBua,EAAQ/nB,KAAK0F,GACzCoiB,EAAM9nB,KAAK0F,KAEdvK,EAAQ,CAAEysB,OAAMC,KAAMuB,GAAMtB,QAAOC,WACzCuB,GAAML,SAASK,GAAMV,KAAKltB,OAAOP,IAhBrCrC,EAAAiB,OAAA,SAiBWoB,GAjBX,yBAAArC,EAAAwB,SAAAnC,0CCkBeoxB,GAxBC,CACZvvB,MADY,WAER,IACIoY,EAAa,GACbtV,EAAI0a,SAASwB,OAEjB,OAAIlc,EAAE7D,OAAS,EAAUmZ,GACXtV,EAAE0sB,UAAU,GAAGtL,MAAM,KAC7B9Y,QAAQ,SAACxH,EAAMiC,GACjB,IAAM4pB,EAA8B7rB,EAAKsgB,MAAM,KAAKtO,KAAK,KACnD8Z,EAAeD,EAA4B3pB,QAAQ,KACzD,IAAsB,IAAlB4pB,EACAtX,EAAI,GAAA3Y,OAAIoG,IAAW4pB,MAChB,CACH,IAAMttB,EAAMstB,EAA4BluB,OAAO,EAAGmuB,GAC5CxO,EAAMuO,EAA4BluB,OAAOmuB,EAAe,GAC9DtX,EAAKjW,GAAOwtB,mBAAmBzO,MAIhC9I,iBCxBA,SAASwX,GAAU3sB,GAAyC,IAAjCb,EAAiCxD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAX,GAC5D,MAAiB,qBAANqE,EAA0Bb,EACjCqB,MAAMC,QAAQT,GAAWA,EACtB,CAACA,OCmBS4sB,eAIjB,SAAAA,EAAYxO,GAAqB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAovB,IAC7BnpB,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAA+xB,GAAA1nB,KAAA1H,KAAM4gB,KAJD6D,eAGwB,EAAAxe,EAFxBsc,SAEwB,EAE7Btc,EAAK8e,YAAc9e,EAAK8e,YAAY/a,KAAjB3M,OAAA2nB,EAAA,EAAA3nB,QAAA2nB,EAAA,EAAA3nB,CAAA4I,KACnBA,EAAKwe,UAAY,IAAI/M,GAAU,CAAEK,MAAO9R,EAAK8e,cAC7C9e,EAAKsc,IAAMrB,cAJkBjb,mFAQ7B,IAAMR,EAAUzF,KAAKuiB,IAAIpiB,QACpBsF,IACLzF,KAAKykB,UAAUhf,QAAUA,yCAIzB,IAAM8b,EAAOvhB,KAAK4gB,MAAMoB,QACJ,oBAATT,GACXA,EAAKvhB,KAAK4gB,MAAMyO,sCAIhB,IAAM5N,EAAIzhB,KAAK4gB,MACXqD,EAAQ7hB,EAAWqf,EAAEwC,MAAO,IAC5BqL,EAAOltB,EAAWqf,EAAE6N,KAAM,IAC1BnJ,EAAO5jB,EAAYkf,EAAE0E,MAAM,GAC3BnG,EAAOzd,EAAYkf,EAAEzB,MAAM,GAC3BuP,EAAOhtB,EAAYkf,EAAE8N,MAAM,GAC3BC,EAAQjtB,EAAYkf,EAAE+N,OAAO,GAC7BxX,GAAWgI,GAAQzd,EAAYkf,EAAEzJ,SAAS,GAC1CmI,EAAU5d,EAAYkf,EAAEtB,SAAS,GACjC8B,EAAU,CAAC,mBAAmBjjB,OAAOmwB,GAAU1N,EAAEQ,UAcrD,OAbIkE,GAAMlE,EAAQ1c,KAAK,QACnBgqB,GACAtN,EAAQ1c,KAAK,QACb0c,EAAQ1c,KAAK4a,EAAU,UAAY,aAG/BnI,GAASiK,EAAQ1c,KAAK,kBAC1B0c,EAAQ1c,KAAK4a,EAAU,UAAY,YAEnCqP,GAAOvN,EAAQ1c,KAAK,SACH,IAAjB0e,EAAMzlB,QAAcyjB,EAAQ1c,KAAK,YAErCvF,KAAKykB,UAAUzM,QAAUA,EAErBsK,EAAA,wBAAQC,IAAKviB,KAAKuiB,IACd9J,UAAWwJ,EAAQ9M,KAAK,KACxBgU,UAAWnR,GACVsX,EAAK9wB,OAAS,EACT8jB,EAAA,cAACmE,GAAD,CAAM5E,QAASyN,EACb5N,QAAS1B,EACTjN,KAAI,GAAA/T,OAAKwwB,EAAQ,MAAQ,MAArB,SACN,KACLvL,EAAMzlB,OAAS,EACV8jB,EAAA,qBAAK7J,UAAU,QAAf,IAAyBwL,EAAzB,KACA,aA1Dc/C,aCtBrBuO,GAAA,CAKXC,MAsHJ,SAAe7N,GAC8D1jB,UAAAK,OAAA,QAAAC,IAAAN,UAAA,IAAAA,UAAA,GACzE,OAAO,IAAIwxB,QAAQ,SAAAC,GACf,IAAMC,EAAS,IAAIC,GAAO,CAAEC,QAASH,EAAS/N,UAASoH,SAAU,MACjE4G,EAAOG,OAAU1N,EAAA,cAAC2N,GAAD,CACbX,KAAK,QACLrL,MAAOiM,GAAE,SACTX,MAAM,EACNvN,QAAS4N,IACbC,EAAOjR,UAzHXuR,QAoIJ,SAAkBC,EACAvO,GACd,OAAO,IAAI8N,QAAS,SAAAC,GAChB,IAAMC,EAAS,IAAIC,GAAO,CAAEO,MAAOD,EAASvO,UAASoH,SAAU,MACzDjsB,EAAQ,SAACszB,GACXT,EAAOrT,OACPoT,EAASU,IAEbT,EAAOE,QAAU,kBAAM/yB,GAAM,IAC7B,IAAMuzB,EAAajO,EAAA,cAAC2N,GAAD,CACfvuB,IAAI,SACJ6tB,MAAM,EACNtL,MAAOiM,GAAE,UACTlO,QAAS,kBAAMhlB,GAAM,MACnBwzB,EAASlO,EAAA,cAAC2N,GAAD,CACXvuB,IAAI,KACJye,SAAS,EACT8D,MAAOmM,EACPpO,QAAS,kBAAMhlB,GAAM,MACzB6yB,EAAOG,OAAS,CAAEO,EAAWC,GAC7BX,EAAOjR,UAvJXA,KA2JJ,SAAc6R,GACV,IAAMZ,EAAS,IAAIC,GAAOW,GAE1B,OADAZ,EAAOjR,OACAiR,GA7JP7P,qDAeEkQ,GAAIpJ,GAAKsB,KAAKC,EAAQ,KAYtByH,cAKF,SAAAA,IAAoC,IAAA7pB,EAAAjG,KAAxBywB,EAAwBtyB,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAJ,GAAId,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA8vB,GAAA9vB,KAJpC0wB,aAIoC,EAAA1wB,KAHpC2wB,cAGoC,EAAA3wB,KAFpCgwB,OAAqE,KAGjEhwB,KAAK2wB,SAAWtzB,OAAO0D,OAAO,CAC1B6vB,eAAe,EACfZ,OAAQ1N,EAAA,cAAC2N,GAAD,CACJX,KAAK,QACLrL,MAAUiM,GAAE,SACZX,MAAO,EACPvN,QAAS,kBAAM/b,EAAKuW,WACzBiU,GACHzwB,KAAK2wB,SAASC,cAAgBruB,EAAYvC,KAAK2wB,SAASC,eAAe,GACvE5wB,KAAKgwB,OAAShwB,KAAK2wB,SAASX,QAAU,KACtC,IAAMzX,EAASlH,SAASiE,cAAc,OACtCiD,EAAOE,UAAY,qBACnBpH,SAASnS,KAAKsW,YAAY+C,GAC1BvY,KAAK0wB,QAAUnY,EACfvY,KAAKwc,KAAOxc,KAAKwc,KAAKxS,KAAKhK,MACvBA,KAAK2wB,SAASC,eACdlL,GAAc3Z,IAAI,kBAAM9F,EAAK4qB,6DAQ9B,IAAAlpB,EAAA3H,KACG8wB,EAAM9wB,KAAK2wB,SACXN,EAAQjuB,EAAW0uB,EAAIT,MAAO,IAAI5tB,OAClC6sB,EAAOltB,EAAW0uB,EAAIxB,KAAM,IAAI7sB,OAClCutB,EACAhwB,KAAKgwB,OAAU1N,EAAA,wBAAQ7J,UAAW,0BAC9BzY,KAAKgwB,QACK,KACVe,EAAS,KACbV,EAAM7xB,OAAS,IACfuyB,EACIzO,EAAA,wBAAQ7J,UAAW,YACb6W,EAAK9wB,OAAS,EAAI8jB,EAAA,cAACmE,GAAD,CAAM5E,QAAUyN,IAAY,KAChDhN,EAAA,yBAAM+N,KAKlBW,IAASC,OACL3O,EAAA,qBACI7J,UAAU,yBACVjF,MAAO,CACHyV,SAAkC,kBAAjB6H,EAAI7H,SAAX,GAAAjqB,OAAsC8xB,EAAI7H,SAA1C,MAAyD,SAEtE8H,EACDzO,EAAA,yBAAMwO,EAAIjP,SACTmO,GAENhwB,KAAK0wB,SACRrX,WAAW,kBAAM1R,EAAK+oB,QAAQlf,UAAUzF,IAAI,SAAS,mCAIhD/L,KAAK2wB,SAASC,cAGflL,GAAcrN,OAFdrY,KAAK6wB,wCAOT,IAAMtY,EAASvY,KAAK0wB,QACpBnY,EAAO/G,UAAUrJ,OAAO,QACxBkR,WAAW,WACPhI,SAASnS,KAAKoa,YAAYf,IAC3B,KACH,IAAMwX,EAAU/vB,KAAK2wB,SAASZ,QACP,oBAAZA,GACPzO,sBAAsByO,iCApDlBxO,GACRvhB,KAAK2wB,SAASZ,QAAUxO,wDA0GhC,SAAA7jB,EAAoBumB,EAAeiN,GAAnC,IAAArP,EAAAgO,EAAA7yB,EAAAkB,EAAAC,UAAA,OAAAZ,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAAAL,EAAAM,OAAA,QAAAC,IAAAP,EAAA,KAAAA,EAAA,IAAAG,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEqB2yB,EAFrB,cAAA7yB,EAAAiB,OAAA,SAAAjB,EAAAgB,MAAA,cAIUwiB,EACFS,EAAA,cAACqJ,GAAD,CAAMrC,IAAI,MAAMC,eAAe,aAAaC,WAAW,UACnDlH,EAAA,cAACmE,GAAD,CAAM5E,QAAQ,OAAOH,SAAS,IAC9BY,EAAA,yBAAM2B,KAGR4L,EAAS,IAAIC,GAAO,CAAEjO,UAASmO,OAAQ,KAAMY,eAAe,KAC3DhS,OACD5hB,EAAQ6yB,EAAOrT,KAAKxS,KAAM6lB,GAZpCxxB,EAAAiB,OAAA,SAaW,IAAIqwB,QAAS,SAACC,EAASuB,GAC1BD,EAAKE,KACD,SAACzJ,GACG3qB,IACA4yB,EAASjI,IAEb,SAAC5lB,GACGrD,QAAQqD,MAAOA,GACf/E,IACAm0B,EAAQpvB,QAtBxB,yBAAA1D,EAAAwB,SAAAnC,iCC7JqB2zB,eACjB,SAAAA,EAAazQ,GAA6B,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAqxB,IACtCprB,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAg0B,GAAA3pB,KAAA1H,KAAO4gB,KAIX0Q,aAAe,SAACC,GACZtrB,EAAKurB,SAAS,CAAED,aADiB,IAGzBrM,EAAajf,EAAK2a,MAAlBsE,SACgB,oBAAbA,IACPA,EAASqM,GACTtF,EAAQ9qB,MAAMc,IAAI,mBAAoBsvB,KAXJtrB,EAe1CwrB,mBAAqB,WAAM,IACfhJ,EAAmBxiB,EAAK2a,MAAxB6H,eACsB,oBAAnBA,GACPA,KAhBJxiB,EAAKvF,MAAQ,CAAE6wB,SAAUtF,EAAQ9qB,MAAMM,IAAI,mBAAoB,oCAFzBwE,mFAuBtCjG,KAAKsxB,aAAatxB,KAAKU,MAAM6wB,2CAI7B,OAAQrN,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,gCACnByL,EAAA1mB,EAAA8X,cAACkW,GAAD,CACIrF,MAAM,EACN2C,OAAO,EACP7E,MAAM,mBACNriB,MAAO5B,KAAKU,MAAM6wB,SAClB9I,eAAgBzoB,KAAKyxB,mBACrBvM,SAAUllB,KAAKsxB,uBAnCYpQ,IAAMkD,WCR3CsN,GAAqB,IAGZC,GAAA,CAAEC,yDAAaC,mGAM9B,SAAAC,EAA2BC,GAA3B,OAAAx0B,EAAAC,EAAAY,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,cAAAyzB,EAAA1yB,OAAA,SACW,IAAIqwB,QAAJ,eAAA3M,EAAA3lB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAY,SAAAw0B,EAAMrC,GAAN,IAAAsC,EAAAC,EAAAZ,EAAAa,EAAAC,EAAA1jB,EAAAkhB,EAAA,OAAAtyB,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,UACVwzB,EADU,CAAAO,EAAA/zB,KAAA,WAEL2zB,EAAUpD,GAAQvvB,QAEW,kBAD7B4yB,EAAsBD,EAAQP,MAHzB,CAAAW,EAAA/zB,KAAA,eAKPqxB,EAAQuC,GALDG,EAAAhzB,OAAA,iBAUXiyB,EAAW,GACXa,GAAY,EACVC,EAAO,WACTD,GAAY,EACZvC,EAAOrT,OACPoT,EAAQ2B,IAEN5iB,EAAQuV,EAAA1mB,EAAA8X,cAACid,GAAD,CACV9J,eAAgB4J,EAChBnN,SAAU,SAACtjB,GAAD,OAAmB2vB,EAAW3vB,KACtCiuB,EAASC,GAAOlR,KAAK,CACvBgS,eAAe,EACf/O,QAASlT,EACTqhB,OAAQ9L,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQhM,MAAM,4BACNjC,QAASqQ,EACT/C,KAAK,SACrBA,KAAM,OACNe,MAAO,4BACPN,QAAO,eAAAyC,EAAAn1B,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAC,IAAA,OAAAH,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACD6zB,EADC,CAAA/zB,EAAAE,KAAA,eAAAF,EAAAiB,OAAA,wBAAAjB,EAAAE,KAAA,EAECuxB,GAAOJ,MAAOxL,EAAA1mB,EAAA8X,cAAA,gFAFf,OAGLyH,SAAS0V,SACT7C,EAAQ,IAJH,wBAAAvxB,EAAAwB,SAAAnC,MAAF,yBAAA80B,EAAAzyB,MAAAC,KAAA7B,YAAA,KA5BI,yBAAAm0B,EAAAzyB,SAAAoyB,MAAZ,gBAAAS,GAAA,OAAA1P,EAAAjjB,MAAAC,KAAA7B,YAAA,KADX,wBAAA6zB,EAAAnyB,SAAAiyB,0EA2CA,SAAAa,EAAuBpB,GAAvB,OAAAh0B,EAAAC,EAAAY,KAAA,SAAAw0B,GAAA,cAAAA,EAAAt0B,KAAAs0B,EAAAr0B,MAAA,cAAAq0B,EAAAtzB,OAAA,SACW,IAAIqwB,QAAQ,SAACC,EAASuB,GACzB,IAAM0B,EAAUxxB,OAAOgY,WAAW8X,EAAQO,IACpCoB,EAAS,IAAIC,KAAaxB,GAChCuB,EAAOE,MAAMC,UACT,SAAAC,GACIx0B,QAAQC,KAAK,WAAYu0B,GACrBA,IACA7xB,OAAOggB,aAAawR,GACpBjD,EAAQkD,KAGhB,SAAAxrB,GAAS5I,QAAQqD,MAAM,OAAQuF,QAZ3C,wBAAAsrB,EAAA/yB,SAAA8yB,6BCzDe,IAAAQ,GAAA,CACZC,0DACAC,6DACAC,iEACAC,0DACAC,4DACAC,0DACAC,sDACAC,mDACAC,wDACAC,mEACAC,qEACAC,sDACAC,4DACAC,0DACAC,8DACAC,4DACAC,sDACAC,uDACAC,gEACAC,sEACAC,wDACAC,8DACAC,qDACAC,0DACAC,gEACAC,sDACAC,qDACAC,0DACAC,mEACAC,iDACAC,8DACAC,0DACAC,yDACAC,gEACAC,wDACAC,oDACAC,oEACAC,sEACAC,uDACAC,6DACAC,+DACAC,gEACAC,sEACAC,yDACAC,+DACAC,sDACAC,iEACAlK,sDACAmK,6DACAC,4DACAC,uGAyBH,SAAA34B,EAA4B44B,GAA5B,IAAAvlB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBg4B,GAAMC,QAAQ,iBAAkBF,GADrD,cACSvlB,EADT1S,EAAAgB,KAAAhB,EAAAiB,OAAA,SAEUyR,GAFV,wBAAA1S,EAAAwB,SAAAnC,0EAoBA,SAAAu0B,EAA+B5a,GAA/B,IAAAtG,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,cAAA+zB,EAAA/zB,KAAA,EACqBg4B,GAAMC,QAAQ,oBAAqBnf,GADxD,cACStG,EADTuhB,EAAAjzB,KAAAizB,EAAAhzB,OAAA,SAEUyR,GAFV,wBAAAuhB,EAAAzyB,SAAAoyB,0EA0BA,SAAAH,EAAmCza,GAAnC,IAAAtG,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,cAAAyzB,EAAAzzB,KAAA,EACqBg4B,GAAMC,QAAQ,wBAAyBnf,GAD5D,cACStG,EADTihB,EAAA3yB,KAAA2yB,EAAA1yB,OAAA,SAEUyR,GAFV,wBAAAihB,EAAAnyB,SAAAiyB,0EAmCA,SAAAa,EAA4Btb,GAA5B,IAAAtG,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAw0B,GAAA,cAAAA,EAAAt0B,KAAAs0B,EAAAr0B,MAAA,cAAAq0B,EAAAr0B,KAAA,EACqBg4B,GAAMC,QAAQ,iBAAkBnf,GADrD,cACStG,EADT6hB,EAAAvzB,KAAAuzB,EAAAtzB,OAAA,SAEUyR,GAFV,wBAAA6hB,EAAA/yB,SAAA8yB,0EA0BA,SAAA8D,EAA8Bpf,GAA9B,IAAAtG,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAs4B,GAAA,cAAAA,EAAAp4B,KAAAo4B,EAAAn4B,MAAA,cAAAm4B,EAAAn4B,KAAA,EACqBg4B,GAAMC,QAAQ,mBAAoBnf,GADvD,cACStG,EADT2lB,EAAAr3B,KAAAq3B,EAAAp3B,OAAA,SAEUyR,GAFV,wBAAA2lB,EAAA72B,SAAA42B,0EAiCA,SAAAE,EAA4Btf,GAA5B,IAAAtG,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAw4B,GAAA,cAAAA,EAAAt4B,KAAAs4B,EAAAr4B,MAAA,cAAAq4B,EAAAr4B,KAAA,EACqBg4B,GAAMC,QAAQ,iBAAkBnf,GADrD,cACStG,EADT6lB,EAAAv3B,KAAAu3B,EAAAt3B,OAAA,SAEUyR,GAFV,wBAAA6lB,EAAA/2B,SAAA82B,0EAsFA,SAAAE,EAAwBC,GAAxB,IAAA/lB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA24B,GAAA,cAAAA,EAAAz4B,KAAAy4B,EAAAx4B,MAAA,cAAAw4B,EAAAx4B,KAAA,EACqBg4B,GAAMC,QAAQ,YAAaM,GADhD,cACS/lB,EADTgmB,EAAA13B,KAAA03B,EAAAz3B,OAAA,SAEUyR,GAFV,wBAAAgmB,EAAAl3B,SAAAg3B,0EAcA,SAAAG,EAAqBrD,GAArB,IAAA5iB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA64B,GAAA,cAAAA,EAAA34B,KAAA24B,EAAA14B,MAAA,cAAA04B,EAAA14B,KAAA,EACqBg4B,GAAMC,QAAQ,QAAS7C,GAD5C,cACS5iB,EADTkmB,EAAA53B,KAAA43B,EAAA33B,OAAA,SAEUyR,GAFV,wBAAAkmB,EAAAp3B,SAAAm3B,0EAWA,SAAAE,IAAA,IAAAnmB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA+4B,GAAA,cAAAA,EAAA74B,KAAA64B,EAAA54B,MAAA,cAAA44B,EAAA54B,KAAA,EACqBg4B,GAAMC,QAAQ,gBADnC,cACSzlB,EADTomB,EAAA93B,KAAA83B,EAAA73B,OAAA,SAEUyR,GAFV,wBAAAomB,EAAAt3B,SAAAq3B,0EAkBA,SAAAE,IAAA,IAAArmB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAi5B,GAAA,cAAAA,EAAA/4B,KAAA+4B,EAAA94B,MAAA,cAAA84B,EAAA94B,KAAA,EACqBg4B,GAAMC,QAAQ,4BADnC,cACSzlB,EADTsmB,EAAAh4B,KAAAg4B,EAAA/3B,OAAA,SAEUyR,GAFV,wBAAAsmB,EAAAx3B,SAAAu3B,0EAmBA,SAAAE,IAAA,IAAAvmB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAm5B,GAAA,cAAAA,EAAAj5B,KAAAi5B,EAAAh5B,MAAA,cAAAg5B,EAAAh5B,KAAA,EACqBg4B,GAAMC,QAAQ,8BADnC,cACSzlB,EADTwmB,EAAAl4B,KAAAk4B,EAAAj4B,OAAA,SAEUyR,GAFV,wBAAAwmB,EAAA13B,SAAAy3B,0EA8BA,SAAAE,IAAA,IAAAzmB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAq5B,GAAA,cAAAA,EAAAn5B,KAAAm5B,EAAAl5B,MAAA,cAAAk5B,EAAAl5B,KAAA,EACqBg4B,GAAMC,QAAQ,cADnC,cACSzlB,EADT0mB,EAAAp4B,KAAAo4B,EAAAn4B,OAAA,SAEUyR,GAFV,wBAAA0mB,EAAA53B,SAAA23B,0EA4BA,SAAAE,IAAA,IAAA3mB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAu5B,GAAA,cAAAA,EAAAr5B,KAAAq5B,EAAAp5B,MAAA,cAAAo5B,EAAAp5B,KAAA,EACqBg4B,GAAMC,QAAQ,qBADnC,cACSzlB,EADT4mB,EAAAt4B,KAAAs4B,EAAAr4B,OAAA,SAEUyR,GAFV,wBAAA4mB,EAAA93B,SAAA63B,0EAqBA,SAAAE,IAAA,IAAA7mB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAy5B,GAAA,cAAAA,EAAAv5B,KAAAu5B,EAAAt5B,MAAA,cAAAs5B,EAAAt5B,KAAA,EACqBg4B,GAAMC,QAAQ,mBADnC,cACSzlB,EADT8mB,EAAAx4B,KAAAw4B,EAAAv4B,OAAA,SAEUyR,GAFV,wBAAA8mB,EAAAh4B,SAAA+3B,0EAaA,SAAAE,IAAA,IAAA/mB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA25B,GAAA,cAAAA,EAAAz5B,KAAAy5B,EAAAx5B,MAAA,cAAAw5B,EAAAx5B,KAAA,EACqBg4B,GAAMC,QAAQ,uBADnC,cACSzlB,EADTgnB,EAAA14B,KAAA04B,EAAAz4B,OAAA,SAEUyR,GAFV,wBAAAgnB,EAAAl4B,SAAAi4B,0EA8CA,SAAAE,EAA4BjuB,EAAIkuB,GAAhC,IAAAlnB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA85B,GAAA,cAAAA,EAAA55B,KAAA45B,EAAA35B,MAAA,cAAA25B,EAAA35B,KAAA,EACqBg4B,GAAMC,QAAQ,gBAAiBzsB,EAAIkuB,GADxD,cACSlnB,EADTmnB,EAAA74B,KAAA64B,EAAA54B,OAAA,SAEUyR,GAFV,wBAAAmnB,EAAAr4B,SAAAm4B,0EAeA,SAAAG,IAAA,IAAApnB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAg6B,GAAA,cAAAA,EAAA95B,KAAA85B,EAAA75B,MAAA,cAAA65B,EAAA75B,KAAA,EACqBg4B,GAAMC,QAAQ,cADnC,cACSzlB,EADTqnB,EAAA/4B,KAAA+4B,EAAA94B,OAAA,SAEUyR,GAFV,wBAAAqnB,EAAAv4B,SAAAs4B,0EAeA,SAAAE,IAAA,IAAAtnB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAk6B,GAAA,cAAAA,EAAAh6B,KAAAg6B,EAAA/5B,MAAA,cAAA+5B,EAAA/5B,KAAA,EACqBg4B,GAAMC,QAAQ,eADnC,cACSzlB,EADTunB,EAAAj5B,KAAAi5B,EAAAh5B,OAAA,SAEUyR,GAFV,wBAAAunB,EAAAz4B,SAAAw4B,0EAcA,SAAAE,EAAkCxuB,GAAlC,IAAAgH,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAo6B,GAAA,cAAAA,EAAAl6B,KAAAk6B,EAAAj6B,MAAA,cAAAi6B,EAAAj6B,KAAA,EACqBg4B,GAAMC,QAAQ,uBAAwBzsB,GAD3D,cACSgH,EADTynB,EAAAn5B,KAAAm5B,EAAAl5B,OAAA,SAEUyR,GAFV,wBAAAynB,EAAA34B,SAAA04B,0EA+BA,SAAAE,EAAwC1uB,GAAxC,IAAAgH,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAs6B,GAAA,cAAAA,EAAAp6B,KAAAo6B,EAAAn6B,MAAA,cAAAm6B,EAAAn6B,KAAA,EACqBg4B,GAAMC,QAAQ,8BAA+BzsB,GADlE,cACSgH,EADT2nB,EAAAr5B,KAAAq5B,EAAAp5B,OAAA,SAEUyR,GAFV,wBAAA2nB,EAAA74B,SAAA44B,0EAyBA,SAAAE,IAAA,IAAA5nB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAw6B,GAAA,cAAAA,EAAAt6B,KAAAs6B,EAAAr6B,MAAA,cAAAq6B,EAAAr6B,KAAA,EACqBg4B,GAAMC,QAAQ,gBADnC,cACSzlB,EADT6nB,EAAAv5B,KAAAu5B,EAAAt5B,OAAA,SAEUyR,GAFV,wBAAA6nB,EAAA/4B,SAAA84B,0EAmFA,SAAAE,IAAA,IAAA9nB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA06B,GAAA,cAAAA,EAAAx6B,KAAAw6B,EAAAv6B,MAAA,cAAAu6B,EAAAv6B,KAAA,EACqBg4B,GAAMC,QAAQ,uBADnC,cACSzlB,EADT+nB,EAAAz5B,KAAAy5B,EAAAx5B,OAAA,SAEUyR,GAFV,wBAAA+nB,EAAAj5B,SAAAg5B,0EAqEA,SAAAE,IAAA,IAAAhoB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA46B,GAAA,cAAAA,EAAA16B,KAAA06B,EAAAz6B,MAAA,cAAAy6B,EAAAz6B,KAAA,EACqBg4B,GAAMC,QAAQ,aADnC,cACSzlB,EADTioB,EAAA35B,KAAA25B,EAAA15B,OAAA,SAEUyR,GAFV,wBAAAioB,EAAAn5B,SAAAk5B,0EAcA,SAAAE,IAAA,IAAAloB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA86B,GAAA,cAAAA,EAAA56B,KAAA46B,EAAA36B,MAAA,cAAA26B,EAAA36B,KAAA,EACqBg4B,GAAMC,QAAQ,kBADnC,cACSzlB,EADTmoB,EAAA75B,KAAA65B,EAAA55B,OAAA,SAEUyR,GAFV,wBAAAmoB,EAAAr5B,SAAAo5B,0EAkDA,SAAAE,IAAA,IAAApoB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAg7B,GAAA,cAAAA,EAAA96B,KAAA86B,EAAA76B,MAAA,cAAA66B,EAAA76B,KAAA,EACqBg4B,GAAMC,QAAQ,yBADnC,cACSzlB,EADTqoB,EAAA/5B,KAAA+5B,EAAA95B,OAAA,SAEUyR,GAFV,wBAAAqoB,EAAAv5B,SAAAs5B,0EAaA,SAAAE,IAAA,IAAAtoB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAk7B,GAAA,cAAAA,EAAAh7B,KAAAg7B,EAAA/6B,MAAA,cAAA+6B,EAAA/6B,KAAA,EACqBg4B,GAAMC,QAAQ,cADnC,cACSzlB,EADTuoB,EAAAj6B,KAAAi6B,EAAAh6B,OAAA,SAEUyR,GAFV,wBAAAuoB,EAAAz5B,SAAAw5B,0EAsBA,SAAAE,EAAuBzkB,GAAvB,IAAA/D,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAo7B,GAAA,cAAAA,EAAAl7B,KAAAk7B,EAAAj7B,MAAA,cAAAi7B,EAAAj7B,KAAA,EACqBg4B,GAAMC,QAAQ,UAAW1hB,GAD9C,cACS/D,EADTyoB,EAAAn6B,KAAAm6B,EAAAl6B,OAAA,SAEUyR,GAFV,wBAAAyoB,EAAA35B,SAAA05B,0EAWA,SAAAE,IAAA,IAAA1oB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAs7B,GAAA,cAAAA,EAAAp7B,KAAAo7B,EAAAn7B,MAAA,cAAAm7B,EAAAn7B,KAAA,EACqBg4B,GAAMC,QAAQ,kBADnC,cACSzlB,EADT2oB,EAAAr6B,KAAAq6B,EAAAp6B,OAAA,SAEUyR,GAFV,wBAAA2oB,EAAA75B,SAAA45B,0EAcA,SAAAE,EAAqC5vB,GAArC,IAAAgH,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAw7B,GAAA,cAAAA,EAAAt7B,KAAAs7B,EAAAr7B,MAAA,cAAAq7B,EAAAr7B,KAAA,EACqBg4B,GAAMC,QAAQ,0BAA2BzsB,GAD9D,cACSgH,EADT6oB,EAAAv6B,KAAAu6B,EAAAt6B,OAAA,SAEUyR,GAFV,wBAAA6oB,EAAA/5B,SAAA85B,0EAWA,SAAAE,IAAA,IAAA9oB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA07B,GAAA,cAAAA,EAAAx7B,KAAAw7B,EAAAv7B,MAAA,cAAAu7B,EAAAv7B,KAAA,EACqBg4B,GAAMC,QAAQ,QADnC,cACSzlB,EADT+oB,EAAAz6B,KAAAy6B,EAAAx6B,OAAA,SAEUyR,GAFV,wBAAA+oB,EAAAj6B,SAAAg6B,0EAYA,SAAAE,EAAgCC,GAAhC,IAAAjpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA67B,GAAA,cAAAA,EAAA37B,KAAA27B,EAAA17B,MAAA,cAAA07B,EAAA17B,KAAA,EACqBg4B,GAAMC,QAAQ,qBAAsBwD,GADzD,cACSjpB,EADTkpB,EAAA56B,KAAA46B,EAAA36B,OAAA,SAEUyR,GAFV,wBAAAkpB,EAAAp6B,SAAAk6B,0EAYA,SAAAG,EAA4BF,GAA5B,IAAAjpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA+7B,GAAA,cAAAA,EAAA77B,KAAA67B,EAAA57B,MAAA,cAAA47B,EAAA57B,KAAA,EACqBg4B,GAAMC,QAAQ,gBAAiBwD,GADpD,cACSjpB,EADTopB,EAAA96B,KAAA86B,EAAA76B,OAAA,SAEUyR,GAFV,wBAAAopB,EAAAt6B,SAAAq6B,0EAYA,SAAAE,EAA2BJ,GAA3B,IAAAjpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAi8B,GAAA,cAAAA,EAAA/7B,KAAA+7B,EAAA97B,MAAA,cAAA87B,EAAA97B,KAAA,EACqBg4B,GAAMC,QAAQ,eAAgBwD,GADnD,cACSjpB,EADTspB,EAAAh7B,KAAAg7B,EAAA/6B,OAAA,SAEUyR,GAFV,wBAAAspB,EAAAx6B,SAAAu6B,0EAyFA,SAAAE,EAAkCC,GAAlC,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAo8B,GAAA,cAAAA,EAAAl8B,KAAAk8B,EAAAj8B,MAAA,cAAAi8B,EAAAj8B,KAAA,EACqBg4B,GAAMC,QAAQ,uBAAwB+D,GAD3D,cACSxpB,EADTypB,EAAAn7B,KAAAm7B,EAAAl7B,OAAA,SAEUyR,GAFV,wBAAAypB,EAAA36B,SAAAy6B,0EAWA,SAAAG,IAAA,IAAA1pB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAs8B,GAAA,cAAAA,EAAAp8B,KAAAo8B,EAAAn8B,MAAA,cAAAm8B,EAAAn8B,KAAA,EACqBg4B,GAAMC,QAAQ,gBADnC,cACSzlB,EADT2pB,EAAAr7B,KAAAq7B,EAAAp7B,OAAA,SAEUyR,GAFV,wBAAA2pB,EAAA76B,SAAA46B,0EAcA,SAAAE,EAAsBC,GAAtB,IAAA7pB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAy8B,GAAA,cAAAA,EAAAv8B,KAAAu8B,EAAAt8B,MAAA,cAAAs8B,EAAAt8B,KAAA,EACqBg4B,GAAMC,QAAQ,SAAUoE,GAD7C,cACS7pB,EADT8pB,EAAAx7B,KAAAw7B,EAAAv7B,OAAA,SAEUyR,GAFV,wBAAA8pB,EAAAh7B,SAAA86B,0EAmBA,SAAAG,EAAsCP,GAAtC,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA28B,GAAA,cAAAA,EAAAz8B,KAAAy8B,EAAAx8B,MAAA,cAAAw8B,EAAAx8B,KAAA,EACqBg4B,GAAMC,QAAQ,2BAA4B+D,GAD/D,cACSxpB,EADTgqB,EAAA17B,KAAA07B,EAAAz7B,OAAA,SAEUyR,GAFV,wBAAAgqB,EAAAl7B,SAAAi7B,0EAoBA,SAAAE,EAAwCT,GAAxC,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA68B,GAAA,cAAAA,EAAA38B,KAAA28B,EAAA18B,MAAA,cAAA08B,EAAA18B,KAAA,EACqBg4B,GAAMC,QAAQ,6BAA8B+D,GADjE,cACSxpB,EADTkqB,EAAA57B,KAAA47B,EAAA37B,OAAA,SAEUyR,GAFV,wBAAAkqB,EAAAp7B,SAAAm7B,0EA+BA,SAAAE,EAAyBX,GAAzB,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA+8B,GAAA,cAAAA,EAAA78B,KAAA68B,EAAA58B,MAAA,cAAA48B,EAAA58B,KAAA,EACqBg4B,GAAMC,QAAQ,aAAc+D,GADjD,cACSxpB,EADToqB,EAAA97B,KAAA87B,EAAA77B,OAAA,SAEUyR,GAFV,wBAAAoqB,EAAAt7B,SAAAq7B,0EA6BA,SAAAE,EAA+BC,GAA/B,IAAAtqB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAk9B,GAAA,cAAAA,EAAAh9B,KAAAg9B,EAAA/8B,MAAA,cAAA+8B,EAAA/8B,KAAA,EACqBg4B,GAAMC,QAAQ,oBAAqB6E,GADxD,cACStqB,EADTuqB,EAAAj8B,KAAAi8B,EAAAh8B,OAAA,SAEUyR,GAFV,wBAAAuqB,EAAAz7B,SAAAu7B,0EAcA,SAAAG,EAAiCjQ,GAAjC,IAAAva,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAo9B,GAAA,cAAAA,EAAAl9B,KAAAk9B,EAAAj9B,MAAA,cAAAi9B,EAAAj9B,KAAA,EACqBg4B,GAAMC,QAAQ,sBAAuBlL,GAD1D,cACSva,EADTyqB,EAAAn8B,KAAAm8B,EAAAl8B,OAAA,SAEUyR,GAFV,wBAAAyqB,EAAA37B,SAAA07B,0EAeA,SAAAE,EAAkClB,GAAlC,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAs9B,GAAA,cAAAA,EAAAp9B,KAAAo9B,EAAAn9B,MAAA,cAAAm9B,EAAAn9B,KAAA,EACqBg4B,GAAMC,QAAQ,uBAAwB+D,GAD3D,cACSxpB,EADT2qB,EAAAr8B,KAAAq8B,EAAAp8B,OAAA,SAEUyR,GAFV,wBAAA2qB,EAAA77B,SAAA47B,0EAgCA,SAAAE,EAAwCpB,GAAxC,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAw9B,GAAA,cAAAA,EAAAt9B,KAAAs9B,EAAAr9B,MAAA,cAAAq9B,EAAAr9B,KAAA,EACqBg4B,GAAMC,QAAQ,8BAA+B+D,GADlE,cACSxpB,EADT6qB,EAAAv8B,KAAAu8B,EAAAt8B,OAAA,SAEUyR,GAFV,wBAAA6qB,EAAA/7B,SAAA87B,0EA0BA,SAAAE,EAA2BtB,GAA3B,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA09B,GAAA,cAAAA,EAAAx9B,KAAAw9B,EAAAv9B,MAAA,cAAAu9B,EAAAv9B,KAAA,EACqBg4B,GAAMC,QAAQ,eAAgB+D,GADnD,cACSxpB,EADT+qB,EAAAz8B,KAAAy8B,EAAAx8B,OAAA,SAEUyR,GAFV,wBAAA+qB,EAAAj8B,SAAAg8B,0EAoFA,SAAAE,EAAiCV,GAAjC,IAAAtqB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA49B,GAAA,cAAAA,EAAA19B,KAAA09B,EAAAz9B,MAAA,cAAAy9B,EAAAz9B,KAAA,EACqBg4B,GAAMC,QAAQ,sBAAuB6E,GAD1D,cACStqB,EADTirB,EAAA38B,KAAA28B,EAAA18B,OAAA,SAEUyR,GAFV,wBAAAirB,EAAAn8B,SAAAk8B,0EAsEA,SAAAE,EAAwB1B,GAAxB,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA89B,GAAA,cAAAA,EAAA59B,KAAA49B,EAAA39B,MAAA,cAAA29B,EAAA39B,KAAA,EACqBg4B,GAAMC,QAAQ,YAAa+D,GADhD,cACSxpB,EADTmrB,EAAA78B,KAAA68B,EAAA58B,OAAA,SAEUyR,GAFV,wBAAAmrB,EAAAr8B,SAAAo8B,0EAmDA,SAAAE,EAAmC5B,GAAnC,IAAAxpB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAg+B,GAAA,cAAAA,EAAA99B,KAAA89B,EAAA79B,MAAA,cAAA69B,EAAA79B,KAAA,EACqBg4B,GAAMC,QAAQ,wBAAyB+D,GAD5D,cACSxpB,EADTqrB,EAAA/8B,KAAA+8B,EAAA98B,OAAA,SAEUyR,GAFV,wBAAAqrB,EAAAv8B,SAAAs8B,0EAwEA,SAAAE,EAAwBC,GAAxB,IAAAvrB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAm+B,GAAA,cAAAA,EAAAj+B,KAAAi+B,EAAAh+B,MAAA,cAAAg+B,EAAAh+B,KAAA,EACqBg4B,GAAMC,QAAQ,WAAY8F,GAD/C,cACSvrB,EADTwrB,EAAAl9B,KAAAk9B,EAAAj9B,OAAA,SAEUyR,GAFV,wBAAAwrB,EAAA18B,SAAAw8B,0EAoBA,SAAAG,EAA+BC,GAA/B,IAAA1rB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAs+B,GAAA,cAAAA,EAAAp+B,KAAAo+B,EAAAn+B,MAAA,cAAAm+B,EAAAn+B,KAAA,EACqBg4B,GAAMC,QAAQ,oBAAqBiG,GADxD,cACS1rB,EADT2rB,EAAAr9B,KAAAq9B,EAAAp9B,OAAA,SAEUyR,GAFV,wBAAA2rB,EAAA78B,SAAA28B,0EAwCA,SAAAG,EAA8BC,GAA9B,IAAA7rB,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAAy+B,GAAA,cAAAA,EAAAv+B,KAAAu+B,EAAAt+B,MAAA,cAAAs+B,EAAAt+B,KAAA,EACqBg4B,GAAMC,QAAQ,kBAAmBoG,GADtD,cACS7rB,EADT8rB,EAAAx9B,KAAAw9B,EAAAv9B,OAAA,SAEUyR,GAFV,wBAAA8rB,EAAAh9B,SAAA88B,0EAsDA,SAAAG,EAA2BvQ,GAA3B,IAAAxb,EAAA,OAAAxT,EAAAC,EAAAY,KAAA,SAAA2+B,GAAA,cAAAA,EAAAz+B,KAAAy+B,EAAAx+B,MAAA,cAAAw+B,EAAAx+B,KAAA,EACqBg4B,GAAMC,QAAQ,eAAgBjK,GADnD,cACSxb,EADTgsB,EAAA19B,KAAA09B,EAAAz9B,OAAA,SAEUyR,GAFV,wBAAAgsB,EAAAl9B,SAAAi9B,iCC3kDqBE,cACjB,SAAAA,EAAoBp/B,GAAiBP,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAg9B,GAAAh9B,KAAjBpC,oGAEPkX,0EACT9U,KAAKpC,OAAOq/B,eAAejW,YAAclS,WAC5B9U,KAAKk9B,mTAOL3G,GAAMC,QAAQ,eAAgB,CAACx2B,KAAKpC,OAAOmM,2NAU1CozB,0EACdn9B,KAAKpC,OAAOw/B,UAAYD,EACxBn9B,KAAKpC,OAAOy/B,YAAcF,WACpB5G,GAAMC,QAAQ,eAAgB,CAChCzsB,GAAI/J,KAAKpC,OAAOmM,GAChBszB,YAAaF,WAEjBn9B,KAAKs9B,wQAQC/G,GAAMC,QAAQ,eAAgB,CAChCzsB,GAAI/J,KAAKpC,OAAOmM,GAChBiX,SAAS,WAEbhhB,KAAKpC,OAAOojB,SAAU,EACtBhhB,KAAKs9B,uQAIC/G,GAAMC,QAAQ,eAAgB,CAChCzsB,GAAI/J,KAAKpC,OAAOmM,GAChBiX,SAAS,WAEbhhB,KAAKpC,OAAOojB,SAAU,EACtBhhB,KAAKs9B,uRAOe/G,GAAMC,QAAQ,uBAA5B+G,SACAhR,EAAQgR,EAAMlR,OAAOmR,KAAM,SAAC5tB,GAAD,OAAYA,EAAE7F,KAAO9D,EAAKrI,OAAOmM,+CAC/C,0BACbwsB,GAAMrc,OAAOujB,aAAalR,EAAMmR,yCAC/B,uIAGY,IAAA/1B,EAAA3H,KACnB,OAAO,IAAI2vB,QAAiB,SAACC,EAASuB,GAChBoF,GAAMC,QACpB,eAAgB,CACZzsB,GAAIpC,EAAK/J,OAAOmM,GAChBkzB,eAAgBt1B,EAAK/J,OAAOq/B,iBAE1B7L,KAAKxB,EAASuB,2CAK5BtC,GAAML,SAASK,GAAMZ,OAAOhtB,OAAOjB,KAAKpC,yCA1DxC,OAAOoC,KAAKpC,OAAOw/B,0CAcnB,OAAOp9B,KAAKpC,OAAOojB,iBCvCZ2c,GAAA,CACXC,WAYJ,SAAoBpgC,EAAYqgC,GAC5B,MAAO,CACHA,EAAE,GAAKrgC,EAAE,GACTqgC,EAAE,GAAKrgC,EAAE,GACTqgC,EAAE,GAAKrgC,EAAE,KAfbsgC,6BAoBJ,SAAsCC,EAAeC,GACjD,IAAMC,EAAoB,GAARF,EACZ9V,EAAI3b,KAAK4xB,IAAID,GACbxqB,EAAInH,KAAK6xB,IAAIF,GAH0DG,EAAA/gC,OAAA+lB,EAAA,EAAA/lB,CAI3D2gC,EAJ2D,GAItE16B,EAJsE86B,EAAA,GAInE76B,EAJmE66B,EAAA,GAIhEC,EAJgED,EAAA,GAK7E,MAAO,CAAE96B,EAAImQ,EAAGlQ,EAAIkQ,EAAG4qB,EAAI5qB,EAAGwU,IAxB9BqW,uBACAprB,UAuCJ,SAAmBqrB,GAA0B,IAAAC,EAAAnhC,OAAA+lB,EAAA,EAAA/lB,CACzBkhC,EADyB,GAClCj7B,EADkCk7B,EAAA,GAChCj7B,EADgCi7B,EAAA,GAC9BH,EAD8BG,EAAA,GAEnCC,EAAOn7B,EAAEA,EAAIC,EAAEA,EAAI86B,EAAEA,EAC3B,GAAII,EAAO,KAAa,MAAO,CAAC,EAAE,EAAE,GACpC,IAAMC,EAAI,EAAIpyB,KAAK2M,KAAKwlB,GACxB,MAAO,CAACn7B,EAAEo7B,EAAGn7B,EAAEm7B,EAAGL,EAAEK,IA3CpBC,UAqDJ,SAAmBC,EAAgBC,GACjC,IAAMhlB,EAAIilB,GAAcF,EAAOC,GAC/B,SAAA7/B,OAAA3B,OAAAqsB,GAAA,EAAArsB,CAAWwhC,GAAX,CAAmBhlB,KAtDjBklB,qBAiEJ,SAA8BH,EAAgBI,GAC1C,IAAMC,EAAID,EADkEE,EAAA7hC,OAAA+lB,EAAA,EAAA/lB,CAE1DuhC,EAF0D,GAErEt7B,EAFqE47B,EAAA,GAElE37B,EAFkE27B,EAAA,GAE/Db,EAF+Da,EAAA,GAAAC,EAAA9hC,OAAA+lB,EAAA,EAAA/lB,CAGnD4hC,EAHmD,GAGrEG,EAHqED,EAAA,GAGjEE,EAHiEF,EAAA,GAG7DG,EAH6DH,EAAA,GAGzDI,EAHyDJ,EAAA,GAOtE/wB,EAAIkwB,GACNW,EAAGX,GAHgB,CAACh7B,EAAGC,EAAG86B,EAAG,GADP,EAAEe,GAAKC,GAAKC,EAAIC,KAM1C,MAAO,CAACnxB,EAAE,GAAIA,EAAE,GAAIA,EAAE,KA1EtB0wB,iBACAU,MAgFJ,SAAejB,EAAiBkB,GAC5B,OAAOlB,EAAOr7B,IAAI,SAACw8B,GAAD,OAAeA,EAAID,KAhFrCE,iBAoFJ,SAA0BniC,EAAYqgC,GAClC,MAAO,CACHA,EAAE,GAAKrgC,EAAE,GACTqgC,EAAE,GAAKrgC,EAAE,GACTqgC,EAAE,GAAKrgC,EAAE,MAlEjB,SAAS8gC,GAAoBsB,EAAgB5kB,GAA6B,IAAA6kB,EAAAxiC,OAAA+lB,EAAA,EAAA/lB,CAC7CuiC,EAD6C,GAC/DE,EAD+DD,EAAA,GAC3DE,EAD2DF,EAAA,GACvDG,EADuDH,EAAA,GACnDI,EADmDJ,EAAA,GAAAK,EAAA7iC,OAAA+lB,EAAA,EAAA/lB,CAE7C2d,EAF6C,GAE/DmlB,EAF+DD,EAAA,GAE3DE,EAF2DF,EAAA,GAEvDjpB,EAFuDipB,EAAA,GAEnDrpB,EAFmDqpB,EAAA,GAGtE,MAAO,CACHrpB,EAAGipB,EAAKK,EAAGF,EAAKG,EAAGJ,EAAK/oB,EAAG8oB,EAC3BlpB,EAAGkpB,EAAKI,EAAGH,EAAKI,EAAGH,EAAKhpB,EAAG6oB,EAC3BjpB,EAAGmpB,EAAKG,EAAGJ,EAAKK,EAAGN,EAAK7oB,EAAGgpB,EAC3BppB,EAAGopB,EAAKE,EAAGL,EAAKM,EAAGL,EAAK9oB,EAAG+oB,GA0BnC,SAASlB,GAAcuB,EAAaC,GAAqB,IAAAC,EAAAljC,OAAA+lB,EAAA,EAAA/lB,CAChCgjC,EADgC,GAC9Cv7B,EAD8Cy7B,EAAA,GAC1Cv7B,EAD0Cu7B,EAAA,GACtCC,EADsCD,EAAA,GAAAE,EAAApjC,OAAA+lB,EAAA,EAAA/lB,CAEhCijC,EAFgC,GAGrD,OAAOx7B,EAH8C27B,EAAA,GAGtCz7B,EAHsCy7B,EAAA,GAG9BD,EAH8BC,EAAA,GChE1C,IAAAC,GAAA,CACXC,0BASJ,SAAmCpU,GAC/B,MAAO,CACHqU,OAAQvjC,OAAO0D,OAAO,GAAIwrB,GAC1BsU,OAAQ,EACRC,SAAS,EACT3D,UAAU,IAbd4D,gBAqBJ,SAAyB1U,GACrB,IAAMuS,EAAiB,CAAEtvB,IAAK,CAAC,EAAE,EAAE,GAAIC,IAAK,CAAC,EAAE,EAAE,IACjD,GAAsB,IAAlB8c,EAAO7tB,OAAc,OAAOogC,EAGhC,IAFA,IAAMlB,EAASrR,EAAO,GAAGuU,OAAOlD,QAAUkB,EAEjCoC,EAAE,EAAGA,EAAE3U,EAAO7tB,OAAQwiC,IAAM,CACjC,IAAMzU,EAAQF,EAAO2U,GACrB,GAAKzU,EAAMqU,OAAO5f,QAAlB,CACA,IAAM6c,EAAItR,EAAMqU,OAAOlD,QAAUkB,EACjClB,EAAOpuB,IAAI,GAAKhD,KAAKgD,IAAIouB,EAAOpuB,IAAI,GAAIuuB,EAAEvuB,IAAI,IAC9CouB,EAAOpuB,IAAI,GAAKhD,KAAKgD,IAAIouB,EAAOpuB,IAAI,GAAIuuB,EAAEvuB,IAAI,IAC9CouB,EAAOpuB,IAAI,GAAKhD,KAAKgD,IAAIouB,EAAOpuB,IAAI,GAAIuuB,EAAEvuB,IAAI,IAC9CouB,EAAOnuB,IAAI,GAAKjD,KAAKiD,IAAImuB,EAAOnuB,IAAI,GAAIsuB,EAAEtuB,IAAI,IAC9CmuB,EAAOnuB,IAAI,GAAKjD,KAAKiD,IAAImuB,EAAOnuB,IAAI,GAAIsuB,EAAEtuB,IAAI,IAC9CmuB,EAAOnuB,IAAI,GAAKjD,KAAKiD,IAAImuB,EAAOnuB,IAAI,GAAIsuB,EAAEtuB,IAAI,KAElD,OAAOmuB,QC7BWuD,cACjB,SAAAA,EAAoBrjC,GAAkBP,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAihC,GAAAjhC,KAAlBpC,gMAG0BoC,KAAKpC,OAAvCsjC,gBAAapsB,aAAUhJ,oBACzByqB,GAAMC,QAAQ,aAAc,CAC9B0K,cAAapsB,WAAUhJ,4CAEpB,yIAOCgJ,GACR9U,KAAKpC,OAAOkX,SAAWA,EACvB9U,KAAKmhC,qDAOMD,GACXlhC,KAAKpC,OAAOsjC,YAAcA,EAC1BlhC,KAAKmhC,gEAGiBrsB,EAAmBosB,GACzClhC,KAAKpC,OAAOkX,SAAWA,EACvB9U,KAAKpC,OAAOsjC,YAAcA,EAC1BlhC,KAAKmhC,wFAsCOr1B,kFACN2O,EAAYza,KAAKya,UACjB2mB,EAAWC,GAAKvC,cAClBuC,GAAK1B,iBAAiB3/B,KAAKpC,OAAOkX,SAAUhJ,GAC5C2O,GAEJza,KAAKpC,OAAOkX,SAAWusB,GAAKzD,WACxB9xB,EACAu1B,GAAK7B,MAAM/kB,GAAY2mB,IAE3BphC,KAAKpC,OAAOkO,OAASA,WACR9L,KAAKmhC,mOAGNr1B,EAAiBw1B,kFACvB7mB,EAAYza,KAAKya,UACjB2mB,EAAWC,GAAKvC,cAClBuC,GAAK1B,iBAAiB3/B,KAAKpC,OAAOkX,SAAUhJ,GAC5C2O,GACA6mB,EACJthC,KAAKpC,OAAOkX,SAAWusB,GAAKzD,WACxB9xB,EACAu1B,GAAK7B,MAAM/kB,GAAY2mB,IAE3BphC,KAAKpC,OAAOkO,OAASA,WACR9L,KAAKmhC,uMAIlB,IAAMI,EAAUvhC,KAAKg+B,KAAKK,EAE1B,OAAOgD,GAAKvC,cACRyC,EACAF,GAAK1B,iBACD3/B,KAAKpC,OAAOkO,OACZ9L,KAAKpC,OAAOkX,uFAaN0sB,sFACRlY,EAAMtpB,KAAKya,YACYza,KAAKpC,OAA1BkX,aAAUhJ,WAClB9L,KAAKpC,OAAOkX,SAAW,CACnBA,EAAS,GAAKwU,EAAI,GAAKkY,EACvB1sB,EAAS,GAAKwU,EAAI,GAAKkY,EACvB1sB,EAAS,GAAKwU,EAAI,GAAKkY,GAE3BxhC,KAAKpC,OAAOkO,OAAS,CACjBA,EAAO,GAAKwd,EAAI,GAAKkY,EACrB11B,EAAO,GAAKwd,EAAI,GAAKkY,EACrB11B,EAAO,GAAKwd,EAAI,GAAKkY,YAEnBxhC,KAAKmhC,8LAGIK,sFACTlY,EAAMtpB,KAAKya,YACYza,KAAKpC,OAA1BkX,aAAUhJ,WAClB9L,KAAKpC,OAAOkX,SAAW,CACnBA,EAAS,GAAKwU,EAAI,GAAKkY,EACvB1sB,EAAS,GAAKwU,EAAI,GAAKkY,EACvB1sB,EAAS,GAAKwU,EAAI,GAAKkY,GAE3BxhC,KAAKpC,OAAOkO,OAAS,CACjBA,EAAO,GAAKwd,EAAI,GAAKkY,EACrB11B,EAAO,GAAKwd,EAAI,GAAKkY,EACrB11B,EAAO,GAAKwd,EAAI,GAAKkY,YAEnBxhC,KAAKmhC,iRAILzD,EAASzP,GAAO8S,gBACpBlS,GAAMR,MAAMoT,WAAWpV,OAAOnpB,IAAI,SAAA0M,GAAC,MACjC,CACIgxB,OAAQhxB,eAGV5P,KAAKy9B,aAAaC,kLAGTA,sGACTjQ,EAAOiQ,EAAOpuB,IAAI,GAClBoyB,EAAOhE,EAAOpuB,IAAI,GAClBqyB,EAAOjE,EAAOpuB,IAAI,GAClBoe,EAAOgQ,EAAOnuB,IAAI,GAClBqyB,EAAOlE,EAAOnuB,IAAI,GAClBsyB,EAAOnE,EAAOnuB,IAAI,GAClBuyB,GAAWrU,EAAOC,GAAQ,EAC1BqU,GAAWL,EAAOE,GAAQ,EAC1BI,GAAWL,EAAOE,GAAQ,EAC1Bt2B,EAAQmiB,EAAOD,EACfjiB,EAASo2B,EAAOF,EAChBO,EAAUJ,EAAiC,GAA3Bv1B,KAAKiD,IAAIhE,EAAQC,GAEvCxL,KAAKpC,OAAOsjC,YAAc,CAAC,EAAE,EAAE,EAAE,GACjClhC,KAAKpC,OAAOkX,SAAW,CAACgtB,EAASC,EAASE,GAC1CjiC,KAAKpC,OAAOkO,OAAS,CAACg2B,EAASC,EAASC,aAClChiC,KAAKmhC,mJArKX,OAAOnhC,KAAKpC,OAAOkX,SAASwX,4CAS5B,OAAOtsB,KAAKpC,OAAOsjC,YAAY5U,qCAcjB,IAAA4V,EAAA7kC,OAAA+lB,EAAA,EAAA/lB,CACO2C,KAAKkhC,YADZ,GACPrD,EADOqE,EAAA,GACJja,EADIia,EAAA,GACDroB,EADCqoB,EAAA,GACE1kC,EADF0kC,EAAA,GAERC,EAAK3kC,EAAEA,EACP4kC,EAAKvE,EAAEA,EACPwE,EAAKpa,EAAEA,EACPqa,EAAKzoB,EAAEA,EACP0oB,EAAM,EAAE/kC,EAAEqgC,EACV2E,EAAM,EAAEhlC,EAAEyqB,EACVwa,EAAM,EAAEjlC,EAAEqc,EACV6oB,EAAM,EAAE7E,EAAE5V,EACV0a,EAAM,EAAE9E,EAAEhkB,EACV+oB,EAAM,EAAE3a,EAAEpO,EAChB,MAAO,CACHvW,EAAG,CACC6+B,EAAKC,EAAKC,EAAKC,EACfG,EAAMC,EACNC,EAAMH,GAEVj/B,EAAE,CACEm/B,EAAMD,EACNN,EAAKC,EAAKC,EAAKC,EACfC,EAAMK,GAEVvE,EAAE,CACEmE,EAAMG,EACNC,EAAML,EACNJ,EAAKC,EAAKC,EAAKC,mCAMvB,OAAOtiC,KAAKpC,OAAOkO,OAAOwgB,0CA8CL,IAAAuW,EACQ7iC,KAAKpC,OAA1BkX,EADa+tB,EACb/tB,SAAUhJ,EADG+2B,EACH/2B,OAClB,OAAOu1B,GAAKnuB,UAAUmuB,GAAK1B,iBAAiB7qB,EAAUhJ,aC7H1Cg3B,+DACTC,QAAoC,UACpCC,IAAuC,UACvCC,KAAoB,UACpBC,UAAoB,OACpBC,qBAA+B,OAmBvCC,2BAAQ,SAAA1lC,IAAA,IAAAulC,EAAAI,EAAAL,EAAAM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArmC,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAGI2H,EAAKk9B,uBAAyBl9B,EAAKi9B,UAHvC,CAAA7kC,EAAAE,KAAA,eAAAF,EAAAiB,OAAA,oBAIM2jC,EAAOh9B,EAAKg9B,KAJlB,CAAA5kC,EAAAE,KAAA,eAAAF,EAAAiB,OAAA,oBAMM+jC,EAASp9B,EAAKo9B,OANpB,CAAAhlC,EAAAE,KAAA,eAAAF,EAAAiB,OAAA,oBAQM0jC,EAAM/8B,EAAK+8B,IARjB,CAAA3kC,EAAAE,KAAA,gBAAAF,EAAAiB,OAAA,yBAAAjB,EAAAE,KAAA,GAUkBslC,GAAUZ,GAV5B,QAUMK,EAVNjlC,EAAAgB,KAWMkkC,EAAOD,EAAIQ,aACXN,EAAOF,EAAIS,cACXN,EAAOJ,EAAO93B,MACdm4B,EAAOL,EAAO73B,OACdm4B,GAAQF,EAAOF,GAAQ,EACvBK,GAAQF,EAAOF,GAAQ,EAC7BR,EAAIgB,UACAV,EACAK,EAAMC,EACNL,EAAMC,GAEVv9B,EAAKk9B,qBAAuBl9B,EAAKi9B,UAtBjC,eAAA7kC,EAAAC,KAAA,GAyBAgjB,sBAAsBrb,EAAKm9B,OAzB3B/kC,EAAA4lC,OAAA,6BAAA5lC,EAAAwB,SAAAnC,EAAA,uEAjBHkjC,GAAsB,IAAAj5B,EAAA3H,KACvB4gC,EACKsD,QAAQ,cACRjR,UAAU,SAACgQ,GACRt7B,EAAKs7B,KAAOA,EACZt7B,EAAKu7B,cAEb5hB,sBAAsBthB,KAAKojC,sCAGhB,OAAOpjC,KAAK+iC,sBAChBM,GACPrjC,KAAK+iC,QAAUM,EACVA,IACLrjC,KAAKgjC,IAAMK,EAAOc,WAAW,gBAkCrC,SAASN,GAAUZ,GACf,IAAMnlC,EAAMsmC,IAAIC,gBAAgBpB,GAC1BK,EAAW,IAAIgB,MACrB,OAAO,IAAI3U,QAA0B,SAAAC,GACjC0T,EAAIiB,IAAMzmC,EAENwlC,EAAIkB,OACJlB,EAAIkB,SAECpT,KAAK,kBAAMxB,EAAQ0T,KAExBA,EAAImB,OAAS,kBAAM7U,EAAQ0T,MC1DxB,IAAAoB,GAAA,SAAU/jC,EAAgBwI,GACrC,IAAIw7B,EAAgB,EAEpB,OAAO,WAAkD,QAAA/5B,EAAAzM,UAAAK,OAAbmZ,EAAa,IAAA3U,MAAA4H,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAb6M,EAAa7M,GAAA3M,UAAA2M,GACjD65B,GAAOtjC,OAAOggB,aAAasjB,GAC/BA,EAAQtjC,OAAOgY,WAAW,WACtBsrB,EAAQ,EACRhkC,EAAMZ,WAAN,EAAU4X,IACXxO,KCXUy7B,+DACTC,YAAuB,CAAC,EAAE,EAAE,QAC5BC,cAAyB,CAAC,EAAE,EAAE,QAC9BC,iBAAgC,CAAC,EAAE,EAAE,EAAE,QACvCC,UAAmB,CACvB1hC,EAAG,CAAC,EAAE,EAAE,GAAIC,EAAG,CAAC,EAAE,EAAE,GAAI86B,EAAG,CAAC,EAAE,EAAE,SAE5B4G,iBAAiC,CAAEC,QAAS,EAAGC,QAAS,QACxDC,oBAA8B,OAKtCC,eAAiB,SAACl/B,GACdzH,QAAQC,KAAK,OAAQwH,GACrB,IAAM63B,EAAOzH,GAAMrc,OAAO8jB,KAC1B/3B,EAAK4+B,YAActO,GAAMrc,OAAOpO,OAChC7F,EAAK6+B,cAAgBvO,GAAMrc,OAAOpF,SAClC7O,EAAK8+B,iBAAmBxO,GAAMrc,OAAOgnB,YACrCj7B,EAAK++B,UAAYhH,EACjB/3B,EAAKg/B,iBAAmB,CACpBC,QAAS/+B,EAAI++B,QACbC,QAASh/B,EAAIg/B,QACbG,OAAQn/B,EAAIm/B,QAEhBr/B,EAAKm/B,oBAAsB7O,GAAMrc,OAAOqrB,0BAG5CC,UAAYC,GAAU,SAACt/B,GACA,IAAfA,EAAIwe,OAAc1e,EAAKy/B,gBAAgBv/B,GACnB,IAAfA,EAAIwe,OAAc1e,EAAK0/B,YAAYx/B,GACvCF,EAAK2/B,aAAaz/B,IACxB,gEAEqBA,GACpB,IAAM63B,EAAOh+B,KAAKglC,UACZ1hC,EAAI6C,EAAI++B,QAAUllC,KAAKilC,iBAAiBC,QACxC3hC,EAAI4C,EAAIg/B,QAAUnlC,KAAKilC,iBAAiBE,QACxCU,EAAiB7lC,KAAK8kC,cAAcxY,QACpCmT,EAA4C,EAAnClJ,GAAMrc,OAAOqrB,oBACtBO,EAAiBC,GAASnI,WAC5BiI,EACAE,GAASnI,WACLmI,GAASvG,MAAMxB,EAAK16B,EAAGm8B,EAASn8B,EAAI6C,EAAIm/B,QACxCS,GAASvG,MAAMxB,EAAKz6B,EAAGk8B,EAASl8B,KAGxCgzB,GAAMrc,OAAO8rB,YAAYF,uCAGT3/B,GAChB,IAAM63B,EAAOh+B,KAAKglC,UACZ1hC,EAAI6C,EAAI++B,QAAUllC,KAAKilC,iBAAiBC,QACxC3hC,EAAI4C,EAAIg/B,QAAUnlC,KAAKilC,iBAAiBE,QACxCc,EAAiBjmC,KAAK+kC,iBAAiBzY,QACvC4Z,GAAU55B,KAAK65B,GAAK5iC,EACpB6iC,EAAS,EAAI95B,KAAK65B,GAAK7iC,EACvB+iC,EAAcN,GAASjI,6BAA6BoI,EAAQlI,EAAK16B,GACjEgjC,EAAcP,GAASjI,6BAA6BsI,EAAQpI,EAAKz6B,GACjEgjC,EAAeR,GAASzH,oBAAoB+H,EAAaC,GACzDE,EAAiBT,GAASzH,oBAAoBiI,EAAcN,GAE5DQ,EAAiBV,GAASpG,iBAC5B3/B,KAAK6kC,YACL7kC,KAAK8kC,eAEH4B,EAAwBX,GAAShH,qBACnC0H,EACAF,GAEEI,EAAcZ,GAASnI,WAAW59B,KAAK6kC,YAAa6B,GAE1DnQ,GAAMrc,OAAO0sB,0BAA0BD,EAAaH,wCAInCrgC,GACjB,IAAM63B,EAAOh+B,KAAKglC,UACZ1hC,EAAI6C,EAAI++B,QAAUllC,KAAKilC,iBAAiBC,QACxC3hC,EAAI4C,EAAIg/B,QAAUnlC,KAAKilC,iBAAiBE,QACxCc,EAAiBjmC,KAAK+kC,iBAAiBzY,QACvC4Z,EAAS,EAAI55B,KAAK65B,GAAK5iC,EACvB6iC,GAAU,EAAI95B,KAAK65B,GAAK7iC,EACxB+iC,EAAcN,GAASjI,6BAA6BoI,EAAQlI,EAAK16B,GACjEgjC,EAAcP,GAASjI,6BAA6BsI,EAAQpI,EAAKz6B,GACjEgjC,EAAeR,GAASzH,oBAAoB+H,EAAaC,GACzDE,EAAiBT,GAASzH,oBAAoBiI,EAAcN,GAClE1P,GAAMrc,OAAO2sB,eAAeL,YC/E9BjQ,GAKF,CACAqK,OAAQ,KACR1mB,OAAQ,KACR4sB,SAAU,IAAIhE,GACdiE,SAAU,IAAInC,IAGHoC,GAAA,CACXC,OACA7/B,kDACAyqB,qDACAqV,8DACA1Q,WACA2Q,2DACAvG,aAAe,OAAOrK,GAAMqK,QAC5B1mB,aAAuB,OAAOqc,GAAMrc,QAAU,IAAI+mB,GAAO,KACzD6F,eAA2B,OAAOvQ,GAAMuQ,UACxCC,eAAkC,OAAOxQ,GAAMwQ,wDAMnD,SAAArpC,EAAuB6zB,GAAvB,IAAA6V,EAAApmC,EAAA,OAAAzD,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyB8oC,GAAYxV,QAAQN,GAD7C,cACIgF,GAAMqK,OADVviC,EAAAgB,KAEIX,QAAQC,KAAK,gBAAiB43B,GAAMqK,QAFxCviC,EAAAE,KAAA,EAG+Bi4B,GAAQ,qBAHvC,cAGU4Q,EAHV/oC,EAAAgB,KAIIk3B,GAAMrc,OAAS,IAAI+mB,GAAOmG,GAC1B7Q,GAAMuQ,SAAS/oC,KAAKw4B,GAAMqK,QAL9BviC,EAAAE,KAAA,GAM4B0oC,GAAIpT,yBANhC,eAMU7yB,EANV3C,EAAAgB,KAOIX,QAAQC,KAAK,aAAcqC,GAC3B6tB,GAAML,SAASK,GAAMd,UAAU9sB,OAAOD,IAEtCu1B,GAAMqK,OACDsD,QAAQ,4BACRjR,UAAU,SAACr1B,GACRc,QAAQC,KAAK,iBAAkBf,KAb3CS,EAAAiB,OAAA,SAgBWi3B,GAAMqK,QAhBjB,yBAAAviC,EAAAwB,SAAAnC,sCAmBe84B,mFAAf,SAAAvE,EAAuBhzB,GAAvB,IAAArB,EAAA0pC,EAAAnpC,UAAA,OAAAZ,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,cAAuCX,EAAvC0pC,EAAA9oC,OAAA,QAAAC,IAAA6oC,EAAA,GAAAA,EAAA,GAAoD,GAChD5oC,QAAQC,KAAK,WAAYM,EAAQrB,EAAQ,KAD7C00B,EAAAhzB,OAAA,SAGW,IAAIqwB,QAAQ,SAACC,EAASuB,GACzB,IAAKoF,GAAMqK,OAGP,OAFAliC,QAAQqD,MAAM,0BACdovB,IAGWoF,GAAMqK,OAAOpK,QAAQv3B,EAAQrB,GACrCwzB,KAAK,SAACvJ,GACTnpB,QAAQC,KAAK,WAAYM,EAAQ,QAAS4oB,GAC1C+H,EAAQ/H,IACTsJ,MAbX,wBAAAmB,EAAAzyB,SAAAoyB,0EAoBA,SAAAH,IAAA,IAAAyL,EAAAlR,EAAA2N,EAAAuN,EAAA,OAAAhqC,EAAAC,EAAAY,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,cAAAyzB,EAAAzzB,KAAA,EAC6Bi4B,GAAQ,aADrC,UACU+G,EADVvL,EAAA3yB,KAAA,CAAA2yB,EAAAzzB,KAAA,eAAAyzB,EAAA1yB,OAAA,UAEuB,GAFvB,UAGU+sB,EAASkR,EAAMlR,OAHzB,CAAA2F,EAAAzzB,KAAA,eAAAyzB,EAAA1yB,OAAA,UAIwB,GAJxB,cAKU06B,EAAM3N,EAAOnpB,IAAK,SAACqpB,GAAD,OAAgBA,EAAMxiB,KALlDioB,EAAAzzB,KAAA,GAMUi4B,GAAQ,eAAgBwD,GANlC,eAAAhI,EAAAzzB,KAAA,GAQsCi4B,GAAQ,sBAAuB,IARrE,aAQU+Q,EARVvV,EAAA3yB,MAAA,CAAA2yB,EAAAzzB,KAAA,gBAWQgpC,EAAeC,WAAa,IAC5BD,EAAeE,QAAU,EACzBF,EAAeG,YAAc,GAbrC1V,EAAAzzB,KAAA,GAcci4B,GAAQ,sBAAuB+Q,GAd7C,eAAAvV,EAAAzzB,KAAA,GAiBUi4B,GAAQ,eAAgB,CAC1BmR,cAAc,EACdC,gBAAiB,CAAC,GAAG,GAAG,GACxBznC,QAAS,sBACT0nC,WAAW,EACXC,eAAgB,IAChBC,gBAAiB,EACjBC,YAAa,IAxBrB,eAAAhW,EAAAzzB,KAAA,GA2BUi4B,GAAQ,sBAAuB,CACjClL,SAAU,+DA5BlB,eAAA0G,EAAA1yB,OAAA,UA+BW,GA/BX,yBAAA0yB,EAAAnyB,SAAAiyB,0EAkCA,SAAAa,EAA2BpnB,EAAeC,GAA1C,OAAAjO,EAAAC,EAAAY,KAAA,SAAAw0B,GAAA,cAAAA,EAAAt0B,KAAAs0B,EAAAr0B,MAAA,cAAAq0B,EAAAr0B,KAAA,EAEiBi4B,GAAQ,6BAA8B,CAC/CyR,SAAU,CAAC18B,EAAOC,KAH1B,cAAAonB,EAAAtzB,OAAA,SAAAszB,EAAAvzB,MAAA,wBAAAuzB,EAAA/yB,SAAA8yB,0EAOA,SAAA8D,EAAgCtJ,GAAhC,IAAAxF,EAAA4E,EAAA,OAAAhvB,EAAAC,EAAAY,KAAA,SAAAs4B,GAAA,cAAAA,EAAAp4B,KAAAo4B,EAAAn4B,MAAA,cAAAm4B,EAAAn4B,KAAA,EACyBi4B,GAAQ,YAAa,CAAErJ,SADhD,cACUxF,EADV+O,EAAAr3B,KAEUktB,EAAgB5E,EACtBkH,GAAML,SAASK,GAAMZ,OAAOliB,IAAIwgB,IAHpCmK,EAAAp3B,OAAA,SAIW,IAAI09B,GAAMzQ,IAJrB,wBAAAmK,EAAA72B,SAAA42B,0CCnHeyR,GAAA,CACLC,UADK,eAAAC,EAAA/qC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,EACK+yB,GADL,IAAA7yB,EAAAouB,EAAAqc,EAAA,OAAA9qC,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEDX,EAA8B,CAChC0qC,qBAAsBzZ,GAAMR,MAAMoT,WAAWzgC,UAC7CunC,kBAAmB9X,EAAQxF,QAC3BlY,KAAM,CAAC0d,EAAQllB,MAAOklB,EAAQjlB,QAC9Bg9B,OAAQ,OACRtuB,OAAQ,CACJpF,SAAUyhB,GAAMrc,OAAOpF,SACvBosB,YAAa3K,GAAMrc,OAAOgnB,YAC1Bp1B,OAAQyqB,GAAMrc,OAAOpO,SAG7BpN,QAAQC,KAAK,UAAWf,GAbjBS,EAAAE,KAAA,EAcgBg4B,GAAM0Q,IAAIjb,SAASpuB,GAdnC,cAcDouB,EAdC3tB,EAAAgB,KAeDgpC,EAfC,gBAAArpC,OAeyBgtB,EAASnuB,MAflCQ,EAAAiB,OAAA,SAgBA,IAAIqwB,QAAS,SAACC,EAASuB,GAC1B,IAAMmS,EAAM,IAAIgB,MAChBhB,EAAImB,OAAS,WACT,IAAMpB,EAA4BhyB,SAASiE,cAAc,UACzD+tB,EAAO93B,MAAQ+3B,EAAI/3B,MACnB83B,EAAO73B,OAAS83B,EAAI93B,OACpB,IAAMw3B,EAAMK,EAAOc,WAAW,MACzBnB,GAILA,EAAIgB,UAAUV,EAAK,EAAG,GACtB1T,EAAQyT,IAJJlS,KAMRmS,EAAImF,QAAUtX,EACdmS,EAAIiB,IAAM8D,KA/BP,wBAAAhqC,EAAAwB,SAAAnC,MAAA,gBAAAoC,GAAA,OAAAsoC,EAAAroC,MAAAC,KAAA7B,YAAA,GAmCLuqC,iBAnCK,eAAAC,EAAAtrC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAq0B,EAmCYuR,EACA/X,GApCZ,IAAAsd,EAAAC,EAAA1qC,UAAA,OAAAZ,EAAAC,EAAAY,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,OAqCYqqC,EArCZC,EAAArqC,OAAA,QAAAC,IAAAoqC,EAAA,GAAAA,EAAA,GAqC+B,aACtCxF,EAAOyF,OAAP,eAAA9lB,EAAA3lB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAc,SAAAw0B,EAAOgR,GAAP,IAAAtb,EAAA,OAAApqB,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,UACL0kC,EADK,CAAA3Q,EAAA/zB,KAAA,eAAA+zB,EAAAhzB,OAAA,wBAAAgzB,EAAA/zB,KAAA,EAEWwqC,aAAW9F,EAAM3X,GAF5B,OAEJ3D,EAFI2K,EAAAjzB,KAGVX,QAAQC,KAAK,UAAWgpB,GAHd,wBAAA2K,EAAAzyB,SAAAoyB,MAAd,gBAAA+W,GAAA,OAAAhmB,EAAAjjB,MAAAC,KAAA7B,YAAA,GAIGyqC,EAAU,KA1CN,wBAAA5W,EAAAnyB,SAAAiyB,MAAA,gBAAAmX,EAAAvW,GAAA,OAAAiW,EAAA5oC,MAAAC,KAAA7B,YAAA,IC6CA0zB,mBA9Cf,SAAyBnxB,GACrB,MAAO,CACH4qB,SAAU5qB,EAAMqrB,QAAQC,SAASV,SACjCI,QAAShrB,EAAMqrB,QAAQC,SAASN,QAChCngB,MAAO7K,EAAMqrB,QAAQC,SAASzgB,MAC9BC,OAAQ9K,EAAMqrB,QAAQC,SAASxgB,OAC/BogB,WAAYlrB,EAAMqrB,QAAQC,SAASJ,WACnCX,QAASvqB,EAAMqrB,QAAQC,SAASf,UAIxC,SAA4BuD,GACxB,MAAO,CACHjD,iBADG,SACcD,GACbkD,EAASK,GAAMb,QAAQ7B,eAAe,CAAEb,eAG5CP,gBALG,SAKaW,GACZ8C,EAASK,GAAMb,QAAQ7B,eAAe,CAAET,aACxC,IAAMpB,EAAMX,GAAY+B,GACxB,GAAKpB,EAAL,CAH6B,IAAA4e,EAAA7rC,OAAA+lB,EAAA,EAAA/lB,CAILitB,EAJK,GAItB/e,EAJsB29B,EAAA,GAIf19B,EAJe09B,EAAA,GAK7B1a,EAASK,GAAMb,QAAQ7B,eAAe,CAAE5gB,QAAOC,cAGnDmf,cAbG,SAaWpf,GACVijB,EAASK,GAAMb,QAAQ7B,eAAe,CAAE5gB,YAG5C49B,eAjBG,SAiBY39B,GACXgjB,EAASK,GAAMb,QAAQ7B,eAAe,CAAE3gB,aAG5C4f,mBArBG,SAqBgBQ,GACf4C,EAASK,GAAMb,QAAQ7B,eAAe,CAAEP,gBACxC,IAAMX,EAAUjB,GAAU4B,GACrBX,GACLuD,EAASK,GAAMb,QAAQ7B,eAAe,CAAElB,cAG5CC,gBA5BG,SA4BaD,GACZuD,EAASK,GAAMb,QAAQ7B,eAAe,CAAElB,gBAKrC4G,CAA6CuX,IC7C7CC,GAAA,CACLzqB,KADK,eAAA0qB,EAAAjsC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEPG,QAAQ4J,IAAI,QAFLjK,EAAAE,KAAA,EAGcuxB,GAAOK,QACxB,gBACAjM,EAAA1mB,EAAA8X,cAACi0B,EAAA,EAAD,CAAUlb,MAAOQ,GAAMR,OAAOnK,EAAA1mB,EAAA8X,cAACk0B,GAAD,QAL3B,UAAAnrC,EAAAgB,KAAA,CAAAhB,EAAAE,KAAA,eAAAF,EAAAiB,OAAA,SAMa,MANb,cAAAjB,EAAAiB,OAAA,SAOAuvB,GAAMR,MAAMoT,WAAW1V,QAAQC,UAP/B,wBAAA3tB,EAAAwB,SAAAnC,MAAA,yBAAA4rC,EAAAvpC,MAAAC,KAAA7B,YAAA,ICRA,SAASsrC,GAAWjnC,GAA4B,IAApBgX,EAAoBrb,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAX,EAChD,cAAeqE,GACX,IAAK,UACD,OAAOA,EAAI,EAAI,EACnB,IAAK,SACD,OAAOA,EACX,IAAK,SACD,IAAMvE,EAAOuE,EAAEC,OAAOC,cACtB,GAAIzE,EAAK4C,WAAW,MAAO,CACvB,IAAM2W,EAAO5U,SAAS3E,EAAK6C,OAAO,GAAI,IACtC,OAAOwB,MAAMkV,GAAQgC,EAAShC,EAElC,GAAIvZ,EAAK4C,WAAW,MAAO,CACvB,IAAM2W,EAAO5U,SAAS3E,EAAK6C,OAAO,GAAI,GACtC,OAAOwB,MAAMkV,GAAQgC,EAAShC,EAElC,GAAIvZ,EAAK4C,WAAW,MAAO,CACvB,IAAM2W,EAAO5U,SAAS3E,EAAK6C,OAAO,GAAI,GACtC,OAAOwB,MAAMkV,GAAQgC,EAAShC,EAElC,IAAM7U,EAAMqN,WAAW/R,GACvB,OAAIqE,MAAMK,GAAa6W,EAChB7W,EACX,QACI,OAAO6W,aCJEkwB,8MACAnnB,IAAuCrB,IAAMyoB,cAE9DC,gBAAkB,SAACzjC,GACf,IAAMqS,EAAMvS,EAAKsc,IAAIpiB,QACrB,GAAKqY,EAAL,CACA,IAAMpN,EAAOoN,EAAI5M,wBACXi+B,EAwDd,SAAejoC,GAAiD,IAAlC0N,EAAkCnR,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAApB,EAAGoR,EAAiBpR,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAH,EACzD,OAAIyD,EAAQ0N,EAAYA,EACpB1N,EAAQ2N,EAAYA,EACjB3N,EA3DakoC,CAAM3jC,EAAI7C,EAAI8H,EAAKG,OAC7BkW,EAAIxb,EAAK2a,MACTpjB,EAAI+b,GAAYkI,EAAEnS,IAAK,GACvBuuB,EAAItkB,GAAYkI,EAAElS,IAAK,KACvBD,EAAMhD,KAAKgD,IAAI9R,EAAGqgC,GAClBtuB,EAAMjD,KAAKiD,IAAI/R,EAAGqgC,GAClBkM,EAAOz9B,KAAKiD,IAAI,KAAMy6B,GAAUvoB,EAAEsoB,MAAOx6B,EAAMD,GAAO,MACtD1N,EAAQqE,EAAKgkC,eACf36B,GAAOC,EAAMD,GAAOu6B,EAASv6B,EAAKC,EAAKw6B,GAE3CrrC,QAAQC,KAAK,6BAA8BwH,EAAKiF,EAAMxJ,EAAOioC,GAC7DpoB,EAAEyD,SAAStjB,wFAIX,IAAM4W,EAAMxY,KAAKuiB,IAAIpiB,QAChBqY,GACL7O,EAAQ6O,GAAKL,GAAG,CACZ/L,IAAKpM,KAAK4pC,gBACVh9B,IAAK5M,KAAK4pC,mDAKd,IAAMnoB,EAAIzhB,KAAK4gB,MACTpjB,EAAI+b,GAAYkI,EAAEnS,IAAK,GACvBuuB,EAAItkB,GAAYkI,EAAElS,IAAK,KACvBD,EAAMhD,KAAKgD,IAAI9R,EAAGqgC,GAClBtuB,EAAMjD,KAAKiD,IAAI/R,EAAGqgC,GAClBkM,EAAOz9B,KAAKiD,IAAI,KAAMy6B,GAAUvoB,EAAEsoB,MAAOx6B,EAAMD,GAAO,MACtD2U,EAAQ7hB,EAAWqf,EAAEwC,MAAO,IAC5BriB,EAAQ5B,KAAKiqC,eAAexoB,EAAE7f,MAAO0N,EAAKC,EAAKw6B,GAC/C9rC,EAAOmE,EAAWqf,EAAExjB,KAAH,GAAAe,OAAY4C,IAEnC,OAAQsiB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,kBACV8J,IAAKviB,KAAKuiB,KACnB2B,EAAA1mB,EAAA8X,cAACkR,GAAD,CAAOvC,MAAOA,IACdC,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,2BACXyL,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,8BACVjF,MAAO,CACH02B,WAAU,QAAAlrC,OAAU,KAAO4C,EAAQ0N,IAAQC,EAAMD,GAAvC,eACVrR,4CAKE2D,EAAe0N,EAAaC,EAAaw6B,GAC5D,IAAIvnC,EAAI8J,KAAKiD,IAAID,EAAKhD,KAAKgD,IAAI1N,EAAO2N,IACtC,OAAIw6B,EAAO,EACAz6B,EAAMy6B,EAAOz9B,KAAK0E,MAAM+4B,EAAO,GAAKvnC,EAAI8M,GAAOy6B,GAEnDvnC,SA1DqB0e,IAAMkD,WCpB3B,IAAA+lB,GAAA,CACXC,UADW,SACDxoC,GAEN,IAFuE,IAAlDmR,EAAkD5U,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAnC,EAAGksC,EAAgClsC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAb,IACtDF,EAAI,GAAAe,OAAM4C,GACP3D,EAAKO,OAASuU,GACjB9U,EAAOosC,EAAS56B,OAAO,GAAKxR,EAEhC,OAAOA,GAGX6rC,MATW,SASLloC,GAAiD,IAAlC0N,EAAkCnR,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAApB,EAAGoR,EAAiBpR,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAH,EAChD,OAAIyD,EAAQ0N,EAAYA,EACpB1N,EAAQ2N,EAAYA,EACjB3N,ICcM0oC,sBACjB,SAAAA,EAAa1pB,GAAgC,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAsqC,IACzCrkC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAitC,GAAA5iC,KAAA1H,KAAO4gB,KAIX2pB,oBAAsB,SAACpqC,GACnB,IAAMvC,EAAS,CAAEuC,WACjB0uB,GAAML,SAASK,GAAMd,UAAU9sB,OAAOrD,IACtCqI,EAAKuvB,uBAAuB53B,IARaqI,EAW7CuvB,uBAAyBiQ,GAAU,SAAC7nC,GAChC24B,GAAM0Q,IAAIzR,uBAAuB53B,IAClC,KAb0CqI,EAe7CukC,kBAAoB,SAACC,GACjBxkC,EAAKurB,SAAS,CAAEiZ,aAChB5b,GAAML,SAASK,GAAMd,UAAU9sB,OAAO,CAAEb,MAAOsqC,GAAWD,OAjBjBxkC,EAgC7C0kC,gBAAkB,WAAQ1kC,EAAKhC,MAAM,IAhCQgC,EAiC7C2kC,iBAAmB,WAAQ3kC,EAAKhC,MAAM,KAjCOgC,EAkC7C4kC,gBAAkB,WAAQ5kC,EAAKhC,OAAO,IAlCOgC,EAmC7C6kC,iBAAmB,WAAQ7kC,EAAKhC,OAAO,KAjCnCgC,EAAKvF,MAAQ,CAAE+pC,SAAUM,GAAWnqB,EAAMxgB,OAAS,IAFV6F,qEAoBvC7F,GACF,IAAMD,EAAUH,KAAK4gB,MAAMzgB,SAAW,EAChCG,EAAaN,KAAK4gB,MAAMtgB,YAAc,EACtC0qC,EAAQN,GAAW1qC,KAAKU,MAAM+pC,UAC9BQ,EAAYC,GAAKpB,MAAM3pC,EAAU6qC,EAAQ5qC,EAAO,EAAGE,GACzD,GAAI2qC,IAAc9qC,EAAS,CACvB,IAAMvC,EAAS,CAAEuC,QAAS8qC,GAC1Bpc,GAAML,SAASK,GAAMd,UAAU9sB,OAAOrD,IACtCoC,KAAKw1B,uBAAuB53B,qCAUhC,IAAM6jB,EAAIzhB,KAAK4gB,MACTzgB,EAAUshB,EAAEthB,SAAW,EACvBG,EAAamhB,EAAEnhB,YAAc,EACnC,GAAIA,EAAa,EAAG,OAAO,KAE3B,IAAMupC,EAAUv9B,KAAK0E,MAAM,GAAK,KAAOyQ,EAAEthB,SAAW,GAAKG,GACzD,OAAQ4jB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,8CACnByL,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,iBACXyL,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,aAAa7J,QAAS7X,EAAU,EAC1C6hB,QAAShiB,KAAK8qC,mBAClB5mB,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,YAAY7J,QAAS7X,EAAU,EACzC6hB,QAAShiB,KAAK6qC,kBAClB3mB,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQX,KAAK,OAAOE,OAAO,IAC3BtL,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,YAAY7J,QAAS7X,EAAUG,EACzC0hB,QAAShiB,KAAK2qC,kBAClBzmB,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,aAAa7J,QAAS7X,EAAUG,EAC1C0hB,QAAShiB,KAAK4qC,oBAEtB1mB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,SACXyL,EAAA1mB,EAAA8X,cAAA,SAAImM,EAAEthB,SACN+jB,EAAA1mB,EAAA8X,cAAA,QAAMmD,UAAU,QAAhB,MAAAzZ,OAA8BsB,EAA9B,MAAAtB,OAA6CyiB,EAAEjhB,KAA/C,OAEJ0jB,EAAA1mB,EAAA8X,cAAC61B,GAAD,CAAQ77B,IAAK,EAAGC,IAAKjP,EACbsB,MAAO6f,EAAEthB,SAAW,EACpB4pC,KAAM,EACN9rC,KAAI,GAAAe,OAAK6qC,EAAL,MACJ3kB,SAAUllB,KAAKuqC,sBACvBrmB,EAAA1mB,EAAA8X,cAACmW,GAAD,CAAO7pB,MAAO5B,KAAKU,MAAM+pC,SAAUxmB,MAAM,QAAQiB,SAAUllB,KAAKwqC,mBAC5DtmB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,UAAT,MACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,MAAT,MACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,MAAT,MACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,MAAT,MACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,OAAT,OACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,OAAT,gBAxE8Bwf,IAAMkD,YAiF9CgnB,GAA4B,CAC9B,CAAC,SAAU,GACX,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,KAAM,GACP,CAAC,MAAO,IACR,CAAC,MAAO,KAGZ,SAASL,GAAWC,GAChB,IAAM7nC,EAAOioC,GAAO5N,KAAK,SAAAl6B,GAAC,OAAIA,EAAE,KAAO0nC,IACvC,OAAK7nC,EACEA,EAAK,GADM,SAItB,SAASunC,GAAWhpC,GAChB,IAAMyB,EAAOioC,GAAO5N,KAAK,SAAAl6B,GAAC,OAAIA,EAAE,KAAO5B,IACvC,OAAKyB,EACEA,EAAK,GADM,EC/GP0uB,mBATf,SAAyBnxB,GACrB,OAAOrD,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAKqD,EAAMM,YAGtB,SAA4BwtB,GACxB,MAAO,IAIIqD,CAA6CwZ,ICQvCC,sBAIjB,SAAAA,EAAY1qB,GAA0B,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAsrC,IAClCrlC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAiuC,GAAA5jC,KAAA1H,KAAM4gB,KAJO2qB,UAAgDrqB,IAAMyoB,YAGjC1jC,EAF9Bi7B,YAA2B,CAAC,EAAE,EAAE,EAAE,GAEJj7B,EAgD9BP,WAAa,SAACS,GAClB,IAAMD,EAAUD,EAAK2a,MAAM4qB,WACJ,oBAAZtlC,IACXC,EAAIiB,QACJlB,EAAQ7I,OAAO0D,OACX,CAAE4jB,OAAQxe,EAAIe,SACdjB,EAAKwlC,eAAetlC,EAAI7C,EAAG6C,EAAI5C,OAtDD0C,EAyD9Bu/B,UAAY,SAACr/B,GACjB,IAAMD,EAAUD,EAAK2a,MAAM8qB,MACJ,oBAAZxlC,GACXA,EAAQ7I,OAAO0D,OACX,CAAE4jB,OAAQxe,EAAIe,SACdjB,EAAKwlC,eAAetlC,EAAI7C,EAAG6C,EAAI5C,MA9DD0C,EAiF9B0lC,eAjF8BtuC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAiFb,SAAAC,IAAA,IAAA2lC,EAAAj4B,EAAAyN,EAAAC,EAAA,OAAAvb,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACf8kC,EAASp9B,EAAKslC,UAAUprC,QADT,CAAA9B,EAAAE,KAAA,eAAAF,EAAAiB,OAAA,wBAGf8L,EAAOi4B,EAAOz3B,wBACdiN,EAAIvM,KAAK0E,MAAM5F,EAAKG,OACpBuN,EAAIxM,KAAK0E,MAAM5F,EAAKI,QAC1B63B,EAAO93B,MAAQsN,EACfwqB,EAAO73B,OAASsN,EAPKza,EAAAE,KAAA,GAQfg4B,GAAM4Q,YAAYtuB,EAAGC,GARN,yBAAAza,EAAAwB,SAAAnC,MAjFauI,EA4F9B2lC,iBA5F8BvuC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA4FX,SAAAw0B,IAAA,IAAAxB,EAAA4S,EAAA,OAAA9lC,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,cACvBG,QAAQ4J,IAAI,oBADWgqB,EAAA/zB,KAAA,EAEDksB,GAAS7L,OAFR,UAEjB6R,EAFiB6B,EAAAjzB,KAAA,CAAAizB,EAAA/zB,KAAA,eAAA+zB,EAAAhzB,OAAA,wBAAAgzB,EAAA/zB,KAAA,EAIFstC,GAAgB1D,UAAU1X,GAJxB,cAIjB4S,EAJiB/Q,EAAAjzB,KAAAizB,EAAA/zB,KAAA,GAKjBstC,GAAgBnD,iBAAiBrF,EAAjC,GAAArkC,OAA4CyxB,EAAQnF,SAApD,SALiB,yBAAAgH,EAAAzyB,SAAAoyB,MA5FWhsB,mFAWlC,GAAKjG,KAAKqjC,OAAV,CAIA9M,GAAMuQ,SAASzD,OAASrjC,KAAKqjC,OAE7B,IAAMnrB,EAAOlY,KAEb2J,EAAQ3J,KAAKqjC,QAAQlrB,GAAG,CACpBtM,KAAM7L,KAAK0F,WACL0G,IAFc,eAAA0/B,EAAAzuC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAq0B,EAEV3rB,GAFU,IAAAk9B,EAAAj4B,EAAA9H,EAAAC,EAAAwoC,EAAA,OAAAxuC,EAAAC,EAAAY,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,UAGV8kC,EAASnrB,EAAKmrB,OAHJ,CAAArR,EAAAzzB,KAAA,eAAAyzB,EAAA1yB,OAAA,wBAKV8L,EAAOi4B,EAAOz3B,wBACdtI,EAAI6C,EAAI7C,EAAI8H,EAAKG,MACjBhI,EAAI,EAAK4C,EAAI5C,EAAI6H,EAAKI,OAPZwmB,EAAAzzB,KAAA,EAQQg4B,GAAMC,QAAQ,UAAW,CAAClzB,EAAGC,IARrC,OAQVwoC,EARU/Z,EAAA3yB,KAShBX,QAAQC,KAAK,aAAcotC,IACL,IAAlBA,EAAUC,KACVzV,GAAMrc,OAAO+xB,UAAUF,EAAUj3B,SAAU,IAX/B,yBAAAkd,EAAAnyB,SAAAiyB,MAAA,gBAAAhyB,GAAA,OAAAgsC,EAAA/rC,MAAAC,KAAA7B,YAAA,GAcpBmM,MAdoB,SAcdnE,GACGowB,GAAMrc,SACP/T,EAAIqE,OAAS,EACb+rB,GAAMrc,OAAOgyB,YAAY,IAEpB/lC,EAAIqE,OAAS,GAClB+rB,GAAMrc,OAAOiyB,aAAa,MAGlCv/B,IAAK5M,KAAKwlC,YAEdxlC,KAAK2rC,iBACLtqC,OAAO+qC,QAAUpsC,KAAK2rC,uDAyBHroC,EAAWC,GAC9B,IAAKvD,KAAKqjC,OAAQ,MAAO,CAAE6B,SAAU,EAAGC,SAAU,EAAGG,OAAQ,GAC7D,IAAMzsB,EAAI7Y,KAAKqjC,OAAOgJ,YAChBvzB,EAAI9Y,KAAKqjC,OAAOiJ,aACtB,MAAO,CACHpH,QAAS5hC,EAAIuV,EACbssB,QAAS,EAAK5hC,EAAIuV,EAClBwsB,OAAQzsB,EAAIC,oCA0BhB,OACIoL,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,8BACXyL,EAAA1mB,EAAA8X,cAAA,UACIiN,IAAKviB,KAAKurC,UACV9yB,UAAU,GACV8zB,aAAW,SACfroB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,SACXyL,EAAA1mB,EAAA8X,cAAC2a,GAAD,CACIX,KAAK,SACLtN,QAAShiB,KAAK4rC,iBACdzrB,SAAS,KAEjB+D,EAAA1mB,EAAA8X,cAACk3B,GAAD,sCA9GR,OAAOxsC,KAAKurC,UAAUprC,eATW+gB,IAAMkD,YCP1BqoB,2LACR,IAAAxmC,EAAAjG,KACCkjB,EAAWiM,GAAUnvB,KAAK4gB,MAAMsC,UAChCwpB,EAAanqC,EAAYvC,KAAK4gB,MAAM8rB,YAAY,GAChDvwB,EAAa5Z,EAAYvC,KAAK4gB,MAAMzE,YAAY,GAChD8F,EAAU,CAAC,oBAKjB,OAJAA,EAAQ1c,KAARxF,MAAAkiB,EAAO5kB,OAAAqsB,GAAA,EAAArsB,CAASwF,EAAgB7C,KAAK4gB,MAAM+rB,cACvCD,GAAYzqB,EAAQ1c,KAAK,cACzB4W,GAAY8F,EAAQ1c,KAAK,cAGzB2e,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAWwJ,EAAQ9M,KAAK,MACzB+N,EAASuJ,OAAO,SAAA7iB,GAAI,OAAIA,EAAKlI,KAAOuE,EAAK2a,MAAMhf,gBAZ5Bsf,IAAMkD,YCUpBwoB,sBACjB,SAAAA,EAAahsB,GAAgC,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA4sC,IACzC3mC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAuvC,GAAAllC,KAAA1H,KAAO4gB,KAUXisB,mBAAqB,SAAC5tC,GAClBgH,EAAKurB,SAAS,CAAEvyB,YAZyBgH,EAe7C6mC,mBAAqB,SAACrhC,GAClBxF,EAAKurB,SAAS,CAAE5zB,OAAQ6N,EAAMK,OAAOlK,SAhBIqE,EAmB7C8mC,cAnB6C1vC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAmB7B,SAAAC,IAAA,IAAAsvC,EAAA/tC,EAAArB,EAAA+Q,EAAAkZ,EAAA,OAAAtqB,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAyuC,EACe/mC,EAAKvF,MAAxBzB,EADI+tC,EACJ/tC,OAAQrB,EADJovC,EACIpvC,OAEhBqE,GAAI,SAAUhD,GACdgD,GAAI,SAAUrE,GAEdqI,EAAKurB,SAAS,CAAEyb,UAAU,EAAMplB,OAAM,GAAA7oB,OAAKmF,KAAKJ,OAAShC,MAAO,OANpD1D,EAAAC,KAAA,EAQFqQ,EAAQu+B,GAAUtvC,GARhBS,EAAAE,KAAA,EASag4B,GAAMC,QAAQv3B,EAAQ0P,GATnC,OASFkZ,EATExpB,EAAAgB,KAUR4G,EAAKurB,SAAS,CAAEzvB,MAAO,KAAM8lB,OAAQ/oB,KAAKC,UAAU8oB,EAAQ,KAAM,QAV1DxpB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmB,GAAAnB,EAAA,SAaRK,QAAQqD,MAAM,2BAAd1D,EAAAmB,IACAyG,EAAKurB,SAAS,CAAEzvB,MAAOorC,GAAU9uC,EAAAmB,MAdzB,eAAAnB,EAAAC,KAAA,GAiBR2H,EAAKurB,SAAS,CAAEyb,UAAU,IAjBlB5uC,EAAA4lC,OAAA,6BAAA5lC,EAAAwB,SAAAnC,EAAA,wBAjBZuI,EAAKvF,MAAQ,CACTzB,OAAQwC,GAAI,SAAU,uBACtB7D,OAAQ6D,GAAI,SAAU,MACtBomB,OAAQ,GACR9lB,MAAO,KACPkrC,UAAU,GAP2BhnC,wEAyCzC,IAAM0mC,EAAa,CAAC,kCAAmC,WAGvD,OAFI3sC,KAAK4gB,MAAMI,SAAS2rB,EAAWpnC,KAAK,WAEhC2e,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAWk0B,EAAWx3B,KAAK,MACpC+O,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,QACXyL,EAAA1mB,EAAA8X,cAACkW,GAAD,CACIvH,MAAM,SACNriB,MAAO5B,KAAKU,MAAMzB,OAClBimB,SAAUllB,KAAK6sC,mBACfpkB,eAAgBzoB,KAAK+sC,cACrB5mB,MAAM,KAEdjC,EAAA1mB,EAAA8X,cAAA,YACImD,UAAU,QACVyM,SAAUllB,KAAK8sC,mBACfnrC,aAAc3B,KAAKU,MAAM9C,SAC7BsmB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,UACXyL,EAAA1mB,EAAA8X,cAAC2a,GAAD,CACIhM,MAAM,kBACNkC,MAAM,EACNnG,KAAMhgB,KAAKU,MAAMusC,SACjB3d,KAAK,OACLtN,QAAShiB,KAAK+sC,iBAGlB/sC,KAAKU,MAAMqB,MACXmiB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,SAASzY,KAAKU,MAAMqB,OACnCmiB,EAAA1mB,EAAA8X,cAAA,YACImD,UAAU,kBACV20B,UAAU,EACVxrC,MAAO5B,KAAKU,MAAMmnB,iBAxEQ3G,IAAMkD,YAgF9CipB,GAAiB,sBAEvB,SAAS5rC,GAAIC,EAAaC,GACtB,OAAOsqB,EAAQ9qB,MAAMM,IAAd,GAAAzC,OAAqBquC,IAArBruC,OAAsC0C,GAAOC,GAGxD,SAASM,GAAIP,EAAaE,GACtB,OAAOqqB,EAAQ9qB,MAAMc,IAAd,GAAAjD,OAAqBquC,IAArBruC,OAAsC0C,GAAOE,GAIxD,SAASsrC,GAAUI,GACf,IACI,OAAOxuC,KAAKS,MAAM+tC,GAEtB,MAAMxrC,GACF,MAAMrC,MAAK,gDAAAT,OAAiDsuC,EAAjD,gBAAAtuC,OAAoE8C,EAApE,OAKnB,SAASqrC,GAAWrrC,GAChB,IAAI+lB,EAAS/oB,KAAKC,UAAU+C,EAAI,KAAM,MAItC,OAHIA,GAA6B,oBAAhBA,EAAGmP,WAChB4W,GAAU,OAAS/lB,EAAGmP,YAEnB4W,YClHUnQ,eAIjB,SAAAA,EAAYkJ,GAAwB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA0X,IAChCzR,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAqa,GAAAhQ,KAAA1H,KAAM4gB,KAJD6D,eAG2B,EAAAxe,EAF5Bsc,IAAMrB,cAIVjb,EAAK8e,YAAc9e,EAAK8e,YAAY/a,KAAjB3M,OAAA2nB,EAAA,EAAA3nB,QAAA2nB,EAAA,EAAA3nB,CAAA4I,KACnBA,EAAKwe,UAAY,IAAI8oB,GAAkB,CAACx1B,MAAO9R,EAAK8e,YAAa7V,MAAO0R,EAAM1R,QAH9CjJ,mFAOhC,IAAMR,EAAUzF,KAAKuiB,IAAIpiB,QACpBsF,IACLzF,KAAKykB,UAAUhf,QAAUA,yCAIzB,IAAMS,EAAUlG,KAAK4gB,MAAMoB,QACJ,oBAAZ9b,GACPA,qCAKJ,IAAMub,EAAIzhB,KAAK4gB,MACT5I,EAAUzV,EAAYkf,EAAEzJ,SAAS,GACjCiK,EAAU,CAAC,sBAAsBjjB,OAAOmwB,GAAU1N,EAAEkrB,aAE1D,OADI30B,GAAUiK,EAAQ1c,KAAK,WACpB+c,EAAA,qBAAKC,IAAKviB,KAAKuiB,IACdirB,SAAU,EACV/0B,UAAWwJ,EAAQ9M,KAAK,KACxBkb,MAAO5O,EAAE4O,OACb5O,EAAEyB,iBAhCyBhC,aCJlBusB,2LACR,IAAAxnC,EAAAjG,KAAAwoB,EACkBxoB,KAAK4gB,MAApBuM,EADH3E,EACG2E,KAAMC,EADT5E,EACS4E,KACRsgB,EAAS,CACXtgB,GADWpuB,OAAA3B,OAAAqsB,GAAA,EAAArsB,CAER8vB,EAAKrsB,OAAOssB,EAAK5uB,QAAQilB,MAAM,OACpCgJ,OAAO,SAACtpB,GAAD,OAAkBA,EAAK3E,OAAS,IACzCE,QAAQC,KAAK,UAAW+uC,GAGxB,IAFA,IAAMC,EAAYD,EAAOlvC,OAAS,EAC5B0I,EAAU,GARXmN,EAAA,SASI2sB,GACL,IAAM4M,EAAQF,EAAO1M,GACf7T,EAAOugB,EAAOphB,MAAM,EAAG0U,EAAI,GAAG7rB,KAAK,KACzCzW,QAAQC,KAAK,QAASwuB,GAEtB,GAAI6T,IAAM2M,EAGNzmC,EAAQ3B,KAAK2e,EAAA1mB,EAAA8X,cAAA,WAAMs4B,QAChB,CACH,IAAMjpB,EAAUT,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAKyrB,EAAM1U,UAAU,2BAClCyL,EAAA1mB,EAAA8X,cAACu4B,GAAD,CAAW7rB,QAPP,WAAQ/b,EAAK2a,MAAMoB,QAAQmL,KAOFjJ,EAAA1mB,EAAA8X,cAAA,WAAMs4B,KAE3C1mC,EAAQ3B,KAAKof,KAbZqc,EAAE,EAAIA,EAAE0M,EAAOlvC,OAASwiC,IAAK3sB,EAA7B2sB,GAiBT,OAAQ9c,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,0BACnByL,EAAA1mB,EAAA8X,cAAA,cAAS6X,GACTjJ,EAAA1mB,EAAA8X,cAAA,WAAMpO,WA7BmBga,IAAMkD,YCCtB0pB,sBACjB,SAAAA,EAAaltB,GAAyB,OAAAvjB,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA8tC,GAAAzwC,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAywC,GAAApmC,KAAA1H,KAC3B4gB,0EAGF,IAAA4H,EACkDxoB,KAAK4gB,MAApDyM,EADH7E,EACG6E,MAAOC,EADV9E,EACU8E,QAASygB,EADnBvlB,EACmBulB,YAAaC,EADhCxlB,EACgCwlB,cACrC,OAAQ9pB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,2BACnByL,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,WACX6U,EAAQnM,OAAOje,IAAI,SAAC+H,GAAD,OACfiZ,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQvuB,IAAKuJ,EACLukB,OAAO,EACPD,MAAM,EACNpJ,MAAM,EACNhG,SAAS,EACTmP,KAAK,SACLtN,QAAS,kBAAMgsB,EAAc/iC,IAC7BgZ,MAAOhZ,OAGvBiZ,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,WACX4U,EAAMlM,OAAOje,IAAI,SAAC+H,GAAD,OACbiZ,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQvuB,IAAKuJ,EACLukB,OAAO,EACPD,MAAM,EACNpJ,MAAM,EACNmJ,KAAK,OACLtN,QAAS,kBAAM+rB,EAAY9iC,IAC3BgZ,MAAOhZ,eA5BGiW,IAAMkD,YCavB6pB,2LACR,IAAAzlB,EAIDxoB,KAAK4gB,MAFLuM,EAFC3E,EAED2E,KAAMC,EAFL5E,EAEK4E,KAAMC,EAFX7E,EAEW6E,MAAOC,EAFlB9E,EAEkB8E,QACnBygB,EAHCvlB,EAGDulB,YAAaC,EAHZxlB,EAGYwlB,cAGjB,OADAtvC,QAAQC,KAAK,8BAA+BwuB,EAAMC,EAAMC,EAAOC,GACvDpJ,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,+BACnByL,EAAA1mB,EAAA8X,cAAC44B,GAAD,CAAS/gB,KAAMA,EAAMC,KAAMA,EAAMpL,QAASgsB,IAC1C9pB,EAAA1mB,EAAA8X,cAAC64B,GAAD,CAAU9gB,MAAOA,EACPC,QAASA,EACTygB,YAAa,SAAC9iC,GAAD,OAAkB8iC,EAAYK,GAAWjhB,EAAMliB,KAC5D+iC,cAAe,SAAC/iC,GACZvM,QAAQ4J,IAAI,QAAS8lC,GAAWjhB,EAAMliB,IACtC+iC,EAAcI,GAAWjhB,EAAMliB,eAdfiW,IAAMkD,YAwBhD,SAASgqB,GAAWjhB,EAAc7B,GAC9B,OAAI6B,EAAKkhB,SAAS,KAAM,GAAArvC,OAAUmuB,GAAVnuB,OAAiBssB,GACzC,GAAAtsB,OAAUmuB,EAAV,KAAAnuB,OAAkBssB,GChCPuG,mBAbf,SAAyBnxB,GACrB,OAAOrD,OAAA0mB,GAAA,EAAA1mB,CAAA,GAAKqD,EAAMysB,OAGtB,SAA4BqB,GACxB,MAAO,CACGwf,cADH,eAAAM,EAAAjxC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,EACiByvB,GADjB,IAAAuB,EAAA,OAAAnxB,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEsBgwC,GAAY7f,OAAOvB,GAFzC,OAEOuB,EAFPrwB,EAAAgB,KAGCX,QAAQC,KAAK,gBAAiBwuB,EAAMuB,GAHrC,wBAAArwB,EAAAwB,SAAAnC,MAAA,gBAAAoC,GAAA,OAAAwuC,EAAAvuC,MAAAC,KAAA7B,YAAA,KAQI0zB,CAA6CwZ,ICXtDpf,GAAU,eCNZ,SAAA3qB,IAAyC,IAArBktC,EAAqBrwC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAJ,GAAId,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAsB,GAAAtB,KAArBwuC,yDAEhB9sC,EAAaC,GACb,OAAOsqB,EAAQ9qB,MAAMM,IAAIzB,KAAK0B,IAAIA,GAAMC,+BAGxCD,EAAa+e,GACbwL,EAAQ9qB,MAAMc,IAAIjC,KAAK0B,IAAIA,GAAM+e,+BAGzB/e,GACR,OAA2B,IAAvB1B,KAAKwuC,OAAOhwC,OAAqBkD,EACrC,GAAA1C,OAAUgB,KAAKwuC,OAAf,OAAAxvC,OAA2B0C,YDNnB,CAAiB,6BAW7B,SAAA+sC,EAAa7tB,GAAyB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAyuC,IAClCxoC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAoxC,GAAA/mC,KAAA1H,KAAO4gB,KAQX0Q,aAAe,SAACnE,GACZ,IAAMjnB,EAAUD,EAAK2a,MAAMsE,SAC3Bjf,EAAKurB,SAAS,CAAErE,SAChBlB,GAAQhqB,IAAI,OAAQkrB,GACG,oBAAZjnB,GACXA,EAAQinB,IAZRlnB,EAAKvF,MAAQ,CAAEysB,KAAM,IAErBlnB,EAAKqrB,aACDrF,GAAQxqB,IAAI,OAAQ,6FALUwE,wEAkBlC,OAAOie,EAAA1mB,EAAA8X,cAAA,WACH4O,EAAA1mB,EAAA8X,cAACkW,GAAD,CACIvH,MAAM,2BACNlR,KAAM,IACNnR,MAAO5B,KAAKU,MAAMysB,KAClBjI,SAAUllB,KAAKsxB,aACfnL,MAAM,IACVjC,EAAA1mB,EAAA8X,cAACi0B,EAAA,EAAD,CAAUlb,MAAOQ,GAAMR,OACnBnK,EAAA1mB,EAAA8X,cAACo5B,GAAD,CAAcX,YAAa/tC,KAAKsxB,wBA3BlBpQ,IAAMkD,WELfuqB,sBACjB,SAAAA,EAAa/tB,GAA2B,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA2uC,IACpC1oC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAsxC,GAAAjnC,KAAA1H,KAAO4gB,KAGXguB,sBAAwB,WACpB,IAAMC,EAAS5oC,EAAK2a,MAAMkuB,kBACJ,oBAAXD,GAAuBA,EAAO5oC,EAAK2a,MAAM2L,OACpD7tB,QAAQC,KAAK,oBAAqBsH,EAAK2a,MAAM2L,QAPTtmB,EAUxC8oC,YAVwC1xC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAU1B,SAAAC,IAAA,IAAA6uB,EAAA,OAAAhvB,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJguB,EAAQ,IAAIyQ,GAAM/2B,EAAK2a,MAAM2L,OADzBluB,EAAAE,KAAA,EAEJguB,EAAMzD,QAFF,wBAAAzqB,EAAAwB,SAAAnC,MAV0BuI,EAexC+oC,WAfwC3xC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAe3B,SAAAw0B,IAAA,IAAA1F,EAAA,OAAAhvB,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,cACHguB,EAAQ,IAAIyQ,GAAM/2B,EAAK2a,MAAM2L,OAD1B+F,EAAA/zB,KAAA,EAEHguB,EAAM3N,OAFH,wBAAA0T,EAAAzyB,SAAAoyB,MAf2BhsB,EAoBxCgpC,WApBwC5xC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAoB3B,SAAAq0B,IAAA,IAAAvF,EAAA,OAAAhvB,EAAAC,EAAAY,KAAA,SAAA4zB,GAAA,cAAAA,EAAA1zB,KAAA0zB,EAAAzzB,MAAA,cACHguB,EAAQ,IAAIyQ,GAAM/2B,EAAK2a,MAAM2L,OAD1ByF,EAAAzzB,KAAA,EAEHguB,EAAM/P,OAFH,wBAAAwV,EAAAnyB,SAAAiyB,MApB2B7rB,wEAyB/B,IACGsmB,EAAUvsB,KAAK4gB,MAAf2L,MACFogB,EAAa,CAAC,6BAA8B,kBAMlD,OALIpgB,EAAMvL,QACN2rB,EAAWpnC,KAAKgnB,EAAM6Q,UAAY,WAAa,WAE/CuP,EAAWpnC,KAAKgnB,EAAM6Q,UAAY,WAAa,WAE3ClZ,EAAA1mB,EAAA8X,cAACu4B,GAAD,CAAWlB,WAAYA,EAAWx3B,KAAM,KAC7B6M,QAAShiB,KAAK4uC,sBACdve,MAAO9D,EAAMY,MACxBjJ,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,QACXyL,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAW8T,EAAMvL,QAAU,UAAY,aAAcuL,EAAMthB,MAChEiZ,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,MAAf,IAAAzZ,OAAyButB,EAAMxiB,MAEnCma,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,SACXyL,EAAA1mB,EAAA8X,cAAA,WACI4O,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQT,OAAO,EAAMF,KAAK,MAAMtN,QAAShiB,KAAK+uC,cAC9C7qB,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQjY,SAAS,EAAOwX,OAAO,EAAMF,KAAK,UAG1C/C,EAAMvL,QACNkD,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQT,OAAO,EAAMF,KAAK,OAAOtN,QAAShiB,KAAKivC,aAC/C/qB,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQT,OAAO,EAAMF,KAAK,OAAOtN,QAAShiB,KAAKgvC,aAEnD9qB,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQjY,SAAS,EAAOwX,OAAO,EAAMF,KAAK,SAASnP,SAAS,aAnDvCe,IAAMkD,YCU1B8qB,sBAUjB,SAAAA,EAAYtuB,GAAmB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAkvC,IAC3BjpC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAA6xC,GAAAxnC,KAAA1H,KAAM4gB,KAVOuuB,aASc,EAAAlpC,EARdmpC,aAQc,EAAAnpC,EAPdopC,aAOc,EAAAppC,EANdqpC,aAMc,EAAArpC,EALvBspC,wBAKuB,EAAAtpC,EAJvBupC,2BAIuB,EAAAvpC,EAHvBwpC,oBAGuB,EAAAxpC,EAFvBypC,WAAqB,GAIzBzpC,EAAKkpC,QAAUjuB,cACfjb,EAAKmpC,QAAUluB,cACfjb,EAAKopC,QAAUnuB,cACfjb,EAAKqpC,QAAUpuB,cACfjb,EAAK0pC,SAAWlK,GAAUx/B,EAAK0pC,SAAS3lC,KAAd3M,OAAA2nB,EAAA,EAAA3nB,QAAA2nB,EAAA,EAAA3nB,CAAA4I,KAA0B,IACpDA,EAAK2pC,UAAY3pC,EAAK2pC,UAAU5lC,KAAf3M,OAAA2nB,EAAA,EAAA3nB,QAAA2nB,EAAA,EAAA3nB,CAAA4I,KACjBA,EAAKspC,oBAAsB,EAC3BtpC,EAAKupC,uBAAyB,EAC9BvpC,EAAKwpC,eAAiB,GACtBxpC,EAAKvF,MAAQ,CAAE4kB,MAAO,IAXKrf,2EAe3B,IAAM4pC,EAAO7vC,KAAKmvC,QAAQhvC,QAC1B,GAAK0vC,KACDA,EAAKrqB,UAAY,GAArB,CAEA,IAAMsqB,EAAY9vC,KAAK4gB,MAAMmvB,eACJ,oBAAdD,GACXA,wCAG4B3xC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,IAAAA,UAAA,OACtB0xC,EAAO7vC,KAAKmvC,QAAQhvC,QACpB6vC,EAAOhwC,KAAKovC,QAAQjvC,QACpBjB,EAAOc,KAAKqvC,QAAQlvC,QACpBoU,EAAOvU,KAAKsvC,QAAQnvC,QAC1B,GAAK0vC,GAASG,GAAS9wC,GAASqV,EAAhC,CAEIvU,KAAK4gB,MAAMqvB,iBAAgBJ,EAAKrqB,UAAY,GAEhD,IAAMpa,EAAOykC,EAAKjkC,wBACZN,EAAMgB,KAAK0E,MAAM6+B,EAAKrqB,WACtBha,EAASc,KAAK0E,MAAM5F,EAAKI,QACzB0kC,EAAalwC,KAAK4gB,MAAM0E,MAAM9mB,OAC9B2xC,EAAiB7jC,KAAKgD,IACxB4gC,EAAY5jC,KAAK0E,MAAM1F,EAAMtL,KAAK0vC,aAChCU,EAAoB9jC,KAAKgD,IAC3B4gC,EAAaC,EACb,EAAI7jC,KAAK0M,KAAKxN,EAASxL,KAAK0vC,aAE1BW,EAAYrwC,KAAK4gB,MAAM0E,MAAM9mB,OAAS2xC,EAAiBC,EAE7DJ,EAAKx8B,MAAMhI,OAAX,GAAAxM,OAAuBgB,KAAK0vC,WAAaS,EAAzC,MACAjxC,EAAKsU,MAAMhI,OAAX,GAAAxM,OAAuBgB,KAAK0vC,WAAaU,EAAzC,MACA77B,EAAKf,MAAMhI,OAAX,GAAAxM,OAAuBgB,KAAK0vC,WAAaW,EAAzC,MAEAR,EAAKrqB,UAAYla,EAEbtL,KAAKuvC,qBAAuBY,GACzBnwC,KAAKwvC,wBAA0BY,IAClCpwC,KAAKuvC,mBAAqBY,EAC1BnwC,KAAKwvC,sBAAwBY,EAC7BpwC,KAAKwxB,SAAS,CACVlM,MAAOtlB,KAAK4gB,MAAM0E,MAAMgH,MAAM6jB,EAAgBA,EAAiBC,MAKvE,IAAME,EAAc,GAAAtxC,OAAM6wC,EAAKxD,YAAX,OAAArtC,OAA4BgB,KAAK0vC,WAAjC,MACpBM,EAAKx8B,MAAM88B,eAAiBA,EAC5B/7B,EAAKf,MAAM88B,eAAiBA,+CAGZ,IAAA3oC,EAAA3H,KAChBqB,OAAOoG,iBAAiB,SAAUzH,KAAK2vC,UAAU,GACjD,IAAME,EAAO7vC,KAAKmvC,QAAQhvC,QACrB0vC,GACLlmC,EAAQkmC,GAAM13B,GAAG,CACbhL,QAAS,SAAAhH,GACD0pC,EAAKrqB,UAAY,IACrBrf,EAAIiB,QACJyoC,EAAKr+B,UAAUzF,IAAI,qBAEvB6B,UAAW,SAAAzH,GACH0pC,EAAKrqB,UAAY,IACrBrf,EAAIiB,QACJO,EAAKioC,cAET5jC,GAAI,kBAAM6jC,EAAKr+B,UAAUrJ,OAAO,qEAKpC9G,OAAOgI,oBAAoB,SAAUrJ,KAAK2vC,UAAU,oCAG/C,IAAA9nC,EAAA7H,KAQL,GAPAA,KAAK0vC,WAAan2B,GAAYvZ,KAAK4gB,MAAM8uB,WAAY,IACjD1vC,KAAKyvC,iBAAmBzvC,KAAK4gB,MAAM0E,QACnCtlB,KAAKwvC,uBAAyB,EAC9BxvC,KAAKyvC,eAAiBzvC,KAAK4gB,MAAM0E,OAErCtlB,KAAK2vC,WAE4B,oBAAtB3vC,KAAK4gB,MAAM2vB,OAElB,MADA7xC,QAAQqD,MAAM,UAAW/B,KAAK4gB,OACxBnhB,MAAK,6FAEf,IAAIyjB,EAAW,KACf,IACIA,EAAWljB,KAAKU,MAAM4kB,MACjBpiB,IAAIlD,KAAK4gB,MAAM2vB,QACfrtC,IAAI,SAAA2e,GAAO,OACRS,EAAA,qBAAK7J,UAAU,OAAO/W,IAAKmgB,EAAQngB,IAC/B8R,MAAO,CACHhI,OAAM,GAAAxM,OAAK6I,EAAK6nC,WAAV,MACNc,UAAS,GAAAxxC,OAAK6I,EAAK6nC,WAAV,MACTe,UAAS,GAAAzxC,OAAK6I,EAAK6nC,WAAV,QACT7tB,KAGpB,MAAO/f,GACH,MAAMrC,MAAK,mEAAAT,OAAoE8C,IAGnF,IAAMyJ,EAAQmO,GAAS1Z,KAAK4gB,MAAMrV,MAAO,QACnCC,EAASkO,GAAS1Z,KAAK4gB,MAAMpV,OAAQ,QAErCyW,EAAU,CAAC,gBAAiB,WAGlC,OAJuB1f,EAAYvC,KAAK4gB,MAAMqvB,gBAAgB,IAE1ChuB,EAAQ1c,KAAK,kBAAmB,cAGhD+c,EAAA,qBAAK7J,UAAWwJ,EAAQ9M,KAAK,KACzB3B,MAAO,CAAEjI,QAAOC,UAChBmkC,SAAU3vC,KAAK2vC,SACfptB,IAAKviB,KAAKmvC,SACV7sB,EAAA,qBAAK7J,UAAU,QAAQ8J,IAAKviB,KAAKovC,UACjC9sB,EAAA,qBAAK7J,UAAU,OAAO8J,IAAKviB,KAAKqvC,SAC5BnsB,GAEJZ,EAAA,qBAAK7J,UAAU,QAAQ8J,IAAKviB,KAAKsvC,kBA/IfpuB,cCxB5BwvB,GAAe,oBAUAC,cAGnB,SAAAA,EAAYC,GAA6BvzC,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA2wC,GAAA3wC,KAFjCslB,WAEgC,EACtCtlB,KAAKslB,MAAQsrB,EACVntB,MAAMitB,IACNxtC,IAAK,SAACC,GAAD,OAAkBA,EAAKV,OAAOC,gBACnC+pB,OAAQ,SAACtpB,GAAD,OAAkBA,EAAK3E,OAAS,wDAGrCP,GACN,GAA0B,IAAtB+B,KAAKslB,MAAM9mB,OAAe,OAAO,EACrC,IAAMqyC,EAAgB5yC,EAAKyE,cAFP2D,GAAA,EAAAC,GAAA,EAAAC,OAAA9H,EAAA,IAGpB,QAAA+H,EAAAC,EAAmBzG,KAAKslB,MAAxB3e,OAAAC,cAAAP,GAAAG,EAAAC,EAAAlI,QAAAsI,MAAAR,GAAA,EAAgC,KAArBlD,EAAqBqD,EAAA5E,MAE9B,IAAa,IADDivC,EAAcxrC,QAASlC,GAClB,OAAO,GALN,MAAAmE,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,YAAAjB,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,GAOpB,OAAO,WCFUuqC,sBACjB,SAAAA,EAAalwB,GAAyB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA8wC,IAClC7qC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAyzC,GAAAppC,KAAA1H,KAAO4gB,KAIXguB,sBAAwB,SAACriB,GACrB,IAAMwkB,EAAyB9qC,EAAK2a,MAAMyL,OAAOmR,KAAK,SAAC5tB,GAAD,OAAeA,EAAEwtB,YACnE2T,GACqB,IAAI/T,GAAM+T,GAClBC,aAAY,GAEzBzkB,IAAUwkB,GACW,IAAI/T,GAAMzQ,GAClBykB,aAAY,IAbK/qC,EAiBtCgrC,wBAA0B,SAACrvC,GACvB,IAAMsvC,EAActvC,EAAMa,OAAOC,cACjCuD,EAAKurB,SAAS,CAAE0f,gBAChBjrC,EAAKkrC,mBAAmBD,IApBUjrC,EAuBtCkrC,mBAAqB1L,GAAU,SAAC7jC,GAC5B,IAAM6qB,EAAS7qB,EAAMa,OAAOC,cAC5BuD,EAAKurB,SAAS,CAAE/E,YACjB,KA1BmCxmB,EA4BtCmrC,iBAAmB,SAACjwB,GAChBlb,EAAKurB,SAAS,CAAErQ,UA3BhBlb,EAAKvF,MAAQ,CAAEwwC,YAAa,GAAIzkB,OAAQ,GAAItL,KAAM,QAFhBlb,wEAgCX,IACfwmB,EAAWzsB,KAAKU,MAAhB+rB,OACAJ,EAAWrsB,KAAK4gB,MAAhByL,OACFglB,EAAU,IAAIV,GAAQlkB,GAC5B,OAAOJ,EAAOI,OAAO,SAACF,GAAD,OAAmB8kB,EAAQC,QAAQ/kB,EAAMthB,QACzDkW,KAAyB,SAApBnhB,KAAKU,MAAMygB,KAAkBowB,GAAaC,qCAG/C,IAAA7pC,EAAA3H,KACCqsB,EAASrsB,KAAK4gB,MAAMyL,OACpBolB,EAAiBzxC,KAAKysB,SAK5B,OAAQvI,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,4BACnByL,EAAA1mB,EAAA8X,cAAA,cACI4O,EAAA1mB,EAAA8X,cAACkW,GAAD,CACIvH,MAAK,mBAAAjlB,OAAqByyC,EAAejzC,OAApC,OAAAQ,OAAgDqtB,EAAO7tB,OAAvD,KACLoD,MAAO5B,KAAKU,MAAMwwC,YAClBhsB,SAAUllB,KAAKixC,wBACf9qB,MAAM,IACVjC,EAAA1mB,EAAA8X,cAACmW,GAAD,CACIxH,MAAM,UACNriB,MAAO5B,KAAKU,MAAMygB,KAClB+D,SAAUllB,KAAKoxC,kBACfltB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,QAAT,QACAwiB,EAAA1mB,EAAA8X,cAAA,OAAK5T,IAAI,UAAT,YAGRwiB,EAAA1mB,EAAA8X,cAACo8B,GAAD,CAAMhC,WAAY,IACZpqB,MAAOmsB,EACPlmC,MAAM,OACNglC,OAtBK,SAAChkB,GAAD,OAAmBrI,EAAA1mB,EAAA8X,cAACq8B,GAAD,CAAajwC,IAAK6qB,EAAMxiB,GACX+kC,kBAAmBnnC,EAAKinC,sBACxBriB,MAAOA,eA9CvBrL,IAAMkD,YAwE7C,SAASmtB,GAAWK,EAAgBC,GAChC,IAAMC,EAAQF,EAAO3mC,KAAKvI,cACpBqvC,EAAQF,EAAO5mC,KAAKvI,cAC1B,OAAIovC,EAAQC,GAAgB,EACxBD,EAAQC,EAAe,EACpB,EAIX,SAASP,GAAaI,EAAgBC,GAClC,OAAOG,GAAcH,EAAOnU,QAAUsU,GAAcJ,EAAOlU,QAI/D,SAASsU,GAActU,GAAQ,IACnBnuB,EAAamuB,EAAbnuB,IAAKD,EAAQouB,EAARpuB,IACb,OAAQC,EAAI,GAAKD,EAAI,KAAOC,EAAI,GAAKD,EAAI,KAAOC,EAAI,GAAKD,EAAI,IChGlDuiB,mBAXf,SAAyBnxB,GACrB,MAAO,CACH2rB,OAAQ3rB,EAAM2rB,SAItB,SAA4BmC,GACxB,MAAO,IAIIqD,CAA6CogB,ICNvCjV,qNACjBkV,WAAa,WACTrjB,GAAML,SAASK,GAAMX,WAAWlB,SAAS,YAG7CmlB,oCAAiB,SAAAz0C,IAAA,IAAAyvB,EAAAZ,EAAA,OAAAhvB,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACT4uB,EAAO,GADE9uB,EAAAE,KAAA,EAEWuxB,GAAOK,QAC3B,YACAjM,EAAA1mB,EAAA8X,cAAC88B,GAAD,CAAWltB,SAAU,SAACzD,GAAD,OAAe0L,EAAO1L,MAJlC,UAAApjB,EAAAgB,KAAA,CAAAhB,EAAAE,KAAA,eAAAF,EAAAiB,OAAA,wBAAAjB,EAAAE,KAAA,EAMOg4B,GAAM2Q,iBAAiB/Z,GAN9B,OAMPZ,EANOluB,EAAAgB,KAObX,QAAQC,KAAK,SAAU4tB,GAPV,yBAAAluB,EAAAwB,SAAAnC,QAUjBuvB,6CAA0B,SAAAgF,IAAA,OAAA10B,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,OACtBswB,GAAML,SAASK,GAAMX,WAAWjB,2BADV,wBAAAqF,EAAAzyB,SAAAoyB,8EAKtB,OAAQ/N,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,8BACnByL,EAAA1mB,EAAA8X,cAAA,UAAQmD,UAAU,wBACdyL,EAAA1mB,EAAA8X,cAAA,uBACA4O,EAAA1mB,EAAA8X,cAAA,WACI4O,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,MAAMG,QAAShiB,KAAKkyC,aAClChuB,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,SAASG,QAAShiB,KAAKmyC,iBACrCjuB,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,MAAMG,QAAS,kBAAMuU,GAAMrc,OAAOm4B,sBAChDnuB,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,MAAMG,QAAShiB,KAAKitB,4BAG1C/I,EAAA1mB,EAAA8X,cAACg9B,GAAD,cA9BuBpxB,IAAMkD,YCQpBmuB,sBAMjB,SAAAA,EAAa3xB,GAAqB,IAAA3a,EAAA,OAAA5I,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAAuyC,IAC9BtsC,EAAA5I,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAAk1C,GAAA7qC,KAAA1H,KAAO4gB,KANM4xB,UAAgDtxB,IAAMyoB,YAKrC1jC,EAJ1B+8B,IAAuC,KAIb/8B,EAF1BwsC,UAAoB,EAEMxsC,EAmBlCP,WAAa,SAACS,GACV,IAAM7C,EAAI2C,EAAKysC,KAAKvsC,GADFqiB,EAEaviB,EAAK2a,MAA5BtR,EAFUkZ,EAEVlZ,IAAKC,EAFKiZ,EAELjZ,IACPb,GAHY8Z,EAEAtD,SACR5Y,KAAKC,IAAI+C,EAAMhM,IACnBgL,EAAIhC,KAAKC,IAAIgD,EAAMjM,GACnBqvC,EAAIrmC,KAAKC,IAAIjJ,GAAKiM,EAAMD,GAAO,GAGtBrJ,EAAKwsC,UADhB/jC,EAAIikC,EACAjkC,EAAIJ,GAAqB,EACP,EAIlBqkC,GAAKrkC,EAAoB,EACP,EAE1BrI,EAAK2sC,OAAOtvC,IAnCkB2C,EAgElCu/B,UAAY,SAACr/B,GACT,IAAM7C,EAAI2C,EAAKysC,KAAKvsC,GACpBF,EAAK2sC,OAAOtvC,IAlEkB2C,mFAK9B,IAAMo9B,EAASrjC,KAAKwyC,UAAUryC,QAC9B,GAAKkjC,EAAL,CAEArjC,KAAKgjC,IAAMK,EAAOc,WAAW,MAC7B,IAAM/4B,EAAOi4B,EAAOz3B,wBACpBy3B,EAAOwP,aAAa,QAApB,GAAA7zC,OAAgCoM,EAAKG,QACrC5B,EAAQ05B,GAAQlrB,GAAG,CACftM,KAAM7L,KAAK0F,WACXkH,IAAK5M,KAAKwlC,YAGdxlC,KAAKojC,wCAsBF9/B,GAAW,IAAAwvC,EACiB9yC,KAAK4gB,MAA5BtR,EADMwjC,EACNxjC,IAAKC,EADCujC,EACDvjC,IAAK2V,EADJ4tB,EACI5tB,SACVutB,EAAczyC,KAAdyyC,UAER,IAAmB,IAAfA,EACAvtB,EAAS4kB,GAAMxmC,EAAG,EAAGiM,GAAMA,QAE1B,GAAkB,IAAdkjC,EACLvtB,EAAS5V,EAAKw6B,GAAMxmC,EAAGgM,EAAK,QAE3B,CACD,IAAMrL,GAASsL,EAAMD,GAAO,EACxBZ,EAAIpL,EAAIW,EACRqK,EAAIhL,EAAIW,EACRyK,EAAI,GACJJ,GAAKI,EACLA,EAAI,GAECJ,EAAI,IACTI,GAAKJ,EAAI,EACTA,EAAI,GAER4W,EAASxW,EAAGJ,iCASfnI,GACD,IAAMk9B,EAASrjC,KAAKwyC,UAAUryC,QAC9B,IAAKkjC,EAAQ,OAAO,EAEpB,IAAMj4B,EAAOi4B,EAAOz3B,wBACpB,OAAQzF,EAAI7C,EA1FL,KA0FoB8H,EAAKG,MAAQ,oCAIxC,IAAMy3B,EAAMhjC,KAAKgjC,IACjB,GAAKA,EAAL,CAFI,IAGIK,EAAWL,EAAXK,OAEFj4B,EAAOi4B,EAAOz3B,wBACdiN,EAAIzN,EAAKG,MACTuN,EAAI1N,EAAKI,OACf63B,EAAO93B,MAAQsN,EACfwqB,EAAO73B,OAASsN,EAEhBkqB,EAAI+P,UAAU,EAAG,EAAGl6B,EAAGC,GACvB,IAAMk6B,EAAQn6B,EAAI,GAClB,KAAIm6B,EA1GG,IA0GP,CAEAhQ,EAAIiQ,YAAc,OAClBjQ,EAAIkQ,UAAY,OAChBlQ,EAAImQ,YACJnQ,EAAI53B,KA/GG,GA+GU,EAAG4nC,EAAOl6B,GAC3BkqB,EAAIh/B,OACJg/B,EAAIlpB,SApBA,IAAAs5B,EAwEZ,SAAmB9jC,EAAaC,GAC5B,IAAI/R,EAAIssC,GAAMx6B,GACVuuB,EAAIiM,GAAMv6B,GACd,GAAI/R,EAAIqgC,EAAG,CACP,IAAMwV,EAAM71C,EACZA,EAAIqgC,EACJA,EAAIwV,EAGR,MAAO,CAAE/jC,IAAK9R,EAAG+R,IAAKsuB,GA3DG3qB,CAAUlT,KAAK4gB,MAAMtR,IAAKtP,KAAK4gB,MAAMrR,KACpD/R,EApHC,GAoHYw1C,EAvBfI,EAsBI9jC,IAEFuuB,EArHC,GAqHYmV,EAxBfI,EAsBS7jC,IAGP+jC,EAAOtQ,EAAIuQ,qBAAqB,EAAG,EAAG,EAAGz6B,GAC/Cw6B,EAAKE,aAAa,EAAG,QACrBF,EAAKE,aAAa,EAAGxzC,KAAK4gB,MAAM1R,OAChC8zB,EAAIkQ,UAAYI,EAChBtQ,EAAImQ,YACJnQ,EAAI53B,KAAK5N,EAAE,EAAGqgC,EAAIrgC,EAAGsb,GACrBkqB,EAAIh/B,OACJg/B,EAAIlpB,SAEJkpB,EAAIziB,OACJyiB,EAAImQ,YACJnQ,EAAIkQ,UAAY,QAChBlQ,EAAI53B,KAAK5N,EAAE,EAAGqgC,EAAIrgC,EAAO,GAAJsb,GACrBkqB,EAAIh/B,OACJg/B,EAAIyQ,UAEJzQ,EAAImQ,YACJnQ,EAAI4P,OAAO,EAAE,GACb5P,EAAI0Q,OAAO76B,EAAE,GACbmqB,EAAI4P,OAAO,EAAE95B,GACbkqB,EAAI0Q,OAAO76B,EAAEC,GACbkqB,EAAIlpB,wDAKJ9Z,KAAKojC,yCAIL,OAAQlf,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,wBACnByL,EAAA1mB,EAAA8X,cAAA,OAAK9B,MAAO,CAAEmgC,OAAM,KAAA30C,OArJjB,GAqJiB,QAChBklB,EAAA1mB,EAAA8X,cAACkR,GAAD,CAAOvC,MAAOjkB,KAAK4gB,MAAMqD,SAE7BC,EAAA1mB,EAAA8X,cAAA,UAAQiN,IAAKviB,KAAKwyC,UAAWhnC,OAAO,eA9Ib0V,IAAMkD,YAoJzC,SAAS0lB,GAAMtnC,GAAqD,IAA1C8M,EAA0CnR,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAA5B,EAAGoR,EAAyBpR,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAX,EACrD,OAAIqE,EAAI8M,EAAYA,EAChB9M,EAAI+M,EAAYA,EACb/M,EChKI,IAAAoxC,GAAA,SAASjzC,EAAgBwI,GACpC,IAAIw7B,EAAQ,EACRkP,EAAY,EACZC,EAAqB,aACrBC,EAAkB,GAChBC,EAAiB,WACnBrP,EAAQ,EACRmP,EAAU/zC,WAAV,EAAA1C,OAAAqsB,GAAA,EAAArsB,CAAc02C,KAGlB,OAAO,WACHD,EAAanzC,EADwC,QAAAiK,EAAAzM,UAAAK,OAAbmZ,EAAa,IAAA3U,MAAA4H,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAb6M,EAAa7M,GAAA3M,UAAA2M,GAErDipC,EAAWp8B,EACX,IAAM5T,EAAMI,KAAKJ,MACXsI,EAActI,EAAM8vC,EAC1BA,EAAY9vC,EACRsI,EAAclD,EACd6qC,IAEe,IAAVrP,IACLA,EAAQtjC,OAAOgY,WAAW26B,EAAgB7qC,EAAQkD,MCSzC2wB,qNAETiX,cAAwB,IACxBC,cAAwB,IAGxBC,mBAA6B,IAE7BC,YAAsC,CAAC,EAAE,EAAE,KAC3CC,YAAsB,IAEtBC,wBAA0B7O,GAAU,WACxCx/B,EAAKkuC,mBAAqB,EAC1BluC,EAAKsuC,gBACN,OAkBHA,aAAeC,GAAU,WACrBje,GAAM0Q,IAAI9Q,gBAAgB,CAACpsB,GAAI9D,EAAKguC,cAAe3d,MAAOrwB,EAAKwuC,qBAC/Dle,GAAM0Q,IAAI9Q,gBAAgB,CAACpsB,GAAI9D,EAAKiuC,cAAe5d,MAAOrwB,EAAKyuC,sBAChE,OAiDHC,WAAa,WACT9lB,GAAML,SAASK,GAAMX,WAAWlB,SAAS,aAG7C4nB,sBAAwB,SAACpnB,GACrBqB,GAAML,SAASK,GAAMT,OAAOntB,OAAO,CAAEusB,kBAOzCqnB,qBAAuB,SAAClnB,GACpBjvB,QAAQC,KAAK,YAAagvB,GAC1BkB,GAAML,SAASK,GAAMT,OAAOntB,OAAO,CAAE0sB,iBAGzCmnB,sBAAwB,SAAClnB,GACrBiB,GAAML,SAASK,GAAMT,OAAOntB,OAAO,CAAE2sB,kBAGzCmnB,yBAA2B,SAAClnB,GACxB5nB,EAAKkuC,mBAAqBtmB,EAC1B5nB,EAAKquC,0BACLzlB,GAAML,SAASK,GAAMT,OAAOntB,OAAO,CAAE4sB,qBAGzCzmB,2BAAQ,SAAA1J,IAAA,IAAAgD,EAAA2rB,EAAAqR,EAAAsX,EAAA1xC,EAAAC,EAAA86B,EAAA4W,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAj4C,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEEmC,EAAQmuB,GAAMR,MAAMoT,WACpBpV,EAAS3rB,EAAM2rB,OAChBI,OAAO,SAAA7c,GAAC,OAAIA,EAAEoR,UACd9d,IAAI+qB,GAAO0S,2BACVjD,EAASzP,GAAO8S,gBAAgB1U,GANlC2oB,EAAA33C,OAAA+lB,EAAA,EAAA/lB,CAOYqgC,EAAOpuB,IAPnB,GAOGhM,EAPH0xC,EAAA,GAOKzxC,EAPLyxC,EAAA,GAOO3W,EAPP2W,EAAA,GAAAC,EAAA53C,OAAA+lB,EAAA,EAAA/lB,CAQYqgC,EAAOnuB,IARnB,GAQG2lC,EARHD,EAAA,GAQKE,EARLF,EAAA,GAQOG,EARPH,EAAA,GASEI,EAAK/xC,EAAI4xC,EACTI,EAAKhyC,EAAI4xC,EACTK,EAAKjyC,EAAI4xC,EACfjvC,EAAKouC,YAAc/nC,KAAK2M,KAAKo8B,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAChDtvC,EAAKmuC,YAAY,IAAM9wC,EAAI4xC,GAAK,EAChCjvC,EAAKmuC,YAAY,IAAM7wC,EAAI4xC,GAAK,EAChClvC,EAAKmuC,YAAY,IAAM/V,EAAI+W,GAAK,EAf5B/2C,EAAAE,KAAA,GAkBiBg4B,GAAM0Q,IAAIhT,gBAlB3B,eAkBEuhB,EAlBFn3C,EAAAgB,KAAAhB,EAAAE,KAAA,GAmBEg4B,GAAM0Q,IAAI/R,iBAAiBsgB,EAAOtyC,IAAI,SAAAue,GAAC,OAAIA,EAAE1X,MAnB/C,eAAA1L,EAAAE,KAAA,GAqBuBk3C,GAASxvC,EAAKwuC,oBArBrC,eAqBJxuC,EAAKguC,cArBD51C,EAAAgB,KAAAhB,EAAAE,KAAA,GAsBuBk3C,GAASxvC,EAAKyuC,oBAtBrC,QAsBJzuC,EAAKiuC,cAtBD71C,EAAAgB,KAwBJwvB,GAAML,SAASK,GAAMT,OAAOntB,OAAO,CAC/BysB,KAAM,EAAGD,KAAM,KAzBf,yBAAApvB,EAAAwB,SAAAnC,QA6BRg4C,sCAAmB,SAAAzjB,IAAA,IAAA0jB,EAAAC,EAAAJ,EAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9S,EAAA/X,EAAA,OAAA/tB,EAAAC,EAAAY,KAAA,SAAAk0B,GAAA,cAAAA,EAAAh0B,KAAAg0B,EAAA/zB,MAAA,cACTo3C,EAAiBpf,GAAM0Q,IAAIhT,gBADlB3B,EAAA/zB,KAAA,EAEeksB,GAAS7L,OAFxB,UAETg3B,EAFStjB,EAAAjzB,KAAA,CAAAizB,EAAA/zB,KAAA,eAAA+zB,EAAAhzB,OAAA,wBAAAgzB,EAAA/zB,KAAA,EAIKo3C,EAJL,UAITH,EAJSljB,EAAAjzB,KAKTw2C,EAAWL,EAAOhY,KAAK,SAAA/b,GAAC,OAAIA,EAAE1X,KAAO9D,EAAKguC,gBALjC,CAAA3hB,EAAA/zB,KAAA,gBAAA+zB,EAAAhzB,OAAA,qBAOTw2C,EAAWN,EAAOhY,KAAK,SAAA/b,GAAC,OAAIA,EAAE1X,KAAO9D,EAAKiuC,gBAPjC,CAAA5hB,EAAA/zB,KAAA,gBAAA+zB,EAAAhzB,OAAA,kBASTy2C,EAAiB9vC,EAAKmwC,kBAAkBP,EAAUC,GAC/CE,EAAQ,EAVF,aAUKA,EAAQ/vC,EAAK2a,MAAMiN,cAVxB,CAAAyE,EAAA/zB,KAAA,gBAAA03C,EAAA54C,OAAA+lB,EAAA,EAAA/lB,CAWc04C,EAAeC,GAX7B,GAWJE,EAXID,EAAA,GAWIE,EAXJF,EAAA,GAYXv3C,QAAQC,KAAK,yBAA0Bq3C,EAAOE,EAAQC,GAZ3C7jB,EAAA/zB,KAAA,GAaLg4B,GAAM0Q,IAAI9Q,gBAAgB+f,GAbrB,eAAA5jB,EAAA/zB,KAAA,GAcLg4B,GAAM0Q,IAAI9Q,gBAAgBggB,GAdrB,eAAA7jB,EAAA/zB,KAAA,GAeUstC,GAAgB1D,UAAUyN,GAfpC,eAeLvS,EAfK/Q,EAAAjzB,KAgBLisB,EAhBK,GAAAtsB,OAgBS42C,EAAgBtqB,SAhBzB,KAAAtsB,OAgBqCksC,GAAKd,UAAU4L,GAhBpD,QAiBXt3C,QAAQC,KAAK,YAAa2sB,GAjBfgH,EAAA/zB,KAAA,GAkBLstC,GAAgBnD,iBAAiBrF,EAAQ/X,GAlBpC,QAUsC0qB,IAVtC1jB,EAAA/zB,KAAA,iBAoBf0H,EAAKsuC,eApBU,yBAAAjiB,EAAAzyB,SAAAoyB,2NA3HMsE,GAAM0Q,IAAIhT,0BACT,KADhBuhB,UACKh3C,wDACLw7B,EAAMwb,EAAOtyC,IAAI,SAAAozB,GAAK,OAAIA,EAAQA,EAAMvsB,GAAK,IACnDwsB,GAAM0Q,IAAI/R,iBAAiB8E,oPAI3Bh6B,KAAKoH,QACLpH,KAAKu0C,sQAILv0C,KAAKu0C,iKASL,IAAM8B,EAAM/pC,KAAK65B,GAAKnmC,KAAK4gB,MAAM+M,SAAW,IACtC2oB,EAAMhqC,KAAK65B,GAAKnmC,KAAK4gB,MAAMgN,UAAY,IACvCrqB,EAAI+I,KAAK6xB,IAAImY,GACbv9B,EAASzM,KAAK4xB,IAAIoY,GAGxB,MAAO,CAFGhqC,KAAK4xB,IAAImY,GAAOt9B,EAEhBxV,EADA+I,KAAK6xB,IAAIkY,GAAOt9B,8CAIH,IACfs7B,EAAuBr0C,KAAvBq0C,YAAazzB,EAAU5gB,KAAV4gB,MACrB,OAAOyzB,EAAc/nC,KAAKC,IAAIqU,EAAM8M,KAAO9M,EAAM6M,iDAGA,IACzC4mB,EAA6Br0C,KAA7Bq0C,YAAaD,EAAgBp0C,KAAhBo0C,YACfmC,EAAYv2C,KAAKw2C,mBACjBC,EAAqBpC,GAAer0C,KAAK4gB,MAAM6M,KAAO,IACtD8oB,EAAYv2C,KAAKm0C,mBACjBtV,EAAS7+B,KAAK02C,wBACdC,EAActV,GAAKzD,WACrBwW,EACA/S,GAAK7B,MAAMX,GAAS4X,IAGxB,OADA/3C,QAAQ4J,IAAI,2DAA4DiuC,EAAWE,EAAoB5X,EAAQ8X,GACxGtV,GAAK1C,UAAUgY,EAAa9X,8CAGc,IACzCwV,EAA6Br0C,KAA7Bq0C,YAAaD,EAAgBp0C,KAAhBo0C,YACfmC,EAAYv2C,KAAKw2C,mBACjBC,EAAqBpC,GAAer0C,KAAK4gB,MAAM8M,KAAO,IACtD6oB,EAAYv2C,KAAKm0C,mBACjBtV,EAASwC,GAAK7B,MAAMx/B,KAAK02C,yBAA0B,GACnDC,EAActV,GAAKzD,WACrBwW,EACA/S,GAAK7B,MAAMX,EAAQ4X,IAGvB,OADA/3C,QAAQ4J,IAAI,2DAA4DiuC,EAAWE,EAAoB5X,EAAQ8X,GACxGtV,GAAK1C,UAAUgY,EAAa9X,yFAezBvvB,EAAaC,GACvBsf,GAAML,SAASK,GAAMT,OAAOntB,OAAO,CAAEwsB,KAAMne,EAAKoe,KAAMne,+CAsEhCsmC,EAAkBC,GAExC,IADA,IAAMC,EAAiB,GACdC,EAAQ,EAAGA,EAAQh2C,KAAK4gB,MAAMiN,aAAcmoB,IACjDh2C,KAAKm0C,mBAAqB6B,EAC1BD,EAAexwC,KAAK,CAChB,CACIwE,GAAI8rC,EAAS9rC,GACbusB,MAAOt2B,KAAKy0C,oBAEhB,CACI1qC,GAAI+rC,EAAS/rC,GACbusB,MAAOt2B,KAAK00C,sBAMxB,OAFA10C,KAAKm0C,mBAAqB,EAC1Bz1C,QAAQC,KAAK,sCAAuCk3C,EAAUC,EAAUC,GACjEA,mCAKP,OADAr3C,QAAQC,KAAK,uBAAwBqB,KAAK4gB,MAAM+M,UACxCzJ,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,6BACnByL,EAAA1mB,EAAA8X,cAAA,UAAQmD,UAAU,wBACdyL,EAAA1mB,EAAA8X,cAAA,WACI4O,EAAA1mB,EAAA8X,cAACmR,GAAD,CAAM5E,QAAQ,OAAOG,QAAShiB,KAAK20C,cAEvCzwB,EAAA1mB,EAAA8X,cAAA,qBAEJ4O,EAAA1mB,EAAA8X,cAAA,WACI4O,EAAA1mB,EAAA8X,cAAC2a,GAAD,CACI9J,MAAM,EAAMhG,SAAS,EACrB8D,MAAM,6BACNqL,KAAK,SACLtN,QAAShiB,KAAKoH,QAClB8c,EAAA1mB,EAAA8X,cAAA,6FAGA4O,EAAA1mB,EAAA8X,cAACshC,GAAD,CACI3yB,MAAM,aACN/U,MAAOkK,EAAMlH,MACb5C,IAAKtP,KAAK4gB,MAAM6M,KAChBle,IAAKvP,KAAK4gB,MAAM8M,KAChBxI,SAAUllB,KAAK62C,gBACnB3yB,EAAA1mB,EAAA8X,cAAA,0DACA4O,EAAA1mB,EAAA8X,cAAC61B,GAAD,CAAQ77B,KAAM,IACNC,IAAK,IACL2V,SAAUllB,KAAK60C,qBACf9K,KAAM,EACN9lB,MAAK,aAAAjlB,OAAegB,KAAK4gB,MAAM+M,UAC/B1vB,KAAI,GAAAe,OAAKgB,KAAK4gB,MAAM+M,UACpB/rB,MAAO5B,KAAK4gB,MAAM+M,WAC1BzJ,EAAA1mB,EAAA8X,cAAC61B,GAAD,CAAQ77B,KAAM,GACNC,IAAK,GACL2V,SAAUllB,KAAK80C,sBACf/K,KAAM,EACN9lB,MAAK,cAAAjlB,OAAgBgB,KAAK4gB,MAAMgN,WAChC3vB,KAAI,GAAAe,OAAKgB,KAAK4gB,MAAMgN,WACpBhsB,MAAO5B,KAAK4gB,MAAMgN,YAC1B1J,EAAA1mB,EAAA8X,cAAA,WACA4O,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQ9J,MAAM,EAAMoJ,MAAM,EACtBtL,MAAM,6BACNqL,KAAK,WACTpL,EAAA1mB,EAAA8X,cAAA,mDACA4O,EAAA1mB,EAAA8X,cAAC61B,GAAD,CAAQ77B,IAAK,EACLC,IAAK,GACL2V,SAAUllB,KAAK+0C,yBACfhL,KAAM,EACN9lB,MAAK,iBAAAjlB,OAAmBgB,KAAK4gB,MAAMiN,cACnC5vB,KAAI,GAAAe,OAAKgB,KAAK4gB,MAAMiN,cACpBjsB,MAAO5B,KAAK4gB,MAAMiN,eAC1B3J,EAAA1mB,EAAA8X,cAAC2a,GAAD,CAAQ9J,MAAM,EACNlC,MAAM,mBACNjC,QAAShiB,KAAK01C,iBACdpmB,KAAK,mBA7OMpO,IAAMkD,qBAuP1BqxB,mFAAf,SAAA9e,EAAwB9T,GAAxB,IAAAyT,EAAA,OAAA/4B,EAAAC,EAAAY,KAAA,SAAAw4B,GAAA,cAAAA,EAAAt4B,KAAAs4B,EAAAr4B,MAAA,cAAAq4B,EAAAr4B,KAAA,EACwBg4B,GAAM0Q,IAAI7T,aAAavQ,GAD/C,UACUyT,EADVM,EAAAv3B,KAAA,CAAAu3B,EAAAr4B,KAAA,eAAAq4B,EAAAt3B,OAAA,SAEuB,GAFvB,cAAAs3B,EAAAt3B,OAAA,SAGWg3B,EAAMvsB,IAHjB,wBAAA6sB,EAAA/2B,SAAA82B,6BCrQe9E,mBArBf,SAAyBnxB,GACrB,MAAO,CACH8sB,UAAW9sB,EAAM6sB,OAAOC,UACxBC,KAAM/sB,EAAM6sB,OAAOE,KACnBC,KAAMhtB,EAAM6sB,OAAOG,KACnBgU,KAAMhhC,EAAM6sB,OAAOmU,KACnBE,KAAMlhC,EAAM6sB,OAAOqU,KACnBD,KAAMjhC,EAAM6sB,OAAOoU,KACnBE,KAAMnhC,EAAM6sB,OAAOsU,KACnBlU,SAAUjtB,EAAM6sB,OAAOI,SACvBC,UAAWltB,EAAM6sB,OAAOK,UACxBC,aAAcntB,EAAM6sB,OAAOM,eAInC,SAA4BW,GACxB,MAAO,IAKIqD,CAA6CilB,ICJvCC,sBACjB,SAAAA,EAAan2B,GAAoB,OAAAvjB,OAAAmG,EAAA,EAAAnG,CAAA2C,KAAA+2C,GAAA15C,OAAAwjB,EAAA,EAAAxjB,CAAA2C,KAAA3C,OAAAyjB,EAAA,EAAAzjB,CAAA05C,GAAArvC,KAAA1H,KACtB4gB,6LAIP,IA0BI2V,GAAMrc,OAAOm4B,mBAEjB,MAAOvwC,GACHpD,QAAQqD,MAAMD,iIAKlB,OAAQoiB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,OACnByL,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,SACXyL,EAAA1mB,EAAA8X,cAAC0hC,GAAD,CAAOp1C,MAAO5B,KAAK4gB,MAAMkM,OACrB5I,EAAA1mB,EAAA8X,cAAC2hC,GAAD,CAAYv1C,IAAI,UAChBwiB,EAAA1mB,EAAA8X,cAAC4hC,GAAD,CAAWx1C,IAAI,WAGvBwiB,EAAA1mB,EAAA8X,cAAA,OAAKmD,UAAU,QACXyL,EAAA1mB,EAAA8X,cAAC6hC,GAAD,CACIzL,MAAOnV,GAAMwQ,SAASvB,UACtBgG,WAAYjV,GAAMwQ,SAAS1B,iBAC/BnhB,EAAA1mB,EAAA8X,cAAC8hC,GAAD,CAAkBp2B,QAAShhB,KAAK4gB,MAAMmM,uBAnDrB7L,IAAMkD,YCJxByN,mBAbf,SAAyBnxB,GACrB,MAAO,CACHosB,MAAOpsB,EAAMmsB,WAAWC,MACxBC,YAAarsB,EAAMmsB,WAAWE,cAItC,SAA4ByB,GACxB,MAAO,IAKIqD,CAA6CwlB,uDCC5D,SAAA35C,IAAA,IAAAmqB,EAAA0J,EAAA7C,EAAAoE,EAAAyK,EAAAiY,EAAA8B,EAAAlqB,EAAAmqB,EAAA,OAAAh6C,EAAAC,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyBqwB,EAAOzxB,KAAK,OAAQ,CAACc,KAAM,iBADpD,cACU4pB,EADVxpB,EAAAgB,KAEIX,QAAQC,KAAK,UAAWkpB,GAF5BxpB,EAAAE,KAAA,EAI2B8oC,GAAYzV,aAAY,GAJnD,cAIUL,EAJVlzB,EAAAgB,KAKIX,QAAQC,KAAK,YAAa4yB,GAL9BlzB,EAAAE,KAAA,GAOyBgwC,GAAY7f,SAPrC,eAOUA,EAPVrwB,EAAAgB,KAQIX,QAAQC,KAAK,UAAW+vB,GAR5BrwB,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAW6BuxB,GAAO9P,KAAK,uBAAwBuW,GAAM1E,QAAQN,IAAW,GAX1F,eAWcuB,EAXdz0B,EAAAgB,KAAAhB,EAAAE,KAAA,GAY4BuxB,GAAO9P,KAAK,oBAAqBuW,GAAM0Q,IAAIvS,YAAY,GAZnF,eAYc6I,EAZdl/B,EAAAgB,KAAAhB,EAAAE,KAAA,GAa6Bg4B,GAAM0Q,IAAIhT,gBAbvC,QAacuhB,EAbdn3C,EAAAgB,KAcci4C,EAAW9B,EAAOtyC,IAAK,SAAAue,GAAC,OAAIA,EAAE1X,KACpCwsB,GAAM0Q,IAAI/R,iBAAiBoiB,GAE3BzoB,GAAML,SAASK,GAAMZ,OAAOrB,MAAM2Q,EAAMlR,SAGlCe,EAAO/b,SAASmmC,eAAe,QACrCxmB,IAASC,OAAO/M,EAAA1mB,EAAA8X,cAACi0B,EAAA,EAAD,CAAUlb,MAAOQ,GAAMR,OAAOnK,EAAA1mB,EAAA8X,cAACmiC,GAAD,CAAK7W,OAAQ9N,KAAsB1F,IAE3EmqB,EAASlmC,SAASmmC,eAAe,oBAEnCD,EAAO/lC,UAAUzF,IAAI,UACrB1K,OAAOgY,WAAW,kBAAMhI,SAASnS,KAAKoa,YAAYi+B,IAAS,MA1BvEl5C,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAmB,GAAAnB,EAAA,UAAAA,EAAAE,KAAA,GA8BcuxB,GAAOJ,MAAP,yCAAA1wB,OAAsDuyB,EAAtD,MA9Bd,QA+BQxU,SAAS0V,SA/BjB,yBAAAp0B,EAAAwB,SAAAnC,EAAA,0CAFA0b,EAAMrZ,MAAM,+CAsCZ23C","file":"static/js/main.ffea1c68.chunk.js","sourcesContent":["module.exports = {\"en\":{\"nan\":\"Not a number!\"},\"fr\":{\"nan\":\"Ce n'est pas un nombre !\"},\"it\":{\"nan\":\"Non è un numero !\"}}","module.exports = {\"en\":{\"cancel\":\"Cancel\",\"close\":\"Close\",\"ok\":\"Ok\"},\"fr\":{\"cancel\":\"Annuler\",\"close\":\"Fermer\",\"ok\":\"OK\"}}","export default {\n    async exec(serviceName: string, params: any = \"\"): Promise<any> {\n        console.info(\"[Python]\", serviceName, params);\n        const data = new FormData();\n        data.append(\"i\", JSON.stringify(params));\n        const\n            url = `/cgi-bin/${serviceName}.py`,\n            init: RequestInit = { method: \"POST\", body: data, credentials: \"include\" },\n            response = await fetch(url, init);\n        if (response.ok) {\n            const text = await response.text();\n            try {\n                return JSON.parse(text);\n            }\n            catch( ex ) {\n                throw Error(text);\n            }\n        }\n        throw {\n            code: response.status,\n            text: response.statusText\n        }\n    }\n}\n","import { IAnimation, IAction } from '../types'\n\nconst PREFIX = \"animation:\"\n\n\nexport default {\n    INITIAL_STATE: {\n        current: 0,\n        delta: 1,\n        dt: 1,\n        frameCount: 0,\n        playing: false,\n        unit: ''\n    },\n\n    reducer(state: IAnimation, action: IAction): IAnimation {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(animation: Partial<IAnimation>): IAction {\n        return { type: `${PREFIX}update`, animation };\n    }\n}\n\n\nfunction update(state: IAnimation, action: IAction): IAnimation {\n    return Object.assign( state, action.animation );\n}\n","/**\r\n * @example\r\n * import Storage from \"./tfw/storage\";\r\n * Storage.local.set(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * const state = Storage.local.get(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * Storage.local.del(\"state\");\r\n */\r\n\r\nexport default {\r\n    local: makeStorage(window.localStorage),\r\n    session: makeStorage(window.sessionStorage)\r\n};\r\n\r\ninterface IStorage {\r\n    getItem: (key: string)=>any;\r\n    setItem: (key: string, val: any)=>void;\r\n    removeItem: (key: string)=>void;\r\n}\r\n\r\nfunction makeStorage(storage:IStorage) {\r\n    return {\r\n        get(key: string, defaultValue: any): any {\r\n            const value = storage.getItem(key);\r\n            if( value === null) return defaultValue;\r\n            try {\r\n                return JSON.parse(value);\r\n            }\r\n            catch( ex ) {\r\n                console.error(`storage[\"${key}\"] is not parsable as a JSON object!\\n`\r\n                + `Its value is: \"${value}\".\\nThis item will be deleted.`);\r\n                storage.removeItem(key);\r\n                return defaultValue;\r\n            }\r\n        },\r\n\r\n        set(key: string, value: any) {\r\n            storage.setItem(key, JSON.stringify(value));\r\n        },\r\n\r\n        del(key: string) {\r\n            storage.removeItem(key);\r\n        }\r\n    }\r\n}\r\n","export default function castString(value: any, defaultValue: string): string {\r\n    const t = typeof value;\r\n    if (t === 'number' && !isNaN(value)) {\r\n        return `${value}`;\r\n    }\r\n    if (t === 'string') return value;\r\n    return defaultValue;\r\n}\r\n","export default function castBoolean(v: any, defaultValue = false): boolean {\r\n    switch (typeof v) {\r\n        case \"undefined\":\r\n            return defaultValue;\r\n        case \"boolean\":\r\n            return v;\r\n        case \"number\":\r\n            return v != 0;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text === 'true' || text === 'yes') return true;\r\n            const num = parseInt(text);\r\n            if (!isNaN(num)) return num !== 0;\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n","import castString from \"./string\";\n\n/**\n * If `value` is not an array, return `defaultArray`.\n * Else if `defaultString` is undefined, return `value`.\n * Else return a copy of `value` with a castString on all its elements.\n *\n * @param   value         [description]\n * @param   defaultArray  [description]\n * @param   defaultString [description]\n * @returns               [description]\n */\nexport default function castStringArray(\n    value: any, defaultArray: string[] = [], defaultString: string = \"\"\n) {\n    if (typeof value === 'string') return [value];\n    if (!Array.isArray(value)) return defaultArray;\n    if (typeof defaultString === 'undefined') return value;\n    return value.map(item => castString(item, defaultString));\n}\n","const CAPACITY = 3;\r\n\r\n/**\r\n * Helper to manage a pointer move.\r\n * It gives you the location, the speed and the acceleration of your pointer.\r\n *\r\n * @type {[type]}\r\n */\r\nexport default class Moves {\r\n    private _x0: number;\r\n    private _y0: number;\r\n    private _time0: number;\r\n    private _x: number[] = new Array(CAPACITY);\r\n    private _y: number[] = new Array(CAPACITY);\r\n    private _time: number[] = new Array(CAPACITY);\r\n    private _cursor: number = 0;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.init(x, y);\r\n    }\r\n\r\n    init(x: number, y: number) {\r\n        this._time0 = this.now;\r\n        this._x0 = x;\r\n        this._y0 = y;\r\n        this._x = this._x.fill(this._x0, 0, CAPACITY);\r\n        this._y = this._y.fill(this._y0, 0, CAPACITY);\r\n        this._time = this._time.fill(this._time0, 0, CAPACITY);\r\n    }\r\n\r\n    _index(shift: number) {\r\n        return (this._cursor + shift) % CAPACITY;\r\n    }\r\n\r\n    get now() { return Date.now(); }\r\n\r\n    add(x: number, y: number) {\r\n        const idx = (this._cursor + CAPACITY - 1) % CAPACITY;\r\n        this._time[idx] = this.now;\r\n        this._x[idx] = x;\r\n        this._y[idx] = y;\r\n        this._cursor = idx;\r\n    }\r\n\r\n    get elapsedTime() { return this.now - this._time0; }\r\n\r\n    get x() { return this._x[this._cursor]; }\r\n    get y() { return this._y[this._cursor]; }\r\n\r\n    get startX() { return this._x0; }\r\n    get startY() { return this._y0; }\r\n\r\n    get speedX() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._x[idx0] - this._x[idx1]) / time;\r\n    }\r\n\r\n    get speedY() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._y[idx0] - this._y[idx1]) / time;\r\n    }\r\n\r\n    get accelX() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const x0 = this._x[idx0];\r\n        const x1 = this._x[idx1];\r\n        const x2 = this._x[idx2];\r\n\r\n        const speed01 = (x0 - x1) / time01;\r\n        const speed12 = (x1 - x2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n\r\n    get accelY() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const y0 = this._y[idx0];\r\n        const y1 = this._y[idx1];\r\n        const y2 = this._y[idx2];\r\n\r\n        const speed01 = (y0 - y1) / time01;\r\n        const speed12 = (y1 - y2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n}\r\n","type TIdentifier = number | null;\r\n\r\nexport default class Finger {\r\n    private fingers: TIdentifier[] = [];\r\n\r\n    getIndex(identifier: number): number {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) return index;\r\n        const indexOfFirstNull = this.fingers.indexOf(null);\r\n        if (indexOfFirstNull !== -1) {\r\n            this.fingers[indexOfFirstNull] = identifier;\r\n            return indexOfFirstNull;\r\n        }\r\n        this.fingers.push(identifier);\r\n        return this.fingers.length - 1;\r\n    }\r\n\r\n    remove(identifier: number) {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) this.fingers[index] = null;\r\n    }\r\n}\r\n","/**\r\n * BasicHandler(\r\n *     element: HTMLElement,\r\n *     handleDown: TBasicHandler,\r\n *     handleUp: TBasicHandler,\r\n *     handleMove: TBasicHandler\r\n * )\r\n *\r\n * Deals with three basic events : DOWN, UP and MOVE.\r\n * If the device has several input pointers, we will return\r\n * only one event.\r\n *\r\n * A TBasicHandler is a synthetic event object:\r\n *   - x: X coordinate relative to the viewport, not including any scroll offset.\r\n *   - y: Y coordinate relative to the viewport, not including any scroll offset.\r\n *   - startX\r\n *   - startY\r\n *   - index: For multi-touch system. The first one is 0, the second is 1, etc.\r\n *   - buttons: 1 = left, 2 = right.\r\n *   - pointer: \"mouse\" | \"touch\" | \"pen\".\r\n *   - clear(): Call stopPropagation() and preventDefault() on this event.\r\n *\r\n */\r\nimport Finger from \"./finger\"\r\nimport { IBasicEvent } from \"./basic-handler.types\"\r\n\r\ntype TTouchEventHandler = (evt: TouchEvent) => void;\r\n\r\ntype TMouseEventHandler = (evt: MouseEvent) => void;\r\n\r\ntype TBasicHandler = (evt: IBasicEvent) => void | undefined;\r\n\r\ninterface IDeviceHandlers {\r\n    touchstart?: TTouchEventHandler;\r\n    touchend?: TTouchEventHandler;\r\n    touchmove?: TTouchEventHandler;\r\n    mousedown?: TMouseEventHandler;\r\n    mouseup?: TMouseEventHandler;\r\n    mousemove?: TMouseEventHandler;\r\n    mouseout?: TMouseEventHandler;\r\n}\r\n\r\nexport default class BasicHandler {\r\n    readonly element: HTMLElement;\r\n    pointerType: string = \"\";\r\n    pointerTypeTime: number = 0;\r\n    deviceHandlers: IDeviceHandlers = {};\r\n    fingers: Finger = new Finger();\r\n    pressed: boolean = false;\r\n\r\n    constructor(element: HTMLElement,\r\n        handleDown: TBasicHandler,\r\n        handleUp: TBasicHandler,\r\n        handleMove: TBasicHandler) {\r\n        this.element = element;\r\n        attachDownEvent.call(this, handleDown);\r\n        attachUpEvent.call(this, handleUp);\r\n        attachMoveEvent.call(this, handleMove);\r\n    }\r\n\r\n    /**\r\n     * If you device can hold mouse and touch events, you will receive two events.\r\n     * This function prevent it.\r\n     *\r\n     * @param   pointerType\r\n     * @returns If `false`, we must ignore this event.\r\n     */\r\n    checkPointerType(pointerType: string): boolean {\r\n        const now = Date.now();\r\n        const delay = now - this.pointerTypeTime;\r\n        this.pointerTypeTime = now;\r\n        if (this.pointerType.length === 0 || delay > 500) {\r\n            // If the user wat more than 500ms, he can change of pointer.\r\n            this.pointerType = pointerType;\r\n            return true;\r\n        }\r\n        return this.pointerType === pointerType;\r\n    }\r\n\r\n    detachEvents() {\r\n        const element = this.element;\r\n        const {\r\n            touchstart, touchend, touchmove, mousedown, mouseup, mouseout, mousemove\r\n        } = this.deviceHandlers;\r\n\r\n        if (touchstart) element.removeEventListener(\"touchstart\", touchstart, false);\r\n        if (touchend) element.removeEventListener(\"touchend\", touchend, false);\r\n        if (touchmove) element.removeEventListener(\"touchmove\", touchmove, false);\r\n        if (mousedown) element.removeEventListener(\"mousedown\", mousedown, false);\r\n        if (mouseup) element.removeEventListener(\"mouseup\", mouseup, false);\r\n        if (mouseout) element.removeEventListener(\"mouseout\", mouseout, false);\r\n        if (mousemove) element.removeEventListener(\"mousemove\", mousemove, false);\r\n    }\r\n}\r\n\r\n\r\nfunction attachDownEvent(this: BasicHandler, handleDown: TBasicHandler) {\r\n    attachDownEventTouch.call(this, handleDown);\r\n    attachDownEventMouse.call(this, handleDown);\r\n}\r\n\r\n\r\nfunction attachDownEventTouch(this: BasicHandler, handleDown: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: TouchEvent) => {\r\n        if (!this.checkPointerType(\"touch\")) return;\r\n        for (const touch of evt.changedTouches) {\r\n            handleDown({\r\n                x: touch.clientX,\r\n                y: touch.clientY,\r\n                index: this.fingers.getIndex(touch.identifier),\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                clear: createClear(evt)\r\n            });\r\n        }\r\n    };\r\n    deviceHandlers.touchstart = handler;\r\n    element.addEventListener(\"touchstart\", handler, false);\r\n}\r\n\r\n\r\nfunction attachDownEventMouse(this: BasicHandler, handleDown: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.checkPointerType(\"mouse\")) return;\r\n        this.pressed = true;\r\n        handleDown({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mousedown = handler;\r\n    element.addEventListener(\"mousedown\", handler, false);\r\n}\r\n\r\n\r\nfunction attachUpEvent(this: BasicHandler, handleUp: TBasicHandler) {\r\n    attachUpEventTouch.call(this, handleUp);\r\n    attachUpEventMouse.call(this, handleUp);\r\n    // When the cursor is out of the element, we trigger a UP event.\r\n    attachLeaveEvent.call(this, handleUp);\r\n}\r\n\r\n\r\nfunction attachUpEventTouch(this: BasicHandler, handleUp: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: TouchEvent) => {\r\n        if (!this.checkPointerType(\"touch\")) return;\r\n        for (const touch of evt.changedTouches) {\r\n            handleUp({\r\n                x: touch.clientX,\r\n                y: touch.clientY,\r\n                index: this.fingers.getIndex(touch.identifier),\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                clear: createClear(evt)\r\n            });\r\n            this.fingers.remove(touch.identifier)\r\n        }\r\n    };\r\n    deviceHandlers.touchend = handler;\r\n    element.addEventListener(\"touchend\", handler, false);\r\n}\r\n\r\n\r\nfunction attachUpEventMouse(this: BasicHandler, handleUp: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.checkPointerType(\"mouse\")) return;\r\n        this.pressed = false;\r\n        console.log('MOUSE UP');\r\n        handleUp({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mouseup = handler;\r\n    element.addEventListener(\"mouseup\", handler, false);\r\n}\r\n\r\n\r\nfunction attachLeaveEvent(this: BasicHandler, handleUp: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.pressed || !this.checkPointerType(\"mouse\")) return;\r\n        console.log('MOUSE OUT');\r\n        handleUp({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mouseout = handler;\r\n    element.addEventListener(\"mouseout\", handler, false);\r\n}\r\n\r\n\r\n\r\n\r\nfunction attachMoveEvent(this: BasicHandler, handleMove: TBasicHandler) {\r\n    attachMoveEventTouch.call(this, handleMove);\r\n    attachMoveEventMouse.call(this, handleMove);\r\n}\r\n\r\n\r\nfunction attachMoveEventTouch(this: BasicHandler, handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: TouchEvent) => {\r\n        if (!this.checkPointerType(\"touch\")) return;\r\n        for (const touch of evt.changedTouches) {\r\n            handleMove({\r\n                x: touch.clientX,\r\n                y: touch.clientY,\r\n                index: this.fingers.getIndex(touch.identifier),\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                clear: createClear(evt)\r\n            });\r\n            this.fingers.remove(touch.identifier)\r\n        }\r\n    };\r\n    deviceHandlers.touchmove = handler;\r\n    element.addEventListener(\"touchmove\", handler, false);\r\n}\r\n\r\n\r\nfunction attachMoveEventMouse(this: BasicHandler, handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (evt: MouseEvent) => {\r\n        if (!this.checkPointerType(\"mouse\")) return;\r\n        handleMove({\r\n            x: evt.clientX,\r\n            y: evt.clientY,\r\n            index: 0,\r\n            buttons: evt.buttons,\r\n            pointer: \"mouse\",\r\n            clear: createClear(evt)\r\n        });\r\n    };\r\n    deviceHandlers.mousemove = handler;\r\n    element.addEventListener(\"mousemove\", handler, false);\r\n}\r\n\r\n\r\nfunction createClear(evt: MouseEvent | TouchEvent) {\r\n    return () => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n}\r\n","/**\n * Here is the list of all parameters used if all the handlers.\n *\n * tap({ x: number, y: number, index: number })\n *\n */\n\nimport Moves from \"./moves\"\nimport BasicHandler from \"./basic-handler\"\nimport { IBasicEvent } from \"./basic-handler.types\"\nimport { IEvent, IWheelEvent } from \"./types\"\n\nconst SYMBOL = Symbol(\"gesture\");\n\nlet ID = 0;\n\nexport interface IHTMLElementWithGesture extends HTMLElement {\n    // A special attribute to attach Gesture object.\n    [SYMBOL]?: Gesture\n}\n\ntype THandlers = {\n    tap?: (event: IEvent) => void;\n    down?: (event: IEvent) => void;\n    up?: (event: IEvent) => void;\n    pan?: (event: IEvent) => void;\n    pandown?: (event: IEvent) => void;\n    panup?: (event: IEvent) => void;\n    panvertical?: (event: IEvent) => void;\n    swipe?: (event: IEvent) => void;\n    swipedown?: (event: IEvent) => void;\n    swipeup?: (event: IEvent) => void;\n    swipevertical?: (event: IEvent) => void;\n    swipeleft?: (event: IEvent) => void;\n    keydown?: (event: KeyboardEvent) => void;\n    keyup?: (event: KeyboardEvent) => void;\n    wheel?: (event: IWheelEvent) => void;\n    [key: string]: ((evt: any) => void) | undefined;\n};\n\ninterface IPointer {\n    isDown: boolean;\n    moves: Moves;\n    rect: {\n        left: number;\n        top: number;\n        width: number;\n        height: number;\n    };\n    type?: string | null;\n    time?: number;\n    id?: number;\n}\n\nconst STANDARD_EVENTS = [\"keydown\", \"keyup\", \"wheel\"];\n\nclass Gesture {\n    //private readonly basicHandler: BasicHandler;\n    private handlers: THandlers;\n    private element: IHTMLElementWithGesture;\n    private readonly pointers: IPointer[];\n    private readonly id: number;\n\n    constructor(elem: IHTMLElementWithGesture) {\n        elem[SYMBOL] = this;\n        this.id = ID++;\n        this.element = elem;\n        this.handlers = {};\n        new BasicHandler(\n            elem,\n            this.handleDown.bind(this),\n            this.handleUp.bind(this),\n            this.handleMove.bind(this)\n        );\n        this.pointers = new Array(3);\n    }\n\n    get identifier() { return this.id; }\n\n    on(handlers: THandlers) {\n        this.handlers = wrapSpecialHandlers(Object.assign(this.handlers, handlers));\n        Object.keys(this.handlers).forEach(eventName => {\n            if (STANDARD_EVENTS.indexOf(eventName) === -1) return;\n            // This is a non-pointer event. (i.e., keyboard, resize, ...)\n            const handler = this.handlers[eventName];\n            if (typeof handler === 'function' ) {\n                this.element.addEventListener(eventName, handler, false);\n            }\n        });\n    }\n\n    /**\n     * Returns true if current gesture has at least one of the provided handlers.\n     */\n    private hasHandlerFor(...names: string[]) {\n        for( const name of names ) {\n            if (this.handlers[name]) return true;\n        }\n        return false;\n    }\n\n    private getPointer(index: number) {\n        const pointers = this.pointers;\n        if (typeof pointers[index] === 'undefined') {\n            pointers[index] = {\n                isDown: false,\n                moves: new Moves(0, 0),\n                rect: { left: 0, top: 0, width: 0, height: 0 }\n            }\n        }\n        return pointers[index];\n    }\n\n    private handleDown(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { element } = this;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = true;\n        ptr.rect = element.getBoundingClientRect();\n        const x = event.x - ptr.rect.left;\n        const y = event.y - ptr.rect.top;\n        ptr.moves.init(x, y);\n\n        if (this.handlers.down) {\n            this.handlers.down(Object.assign(event, { x, y, target: element }))\n        }\n    }\n\n    private handleUp(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = false;\n        const x = event.x - ptr.rect.left;\n        const y = event.y - ptr.rect.top;\n        ptr.moves.add(x, y);\n\n        if (this.handlers.up) {\n            this.handlers.up(Object.assign(event, { x, y, target: this.element }));\n        }\n        this.recognizeTap(event, ptr);\n        this.recognizeSwipe(event, ptr);\n    }\n\n    private handleMove(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const ptr = this.getPointer(event.index);\n        const x = event.x - ptr.rect.left;\n        const y = event.y - ptr.rect.top;\n        ptr.moves.add(x, y);\n        this.recognizePan(event, ptr);\n    }\n\n    private recognizeTap(evt: IBasicEvent, ptr: IPointer) {\n        // A tap is recognized only if there is less than 400ms\n        // between down and up, and if the pointer has not moves more\n        // than 16px.\n        if (!this.handlers.tap || ptr.moves.elapsedTime > 400) return;\n        const moves = ptr.moves;\n        const dx = Math.abs(moves.x - moves.startX);\n        if (dx > 16) return;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dy > 16) return;\n\n        evt.clear();\n        this.handlers.tap(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n    }\n\n    private recognizePan(evt: IBasicEvent, ptr: IPointer) {\n        if (!ptr.isDown) return;\n        this.recognizePanDown(evt, ptr);\n        this.recognizePanUp(evt, ptr);\n        if (this.handlers.pan) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.pan(Object.assign(evt, { x, y, startX, startY, target: this.element }));\n        }\n    }\n\n    private recognizePanDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"pandown\", \"panvertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n\n        if (this.handlers.pandown) {\n            this.handlers.pandown(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizePanUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"panup\", \"panvertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = -moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.startY - moves.y;\n        if (dy < dx) return;\n\n        if (this.handlers.panup) {\n            this.handlers.panup(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizeSwipe(evt: IBasicEvent, ptr: IPointer) {\n        this.recognizeSwipeDown(evt, ptr);\n        this.recognizeSwipeUp(evt, ptr);\n        this.recognizeSwipeLeft(evt, ptr);\n        if (this.handlers.swipe) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.swipe(Object.assign(evt, { x, y, startX, startY, target: this.element }));\n        }\n    }\n\n    private recognizeSwipeDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipedown\", \"swipevertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipedown) {\n            this.handlers.swipedown(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizeSwipeUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeup\", \"swipevertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeup) {\n            this.handlers.swipeup(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n\n    private recognizeSwipeLeft(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeleft\", \"swipehorizontal\")) return;\n\n        // Check that we are panning left.\n        const moves = ptr.moves;\n        const sx = -moves.speedX;\n        const sy = Math.abs(moves.speedY);\n        if (sx < sy) return;\n        // Check that the final point is beneath the initial one.\n        const dx = moves.startX - moves.x;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dx < dy) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dx / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeleft) {\n            this.handlers.swipeleft(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n        if (this.handlers.swipehorizontal) {\n            this.handlers.swipehorizontal(Object.assign(evt, { x: moves.x, y: moves.y, target: this.element }));\n        }\n    }\n}\n\nexport default function(elem: IHTMLElementWithGesture): Gesture {\n    let gesture = elem[SYMBOL];\n    if( gesture ) return gesture;\n    gesture = new Gesture(elem);\n    elem[SYMBOL] = gesture;\n    return gesture;\n}\n\n\n/**\n * Somw event (like \"wheel\") need their handler to be wrapped in order to\n * map the event is something else.\n */\nfunction wrapSpecialHandlers(rawHandlers: THandlers): THandlers {\n    const handlers: THandlers = {};\n    for( const eventName of Object.keys(rawHandlers) ) {\n        if (eventName === 'wheel') {\n            handlers.wheel = (evt: WheelEvent) => {\n                rawHandlers.wheel({\n                    deltaX: evt.deltaX,\n                    deltaY: evt.deltaY,\n                    deltaZ: evt.deltaZ,\n                    x: 0,\n                    y: 0\n                });\n            }\n            continue;\n        }\n        handlers[eventName] = rawHandlers[eventName];\n    }\n    return handlers;\n}\n","/**\r\n * @class Color\r\n * Fast color manipulations.\r\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\r\n * (saturation), and L (luminance) are all floats between 0 and 1.\r\n */\r\nexport default class Color {\r\n    public R: number;\r\n    public G: number;\r\n    public B: number;\r\n    public H: number;\r\n    public S: number;\r\n    public L: number;\r\n    public A: number;\r\n\r\n    constructor(codeCSS: string = \"#000000\") {\r\n        this.R = 0;\r\n        this.G = 0;\r\n        this.B = 0;\r\n        this.H = 0;\r\n        this.S = 0;\r\n        this.L = 0;\r\n        this.A = 1;\r\n\r\n        this.parse(codeCSS);\r\n    }\r\n\r\n    static isValid(codeCSS: string) {\r\n        if( typeof codeCSS !== 'string' ) return false;\r\n        if( codeCSS.charAt(0) !== '#' ) return false;\r\n        switch( codeCSS.length ) {\r\n            case 4:  // #RGB\r\n            case 5:  // #RGBA\r\n            case 7:  // #RRGGBB\r\n            case 9:  // #RRGGBBAA\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static normalize(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.stringify();\r\n    }\r\n\r\n    static luminance(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminance();\r\n    }\r\n\r\n    /**\r\n     * Returns 1 for bright colors and 0 for dark colors.\r\n     */\r\n    static luminanceStep(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminanceStep();\r\n    }\r\n\r\n    static mix(color1: Color, color2: Color, alpha: number=.5) {\r\n        const beta = 1 - alpha;\r\n        return Color.newRGBA(\r\n            alpha * color2.R + beta * color1.R,\r\n            alpha * color2.G + beta * color1.G,\r\n            alpha * color2.B + beta * color1.B,\r\n            alpha * color2.A + beta * color1.A\r\n        );\r\n    }\r\n\r\n    static newBlack() {\r\n        return Color.newRGB(0, 0, 0);\r\n    }\r\n\r\n    static newWhite() {\r\n        return Color.newRGB(1, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGB(red: number, green: number, blue: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = 1;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B,A channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @param   {number} alpha - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGBA(red: number, green: number, blue: number, alpha: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = alpha;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Parse a color writtent in CSS syntax.\r\n     *\r\n     * @param   {string} code - CSS color.\r\n     * @returns {boolean} `true` if the color has valid syntax.\r\n     */\r\n    parse(code: string = \"#000000\"): boolean {\r\n        const input = code.trim().toUpperCase();\r\n        if (this.parseHexa.call(this, input)) return true;\r\n        if (this.parseRGB.call(this, input)) return true;\r\n        if (this.parseRGBA.call(this, input)) return true;\r\n        if (this.parseHSL.call(this, input)) return true;\r\n        // @TODO parseHSLA.\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @see https://en.wikipedia.org/wiki/Grayscale\r\n     * @this Color\r\n     * @returns {undefined}\r\n     */\r\n    luminance(): number {\r\n        return (0.2126 * this.R) + (0.7152 * this.G) + (0.0722 * this.B);\r\n    }\r\n\r\n    /**\r\n     * @returns {integer} 0 if the color is dark and 1 if it is light.\r\n     */\r\n    luminanceStep(): number {\r\n        return this.luminance() < .6 ? 0 : 1;\r\n    }\r\n\r\n    /**\r\n     * @this Color\r\n     * @returns {string} String value of the color. `#fd45a7`.\r\n     */\r\n    stringify() {\r\n        let color = hexa2(this.R * 255) + hexa2(this.G * 255) + hexa2(this.B * 255);\r\n        if (this.A < 1) {\r\n            color += hexa2(this.A * 255);\r\n        }\r\n        return `#${color}`;\r\n    }\r\n\r\n    copy() {\r\n        const newColor = new Color();\r\n        newColor.R = this.R;\r\n        newColor.G = this.G;\r\n        newColor.B = this.B;\r\n        newColor.A = this.A;\r\n        newColor.H = this.H;\r\n        newColor.S = this.S;\r\n        newColor.L = this.L;\r\n        return newColor;\r\n    }\r\n\r\n    /**\r\n         * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\r\n         * @this Color\r\n         * @returns {undefined}\r\n         */\r\n    hsl2rgb() {\r\n        const\r\n            H = 6 * this.H,\r\n            S = this.S,\r\n            L = this.L,\r\n            chroma = (1 - Math.abs(2 * L - 1)) * S,\r\n            x = chroma * (1 - Math.abs(H % 2 - 1));\r\n\r\n        let R = 0, G = 0, B = 0;\r\n\r\n        if (H < 3) {\r\n            if (H < 1) {\r\n                R = chroma; G = x; B = 0;\r\n            } else if (H < 2) {\r\n                R = x; G = chroma; B = 0;\r\n            } else {\r\n                // H == 2.\r\n                R = 0; G = chroma; B = x;\r\n            }\r\n        } else if (H < 4) {\r\n            R = 0; G = x; B = chroma;\r\n        } else if (H < 5) {\r\n            R = x; G = 0; B = chroma;\r\n        } else {\r\n            R = chroma; G = 0; B = x;\r\n        }\r\n\r\n        const shift = L - chroma * 0.5;\r\n        this.R = R + shift;\r\n        this.G = G + shift;\r\n        this.B = B + shift;\r\n    }\r\n\r\n    rgb2hsl() {\r\n        const R = this.R;\r\n        const G = this.G;\r\n        const B = this.B;\r\n\r\n        const min = Math.min(R, G, B);\r\n        const max = Math.max(R, G, B);\r\n        const delta = max - min;\r\n\r\n        this.L = 0.5 * (max + min);\r\n\r\n        if (delta < 0.000001) {\r\n            this.H = 0;\r\n            this.S = 0;\r\n        }\r\n        else {\r\n            this.S = delta / (1 - Math.abs(2 * this.L - 1));\r\n            if (max === R) {\r\n                if (G >= B) {\r\n                    this.H = INV6 * ((G - B) / delta);\r\n                } else {\r\n                    this.H = 1 - INV6 * ((B - G) / delta);\r\n                }\r\n            }\r\n            else if (max === G) {\r\n                this.H = INV6 * (2 + (B - R) / delta);\r\n            }\r\n            else {\r\n                this.H = INV6 * (4 + (R - G) / delta);\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseHexa(text: string) {\r\n        if (text.charAt(0) !== '#') return false;\r\n        let R = 0, G = 0, B = 0, A = 1;\r\n\r\n        switch (text.length) {\r\n            case 4:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                break;\r\n            case 5:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                A = parseInt(text.charAt(4), 16) * INV15;\r\n                break;\r\n            case 7:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                break;\r\n            case 9:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                A = parseInt(text.substr(7, 2), 16) * INV255;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        if (isNaN(R) || isNaN(G) || isNaN(B) || isNaN(A)) {\r\n            this.R = this.G = this.B = this.A = 0;\r\n        } else {\r\n            this.R = R;\r\n            this.G = G;\r\n            this.B = B;\r\n            this.A = A;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgb(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgb()` syntax.\r\n     */\r\n    private parseRGB(text: string) {\r\n        const m = RX_RGB.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = 1;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgba(200, 140, 50, 0.5)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgba()` syntax.\r\n     */\r\n    private parseRGBA(text: string) {\r\n        const m = RX_RGBA.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = clamp01(parseFloat(m[4]));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `hsl(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `hsl()` syntax.\r\n     */\r\n    private parseHSL(text: string) {\r\n        const m = RX_HSL.exec(text);\r\n        if (!m) return false;\r\n        this.H = clamp01(parseInt(m[1], 10) * INV359);\r\n        this.S = clamp01(parseInt(m[2], 10) * INV99);\r\n        this.L = clamp01(parseInt(m[3], 10) * INV99);\r\n        this.A = 1;\r\n        this.hsl2rgb();\r\n        return true;\r\n    }\r\n}\r\n\r\nconst\r\n    INV6 = 1 / 6,\r\n    INV15 = 1 / 15,\r\n    INV99 = 1 / 99,\r\n    INV255 = 1 / 255,\r\n    INV359 = 1 / 359;\r\n\r\nconst RX_RGB = /^RGB[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\nconst RX_RGBA = /^RGBA[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9\\.]+([0-9\\.]+)/;\r\nconst RX_HSL = /^HSL[\\s\\(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\n\r\nfunction clamp01(value: number): number {\r\n    if (value < 0) return 0;\r\n    if (value > 1) return 1;\r\n    return value;\r\n}\r\n\r\nfunction hexa2(value: number) {\r\n    let out = Math.floor(value).toString(16);\r\n    if (out.length < 2) out = \"0\" + out;\r\n    return out;\r\n}\r\n","/**\n * Manage CSS styles.\n */\nexport default {\n    register: registerTheme,\n    apply: applyTheme,\n    get: getTheme,\n    bg0: makeGetCurrentColor(\"bg0\"),\n    bg1: makeGetCurrentColor(\"bg1\"),\n    bg2: makeGetCurrentColor(\"bg2\"),\n    bg3: makeGetCurrentColor(\"bg3\"),\n    bgP: makeGetCurrentColor(\"bgP\"),\n    bgPD: makeGetCurrentColor(\"bgPD\"),\n    bgPL: makeGetCurrentColor(\"bgPL\"),\n    bgS: makeGetCurrentColor(\"bgS\"),\n    bgSD: makeGetCurrentColor(\"bgSD\"),\n    bgSL: makeGetCurrentColor(\"bgSL\"),\n    black: makeGetCurrentColor(\"black\"),\n    white: makeGetCurrentColor(\"white\"),\n    isDark,\n    setFontSize,\n    normalize: completeWithDefaultValues\n};\n\ninterface IStyle {\n    bg0?: string;\n    bg1?: string;\n    bg2?: string;\n    bg3?: string;\n    bgP?: string;\n    bgPD?: string;\n    bgPL?: string;\n    bgS?: string;\n    bgSD?: string;\n    bgSL?: string;\n    fg0?: string;\n    fg1?: string;\n    fg2?: string;\n    fg3?: string;\n    fgP?: string;\n    fgPD?: string;\n    fgPL?: string;\n    fgS?: string;\n    fgSD?: string;\n    fgSL?: string;\n    black?: string;\n    white?: string;\n    [key: string]: string | undefined;\n};\n\ninterface ITheme {\n    bg0: string,\n    bg1: string,\n    bg2: string,\n    bg3: string,\n    bgP: string,\n    bgPL: string,\n    bgPD: string,\n    bgS: string,\n    bgSL: string,\n    bgSD: string,\n    black: string,\n    white: string\n}\n\n\n//################################################################################\n\nimport \"./theme.css\"\nimport Color from \"./color\"\n\ninterface IThemes {\n    css: { [name: string]: HTMLStyleElement };\n    vars: { [name: string]: IStyle }\n    current: string | null;\n}\n\n// Used for luminance computations. Because we need to know which text color\n// can be used based on the background's luminance.\nconst COLOR = new Color();\n\nconst THEME_COLOR_NAMES = [\"0\", \"1\", \"2\", \"3\", \"P\", \"PD\", \"PL\", \"S\", \"SD\", \"SL\"];\nconst THEMES: IThemes = {\n    css: {},\n    vars: {},\n    current: null\n};\n\nfunction registerTheme(themeName: string, _style: IStyle) {\n    const style = completeWithDefaultValues(_style);\n    THEMES.vars[themeName] = style;\n\n    let codeCSS = codeVariables(themeName, style);\n    codeCSS += codeBackground(themeName, style);\n    codeCSS += codeElevation(themeName, style);\n    codeCSS += codeText(themeName, style);\n\n    let styleElement = THEMES.css[themeName];\n    if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        document.getElementsByTagName('head')[0].appendChild(styleElement);\n        THEMES.css[themeName] = styleElement;\n    }\n\n    styleElement.textContent = codeCSS;\n}\n\nfunction codeText(themeName: string, style: IStyle) {\n    let codeCSS = '';\n    for (let depth = 1; depth <= 10; depth++) {\n        THEME_COLOR_NAMES.forEach(function(colorName) {\n            const fgColorName = `fg${colorName}`;\n            const bgColorName = `bg${colorName}`;\n            const styleFgColorName: string = style[fgColorName] as string;\n            const styleBgColorName: string = style[bgColorName] as string;\n            const bgClass = \".thm-bg\" + colorName;\n            const fgClass = \".thm-fg\" + colorName;\n            for (let position = 1; position <= depth; position++) {\n                const piecesFG = [];\n                const piecesSVG = [];\n                const piecesBG = [];\n                for (let index = 1; index <= depth; index++) {\n                    piecesBG.push(position === index ? bgClass : '*');\n                    piecesSVG.push(position === index ? bgClass : '*');\n                    piecesFG.push(position === index ? fgClass : '*');\n                    if (index === depth) {\n                        piecesBG.push(piecesBG.pop() + \".thm-fg\");\n                        piecesFG.push(piecesFG.pop() + fgClass);\n                    }\n                }\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesBG.join(\" > \")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + removeTail(piecesBG.join(\" > \"), \".thm-fg\")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesFG.join(\" > \")\n                    + \" { color: \" + styleBgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-fill0\"\n                    + \" { fill: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-stroke0\"\n                    + \" { stroke: \" + styleFgColorName + \" }\\n\";\n            }\n        });\n    }\n    return codeCSS;\n}\n\nconst ALPHA_HEXA = \"123456789ABCDE\";\nfunction codeVariables(themeName: string, style: IStyle) {\n    let codeCSS = \"body.dom-theme-\" + themeName + '{\\n';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        const s = style[`bg${colorName}`] as string;\n        codeCSS += `  --thm-bg${colorName}: ${s};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-bg${colorName}-${a}: ${s}${a}${a};\\n`;\n        }\n        COLOR.parse(s);\n        const pen = COLOR.luminanceStep() ? style.black : style.white;\n        codeCSS += `  --thm-fg${colorName}: ${pen};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-fg${colorName}-${a}: ${pen}${a}${a};\\n`;\n        }\n    });\n    style.white = normalize(style.white);\n    style.black = normalize(style.black);\n    codeCSS += `  --thm-white: ${style.white};\\n`;\n    codeCSS += `  --thm-black: ${style.black};\\n`;\n    for (const letter of ALPHA_HEXA) {\n        codeCSS += `  --thm-white-${letter}: ${style.white}${letter}${letter};\\n`;\n        codeCSS += `  --thm-black-${letter}: ${style.black}${letter}${letter};\\n`;\n    }\n    codeCSS += \"}\\n\";\n    return codeCSS;\n}\n\n\nfunction codeBackground(themeName: string, style: IStyle) {\n    var codeCSS = '';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        codeCSS += \"body.dom-theme-\" + themeName + \".thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-fg\" + colorName\n            + \" { color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += `body.dom-theme-${themeName} .thm-bg${colorName}-text`\n            + \" { background-color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-bottom\"\n            + \" { background: linear-gradient(to top,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-top\"\n            + \" { background: linear-gradient(to bottom,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-left\"\n            + \" { background: linear-gradient(to right,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-right\"\n            + \" { background: linear-gradient(to left,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n\n        if (!isNaN(parseInt(colorName))) return;\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-fill\" + colorName\n            + \" { fill: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-stroke\" + colorName\n            + \" { stroke: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n    });\n    return codeCSS;\n}\n\nconst ELEVATIONS: { [ele: string]: string[] } = {\n    \"0\": [\"none\"],\n    \"2\": [\"button\", \"card\"],\n    \"4\": [\"bar\"],\n    \"6\": [\"floating\"],\n    \"8\": [\"button:active\", \"button-raised\", \"card-raised\"],\n    \"9\": [\"sunmenu-0\"],\n    \"10\": [\"sunmenu-1\"],\n    \"11\": [\"sunmenu-2\"],\n    \"12\": [\"floating:active\"],\n    \"16\": [\"nav\"],\n    \"24\": [\"dialog\"]\n};\nfunction codeElevation(themeName: string, style: IStyle) {\n    COLOR.parse(style.bg2);\n    const luminance = COLOR.luminance();\n    var elevationColor = luminance < .6\n        ? addAlpha(style.white, 4)\n        : addAlpha(style.black, 6);\n    var codeCSS = '';\n    const elevationKeys = Object.keys(ELEVATIONS);\n    elevationKeys.forEach(function(elevationKey) {\n        const elevation = parseInt(elevationKey, 10);\n        ELEVATIONS[elevationKey].forEach(name => {\n            codeCSS += `body.dom-theme-${themeName} .thm-ele-${name} {\n  box-shadow: 0 ${elevation}px ${2 * elevation}px ${elevationColor}\n}\\n`;\n        })\n    });\n    return codeCSS;\n}\n\nfunction applyTheme(name: string, target: HTMLElement = document.body) {\n    if (!THEMES.css[name]) {\n        console.error(\"This theme has not been registered: \", name);\n        return;\n    }\n    var body = document.body;\n    if (typeof THEMES.current === 'string') {\n        body.classList.remove(`dom-theme-${THEMES.current}`);\n    }\n    THEMES.current = name;\n    body.classList.add(`dom-theme-${THEMES.current}`);\n}\n\nfunction getTheme(name: string = \"default\"): ITheme {\n    return THEMES.vars[name] as ITheme;\n}\n\nfunction completeBackgrounds(style: IStyle) {\n    let has0 = typeof style.bg0 === 'string';\n    const has1 = typeof style.bg1 === 'string';\n    const has2 = typeof style.bg2 === 'string';\n    let has3 = typeof style.bg3 === 'string';\n\n    if (has0 && has1 && has2 && has3) return\n\n    if (!has0 && !has1 && !has2 && !has3) {\n        style.bg0 = \"#E0E0E0\";\n        style.bg1 = \"#F5F5F5\";\n        style.bg2 = \"#FAFAFA\";\n        style.bg3 = \"#FFF\";\n        return;\n    }\n    if (has0 && !has1 && !has2 && !has3) {\n        style.bg3 = lightenBackground(style.bg0 as string);\n        has3 = true;\n    }\n    if (!has0 && !has1 && !has2 && has3) {\n        style.bg0 = darkenBackground(style.bg3 as string);\n        has3 = true;\n    }\n    const color0 = new Color(style.bg0);\n    const r0 = color0.R;\n    const g0 = color0.G;\n    const b0 = color0.B;\n    const color3 = new Color(style.bg3);\n    const r3 = color3.R;\n    const g3 = color3.G;\n    const b3 = color3.B;\n    const color1 = Color.newRGB((2 * r0 + r3) / 3, (2 * g0 + g3) / 3, (2 * b0 + b3) / 3);\n    const color2 = Color.newRGB((r0 + 2 * r3) / 3, (g0 + 2 * g3) / 3, (b0 + 2 * b3) / 3);\n    style.bg1 = color1.stringify();\n    style.bg2 = color2.stringify();\n}\n\nfunction completeWithDefaultValues(style: IStyle) {\n    if (typeof style === 'undefined') style = {};\n\n    completeBackgrounds(style);\n\n    if (typeof style.bgP !== 'string') style.bgP = \"#3E50B4\";\n    if (typeof style.bgPD !== 'string') style.bgPD = dark(style.bgP);\n    if (typeof style.bgPL !== 'string') style.bgPL = light(style.bgP);\n    if (typeof style.bgS !== 'string') style.bgS = rotateHue(style.bgP);\n    if (typeof style.bgSD !== 'string') style.bgSD = dark(style.bgS);\n    if (typeof style.bgSL !== 'string') style.bgSL = light(style.bgS);\n\n    if (typeof style.white !== 'string') style.white = '#fff';\n    if (typeof style.black !== 'string') style.black = '#000';\n\n    THEME_COLOR_NAMES.forEach(function(name) {\n        const bg: string = style[`bg${name}`] || '#000';\n        COLOR.parse(bg);\n        var luminance = COLOR.luminance();\n        style[`fg${name}`] = luminance < .6 ? style.white : style.black;\n    });\n\n    return style;\n}\n\nfunction dark(color: string) {\n    const percent = .25;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L *= 1 - percent;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction darkenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.max(0, COLOR.L - 0.15);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction light(color: string) {\n    var percent = .4;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = percent + (1 - percent) * COLOR.L;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction lightenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.min(1, COLOR.L + 0.3);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction rotateHue(color: string): string {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.H = COLOR.H + .5;\n    if (COLOR.H > 1) COLOR.H--;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\n/**\n * @param {string} color - RGB color in format #xxx or #xxxxxx.\n * @param {string} alpha - Single char between 0 and F.\n */\nfunction addAlpha(color: string, alpha: string) {\n    if (color.length < 5) return color + alpha;\n    return color + alpha + alpha;\n}\n\nfunction removeTail(text: string, tail: string) {\n    return text.substr(0, text.length - tail.length);\n}\n\nfunction isDark(colorName: string = \"\"): boolean {\n    if (colorName === \"\") return isThemeGloballyDark();\n\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    const varName = `$isDark/${colorName}`;\n    let isDark = vars[varName];\n    if (typeof isDark === 'boolean') return isDark;\n\n    const color = new Color(vars[colorName]);\n    vars[varName] = !color.luminanceStep();\n    return vars[varName];\n}\n\nfunction isThemeGloballyDark(): boolean {\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    let isDark = vars.$isDark;\n    if (typeof isDark === 'boolean') return isDark;\n\n    const bg0 = new Color(vars.bg0);\n    const bg1 = new Color(vars.bg1);\n    const bg2 = new Color(vars.bg2);\n    const bg3 = new Color(vars.bg3);\n    const average = Color.mix(\n        Color.mix(bg0, bg1),\n        Color.mix(bg2, bg3)\n    );\n    vars.$isDark = !average.luminanceStep();\n    return vars.$isDark;\n}\n\nfunction makeGetCurrentColor(colorName: string): () => string {\n    return () => THEMES.vars[THEMES.current || \"default\"][colorName];\n}\n\nfunction setFontSize(size: \"small\" | \"medium\" | \"large\") {\n    const html = document.documentElement;\n    html.classList.remove(`thm-font-size-small`);\n    html.classList.remove(`thm-font-size-medium`);\n    html.classList.remove(`thm-font-size-large`);\n    html.classList.add(`thm-font-size-${size}`);\n}\n\nfunction normalize(hexa: string): string {\n    const color = new Color(hexa);\n    return color.stringify();\n}\n\nregisterTheme(\"default\", { bgP: \"#1e90ff\" });\n","const EMPTY_FUNCTION = () => { };\r\n\r\ntype TFunction = () => void;\r\n\r\n\r\nexport default function castBoolean(value: any, defaultValue: TFunction = EMPTY_FUNCTION): TFunction {\r\n    if (typeof value === 'function') return value;\r\n    return defaultValue;\r\n}\r\n","import Gesture from \"../gesture\"\nimport Theme from \"../theme\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castFunction from \"../converter/function\"\nimport \"./touchable.css\"\n\ninterface IArgs {\n    element?: HTMLElement;\n    enabled?: boolean;\n    color?: string;\n    onTap?: () => void;\n}\n\ninterface IRect {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n}\n\nexport default class Touchable {\n    _element: HTMLElement | undefined;\n    _enabled: boolean = true;\n    color: string = \"#000\";\n    accent: boolean = false;\n    onTap: () => void;\n\n    constructor(args: IArgs) {\n        this.element = args.element;\n        this.enabled = castBoolean(args.enabled, true);\n        this.color = castString(args.color, \"\");\n        this.onTap = castFunction(args.onTap);\n    }\n\n    fire() {\n        if (!this.enabled) return;\n\n        const handler = this.onTap;\n        if (typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    get enabled() { return this._enabled; }\n    set enabled(value: boolean) { this._enabled = value; }\n\n    get element() { return this._element; }\n    set element(element: HTMLElement | undefined) {\n        const that = this;\n        if (typeof element === 'undefined') return;\n        Gesture(element).on({\n            keydown(evt: any) {\n                if (!that.enabled) return;\n\n                const key = evt.key;\n                if (key === \" \" || key === \"Enter\") {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                    that.fire();\n                }\n            },\n\n            down(evt) {\n                if (!that.enabled) return;\n            },\n\n            tap(evt) {\n                if (!that.enabled) return;\n                that.fire();\n\n                const rect = element.getBoundingClientRect();\n                const style = window.getComputedStyle(element);\n                const screen = createScreen(rect);\n                screen.style.borderRadius = style.getPropertyValue(\"border-radius\");\n                const x = evt.x || 0;\n                const y = evt.y || 0;\n                const w = Math.max(x, rect.width - x);\n                const h = Math.max(y, rect.height - y);\n                const radius = Math.ceil(1.1 * Math.sqrt(w * w + h * h));\n                const ripple = document.createElement(\"div\");\n                screen.appendChild(ripple);\n                ripple.style.left = `${x - radius}px`;\n                ripple.style.top = `${y - radius}px`;\n                ripple.style.width = `${2 * radius}px`;\n                ripple.style.height = `${2 * radius}px`;\n                if (that.color.length > 0) {\n                    ripple.style.background = that.color;\n                } else {\n                    ripple.style.background = Theme.isDark() ? \"#fff\" : \"#000\";\n                }\n                window.setTimeout(() => ripple.className = \"open\");\n                window.setTimeout(() => document.body.removeChild(screen), 500);\n            }\n        })\n    }\n}\n\n\nfunction createScreen(rect: IRect) {\n    const div = document.createElement(\"div\");\n    div.className = \"tfw-behavior-touchable\";\n    div.style.left = `${rect.left}px`;\n    div.style.top = `${rect.top}px`;\n    div.style.width = `${rect.width}px`;\n    div.style.height = `${rect.height}px`;\n    document.body.appendChild(div);\n    return div;\n}\n","export default function castInteger(v: any, defaultValue = 0): number {\r\n    const defVal = Math.floor(.5 + defaultValue);\r\n\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return Math.floor(.5 + v);\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return Math.floor(.5 + num);\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\nconst RX_CSS_UNIT = /^(-?[.0-9]+)[ \\n\\r]*([a-z%]*)/;\r\n\r\nexport default function castUnit(v: any, defaultValue: string = \"100%\") {\r\n    if (typeof v === 'number') return `${v}px`;\r\n    if (typeof v !== 'string') return defaultValue;\r\n    const text = `${v}`.trim().toLowerCase();\r\n    if (text === 'auto' || text === 'inherit') return text;\r\n    if (text.startsWith(\"calc(\")) return text;\r\n    const m = RX_CSS_UNIT.exec(text);\r\n    if (!m) return defaultValue;\r\n    const scalar = parseFloat(m[1]);\r\n    if (isNaN(scalar) || scalar === 0) return \"0\";\r\n    const unit = m[2].length < 1 ? \"px\" : m[2];\r\n    return `${scalar}${unit}`;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * @module\r\n * This module provides a list of SVG icons definitions.\r\n * You can register new one if you wish.\r\n */\r\n\r\n\r\nexport type TIconDefinition =\r\n    [string, {}] |\r\n    [string, TIconDefinitionArray] |\r\n    [string, {}, TIconDefinitionArray] |\r\n    [string, TIconDefinitionArray, {}];\r\n\r\ninterface TIconDefinitionArray extends Array<TIconDefinition> { }\r\n\r\nexport interface IIconsDefinition {\r\n    [name: string]: TIconDefinition\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register new icons.\r\n * @param {object}  icons - The  keys are the  name of the  icons, the\r\n * value is the object representing an SVG image.\r\n * @returns {undefined}\r\n */\r\nexport function register(icons: IIconsDefinition): void {\r\n    for (const key of Object.keys(icons)) {\r\n        const val: TIconDefinition = icons[key];\r\n        iconsBook[key] = val;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {string} d - Path definition, as in the attribute `d` of the\r\n * SVG tag `path`.\r\n * @returns {array} SVG description.\r\n */\r\nfunction draw(d: string): TIconDefinition {\r\n    return ['path', { d, stroke: 'none', fill: 0 }];\r\n}\r\n\r\n\r\nexport const iconsBook: IIconsDefinition = {\r\n    android: draw('M15,-35H10V-40H15M-10,-35H-15V-40H-10M18,-49L24,-56C25,-57,25,-58,24,-59C23,-60,22,-60,21,-59L13,-52C9,-54,5,-55,0,-55C-5,-55,-9,-54,-13,-52L-21,-59C-22,-60,-23,-60,-24,-59C-25,-58,-25,-57,-24,-56L-18,-49C-25,-44,-30,-35,-30,-25H30C30,-35,25,-44,18,-49M43,-20A8,8,0,0,0,35,-12V23A8,8,0,0,0,43,30A8,8,0,0,0,50,23V-12A8,8,0,0,0,43,-20M-42,-20A8,8,0,0,0,-50,-12V23A8,8,0,0,0,-42,30A8,8,0,0,0,-35,23V-12A8,8,0,0,0,-42,-20M-30,30A5,5,0,0,0,-25,35H-20V53A8,8,0,0,0,-12,60A8,8,0,0,0,-5,53V35H5V53A8,8,0,0,0,13,60A8,8,0,0,0,20,53V35H25A5,5,0,0,0,30,30V-20H-30V30Z'),\r\n    bug: draw(\"M10,0H-10V-10H10M10,20H-10V10H10M40,-20H26C24,-24 21,-27 17,-30L25,-38L18,-45L7,-34C5,-35 3,-35 0,-35C-2,-35 -5,-35 -7,-34L-18,-45L-25,-38L-17,-30C-21,-27 -24,-24 -26,-20H-40V-10H-30C-30,-8 -30,-7 -30,-5V0H-40V10H-30V15C-30,17 -30,18 -30,20H-40V30H-26C-21,39 -11,45 0,45C11,45 21,39 26,30H40V20H30C30,18 30,17 30,15V10H40V0H30V-5C30,-7 30,-8 30,-10H40V-20Z\"),\r\n    camera: draw('M-40,-40H-25L-15,-50H15L25,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M0,-25A25,25,0,0,0,-25,0A25,25,0,0,0,0,25A25,25,0,0,0,25,0A25,25,0,0,0,0,-25M0,-15A15,15,0,0,1,15,0A15,15,0,0,1,0,15A15,15,0,0,1,-15,0A15,15,0,0,1,0,-15Z'),\r\n    cancel: draw('M7,0L35,28V35H28L0,7L-28,35H-35V28L-7,0L-35,-28V-35H-28L0,-7L28,-35H35V-28L7,0Z'),\r\n    center: draw(\r\n        'M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M35,35H15V45H35A10,10,0,0,0,45,35V15H35M35,-45H15V-35H35V-15H45V-35A10,10,0,0,0,35,-45M-35,-35H-15V-45H-35A10,10,0,0,0,-45,-35V-15H-35M-35,15H-45V35A10,10,0,0,0,-35,45H-15V35H-35V15Z'\r\n    ),\r\n    child: draw('M5,-50V-10H45A40,40,0,0,0,5,-50M37,19C42,13,45,4,45,-5H-28L-32,-15H-50V-5H-39C-39,-5,-29,15,-28,17C-34,20,-37,26,-37,33A18,18,0,0,0,-20,50C-11,50,-4,44,-3,35H8C9,44,16,50,25,50A18,18,0,0,0,43,33C43,27,40,23,37,19M-20,40A8,8,0,0,1,-27,33A8,8,0,0,1,-20,25A8,8,0,0,1,-12,33A8,8,0,0,1,-20,40M25,40A8,8,0,0,1,18,33A8,8,0,0,1,25,25A8,8,0,0,1,33,33A8,8,0,0,1,25,40Z'),\r\n    close: draw('M0,-50C28,-50,50,-28,50,0C50,28,28,50,0,50C-28,50,-50,28,-50,0C-50,-28,-28,-50,0,-50M18,-25L0,-7L-18,-25L-25,-18L-7,0L-25,18L-18,25L0,7L18,25L25,18L7,0L25,-18L18,-25Z'),\r\n    code: draw('M13,23L36,0L13,-23L20,-30L50,0L20,30L13,23M-13,23L-36,0L-13,-23L-20,-30L-50,0L-20,30L-13,23Z'),\r\n    copy: draw('M35,45H-20V-25H35M35,-35H-20A10,10,0,0,0,-30,-25V45A10,10,0,0,0,-20,55H35A10,10,0,0,0,45,45V-25A10,10,0,0,0,35,-35M20,-55H-40A10,10,0,0,0,-50,-45V25H-40V-45H20V-55Z'),\r\n    counter: draw('M-40,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M-40,-30V30H-5V-30H-40M40,30V-30H34C35,-27,35,-25,35,-24C34,-21,32,-17,31,-16L20,-3L36,-4L36,3L10,2L10,-3C10,-3,25,-19,26,-20C27,-22,30,-30,23,-30C16,-30,17,-23,17,-23L9,-23C9,-23,9,-27,11,-30H5V30H18L18,26L23,26C23,26,27,25,27,20C28,15,23,15,23,15C22,15,17,16,17,20H10C10,20,10,9,23,9C36,9,35,20,35,20C35,20,35,26,29,28L32,30H40M-15,20H-23V-9L-32,-6V-12L-16,-18H-15V20Z'),\r\n    cut: draw('M35,-45L5,-15L15,-5L50,-40V-45M0,3A3,3,0,0,1,-2,0A3,3,0,0,1,0,-2A3,3,0,0,1,3,0A3,3,0,0,1,0,3M-30,40A10,10,0,0,1,-40,30C-40,24,-35,20,-30,20A10,10,0,0,1,-20,30C-20,36,-24,40,-30,40M-30,-20A10,10,0,0,1,-40,-30C-40,-36,-35,-40,-30,-40A10,10,0,0,1,-20,-30C-20,-24,-24,-20,-30,-20M-12,-22C-11,-24,-10,-27,-10,-30A20,20,0,0,0,-30,-50A20,20,0,0,0,-50,-30A20,20,0,0,0,-30,-10C-27,-10,-24,-11,-22,-12L-10,0L-22,12C-24,11,-27,10,-30,10A20,20,0,0,0,-50,30A20,20,0,0,0,-30,50A20,20,0,0,0,-10,30C-10,27,-11,24,-12,22L0,10L35,45H50V40L-12,-22Z'),\r\n    delete: draw(\r\n        'M35,-40H18L13,-45H-12L-17,-40H-35V-30H35M-30,35A10,10,0,0,0,-20,45H20A10,10,0,0,0,30,35V-25H-30V35Z'),\r\n    direction: draw('M10,13V0H-10V15H-20V-5A5,5,0,0,1,-15,-10H10V-22L28,-5M49,-4L4,-49H3C2,-50,-2,-50,-4,-49L-49,-4C-50,-2,-50,2,-49,4L-4,49C-2,50,2,51,4,49L49,4C51,2,51,-2,49,-4Z'),\r\n    down: draw('M-30,-30L0,30,30,-30'),\r\n    'down-double': draw('M-30,-40L0,-10,30,-40M-30,10L0,40,30,10'),\r\n    edit: draw(\r\n        \"M24,-46C22,-46,20,-46,19,-44L8,-34L35,-7L45,-17C48,-21,48,-25,45,-28L29,-44C28,-46,26,-46,24,-46M5,-30L-36,11L-23,12L-22,23L-11,24L-9,37L31,-3M-39,15L-47,49L-14,40L-15,29L-27,28L-28,16\"\r\n    ),\r\n    eraser: draw('M21,-42L46,-17C50,-14,50,-7,46,-3L0,43C-8,50,-20,50,-28,43L-46,25C-50,21,-50,15,-46,11L7,-42C11,-46,17,-46,21,-42M-39,18L-21,36C-17,39,-11,39,-7,36L11,18L-14,-7L-39,18Z'),\r\n    'export': draw('M-35,40H35V30H-35M35,-15H15V-45H-15V-15H-35L0,20L35,-15Z'),\r\n    file: draw('M10,-50H-30A10,10,0,0,0,-40,-40V40A10,10,0,0,0,-30,50H30A10,10,0,0,0,40,40V-20L10,-50M30,40H-30V-40H5V-15H30V40Z'),\r\n    \"flag-jp\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,45h120v-90h-120z\"\r\n            }],\r\n            [\"circle\", {\r\n                fill: \"#bc002d\",\r\n                r: 24\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-fr\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002395\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ed2939\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-it\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#009246\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ce2b37\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-de\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,41h130v-82h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ffce00\",\r\n                d: \"M-60,36h120v-24h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#dd0000\",\r\n                d: \"M-60,12h120v-24h-120z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-en\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,37h130v-75h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#bb133e\",\r\n                d: \"M-60,32h120v-65h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,22h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,12h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,2h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-8h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-18h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-28h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002664\",\r\n                d: \"M-60,-33h48v35h-48z\"\r\n            }],\r\n\r\n        ]\r\n    ],\r\n    folder: draw('M40,30H-40V-20H40M40,-30H0L-10,-40H-40C-46,-40,-50,-36,-50,-30V30A10,10,0,0,0,-40,40H40A10,10,0,0,0,50,30V-20C50,-26,46,-30,40,-30Z'),\r\n    font: draw('M25,-20H40V40H45V45H25V40H30V25H10L3,40H10V45H-10V40H-5L25,-20M30,-15L13,20H30V-15M-35,-45H-10C-4,-45,0,-41,0,-35V20H-15V-5H-30V20H-45V-35C-45,-41,-41,-45,-35,-45M-30,-35V-15H-15V-35H-30Z'),\r\n    'format-align-center': draw('M-45,-45H45V-35H-45V-45M-25,-25H25V-15H-25V-25M-45,-5H45V5H-45V-5M-25,15H25V25H-25V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-justify': draw('M-45,-45H45V-35H-45V-45M-45,-25H45V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H45V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-left': draw('M-45,-45H45V-35H-45V-45M-45,-25H15V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H15V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-right': draw(' M-45,-45H45V-35H-45V-45M-15,-25H45V-15H-15V-25M-45,-5H45V5H-45V-5M-15,15H45V25H-15V15M-45,35H45V45H-45V35Z '),\r\n    'format-bold': draw('M8,18H-10V3H8A8,8,0,0,1,15,10A8,8,0,0,1,8,18M-10,-27H5A8,8,0,0,1,13,-20A8,8,0,0,1,5,-12H-10M18,-6C23,-9,26,-15,26,-20C26,-31,18,-40,6,-40H-25V30H10C21,30,29,22,29,11C29,3,24,-3,18,-6Z'),\r\n    'format-italic': draw('M-10,-40V-25H1L-16,15H-30V30H10V15H-1L16,-25H30V-40H-10Z'),\r\n    'format-float-center': draw('M-15,-25H15V5H-15V-25M-45,-45H45V-35H-45V-45M-45,15H45V25H-45V15M-45,35H25V45H-45V35Z'),\r\n    'format-float-left': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-25V-15H-5V-25H45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-none': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-right': draw('M15,-25H45V5H15V-25M-45,-45H45V-35H-45V-45M5,-25V-15H-45V-25H5M-15,-5V5H-45V-5H-15M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-header': draw('M-40,-40H-30V-10H-10V-40H0V30H-10V0H-30V30H-40V-40M13,-23L31,-5L13,13L20,20L45,-5L20,-30L13,-23Z'),\r\n    'format-underline': draw(\r\n        'M-35,45H35V35H-35V45M0,25A30,30,0,0,0,30,-5V-45H18V-5A18,18,0,0,1,0,13A18,18,0,0,1,-17,-5V-45H-30V-5A30,30,0,0,0,0,25Z'\r\n    ),\r\n    fullscreen: draw('M-35,-35H-10V-25H-25V-10H-35V-35M10,-35H35V-10H25V-25H10V-35M25,10H35V35H10V25H25V10M-10,25V35H-35V10H-25V25H-10Z'),\r\n    gear: draw(\r\n        'M0,18A18,18,0,0,1,-17,0A18,18,0,0,1,0,-17A18,18,0,0,1,18,0A18,18,0,0,1,0,18M37,5C37,3,38,2,38,0C38,-2,37,-3,37,-5L48,-13C49,-14,49,-15,48,-16L38,-34C38,-35,36,-35,35,-35L23,-30C20,-32,18,-33,14,-35L13,-48C12,-49,11,-50,10,-50H-10C-11,-50,-12,-49,-12,-48L-14,-35C-17,-33,-20,-32,-23,-30L-35,-35C-36,-35,-38,-35,-38,-34L-48,-16C-49,-15,-49,-14,-48,-13L-37,-5C-37,-3,-37,-2,-37,0C-37,2,-37,3,-37,5L-48,13C-49,14,-49,15,-48,16L-38,34C-38,35,-36,35,-35,35L-23,30C-20,32,-17,33,-14,35L-12,48C-12,49,-11,50,-10,50H10C11,50,12,49,13,48L14,35C18,33,20,32,23,30L35,35C36,35,38,35,38,34L48,16C49,15,49,14,48,13L37,5Z'\r\n    ),\r\n    gps: draw(\r\n        'M0,-20A20,20,0,0,1,20,0A20,20,0,0,1,0,20A20,20,0,0,1,-20,0A20,20,0,0,1,0,-20M-45,5H-55V-5H-45C-42,-26,-26,-42,-5,-45V-55H5V-45C26,-42,43,-26,45,-5H55V5H45C43,26,26,43,5,45V55H-5V45C-26,43,-42,26,-45,5M0,-35A35,35,0,0,0,-35,0A35,35,0,0,0,0,35A35,35,0,0,0,35,0A35,35,0,0,0,0,-35Z'\r\n    ),\r\n    hand: draw(\r\n        \"M-10,-50A10,10,0,0,1,0,-40V-17C0,-17,10,-19,10,-14C10,-14,20,-15,20,-10C20,-10,30,-11,30,-6C30,-6,40,-7,40,-2V15C40,20,25,45,25,50H-15C-15,50,-25,15,-40,5C-40,5,-45,-25,-20,0V-40A10,10,0,0,1,-10,-50Z\"\r\n    ),\r\n    heart: draw('M0,47L-7,40C-33,17,-50,1,-50,-17C-50,-33,-38,-45,-22,-45C-14,-45,-5,-41,0,-35C5,-41,14,-45,23,-45C38,-45,50,-33,50,-17C50,1,33,17,7,40L0,47Z'),\r\n    hide: draw(\r\n        'M-1,-15L15,1C15,1,15,0,15,0A15,15,0,0,0,0,-15C0,-15,-1,-15,-1,-15M-22,-11L-15,-3C-15,-2,-15,-1,-15,0A15,15,0,0,0,0,15C1,15,2,15,3,15L11,22C8,24,4,25,0,25A25,25,0,0,1,-25,0C-25,-4,-24,-8,-22,-11M-50,-39L-39,-27L-36,-25C-45,-18,-51,-10,-55,0C-46,22,-25,38,0,38C8,38,15,36,22,33L24,35L39,50L45,44L-44,-45M0,-25A25,25,0,0,1,25,0C25,3,24,6,23,9L38,24C45,18,51,9,55,0C46,-22,25,-37,0,-37C-7,-37,-14,-36,-20,-34L-9,-23C-6,-24,-3,-25,0,-25Z'\r\n    ),\r\n    home: draw('M-10,40V10H10V40H35V0H50L0,-45L-50,0H-35V40H-10Z'),\r\n    image: draw('M5,-15H33L5,-42V-15M-30,-50H10L40,-20V40A10,10,0,0,1,30,50H-30C-36,50,-40,46,-40,40V-40C-40,-46,-36,-50,-30,-50M-30,40H15L30,40V0L10,20L0,10L-30,40M-20,-15A10,10,0,0,0,-30,-5A10,10,0,0,0,-20,5A10,10,0,0,0,-10,-5A10,10,0,0,0,-20,-15Z'),\r\n    import: draw('M-15,20V-10H-35L0,-45L35,-10H15V20H-15M-35,40V30H35V40H-35Z'),\r\n    improvement: draw(\"M0,50A50,50,0,0,1,-50,0A50,50,0,0,1,0,-50A50,50,0,0,1,50,0A50,50,0,0,1,0,50M0,-25L-25,0H-10V20H10V0H25L0,-25Z\"),\r\n    info: draw('M8,-40A8,8,0,0,0,0,-32A8,8,0,0,0,8,-25A8,8,0,0,0,15,-32A8,8,0,0,0,8,-40M6,-16C0,-16,-17,-3,-17,-3C-17,-2,-17,-2,-16,-1C-16,1,-16,1,-15,0C-14,0,-12,-2,-9,-3C1,-10,-8,6,-12,32C-14,45,-2,39,1,37C4,35,12,29,13,28C14,28,13,27,12,26C12,25,11,26,11,26C8,28,2,32,1,29C0,27,6,7,9,-6C10,-10,12,-17,6,-16Z'),\r\n    left: ['path', { fill: 0, d: 'M40,-5V5H-20L8,33L0,40L-39,0L0,-40L8,-32L-20,-5H40Z' }],\r\n    'left-double': draw('M-10,-30L-40,0,-10,30M40,-30L10,0,40,30'),\r\n    link: draw('M-7,7C-5,9,-5,12,-7,14C-9,16,-12,16,-14,14C-24,4,-24,-11,-14,-21V-21L4,-39C13,-49,29,-49,39,-39C49,-29,49,-13,39,-4L31,4C32,0,31,-4,29,-8L32,-11C38,-16,38,-26,32,-32C26,-38,16,-38,11,-32L-7,-14C-13,-8,-13,1,-7,7M7,-14C9,-16,12,-16,14,-14C24,-4,24,11,14,21V21L-4,39C-13,49,-29,49,-39,39C-49,29,-49,13,-39,4L-31,-4C-31,0,-31,4,-29,8L-32,11C-38,16,-38,26,-32,32C-26,38,-16,38,-11,32L7,14C13,8,13,-1,7,-7C5,-9,5,-12,7,-14Z'),\r\n    location: draw('M0,-2A13,13,0,0,1,-12,-15A13,13,0,0,1,0,-27A13,13,0,0,1,13,-15A13,13,0,0,1,0,-2M0,-50A35,35,0,0,0,-35,-15C-35,11,0,50,0,50C0,50,35,11,35,-15A35,35,0,0,0,0,-50Z'),\r\n    logout: draw(\r\n        \"M25,26V10H-10V-10H25V-26L51,0L25,26M5,-50A10,10,0,0,1,15,-40V-20H5V-40H-40V40H5V20H15V40A10,10,0,0,1,5,50H-40A10,10,0,0,1,-50,40V-40A10,10,0,0,1,-40,-50H5Z\"\r\n    ),\r\n    mail: draw(\r\n        'M40,-40H-40A10,10,0,0,0,-50,-30V30A10,10,0,0,0,-40,40H40A10,10,0,0,0,50,30V-30A10,10,0,0,0,40,-40M40,30H-40V-20L0,5L40,-20V30M40,-30L0,-5L-40,-30V-30H40V-30Z'\r\n    ),\r\n    map: draw('M15,35L-15,24V-35L15,-24M43,-45C42,-45,42,-45,42,-45L15,-34L-15,-45L-43,-35C-44,-35,-45,-34,-45,-33V43A3,3,0,0,0,-42,45C-42,45,-42,45,-42,45L-15,34L15,45L43,36C44,35,45,34,45,33V-42A3,3,0,0,0,43,-45Z'),\r\n    \"map-layer\": draw('M0,20L37,-9L45,-15L0,-50L-45,-15L-37,-9M0,33L-37,4L-45,10L0,45L45,10L37,4L0,33Z'),\r\n    menu: draw('M-45,-30H45V-20H-45V-30M-45,-5H45V5H-45V-5M-45,20H45V30H-45V20Z'),\r\n    minus: draw('M35,5H-35V-5H35V5Z'),\r\n    \"minus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M-25,5H25V-5H-25'),\r\n    \"minus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M25,-5V5H-25V-5H25Z'),\r\n    more: draw('M20,0A10,10,0,0,1,30,-10A10,10,0,0,1,40,0A10,10,0,0,1,30,10A10,10,0,0,1,20,0M-10,0A10,10,0,0,1,0,-10A10,10,0,0,1,10,0A10,10,0,0,1,0,10A10,10,0,0,1,-10,0M-40,0A10,10,0,0,1,-30,-10A10,10,0,0,1,-20,0A10,10,0,0,1,-30,10A10,10,0,0,1,-40,0Z'),\r\n    movie: draw('M44,-49L25,-45L38,-27L48,-29L44,-49M10,-42L0,-40L14,-23L24,-25L10,-42M-15,-37L-24,-35L-11,-18L-1,-20L-15,-37M-39,-32L-44,-32A10,10,0,0,0,-52,-20L-50,-10L-25,-15L-39,-32M-50,-10V40C-50,46,-45,50,-40,50H40C46,50,50,46,50,40V-10H-50Z'),\r\n    ok: draw('M45,-25L-15,35L-42,8L-35,0L-15,21L38,-32L45,-25Z'),\r\n    pack: ['path', { fill: 0, d: 'M45,23C45,24,44,26,42,27L3,49C2,50,1,50,0,50C-1,50,-2,50,-3,49L-42,27C-44,26,-45,24,-45,23V-22C-45,-24,-44,-26,-42,-27L-3,-49C-2,-50,-1,-50,0,-50C1,-50,2,-50,3,-49L42,-27C44,-26,45,-24,45,-22V23M0,-39L-35,-20V20L0,39L35,20V-20L0,-39M0,-29L24,-15L0,-1L-24,-15L0,-29M25,14L5,26V8L25,-3V14M-5,26L-25,14V-3L-5,8V26Z' }],\r\n    pause: draw('M10,35H30V-35H10M-30,35H-10V-35H-30V35Z'),\r\n    play: draw('M-20,-34V36L35,1L-20,-34Z'),\r\n    plug: draw('M20,-25V-45H10V-25H-10V-45H-20V-25H-20C-25,-25,-30,-20,-30,-15V13L-12,30V45H13V30L30,13V-15C30,-20,25,-25,20,-25Z'),\r\n    plus: draw('M35,5H5V35H-5V5H-35V-5H-5V-35H5V-5H35V5Z'),\r\n    \"plus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M5,-25H-5V-5H-25V5H-5V25H5V5H25V-5H5V-25Z'),\r\n    \"plus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M-5,-25H5V-5H25V5H5V25H-5V5H-25V-5H-5V-25Z'),\r\n    print: ['path', {\r\n        fill: 0,\r\n        d: 'M30,-45H-30V-25H30M35,0A5,5,0,0,1,30,-5A5,5,0,0,1,35,-10A5,5,0,0,1,40,-5A5,5,0,0,1,35,0M20,35H-20V10H20M35,-20H-35A15,15,0,0,0,-50,-5V25H-30V45H30V25H50V-5A15,15,0,0,0,35,-20Z'\r\n    }],\r\n    question: draw(\"M-10,35H5V50H-10V35M0,-50C27,-49,38,-22,23,-2C18,3,12,7,8,11C5,15,5,20,5,25H-10C-10,17,-10,10,-7,5C-3,0,3,-3,8,-7C20,-18,17,-34,0,-35A15,15,0,0,0,-15,-20H-30A30,30,0,0,1,0,-50Z\"),\r\n    redo: draw('M32,-7C23,-15,11,-20,-2,-20C-26,-20,-45,-5,-52,16L-40,20C-35,4,-20,-7,-2,-7C7,-7,16,-4,23,2L5,20H50V-25L32,-7Z'),\r\n    refresh: draw('M28,-28C21,-35,11,-40,0,-40A40,40,0,0,0,-40,0A40,40,0,0,0,0,40C19,40,34,27,39,10H28C24,22,13,30,0,30A30,30,0,0,1,-30,0A30,30,0,0,1,0,-30C8,-30,16,-27,21,-21L5,-5H40V-40L28,-28Z'),\r\n    right: ['path', { fill: 0, d: 'M-40,-5V5H20L-7,33L0,40L39,0L0,-40L-7,-32L20,-5H-40Z' }],\r\n    'right-double': draw('M10,-30L40,0,10,30M-40,-30L-10,0,-40,30'),\r\n    run: draw('M23,-32A10,10,0,0,0,33,-42A10,10,0,0,0,23,-52A10,10,0,0,0,13,-42A10,10,0,0,0,23,-32M5,37L10,15L20,25V55H30V18L20,8L23,-7C29,0,39,5,50,5V-5C41,-5,33,-9,28,-17L23,-25C22,-28,18,-30,15,-30C13,-30,13,-29,11,-29L-15,-18V5H-5V-12L4,-15L-4,25L-28,20L-30,30L5,37M-40,-15A5,5,0,0,1,-45,-20A5,5,0,0,1,-40,-25H-25V-15H-40M-35,-35A5,5,0,0,1,-40,-40A5,5,0,0,1,-35,-45H-10V-35H-35M-45,5A5,5,0,0,1,-50,0A5,5,0,0,1,-45,-5H-25V5H-45Z'),\r\n    search: draw('M-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45M-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35Z'),\r\n    select: draw('M35,35H-35V-35H15V-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-5H35M-20,-10L-27,-2L-5,20L45,-30L38,-37L-5,6L-20,-10Z'),\r\n    sitemap: draw('M-15,-50V-20H-5V-5H-35C-41,-5,-45,-1,-45,5V20H-55V50H-25V20H-35V5H-5V20H-15V50H15V20H5V5H35V20H25V50H55V20H45V5C45,-1,41,-5,35,-5H5V-20H15V-50H-15Z'),\r\n    unselect: draw('M35,-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-35C45,-41,41,-45,35,-45M35,-35V35H-35V-35H35Z'),\r\n    share: draw('M30,20C26,20,23,22,20,24L-15,3C-15,2,-15,1,-15,0C-15,-1,-15,-2,-15,-3L20,-24C23,-22,26,-20,30,-20A15,15,0,0,0,45,-35A15,15,0,0,0,30,-50A15,15,0,0,0,15,-35C15,-34,15,-33,15,-31L-20,-11C-22,-13,-26,-15,-30,-15A15,15,0,0,0,-45,0A15,15,0,0,0,-30,15C-26,15,-22,13,-20,11L16,32C16,33,15,34,15,35C15,43,22,50,30,50C38,50,45,43,45,35A15,15,0,0,0,30,20Z'),\r\n    show: draw('M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M0,25A25,25,0,0,1,-25,0A25,25,0,0,1,0,-25A25,25,0,0,1,25,0A25,25,0,0,1,0,25M0,-37C-25,-37,-46,-22,-55,0C-46,22,-25,38,0,38C25,38,46,22,55,0C46,-22,25,-37,0,-37Z'),\r\n    \"skip-next\": draw('M20,30H30V-30H20M-30,30L13,0L-30,-30V30Z'),\r\n    \"skip-next2\": draw('M-40,-35V35L-5,0M30,-35V35H40V-35M-5,-35V35L30,0'),\r\n    \"skip-prev\": draw('M-30,30V-30H-20V30H-30M-12,0L30,-30V30L-12,0Z'),\r\n    \"skip-prev2\": draw('M40,-35V35L5,0M-30,-35V35H-40V-35M5,-35V35L-30,0'),\r\n    speaker: draw('M40,35L33,28C41,21,45,11,45,0C45,-11,41,-21,33,-28L40,-35C49,-26,55,-14,55,0C55,14,49,26,40,35M26,21L19,14C23,11,25,6,25,0C25,-6,23,-11,19,-14L26,-21C32,-16,35,-8,35,0C35,8,32,16,26,21M-40,-45H0A10,10,0,0,1,10,-35V35A10,10,0,0,1,0,45H-40A10,10,0,0,1,-50,35V-35A10,10,0,0,1,-40,-45M-20,-35A10,10,0,0,0,-30,-25A10,10,0,0,0,-20,-15A10,10,0,0,0,-10,-25A10,10,0,0,0,-20,-35M-20,-5A20,20,0,0,0,-40,15A20,20,0,0,0,-20,35A20,20,0,0,0,0,15A20,20,0,0,0,-20,-5M-20,5A10,10,0,0,1,-10,15A10,10,0,0,1,-20,25A10,10,0,0,1,-30,15A10,10,0,0,1,-20,5Z'),\r\n    \"speaker-off\": draw('M-50,-34L-44,-40L45,49L39,55L31,48C30,49,28,50,25,50H-25C-31,50,-35,46,-35,40V-19L-50,-34M0,30A15,15,0,0,1,-15,15C-15,11,-14,8,-11,5L-18,-2C-22,3,-25,8,-25,15A25,25,0,0,0,0,40C7,40,13,38,17,33L10,26C7,29,4,30,0,30M25,15A25,25,0,0,0,0,-10H-1L-34,-43C-33,-47,-29,-50,-25,-50H25A10,10,0,0,1,35,-40V26L25,16V15M0,-40C-6,-40,-10,-36,-10,-30A10,10,0,0,0,0,-20A10,10,0,0,0,10,-30C10,-36,5,-40,0,-40Z'),\r\n    \"split-vertical\": draw('M30,20V5H15V50H5V-50H15V-5H30V-20L50,0L30,20M-50,0L-30,20V5H-15V50H-5V-50H-15V-5H-30V-20L-50,0Z'),\r\n    \"split-horizontal\": draw('M-20,30H-5V15H-50V5H50V15H5V30H20L0,50L-20,30M0,-50L-20,-30H-5V-15H-50V-5H50V-15H5V-30H20L0,-50Z'),\r\n    star: draw('M0,26L31,45L23,10L50,-14L14,-17L0,-50L-14,-17L-50,-14L-23,10L-31,45L0,26Z'),\r\n    stat: draw('M-45,50V-20H-25V50H-45M-10,50V-50H10V50H-10M25,50V10H45V50H25Z'),\r\n    'switch': draw('M-45,-40V3L-30,-12L-15,5C-10,10,-10,15,-10,15V45H10V10C10,10,10,5,7,0C5,-5,0,-10,0,-10L-15,-27L-2,-40M30,-40L8,-18L10,-15C10,-15,15,-10,17,-5C18,-3,19,-1,19,1L45,-25'),\r\n    'tri-down': draw('M-23,-17L0,6L23,-17L30,-10L0,20L-30,-10L-23,-17Z'),\r\n    'tri-left': draw('M17,23L-6,0L17,-23L10,-30L-20,0L10,30L17,23Z'),\r\n    'tri-right': draw('M-17,23L6,0L-17,-23L-10,-30L20,0L-10,30L-17,23Z'),\r\n    'tri-up': draw('M-23,17L0,-6L23,17L30,10L0,-20L-30,10L-23,17Z'),\r\n    twitter: draw('M52,-30C48,-28,44,-27,40,-27C44,-29,48,-33,49,-38C45,-36,41,-34,36,-33C32,-37,26,-40,20,-40C8,-40,-1,-30,-1,-19C-1,-17,-1,-15,-1,-14C-19,-15,-34,-23,-45,-36C-47,-33,-48,-29,-48,-25C-48,-18,-44,-11,-38,-7C-42,-7,-45,-8,-48,-10C-48,-10,-48,-10,-48,-10C-48,1,-41,9,-31,11C-33,12,-35,12,-37,12C-38,12,-39,12,-41,12C-38,20,-30,26,-21,26C-28,32,-37,36,-47,36C-49,36,-51,36,-52,35C-43,41,-31,45,-19,45C20,45,42,12,42,-16C42,-17,42,-18,42,-19C46,-22,49,-26,52,-30Z'),\r\n    undo: draw('M3,-20C-11,-20,-23,-15,-32,-7L-50,-25V20H-5L-23,2C-16,-4,-7,-7,3,-7C20,-7,35,4,41,20L52,16C45,-5,26,-20,3,-20Z'),\r\n    up: draw('M-30,30L0,-30,30,30'),\r\n    'up-double': draw('M-30,40L0,10,30,40M-30,-10L0,-40,30,-10'),\r\n    user: draw(\r\n        'M0,-40A20,20,0,0,1,20,-20A20,20,0,0,1,0,0A20,20,0,0,1,-20,-20A20,20,0,0,1,0,-40M0,10C22,10,40,19,40,30V40H-40V30C-40,19,-22,10,0,10Z'\r\n    ),\r\n    wait: draw('M0,-5A5,5,0,0,0,-5,0A5,5,0,0,0,0,5A5,5,0,0,0,5,0A5,5,0,0,0,0,-5M3,-50C25,-50,26,-32,14,-26C9,-24,7,-19,6,-14C8,-13,10,-11,12,-9C30,-19,50,-15,50,3C50,25,32,26,26,14C24,9,19,7,14,6C13,8,11,10,9,12C19,30,15,50,-2,50C-25,50,-25,32,-14,26C-9,24,-7,19,-6,14C-8,13,-10,11,-12,9C-30,19,-50,15,-50,-2C-50,-25,-32,-26,-26,-14C-24,-9,-19,-7,-14,-6C-13,-8,-11,-10,-9,-12C-19,-30,-15,-50,3,-50Z'),\r\n    \"zoom-in\": draw('M18,10L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18M-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10M0,-10H-10V0H-15V-10H-25V-15H-15V-25H-10V-15H0V-10Z'),\r\n    \"zoom-out\": draw('M18,10H14L12,9C17,3,20,-4,20,-12A33,33,0,0,0,-12,-45A33,33,0,0,0,-45,-12A33,33,0,0,0,-12,20C-4,20,3,17,9,12L10,14V18L35,43L43,35L18,10M-12,10C-25,10,-35,0,-35,-12C-35,-25,-25,-35,-12,-35C0,-35,10,-25,10,-12C10,0,0,10,-12,10M-25,-15H0V-10H-25V-15Z'),\r\n    warning: draw('M0,-50L-55,45H55M0,-30L38,35H-38M-5,-10V10H5V-10M-5,20V30H5V20')\r\n};\r\n\r\n\r\n// Synonyms.\r\nconst synonyms: { [name: string]: string } = {\r\n    add: \"plus\",\r\n    back: \"left\",\r\n    help: \"question\",\r\n    save: \"export\"\r\n};\r\nfor (const key of Object.keys(synonyms)) {\r\n    const val: string = synonyms[key];\r\n    iconsBook[key] = iconsBook[val];\r\n}\r\n","\"use strict\";\r\n\r\nimport * as React from \"react\";\r\nimport castBoolean from \"../converter/boolean\";\r\nimport castInteger from \"../converter/integer\";\r\nimport castUnit from \"../converter/unit\";\r\nimport { iconsBook, TIconDefinition } from \"../icons\";\r\nimport \"./icon.css\";\r\n\r\nenum EnumPenColor { B, W, P, PD, PL, S, SD, SL }\r\n\r\ninterface IIconProps {\r\n    visible?: boolean;\r\n    content?: string | TIconDefinition;\r\n    size?: string | number;\r\n    enabled?: boolean;\r\n    animate?: boolean;\r\n    flipH?: boolean;\r\n    flipV?: boolean;\r\n    rotate?: number;\r\n    pen0?: EnumPenColor | string;\r\n    pen1?: EnumPenColor | string;\r\n    pen2?: EnumPenColor | string;\r\n    pen3?: EnumPenColor | string;\r\n    pen4?: EnumPenColor | string;\r\n    pen5?: EnumPenColor | string;\r\n    pen6?: EnumPenColor | string;\r\n    pen7?: EnumPenColor | string;\r\n    onClick?: () => void;\r\n    onHide?: () => void;\r\n}\r\n\r\nexport default class Icon extends React.Component<IIconProps, {}> {\r\n    static isValidIconName(name: string): boolean {\r\n        return typeof iconsBook[name] !== 'undefined';\r\n    }\r\n\r\n    static getAllIconNames(): string[] {\r\n        return Object.keys(iconsBook).sort();\r\n    }\r\n\r\n    private refIcon: any;\r\n    private visible: boolean;\r\n    private timeoutHandle: number;\r\n\r\n    constructor(props: IIconProps) {\r\n        super(props);\r\n        this.refIcon = React.createRef();\r\n        this.visible = false;\r\n        this.timeoutHandle = 0;\r\n    }\r\n\r\n    triggerVisibleAnimation() {\r\n        const\r\n            elemIcon = this.refIcon.current,\r\n            visible = this.visible;\r\n        if( !elemIcon ) return;\r\n        if (this.timeoutHandle) {\r\n            window.clearTimeout(this.timeoutHandle);\r\n            this.timeoutHandle = 0;\r\n        }\r\n        requestAnimationFrame(() => {\r\n            if (visible) elemIcon.classList.remove(\"zero\");\r\n            else {\r\n                elemIcon.classList.add(\"zero\");\r\n                const slot = this.props.onHide;\r\n                if (typeof slot === 'function') {\r\n                    this.timeoutHandle = window.setTimeout(slot, 300);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const\r\n            p = this.props,\r\n            visible = castBoolean(p.visible, true),\r\n            enabled = castBoolean(p.enabled, true),\r\n            animate = castBoolean(p.animate, false),\r\n            flipH = castBoolean(p.flipH, false),\r\n            flipV = castBoolean(p.flipV, false),\r\n            size = castUnit(p.size, \"28px\"),\r\n            content = castContent(p.content),\r\n            rotate = castInteger(p.rotate, 0),\r\n            onClick = p.onClick,\r\n            classes = [\"tfw-view-icon\"];\r\n        const svgContent = createSvgContent(content, p);\r\n        if (!svgContent) return null;\r\n\r\n        if (!enabled) classes.push(\"disabled\");\r\n        if (animate) classes.push(\"animate\");\r\n        if (visible) classes.push(\"zero\");\r\n        if (typeof onClick === 'function' && enabled) classes.push(\"active\");\r\n\r\n        let transform = \"\";\r\n        if (rotate !== 0) {\r\n            transform += `rotate(${rotate}deg) `;\r\n        }\r\n        if (flipH || flipV) {\r\n            transform += `scale(${flipH ? -1 : 1},${flipV ? -1 : 1})`;\r\n        }\r\n        const style: React.CSSProperties = { width: size, height: size };\r\n        if (transform.length > 0) style.transform = transform;\r\n\r\n        requestAnimationFrame(() => this.triggerVisibleAnimation());\r\n        this.visible = visible;\r\n\r\n        return (\r\n            <svg className={classes.join(\" \")}\r\n                ref={this.refIcon}\r\n                viewBox=\"-65 -65 130 130\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n                width={size}\r\n                height={size}\r\n                onClick={enabled ? onClick : undefined}\r\n                style={style}>\r\n                {svgContent}\r\n                < g strokeWidth=\"6\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n                    {createSvgContent(content, p)}\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nfunction createSvgContent(def: TIconDefinition, props: IIconProps, key: string = \"\"): any {\r\n    const\r\n        elementName = def[0],\r\n        { attributes, children } = parseDef(def);\r\n\r\n    if (typeof elementName === 'undefined') return <g></g>;\r\n\r\n    const attribs: React.Attributes = manageColors({ ...attributes }, props);\r\n    if (key.length > 0) attributes.key = key;\r\n\r\n    return React.createElement(\r\n        elementName,\r\n        attribs,\r\n        children.map((child, index) => createSvgContent(child, props, `${index}`))\r\n    ) as React.ReactSVGElement;\r\n}\r\n\r\nconst CLASSES = [\"P\", \"PL\", \"PD\", \"S\", \"SL\", \"SD\"];\r\nconst PENS = \"01234567\";\r\n\r\n/**\r\n * If the value of the attribute \"fill\" is an element of CLASSES,\r\n * it will be removed and replace with a class.\r\n * Same thing for the attibute \"stroke\".\r\n *\r\n * @example\r\n * manageColors({ fill: \"1\" }) === { className: \"thn-svg-fill-1\" }\r\n *\r\n * @param   attribs [description]\r\n * @param   props   [description]\r\n * @returns         [description]\r\n */\r\nfunction manageColors(attribs: { [key: string]: any }, props: IIconProps) {\r\n    // @TODO For special forms of \"fill\" and \"stroke\", add classes.\r\n    const classes = (attribs.className || \"\").split(\" \");\r\n\r\n    [\"fill\", \"stroke\"].forEach(attribName => {\r\n        const attribValue = `${attribs[attribName]}`;\r\n        if (typeof attribValue === 'undefined') return;\r\n        if (attribValue === 'undefined') return;\r\n        const key = `${attribValue}`.toUpperCase();\r\n        if (CLASSES.indexOf(key) === -1 && PENS.indexOf(key) === -1) return;\r\n        if (PENS.indexOf(attribValue) !== -1 ) {\r\n            // If we find fill=\"3\", then we must look for property pen3.\r\n            const pen = props[`pen${attribValue}`];\r\n            if( typeof pen === 'string' ) {\r\n                if( CLASSES.indexOf(pen) === -1 ) {\r\n                    attribs[attribName] = pen;\r\n                } else {\r\n                    delete attribs[attribName];\r\n                    classes.push(`thm-svg-${attribName}${pen}`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        delete attribs[attribName];\r\n        classes.push(`thm-svg-${attribName}${key}`);\r\n    });\r\n\r\n    attribs.className = classes.join(\" \").trim();\r\n    return attribs;\r\n}\r\n\r\nfunction parseDef([name, arg1, arg2]: TIconDefinition) {\r\n    let attributes: undefined | {},\r\n        children: undefined | any[];\r\n\r\n    if (Array.isArray(arg1)) children = arg1;\r\n    else if (typeof arg1 !== 'undefined') attributes = arg1;\r\n    if (Array.isArray(arg2)) children = arg2;\r\n    else if (typeof arg2 !== 'undefined') attributes = arg2;\r\n\r\n    if (typeof attributes === 'undefined') attributes = {};\r\n    if (typeof children === 'undefined') children = [];\r\n\r\n    return { attributes, children };\r\n}\r\n\r\nfunction castContent(content: string | TIconDefinition = \"ok\"): TIconDefinition {\r\n    if (Array.isArray(content)) return content;\r\n    return iconsBook[content] || [];\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./label.css\"\r\n\r\ninterface ILabelProps {\r\n    label?: string;\r\n    htmlFor?: string;\r\n}\r\n\r\nexport default class Label extends React.Component<ILabelProps, {}> {\r\n    constructor( props: ILabelProps ) {\r\n        super( props );\r\n    }\r\n\r\n    render() {\r\n        const label = this.props.label;\r\n        if( typeof label !== 'string' || label.trim().length === 0 ) return null;\r\n        return (<label className=\"tfw-view-Label\" htmlFor={this.props.htmlFor}>{\r\n            this.props.label\r\n        }</label>)\r\n    }\r\n}\r\n","/**\r\n * The ESCAPE key is often used to close a dialog, collapse a combo list, ...\r\n * This module helps you nesting closable things.\r\n *\r\n * @example\r\n * import * from EscapeHandler from \"./tfw/escape-handler\"\r\n * EscapeHandler.add(() => myDialog.close());\r\n * EscapeHandler.fire();\r\n */\r\n\r\nexport default {add, fire};\r\n\r\ntype THandler = ()=>void;\r\n\r\nlet handlers:THandler[] = [];\r\nlet initialized = false;\r\n\r\nexport function add(listener: THandler) {\r\n    if( !initialized) {\r\n        initialized = true;\r\n        addKeyboardListener();\r\n    }\r\n\r\n    handlers.push(listener);\r\n}\r\n\r\nexport function fire() {\r\n    if( handlers.length === 0 ) return;\r\n    const handler = handlers.pop();\r\n    if (typeof handler === 'function') handler();\r\n}\r\n\r\nfunction addKeyboardListener() {\r\n    document.addEventListener(\"keydown\", evt => {\r\n        if( evt.key !== 'Escape') return;\r\n        fire();\r\n    }, true);\r\n}\r\n","import * as React from \"react\"\r\nimport \"./combo.css\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport Icon from \"./icon\"\r\nimport Label from \"./label\"\r\nimport Gesture from \"../gesture\"\r\nimport EscapeHandler from \"../escape-handler\"\r\n\r\ninterface IComboProps {\r\n    label?: string;\r\n    value?: string;\r\n    keys?: string[];\r\n    wide?: boolean;\r\n    onChange?: (value: string) => void;\r\n    children: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Combo extends React.Component<IComboProps, {}> {\r\n    readonly touchable: Touchable;\r\n\r\n    ref = React.createRef<HTMLButtonElement>()\r\n    list = React.createRef<HTMLDivElement>()\r\n    button = React.createRef<HTMLDivElement>()\r\n\r\n    bigList: HTMLElement | undefined;\r\n\r\n    keys: string[] = []\r\n    selectedKey: string = \"\"\r\n    selectedIndex: number = -1\r\n\r\n    constructor(props: IComboProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n    }\r\n\r\n    handleClick(event: React.MouseEvent) {\r\n        console.info(\"tap combo =>\", event);\r\n        this.expand();\r\n    }\r\n\r\n    /**\r\n     * If there are only two items, we don't open the list: we just swap them.\r\n     */\r\n    _swapItems() {\r\n        // With two items, clicking will immediatly switch to the next one.\r\n        for (const key of this.keys) {\r\n            if (this.props.value !== key) {\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(key);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    _computeDimensions(list: HTMLElement, button: HTMLElement): { left: number, top: number, width: number, height: number } {\r\n        let { left, top, height } = list.getBoundingClientRect();\r\n        const { width } = button.getBoundingClientRect();\r\n        height = Math.min(height, window.innerHeight - 32);\r\n        if (top + height > window.innerHeight) {\r\n            top -= 32 * Math.ceil(window.innerHeight - top - height / 32);\r\n        }\r\n        if (top < 0) {\r\n            top += 32 * Math.ceil(-top / 32);\r\n        }\r\n        return { left, top, width, height };\r\n    }\r\n\r\n    _showList(list: HTMLElement, button: HTMLElement, left: number, top: number, width: number, height: number): { screen: HTMLElement, bigList: HTMLElement } {\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-view-combo-screen\";\r\n        const bigList = document.createElement(\"div\");\r\n        bigList.className = \"thm-ele-nav thm-bg3\";\r\n        bigList.innerHTML = list.innerHTML;\r\n\r\n        bigList.style.top = `${top}px`;\r\n        bigList.style.left = `${left}px`;\r\n        bigList.style.width = `${width}px`;\r\n        bigList.style.height = `${height}px`;\r\n        screen.appendChild(bigList);\r\n        document.body.appendChild(screen);\r\n\r\n        this.bigList = bigList;\r\n        return { screen, bigList };\r\n    }\r\n\r\n    _ensureSelectionVisible() {\r\n        let index = 0;\r\n        const bigList: HTMLElement | undefined = this.bigList;\r\n        if (!bigList) return;\r\n        const items = bigList.querySelectorAll(\"div.item\");\r\n        for (const key of this.keys) {\r\n            const item = items[index];\r\n            if (key === this.selectedKey) {\r\n                const rect = bigList.getBoundingClientRect();\r\n                bigList.scrollTop = (32 * index) - rect.height / 2;\r\n                this.selectedIndex = index;\r\n                item.classList.add(\"thm-bgSL\");\r\n            } else {\r\n                item.classList.remove(\"thm-bgSL\");\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n    _handleKeyboard(event: React.KeyboardEvent) {\r\n        switch (event.key) {\r\n            case \"ArrowDown\":\r\n                this.selectedIndex++;\r\n                this.selectedKey = this.keys[this.selectedIndex % this.keys.length];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"ArrowUp\":\r\n                this.selectedIndex = (this.selectedIndex + this.keys.length - 1) % this.keys.length;\r\n                this.selectedKey = this.keys[this.selectedIndex];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"Enter\":\r\n            case \" \":\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(this.selectedKey);\r\n                }\r\n                EscapeHandler.fire();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n        }\r\n        console.log(\">>\", event.key);\r\n    }\r\n\r\n    expand() {\r\n        if (this.keys.length < 3) {\r\n            this._swapItems();\r\n            return;\r\n        }\r\n\r\n        const list = this.list.current;\r\n        const button = this.button.current;\r\n        if (!list || !button) return;\r\n\r\n        const { left, top, width, height } = this._computeDimensions(list, button);\r\n        const { screen, bigList } = this._showList(list, button, left, top, width, height);\r\n        this.selectedKey = this.props.value || \"\";\r\n        window.setTimeout(() => this._ensureSelectionVisible(bigList), 10);\r\n\r\n        const handleKeyboard = this._handleKeyboard.bind(this);\r\n        document.addEventListener(\"keydown\", handleKeyboard, true);\r\n        EscapeHandler.add(() => {\r\n            document.body.removeChild(screen)\r\n            document.removeEventListener(\"keydown\", handleKeyboard, true);\r\n        });\r\n        Gesture(screen).on({ tap: () => {\r\n            console.log(\"EscapeHandler\");\r\n            EscapeHandler.fire()\r\n        }});\r\n        Gesture(bigList).on({\r\n            tap: evt => {\r\n                console.info(\"tap bigList =>\", evt);\r\n                if (!evt || typeof evt.y === 'undefined') return;\r\n                const scroll = bigList.scrollTop;\r\n                const index = Math.floor((evt.y + scroll) / 32);\r\n                const value = this.keys[index];\r\n                EscapeHandler.fire()\r\n                requestAnimationFrame(() => {\r\n                    if (typeof this.props.onChange === 'function') {\r\n                        this.props.onChange(value)\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    render() {\r\n        const p = this.props;\r\n        const children = p.children;\r\n        const label = castString(p.label, \"\").trim();\r\n        const wide = castBoolean(p.wide, false);\r\n        const keys = ensureGoodKeys(p.keys, children);\r\n        const value = castString(p.value, keys[0]);\r\n        const classes = [\"tfw-view-combo\"];\r\n        const items = children.map(item => {\r\n            const key = item.key;\r\n            return (<div className=\"item\" key={key} > {item} </div>);\r\n        });\r\n\r\n        if (wide) classes.push(\"wide\");\r\n\r\n        this.keys = keys;\r\n\r\n        const index = getIndex(keys, value);\r\n\r\n        return (\r\n            <button ref={this.ref} className={classes.join(\" \")}>\r\n                {label.length > 0 ? <Label label={label}/> : null}\r\n                <div ref={this.button} className=\"button thm-bg3 thm-ele-button\">\r\n                    <div className=\"list-container\"\r\n                        style={{\r\n                            transform: `translateY(-${32 * index}px)`\r\n                        }}>\r\n                        <div ref={this.list} className=\"tfw-view-combo-list\" >{items}</div>\r\n                    </div>\r\n                    <div className=\"icon\" >\r\n                        <Icon size=\"24px\" content=\"down\" />\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getIndex(keys: string[], value: string) {\r\n    const index = keys.indexOf(value);\r\n    return Math.max(0, index);\r\n}\r\n\r\n/**\r\n * Keys must be non empty strings. If a key is not defined, it will take its index (stringified) as value.\r\n * And if a \"key\" its defined on a child, it will take precedence on anything else.\r\n *\r\n* @param  {string[]} keys\r\n* @param  {ReactElement[]} children\r\n          *\r\n* @return {string[]}\r\n*/\r\nfunction ensureGoodKeys(keys: string[] | undefined, children: React.ReactElement<any>[]): string[] {\r\n    const goodKeys: string[] = castStringArray(keys, []);\r\n    const minimalLength: number = children.length;\r\n\r\n    while (goodKeys.length < minimalLength) {\r\n        goodKeys.push(`${goodKeys.length}`);\r\n    }\r\n    for (let k = 0; k < goodKeys.length; k++) {\r\n        if (goodKeys[k].trim().length === 0) {\r\n            goodKeys[k] = `${k}`;\r\n        }\r\n    }\r\n    children.forEach((child, index) => {\r\n        const key = child.key;\r\n        if (typeof key === \"string\") {\r\n            goodKeys[index] = key;\r\n        } else {\r\n            child.key = goodKeys[index];\r\n        }\r\n    });\r\n\r\n    return goodKeys;\r\n}\r\n\r\n\r\nfunction onTap(elem: HTMLElement, handler: () => void) {\r\n    const slot = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        elem.removeEventListener(\"mousedown\", slot);\r\n        elem.removeEventListener(\"touchdown\", slot);\r\n        handler();\r\n    };\r\n    elem.addEventListener(\"mousedown\", slot, false);\r\n    elem.addEventListener(\"touchdown\", slot, false);\r\n}\r\n","import { IIntlText, IIntlOrString } from \"./types\"\r\n\r\ninterface ITranslations {\r\n    [language: string]: { [key: string]: string }\r\n}\r\n\r\nlet gCurrentLanguage: string =\r\n    localStorage.getItem(\"CurrentLanguage\") || navigator.language.split(\"-\")[0];\r\n\r\nexport default class Intl {\r\n    constructor(private translations: ITranslations) { }\r\n\r\n    static make(translations: ITranslations) {\r\n        const instance = new Intl(translations);\r\n        return instance.translate.bind(instance);\r\n    }\r\n\r\n    static toIntl(text: IIntlOrString | undefined, lang: string | null = null): IIntlText {        \r\n        if (!text) return { [lang || Intl.lang]: \"\" };\r\n        if (typeof text !== 'string') return text;\r\n        return { [lang || Intl.lang]: text };\r\n    }\r\n\r\n    static toText(intl: IIntlOrString | undefined, lang?: string | undefined): string {\r\n        if (!intl) return \"\";\r\n        if (typeof intl === 'string') return intl;\r\n        if (typeof lang === 'undefined') lang = Intl.lang;\r\n        const text = intl[lang];\r\n        if (typeof text === 'string') return text;\r\n        const defaultText = intl[Object.keys(intl)[0]];\r\n        if (typeof defaultText === 'string') return defaultText;\r\n        return \"\";\r\n    }\r\n\r\n    static addTextToIntl(lang: string, text: string, intl: IIntlOrString): IIntlText {\r\n        intl = Intl.toIntl(intl, lang);\r\n        intl[lang] = text;\r\n        const result: IIntlText = {};\r\n        for (const key of Object.keys(intl)) {\r\n            const val = intl[key];\r\n            if (val.trim().length === 0) continue;\r\n            result[key] = val;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static get lang() { return gCurrentLanguage; }\r\n\r\n    static set lang(_value: string) {\r\n        if (typeof _value !== 'string') return;\r\n        const value = _value.split(\"-\")[0];\r\n        gCurrentLanguage = value;\r\n        localStorage.setItem(\"CurrentLanguage\", value);\r\n    }\r\n\r\n    translate(item: string, ...params: string[]) {\r\n        try {\r\n            if (this.translations[gCurrentLanguage]) {\r\n                const translation = this.translations[gCurrentLanguage][item];\r\n                if (translation) return addParams(translation, params);\r\n            }\r\n\r\n            // If we don't find a translation in the current language,\r\n            // we look in the other languages.\r\n            const languages = Object.keys(this.translations);\r\n            for (const lang of languages) {\r\n                const vocabulary = this.translations[lang];\r\n                const translation = vocabulary[item];\r\n                if (typeof translation !== 'string') continue;\r\n                return addParams(translation, params);\r\n            }\r\n\r\n            console.error(`Missing translation for item \"${item}\"!`, params);\r\n            return \"\";\r\n        }\r\n        catch (ex) {\r\n            throw Error(`Error while looking for a translation of \"${item}\":\\n${ex}`);\r\n        }\r\n    }\r\n}\r\n\r\n// Used for the states automate in order to parse a translation\r\n// with placeholders.\r\nenum Mode { Text, Escape, Placeholder }\r\n\r\n/**\r\n * In a translation, you can find placeholders for potential params.\r\n * They are marked with a dollar and a digit from 1 to 9.\r\n * For instance: \"Welcome mister $1!\".\r\n *\r\n * Order doesn't matter and you can have several occurences of the same\r\n * placeholder.\r\n * For instance: \"Hello $2! Welcome into $1. $1 is the best...\".\r\n *\r\n * @param   {string} translation - A string which can own placeholders.\r\n * @param   {string[]} params - Array of replacements for placeholders.\r\n * @returns The transformed string.\r\n */\r\nfunction addParams(translation: string, params: string[]): string {\r\n    let output = '';\r\n    let mark = 0;\r\n    let mode: Mode = Mode.Text;\r\n    let paramIndex = -1;\r\n    let paramValue = '';\r\n\r\n    for (let index = 0; index < translation.length; index++) {\r\n        const c = translation.charAt(index);\r\n        switch (mode) {\r\n            case Mode.Text:\r\n                if (c === '\\\\') {\r\n                    mode = Mode.Escape;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 1;\r\n                }\r\n                else if (c === '$') {\r\n                    mode = Mode.Placeholder;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 2;\r\n                }\r\n                break;\r\n            case Mode.Escape:\r\n                mode = Mode.Text;\r\n                break;\r\n            case Mode.Placeholder:\r\n                mode = Mode.Text;\r\n                paramIndex = parseInt(c, 10);\r\n                if (isNaN(paramIndex))\r\n                    throw Error(`Parsing error at position ${index} for translation \"${translation}\"!\r\nEscape \"$\" if you don't want to use a placeholder.`);\r\n                paramValue = params[paramIndex - 1] || \"\";\r\n                output += paramValue;\r\n                break;\r\n            default:\r\n                mode = Mode.Text;\r\n        }\r\n    }\r\n\r\n    return output + translation.substr(mark);\r\n}\r\n","import * as React from \"react\"\nimport \"./input.css\"\nimport castInteger from \"../../converter/integer\"\nimport castBoolean from \"../../converter/boolean\"\nimport castString from \"../../converter/string\"\nimport castUnit from \"../../converter/unit\"\nimport Label from \"../label\"\n\nimport Intl from \"../../intl\"\nconst _ = Intl.make(require(\"./input.yaml\"));\n\ninterface IStringSlot {\n    (value: string): void;\n}\n\ninterface IInputProps {\n    value: string;\n    label?: string;\n    wide?: boolean;\n    size?: number;\n    focus?: boolean;\n    width?: string;\n    enabled?: boolean;\n    placeholder?: string;\n    type?: \"text\" | \"password\" | \"submit\" | \"color\" | \"date\"\n    | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"range\"\n    | \"search\" | \"tel\" | \"time\" | \"url\" | \"week\";\n    validator?: (value: string) => boolean | RegExp;\n    onValidation?: (validation: boolean) => void;\n    onChange?: IStringSlot,\n    onEnterPressed?: (value: string) => void\n}\n\nexport default class Input extends React.Component<IInputProps, {}> {\n    private readonly input: React.RefObject<HTMLInputElement> = React.createRef();\n\n    handleKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n        if (evt.key === \"enter\") {\n            evt.preventDefault();\n            evt.stopPropagation();\n            const { onEnterPressed, value } = this.props;\n            if (typeof onEnterPressed === 'function') {\n                onEnterPressed(value);\n            }\n        }\n    }\n\n    onFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.remove(\"thm-bg3\");\n        input.classList.add(\"thm-bgSL\");\n        if (this.props.type !== 'number') {\n            // setSelectionRange fails for \"number\" input.\n            input.setSelectionRange(0, input.value.length);\n        }\n    }\n\n    onBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.add(\"thm-bg3\");\n        input.classList.remove(\"thm-bgSL\");\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        //if (!this.checkValidity(event.target.value)) return;\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            event.preventDefault();\n            onChange(event.target.value);\n        }\n    }\n\n    render() {\n        const\n            p = this.props,\n            type = castString(p.type, \"text\"),\n            label = castString(p.label, \"\"),\n            value = castString(p.value, \"\"),\n            placeholder = castString(p.placeholder, \"\"),\n            wide = castBoolean(p.wide, false),\n            focus = castBoolean(p.focus, false),\n            enabled = castBoolean(p.enabled, true),\n            size = Math.max(1, castInteger(p.size, 8)),\n            width = castUnit(p.width, \"auto\"),\n            id = nextId();\n        const classes = [\"tfw-view-input\"];\n        if (wide) classes.push(\"wide\");\n        /*\n        const header = (error ? <div className=\"error\">{error}</div> :\n            (label ? (<Label htmlFor={id} label={label}/>) : null));\n        */\n        const inputClassName = \"thm-ele-button \"\n            + (enabled ? 'thm-bg3' : 'thm-bg0');\n        return (<div\n                    className={classes.join(\" \")}\n                    style={{ width, maxWidth: width }}>\n            <Label htmlFor={id} label={label}/>\n            <input\n                ref={this.input}\n                autoFocus={focus}\n                className={inputClassName}\n                placeholder={placeholder}\n                disabled={!enabled}\n                type={type}\n                id={id}\n                size={size}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                onKeyDown={this.handleKeyDown}\n                value={value}/>\n        </div>);\n    }\n}\n\n\nlet globalId = 0;\nfunction nextId() {\n    return `tfw-view-input-${globalId++}`;\n}\n\n\nconst NUMBER_VALIDATOR = (value: string) => isNaN(parseFloat(value)) ? _('nan') : true;\n","import * as React from \"react\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castStringArray from \"../converter/string-array\"\nimport \"./flex.css\"\n\ninterface IFlexProp {\n    wide?: boolean;\n    classes?: string[] | string;\n    dir?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\" | \"wide\" | \"narrow\";\n    wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n    justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-around\" | \"space-between\" | \"space-evenly\";\n    alignItems?: \"stretch\" | \"flex-start\" | \"flex-end\" | \"center\";\n    children: React.ReactElement<any>[] | React.ReactElement<any>;\n}\n\nexport default class Flex extends React.Component<IFlexProp, {}> {\n    render() {\n        const p = this.props;\n        const wide = castBoolean(p.wide, true);\n        const dir = castString(p.dir, \"row\");\n        const style: React.CSSProperties = {\n            justifyContent: castString(p.justifyContent, \"space-around\"),\n            alignItems: castString(p.alignItems, \"center\"),\n            flexWrap: castString(p.wrap, \"wrap\")\n        };\n        const classes = [\"tfw-view-flex\", `dir-${dir}`];\n        classes.push(...castStringArray(p.classes));\n\n        if (wide) classes.push(\"wide\");\n\n        return (\n            <div className={classes.join(\" \")} style={style}>{\n                p.children\n            }</div>\n        )\n    }\n}\n","import React from \"react\"\n\nimport Combo from '../../../tfw/view/combo'\nimport Input from '../../../tfw/view/input'\nimport Flex from '../../../tfw/layout/flex'\n\nimport { ISnapshot } from '../../types'\n\nexport const RESOLUTIONS: {[key: string]: [number,number]} = {\n    fullHD: [1920,1080],\n    thumbnail: [160,120],\n    presentation: [800,600],\n    ultraHD: [3840,2160]\n}\n\nexport const SAMPLINGS: {[key: string]: number} = {\n    medium: 50,\n    quick: 1,\n    low: 10,\n    high: 250,\n    ultra: 1250\n}\n\n\ninterface IProps extends ISnapshot {\n    onFilenameChange: (filename: string) => void,\n    onSizeKeyChange: (key: string) => void,\n    onWidthChange: (width: number) => void,\n    onHeightChange: (width: number) => void,\n    onSamplesKeyChange: (key: string) => void,\n    onSamplesChange: (samples: number) => void\n}\n\nfunction res(name: string): string {\n    const resolution = RESOLUTIONS[name];\n    if (!resolution) return '';\n    const [w,h] = resolution;\n    return `(${w} x ${h})`\n}\n\nexport default class Snapshot extends React.Component<IProps, {}> {\n    constructor( props: IProps ) {\n        super( props );\n    }\n\n    handleWidthChange = (width: string) => {\n        const value = parseInt(width, 10);\n        if (isNaN(value)) return;\n        this.props.onWidthChange(value);\n    }\n\n    handleHeightChange = (height: string) => {\n        const value = parseInt(height, 10);\n        if (isNaN(value)) return;\n        this.props.onHeightChange(value);\n    }\n\n    handleSizeKeyChange = (size: string) => {\n        this.props.onSizeKeyChange(size);\n    }\n\n    handleSamplesChange = (samples: string) => {\n        const value = parseInt(samples, 10);\n        if (isNaN(value)) return;\n        this.props.onSamplesChange(value);\n    }\n\n    handleSamplesKeyChange = (key: string) => {\n        this.props.onSamplesKeyChange(key);\n    }\n\n    handleFilenameChange = (filename: string) => {\n        this.props.onFilenameChange(filename);\n    }\n\n    render() {\n        const p = this.props;\n\n        return (<div className=\"webBrayns-dialog-screenshot\">\n            <Input wide={true}\n                   label=\"File name\"\n                   value={`${p.filename}`}\n                   onChange={this.handleFilenameChange}/>\n            <Combo value={p.sizeKey} wide={true} onChange={this.handleSizeKeyChange}>\n                <div key=\"ultraHD\">Ultra HD <em>{res(\"ultraHD\")}</em></div>\n                <div key=\"fullHD\">Full HD <em>{res(\"fullHD\")}</em></div>\n                <div key=\"presentation\">Presentation <em>{res(\"presentation\")}</em></div>\n                <div key=\"thumbnail\">Thumbnail <em>{res(\"thumbnail\")}</em></div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Flex>\n                <Input label=\"Width\" value={`${p.width}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleWidthChange}/>\n                <Input label=\"Height\" value={`${p.height}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleHeightChange}/>\n            </Flex>\n            <Combo value={p.samplesKey} wide={true} onChange={this.handleSamplesKeyChange}>\n                <div key=\"quick\">Quick and dirty</div>\n                <div key=\"low\">Low quality</div>\n                <div key=\"medium\">Medium quality</div>\n                <div key=\"high\">High quality</div>\n                <div key=\"ultra\">Very high quality</div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Input wide={true}\n                   label=\"Sampling\"\n                   value={`${p.samples}`}\n                   enabled={p.samplesKey === 'custom'}\n                   onChange={this.handleSamplesChange}/>\n        </div>)\n    }\n}\n","import { IDialogs, ISnapshot, IAction } from '../types'\nimport Storage from '../../tfw/storage'\nimport { RESOLUTIONS, SAMPLINGS } from '../view/snapshot'\n\nconst PREFIX = \"dialogs:\"\n\n\nconst RESOLUTION_NAME = Object.keys(RESOLUTIONS)[0];\nconst SAMPLING_NAME = Object.keys(SAMPLINGS)[0];\n\nexport default {\n    INITIAL_STATE: {\n        snapshot: Storage.local.get('state/dialogs/snapshot', {\n            filename: 'snapshot',\n            sizeKey: RESOLUTION_NAME,\n            width: RESOLUTIONS[RESOLUTION_NAME][0],\n            height: RESOLUTIONS[RESOLUTION_NAME][1],\n            samplesKey: SAMPLING_NAME,\n            samples: SAMPLINGS[SAMPLING_NAME]\n        })\n    },\n\n    reducer(state: IDialogs, action: IAction): IDialogs {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update-snapshot\": return updateSnapshot(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    updateSnapshot(snapshot: Partial<ISnapshot>): IAction {\n        return { type: `${PREFIX}update-snapshot`, snapshot };\n    }\n}\n\n\nfunction updateSnapshot(state: IDialogs, action: IAction): IDialogs {\n    const newState = Object.assign( state, {\n        snapshot: Object.assign( state.snapshot, action.snapshot )\n    });\n    Storage.local.set('state/dialogs/snapshot', newState.snapshot)\n    console.info(\"state=\", state);\n    console.info(\"action.snapshot=\", action.snapshot);\n    console.info(\"newState=\", newState);\n    return newState;\n}\n","import { IModel, IAction } from \"../types\"\n\nconst PREFIX = \"models:\"\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: IModel[], action: IAction): IModel[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"add\": return add(state, action);\n            case \"reset\": return reset(state, action);\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    add(model: IModel): IAction {\n        return { type: `${PREFIX}add`, model };\n    },\n\n    reset(models: IModel[]): IAction {\n        return { type: `${PREFIX}reset`, models };\n    },\n\n    update(model: IModel): IAction {\n        return { type: `${PREFIX}update`, model };\n    }\n}\n\n\nfunction add(state: IModel[], action: IAction): IModel[] {\n    const models = state.slice();\n    models.push(action.model);\n    return models;\n}\n\n/**\n * This function seem complicated, but it aism to remove doubles.\n * It's strange but its true thay Brayns can return doubles when you call \"get-scene\".\n */\nfunction reset(state: IModel[], action: IAction): IModel[] {\n    const alreadyAddedIds: number[] = [];\n    const models = action.models.filter( (model: {id: number}) => {\n        const id = model.id;\n        const alreadyHere = alreadyAddedIds.includes(id);\n        if (alreadyHere) return false;\n        alreadyAddedIds.push(id);\n        return true;\n    });\n    return models;\n}\n\n\nfunction update(state: IModel[], action: IAction): IModel[] {\n    const { model } = action;\n    const models = state.filter((m: IModel) => m.id !== model.id);\n    models.push(model);\n    return models;\n}\n","import { INavigation, IAction } from '../types'\n\nconst PREFIX = \"navigation:\"\n\nexport default {\n    INITIAL_STATE: {\n        panel: \"model\",\n        showConsole: false\n    },\n\n    reducer(state: INavigation, action: IAction): INavigation {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"set-panel\": return setPanel(state, action);\n            case \"toggle-console-visibility\": return toggleConsoleVisibility(state);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    setPanel(panel: string): IAction {\n        return { type: `${PREFIX}set-panel`, panel };\n    },\n\n    toggleConsoleVisibility(): IAction {\n        return { type: `${PREFIX}toggle-console-visibility` };\n    }\n}\n\n\nfunction setPanel(state: INavigation, action: IAction): INavigation {\n    return Object.assign( state, { panel: action.panel });\n}\n\nfunction toggleConsoleVisibility(state: INavigation): INavigation {\n    return Object.assign( state, { showConsole: !state.showConsole });\n}\n","import { IAction, IPathState } from \"../types\"\n\nconst PREFIX = \"path:\"\n\nexport default {\n    INITIAL_STATE: {\n        path: \"\",\n        root: \"\",\n        files: [],\n        folders: []\n    },\n\n    reducer(state: IPathState, action: IAction): IPathState {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(state: Partial<IPathState>): IAction {\n        return { type: `${PREFIX}update`, state };\n    }\n}\n\n\nfunction update(state: IPathState, action: IAction): IPathState {\n    return { ...state, ...action.state }\n}\n","import { ISlicerState, IAction } from '../types'\n\nconst PREFIX = \"slicer:\"\n\nexport default {\n    INITIAL_STATE: {\n        activated: false,\n        minX: 0,\n        maxX: 1,\n        latitude: 0,\n        longitude: 0,\n        collageDepth: 1\n    },\n\n    reducer(state: ISlicerState, action: IAction): ISlicerState {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(sliceInfo: Partial<ISlicerState>): IAction {\n        return { type: `${PREFIX}update`, sliceInfo };\n    }\n}\n\n\nfunction update(state: ISlicerState, action: IAction): ISlicerState {\n    return Object.assign( state, action.sliceInfo );\n}\n","/**\n * The full state of the application is stored and managed here.\n */\nimport { createStore } from 'redux'\nimport { IAppState, IAction } from \"../types\"\n\nimport Animation from './animation'\nimport Dialogs from './dialogs'\nimport Models from \"./models\"\nimport Navigation from './navigation'\nimport Path from './path'\nimport Slicer from './slicer'\n\n\nconst INITIAL_STATE: IAppState = {\n    animation: Animation.INITIAL_STATE,\n    dialogs: Dialogs.INITIAL_STATE,\n    models: Models.INITIAL_STATE,\n    navigation: Navigation.INITIAL_STATE,\n    path: Path.INITIAL_STATE,\n    slicer: Slicer.INITIAL_STATE\n};\n\nfunction reducer(state: IAppState | undefined = INITIAL_STATE, action: IAction): IAppState {\n    return {\n        animation: Animation.reducer(state.animation, action),\n        dialogs: Dialogs.reducer(state.dialogs, action),\n        models: Models.reducer(state.models, action),\n        navigation: Navigation.reducer(state.navigation, action),\n        path: Path.reducer(state.path, action),\n        slicer: Slicer.reducer(state.slicer, action)\n    };\n}\n\nconst store = createStore(reducer);\nexport default {\n    store, dispatch: store.dispatch,\n    Animation,\n    Dialogs,\n    Models,\n    Navigation,\n    Path,\n    Slicer\n};\n\n\nconsole.info(\"INITIAL_STATE.dialogs=\", INITIAL_STATE.dialogs);\n","import Python from './python'\nimport State from '../state'\n\nexport default { browse }\n\nconst ROOT = '/gpfs/bbp.cscs.ch/project/';\n\n/**\n * Set the current Path state according to the content of `dir`.\n */\nasync function browse(dir: string = \"\") {\n    const result = await Python.exec(\"dir\", { path: dir });\n    if (typeof result.code === 'number') {\n        throw result;\n    }\n    const children = result.children;\n    const path = result.path;\n    const files: string[] = [];\n    const folders: string[] = [];\n\n    children.forEach((item: any) => {\n        const { name, size } = item;\n        if (typeof size === 'undefined') folders.push(name);\n        else files.push(name);\n    })\n    const state = { path, root: ROOT, files, folders };\n    State.dispatch(State.Path.update(state));\n    return state;\n}\n","interface IMap {\r\n    [key: string]: string;\r\n}\r\n\r\nconst UrlArgs = {\r\n    parse(): IMap {\r\n        const\r\n            args: IMap = {},\r\n            t = location.search;\r\n\r\n        if (t.length < 2) return args;\r\n        const items = t.substring(1).split('&');\r\n        items.forEach((item, index) => {\r\n            const itemWithSpacesInsteadOfPlus = item.split(\"+\").join(\" \");\r\n            const indexOfEqual = itemWithSpacesInsteadOfPlus.indexOf(\"=\");\r\n            if (indexOfEqual === -1) {\r\n                args[`${index}`] = itemWithSpacesInsteadOfPlus;\r\n            } else {\r\n                const key = itemWithSpacesInsteadOfPlus.substr(0, indexOfEqual);\r\n                const val = itemWithSpacesInsteadOfPlus.substr(indexOfEqual + 1);\r\n                args[key] = decodeURIComponent(val);\r\n            }\r\n        });\r\n\r\n        return args;\r\n    }\r\n};\r\n\r\nexport default UrlArgs;\r\n","export default function castArray(v: any, defaultValue: any[] = []): any[] {\r\n    if (typeof v === 'undefined') return defaultValue;\r\n    if (Array.isArray(v)) return v;\r\n    return [v];\r\n}\r\n","import * as React from \"react\"\r\nimport Icon from \"./icon\"\r\nimport \"./button.css\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport castArray from \"../converter/array\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\n\r\ninterface IButtonProps {\r\n    label?: string;\r\n    icon?: string;\r\n    wide?: boolean;\r\n    wait?: boolean;\r\n    flat?: boolean;\r\n    small?: boolean;\r\n    warning?: boolean;\r\n    enabled?: boolean;\r\n    classes?: string[] | string;\r\n    tag?: any;\r\n    onClick?: (tag: any) => void;\r\n}\r\n\r\nexport default class Button extends React.Component<IButtonProps, {}> {\r\n    readonly touchable: Touchable;\r\n    readonly ref: React.RefObject<HTMLButtonElement>;\r\n\r\n    constructor(props: IButtonProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    handleClick() {\r\n        const slot = this.props.onClick;\r\n        if (typeof slot !== 'function') return;\r\n        slot(this.props.tag);\r\n    }\r\n\r\n    render() {\r\n        const p = this.props,\r\n            label = castString(p.label, \"\"),\r\n            icon = castString(p.icon, \"\"),\r\n            wide = castBoolean(p.wide, false),\r\n            wait = castBoolean(p.wait, false),\r\n            flat = castBoolean(p.flat, false),\r\n            small = castBoolean(p.small, false),\r\n            enabled = !wait && castBoolean(p.enabled, true),\r\n            warning = castBoolean(p.warning, false),\r\n            classes = [\"tfw-view-button\"].concat(castArray(p.classes));\r\n        if (wide) classes.push(\"wide\");\r\n        if (flat) {\r\n            classes.push(\"flat\");\r\n            classes.push(warning ? \"thm-fgS\" : \"thm-fgP\");\r\n        }\r\n        else {\r\n            if (enabled) classes.push(\"thm-ele-button\");\r\n            classes.push(warning ? \"thm-bgS\" : \"thm-bgP\");\r\n        }\r\n        if (small) classes.push(\"small\");\r\n        if (label.length === 0) classes.push(\"floating\");\r\n\r\n        this.touchable.enabled = enabled;\r\n        return (\r\n            <button ref={this.ref}\r\n                className={classes.join(\" \")}\r\n                disabled={!enabled}>\r\n                {icon.length > 0\r\n                    ? <Icon content={icon}\r\n                        animate={wait}\r\n                        size={`${small ? 1.375 : 1.875}rem`} />\r\n                    : null}\r\n                {label.length > 0\r\n                    ? <div className=\"text\" > {label} </div>\r\n                    : null}\r\n            </button>);\r\n    }\r\n}\r\n","export default {\r\n    /**\r\n     * @param {string|React.ReactElement<any>} message\r\n     * @param {()=>void|null} onClose\r\n     */\r\n    alert,\r\n    /**\r\n     * @param {string} caption - Title and button caption.\r\n     * @param {any} content - Content to display.\r\n     * @return Promise<boolean> Confirmed or not?\r\n     */\r\n    confirm,\r\n    show,\r\n    wait\r\n};\r\n\r\nimport * as React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport Icon from \"../view/icon\"\r\nimport Flex from \"../layout/flex\"\r\nimport EscapeHandler from \"../escape-handler\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport \"./dialog.css\"\r\n\r\nimport Button from \"../view/button\"\r\n\r\nimport Intl from \"../intl\";\r\nconst _ = Intl.make(require(\"./dialog.yaml\"));\r\n\r\ninterface IOptions {\r\n    onClose?: () => void;\r\n    closeOnEscape?: boolean;\r\n    icon?: string;\r\n    title?: string;\r\n    content?: string | React.ReactElement<any>;\r\n    footer?: React.ReactElement<any>[] | React.ReactElement<any> | null;\r\n    maxWidth?: number;\r\n}\r\n\r\nclass Dialog {\r\n    _screen: HTMLElement;\r\n    _options: IOptions;\r\n    footer: React.ReactElement<any>[] | React.ReactElement<any> | null = null;\r\n\r\n    constructor(options: IOptions = {}) {\r\n        this._options = Object.assign({\r\n            closeOnEscape: true,\r\n            footer: <Button\r\n                icon=\"close\"\r\n                label = { _('close') }\r\n                flat={ true}\r\n                onClick={() => this.hide()}/>\r\n        }, options);\r\n        this._options.closeOnEscape = castBoolean(this._options.closeOnEscape, true);\r\n        this.footer = this._options.footer || null;\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-factory-dialog\";\r\n        document.body.appendChild(screen);\r\n        this._screen = screen;\r\n        this.hide = this.hide.bind(this);\r\n        if (this._options.closeOnEscape) {\r\n            EscapeHandler.add(() => this._hide());\r\n        }\r\n    }\r\n\r\n    set onClose(slot: () => void) {\r\n        this._options.onClose = slot;\r\n    }\r\n\r\n    show() {\r\n        const opt = this._options;\r\n        const title = castString(opt.title, \"\").trim();\r\n        const icon = castString(opt.icon, \"\").trim();\r\n        let footer: React.ReactElement<any> | null =\r\n            this.footer ? (<footer className= \"thm-bg2 thm-ele-button\">{\r\n                this.footer\r\n            }</footer>) : null;\r\n            let header = null;\r\n        if (title.length > 0) {\r\n            header = (\r\n                <header className= \"thm-bgPD\">\r\n                    { icon.length > 0 ? <Icon content={ icon } /> : null}\r\n                    <div>{title}</div>\r\n                </header>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render((\r\n            <div\r\n                className=\"thm-ele-dialog thm-bg1\"\r\n                style={{\r\n                    maxWidth: typeof opt.maxWidth === 'number' ? `${opt.maxWidth}px` : \"auto\"\r\n                }}>\r\n                {header}\r\n                <div>{opt.content}</div>\r\n                {footer}\r\n            </div>\r\n        ), this._screen);\r\n        setTimeout(() => this._screen.classList.add(\"show\"), 10);\r\n    }\r\n\r\n    hide() {\r\n        if (!this._options.closeOnEscape) {\r\n            this._hide();\r\n        } else {\r\n            EscapeHandler.fire();\r\n        }\r\n    }\r\n\r\n    _hide() {\r\n        const screen = this._screen;\r\n        screen.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n            document.body.removeChild(screen);\r\n        }, 200);\r\n        const onClose = this._options.onClose;\r\n        if (typeof onClose === 'function') {\r\n            requestAnimationFrame(onClose);\r\n        }\r\n    }\r\n}\r\n\r\nfunction alert(content: string | React.ReactElement<any>,\r\n               onClose: (() => void) | undefined = undefined): Promise<void> {\r\n    return new Promise(resolve => {\r\n        const dialog = new Dialog({ onClose: resolve, content, maxWidth: 420 });\r\n        dialog.footer = (<Button\r\n            icon=\"close\"\r\n            label={_('close')}\r\n            flat={true}\r\n            onClick={resolve} />);\r\n        dialog.show();\r\n    });\r\n}\r\n\r\n/**\r\n * ```\r\n * const isConfirmed = await Dialog.confirm(\"Delete file\", <p>Are you sure?</p>);\r\n * ```\r\n * @param caption - Title and button caption.\r\n * @param content - Content to display.\r\n */\r\nfunction confirm( caption: string,\r\n                  content: string | React.ReactElement<any>): Promise<boolean> {\r\n    return new Promise( resolve => {\r\n        const dialog = new Dialog({ title: caption, content, maxWidth: 420 });\r\n        const close = (confirmed: boolean) => {\r\n            dialog.hide();\r\n            resolve( confirmed );\r\n        };\r\n        dialog.onClose = () => close(false);\r\n        const btnCancel = (<Button\r\n            key=\"cancel\"\r\n            flat={true}\r\n            label={_(\"cancel\")}\r\n            onClick={() => close(false)}/>);\r\n        const btnOK = (<Button\r\n            key=\"ok\"\r\n            warning={true}\r\n            label={caption}\r\n            onClick={() => close(true)}/>);\r\n        dialog.footer = [ btnCancel, btnOK ];\r\n        dialog.show();\r\n    });\r\n}\r\n\r\nfunction show(options: IOptions): Dialog {\r\n    const dialog = new Dialog(options);\r\n    dialog.show();\r\n    return dialog;\r\n}\r\n\r\nasync function wait(label: string, task: Promise<any>, blocking: boolean = true): Promise<any> {\r\n    if (!blocking) {\r\n        return await task;\r\n    }\r\n    const content = (\r\n        <Flex dir=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" >\r\n            <Icon content=\"wait\" animate={true}/>\r\n            <div>{label}</div>\r\n        </Flex>\r\n    );\r\n    const dialog = new Dialog({ content, footer: null, closeOnEscape: false });\r\n    dialog.show();\r\n    const close = dialog.hide.bind( dialog );\r\n    return new Promise( (resolve, reject) => {\r\n        task.then(\r\n            (result: any) => {\r\n                close();\r\n                resolve( result );\r\n            },\r\n            (error: any) => {\r\n                console.error( error );\r\n                close();\r\n                reject( error );\r\n            }\r\n        );\r\n    });\r\n}\r\n","import React from \"react\"\nimport Input from \"../../../tfw/view/input\"\nimport Button from \"../../../tfw/view/button\"\nimport Storage from \"../../../tfw/storage\"\n\n\ninterface IHostNameInputProps {\n    onChange: (hostName: string) => void,\n    onEnterPressed: () => void\n}\n\ninterface IHostNameInputState {\n    hostName: string\n}\n\n\nexport default class HostNameInput extends React.Component<IHostNameInputProps, IHostNameInputState> {\n    constructor( props: IHostNameInputProps ) {\n        super( props );\n        this.state = { hostName: Storage.local.get(\"brayns-host-name\", \"http://r1i7n13.bbp.epfl.ch:5000\") };\n    }\n\n    handleChange = (hostName: string) => {\n        this.setState({ hostName });\n\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            onChange(hostName);\n            Storage.local.set(\"brayns-host-name\", hostName);\n        }\n    }\n\n    handleEnterPressed = () => {\n        const { onEnterPressed } = this.props;\n        if (typeof onEnterPressed === 'function') {\n            onEnterPressed();\n        }\n    }\n\n    componentDidMount() {\n        this.handleChange(this.state.hostName);\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-inputHostName\">\n            <Input\n                wide={true}\n                focus={true}\n                label=\"Brayns host name\"\n                value={this.state.hostName}\n                onEnterPressed={this.handleEnterPressed}\n                onChange={this.handleChange}/>\n            {/*\n            <Button\n                wide={true} flat={true}\n                label=\"How can I find that Brayns host name?\"\n                icon=\"help\"/>*/}\n        </div>)\n    }\n}\n","import { Client as BraynsClient } from \"brayns\"\nimport React from 'react';\nimport UrlArgs from \"../../tfw/url-args\"\nimport Dialog from \"../../tfw/factory/dialog\"\nimport Button from \"../../tfw/view/button\"\nimport InputHostName from \"../view/input-host-name\"\n\n// Timeout connection to Brayns service.\nconst CONNECTION_TIMEOUT = 5000;\n\n\nexport default { getHostName, connect }\n\n\n/**\n * Retrieve Brayns' host name from querystring of from user input.\n */\nasync function getHostName(ignoreQueryString: boolean): Promise<string> {\n    return new Promise(async resolve => {\n        if (!ignoreQueryString) {\n            const urlArgs = UrlArgs.parse();\n            const hostFromQueryString = urlArgs.host;\n            if (typeof hostFromQueryString === 'string') {\n                resolve(hostFromQueryString);\n                return;\n            }\n        }\n\n        let hostName = \"\";\n        let validated = false;\n        const onOk = () => {\n            validated = true;\n            dialog.hide();\n            resolve(hostName);\n        }\n        const input = <InputHostName\n            onEnterPressed={onOk}\n            onChange={(value: string) => hostName = value}/>;\n        const dialog = Dialog.show({\n            closeOnEscape: true,\n            content: input,\n            footer: <Button label=\"Connect to Brayns Service\"\n                            onClick={onOk}\n                            icon=\"plug\"/>,\n            icon: \"plug\",\n            title: \"Connect to Brayns Service\",\n            onClose: async () => {\n                if (validated) return;\n                await Dialog.alert((<p>Web-Brayns absolutly needs to be connected to the Brayns server...</p>));\n                location.reload();\n                resolve(\"\");\n            }\n        });\n    });\n}\n\n\n/**\n * Try to connect to a Brayns service and fails if it take too long.\n */\nasync function connect(hostName: string): Promise<BraynsClient> {\n    return new Promise((resolve, reject) => {\n        const timeout = window.setTimeout(reject, CONNECTION_TIMEOUT);\n        const client = new BraynsClient(hostName);\n        client.ready.subscribe(\n            isReady => {\n                console.info(\"isReady=\", isReady);\n                if (isReady) {\n                    window.clearTimeout(timeout);\n                    resolve(client);\n                }\n            },\n            err => { console.error(\"err=\", err); }\n        );\n    });\n}\n","\nimport Scene from './scene'\n\nexport default {\n   addClipPlane /* Add a clip plane; returns the clip plane descriptor */,\n   addLightAmbient /* Add an ambient light */,\n   addLightDirectional /* Add a directional light */,\n   addLightQuad /* Add a quad light */,\n   addLightSphere /* Add a sphere light */,\n   addLightSpot /* Add a spotlight, returns id */,\n   addModel /* Add model from remote path; returns model descriptor on success */,\n   chunk /* Indicate sending of a binary chunk after this message */,\n   clearLights /* Remove all lights in the scene */,\n   getAnimationParameters /* Get the current state of animation-parameters */,\n   getApplicationParameters /* Get the current state of application-parameters */,\n   getCamera /* Get the current state of camera */,\n   getCameraParams /* Get the params of the current camera */,\n   getClipPlanes /* Get all clip planes */,\n   getEnvironmentMap /* Get the environment map from the scene */,\n   getInstances /* Get instances */,\n   getLights /* get all lights */,\n   getLoaders /* Get all loaders */,\n   getModelProperties /* Get the properties of the given model */,\n   getModelTransferFunction /* Get the transfer function of the given model */,\n   getRenderer /* Get the current state of renderer */,\n   getRendererParams /* Get the params of the current renderer */,\n   getScene /* Get the current state of scene */,\n   getStatistics /* Get the current state of statistics */,\n   getVolumeParameters /* Get the current state of volume-parameters */,\n   imageJpeg /* Get the current state of image-jpeg */,\n   inspect /* Inspect the scene at x-y position */,\n   loadersSchema /* Get the schema for all loaders */,\n   modelPropertiesSchema /* Get the property schema of the model */,\n   quit /* Quit the application */,\n   removeClipPlanes /* Remove clip planes from the scene given their gids */,\n   removeLights /* Remove light given their IDs */,\n   removeModel /* Remove the model(s) with the given ID(s) from the scene */,\n   requestModelUpload /* Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success */,\n   resetCamera /* Resets the camera to its initial values */,\n   schema /* Get the schema of the given endpoint */,\n   setAnimationParameters /* Set the new state of animation-parameters */,\n   setApplicationParameters /* Set the new state of application-parameters */,\n   setCamera /* Set the new state of camera */,\n   setCameraParams /* Set the params on the current camera */,\n   setEnvironmentMap /* Set a environment map in the scene */,\n   setModelProperties /* Set the properties of the given model */,\n   setModelTransferFunction /* Set the transfer function of the given model */,\n   setRenderer /* Set the new state of renderer */,\n   setRendererParams /* Set the params on the current renderer */,\n   setScene /* Set the new state of scene */,\n   setVolumeParameters /* Set the new state of volume-parameters */,\n   snapshot /* Make a snapshot of the current view */,\n   updateClipPlane /* Update a clip plane with the given coefficients */,\n   updateInstance /* Update the instance with the given values */,\n   updateModel /* Update the model with the given values */}\n\n//========================================================================\n// \"add-clip-plane\" - Add a clip plane; returns the clip plane descriptor\n//------------------------------------------------------------------------\nexport type API_addClipPlane_Param0 = [\n   number,\n   number,\n   number,\n   number\n]\nexport type API_addClipPlane_Return = (\n   null\n   | {\n         id: (number /* Integer */);\n         plane: [\n            number,\n            number,\n            number,\n            number\n         ];\n      })\n/**\n * Add a clip plane; returns the clip plane descriptor\n */\nasync function addClipPlane(plane: API_addClipPlane_Param0): Promise<API_addClipPlane_Return> {\n   const out = await Scene.request(\"add-clip-plane\", plane)\n   return out as API_addClipPlane_Return\n}\n//============================================\n// \"add-light-ambient\" - Add an ambient light\n//--------------------------------------------\nexport type API_addLightAmbient_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightAmbient_Return = (number /* Integer */)\n/**\n * Add an ambient light\n */\nasync function addLightAmbient(light: API_addLightAmbient_Param0): Promise<API_addLightAmbient_Return> {\n   const out = await Scene.request(\"add-light-ambient\", light)\n   return out as API_addLightAmbient_Return\n}\n//===================================================\n// \"add-light-directional\" - Add a directional light\n//---------------------------------------------------\nexport type API_addLightDirectional_Param0 = {\n   angularDiameter: number;\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightDirectional_Return = (number /* Integer */)\n/**\n * Add a directional light\n */\nasync function addLightDirectional(light: API_addLightDirectional_Param0): Promise<API_addLightDirectional_Return> {\n   const out = await Scene.request(\"add-light-directional\", light)\n   return out as API_addLightDirectional_Return\n}\n//=====================================\n// \"add-light-quad\" - Add a quad light\n//-------------------------------------\nexport type API_addLightQuad_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   edge1: [\n      number,\n      number,\n      number\n   ];\n   edge2: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_addLightQuad_Return = (number /* Integer */)\n/**\n * Add a quad light\n */\nasync function addLightQuad(light: API_addLightQuad_Param0): Promise<API_addLightQuad_Return> {\n   const out = await Scene.request(\"add-light-quad\", light)\n   return out as API_addLightQuad_Return\n}\n//=========================================\n// \"add-light-sphere\" - Add a sphere light\n//-----------------------------------------\nexport type API_addLightSphere_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSphere_Return = (number /* Integer */)\n/**\n * Add a sphere light\n */\nasync function addLightSphere(light: API_addLightSphere_Param0): Promise<API_addLightSphere_Return> {\n   const out = await Scene.request(\"add-light-sphere\", light)\n   return out as API_addLightSphere_Return\n}\n//================================================\n// \"add-light-spot\" - Add a spotlight, returns id\n//------------------------------------------------\nexport type API_addLightSpot_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   openingAngle: number;\n   penumbraAngle: number;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSpot_Return = (number /* Integer */)\n/**\n * Add a spotlight, returns id\n */\nasync function addLightSpot(light: API_addLightSpot_Param0): Promise<API_addLightSpot_Return> {\n   const out = await Scene.request(\"add-light-spot\", light)\n   return out as API_addLightSpot_Return\n}\n//===============================================================================\n// \"add-model\" - Add model from remote path; returns model descriptor on success\n//-------------------------------------------------------------------------------\nexport type API_addModel_Param0 = {\n   bounding_box?: boolean;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_addModel_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Add model from remote path; returns model descriptor on success\n */\nasync function addModel(model_param: API_addModel_Param0): Promise<API_addModel_Return> {\n   const out = await Scene.request(\"add-model\", model_param)\n   return out as API_addModel_Return\n}\n//=================================================================\n// \"chunk\" - Indicate sending of a binary chunk after this message\n//-----------------------------------------------------------------\nexport type API_chunk_Param0 = {\n   id?: string;\n}\nexport type API_chunk_Return = undefined\n/**\n * Indicate sending of a binary chunk after this message\n */\nasync function chunk(chunk: API_chunk_Param0): Promise<API_chunk_Return> {\n   const out = await Scene.request(\"chunk\", chunk)\n   return out as API_chunk_Return\n}\n//=================================================\n// \"clear-lights\" - Remove all lights in the scene\n//-------------------------------------------------\nexport type API_clearLights_Return = undefined\n/**\n * Remove all lights in the scene\n */\nasync function clearLights(): Promise<API_clearLights_Return> {\n   const out = await Scene.request(\"clear-lights\", )\n   return out as API_clearLights_Return\n}\n//============================================================================\n// \"get-animation-parameters\" - Get the current state of animation-parameters\n//----------------------------------------------------------------------------\nexport type API_getAnimationParameters_Return = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\n/**\n * Get the current state of animation-parameters\n */\nasync function getAnimationParameters(): Promise<API_getAnimationParameters_Return> {\n   const out = await Scene.request(\"get-animation-parameters\", )\n   return out as API_getAnimationParameters_Return\n}\n//================================================================================\n// \"get-application-parameters\" - Get the current state of application-parameters\n//--------------------------------------------------------------------------------\nexport type API_getApplicationParameters_Return = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of application-parameters\n */\nasync function getApplicationParameters(): Promise<API_getApplicationParameters_Return> {\n   const out = await Scene.request(\"get-application-parameters\", )\n   return out as API_getApplicationParameters_Return\n}\n//================================================\n// \"get-camera\" - Get the current state of camera\n//------------------------------------------------\nexport type API_getCamera_Return = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\n/**\n * Get the current state of camera\n */\nasync function getCamera(): Promise<API_getCamera_Return> {\n   const out = await Scene.request(\"get-camera\", )\n   return out as API_getCamera_Return\n}\n//============================================================\n// \"get-camera-params\" - Get the params of the current camera\n//------------------------------------------------------------\nexport type API_getCameraParams_Return = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\n/**\n * Get the params of the current camera\n */\nasync function getCameraParams(): Promise<API_getCameraParams_Return> {\n   const out = await Scene.request(\"get-camera-params\", )\n   return out as API_getCameraParams_Return\n}\n//=========================================\n// \"get-clip-planes\" - Get all clip planes\n//-----------------------------------------\nexport type API_getClipPlanes_Return = (\n      null\n      | {\n            id: (number /* Integer */);\n            plane: [\n               number,\n               number,\n               number,\n               number\n            ];\n         })[]\n/**\n * Get all clip planes\n */\nasync function getClipPlanes(): Promise<API_getClipPlanes_Return> {\n   const out = await Scene.request(\"get-clip-planes\", )\n   return out as API_getClipPlanes_Return\n}\n//================================================================\n// \"get-environment-map\" - Get the environment map from the scene\n//----------------------------------------------------------------\nexport type API_getEnvironmentMap_Return = {\n   filename: string;\n}\n/**\n * Get the environment map from the scene\n */\nasync function getEnvironmentMap(): Promise<API_getEnvironmentMap_Return> {\n   const out = await Scene.request(\"get-environment-map\", )\n   return out as API_getEnvironmentMap_Return\n}\n//=================================\n// \"get-instances\" - Get instances\n//---------------------------------\nexport type API_getInstances_Param0 = {\n   id: (number /* Integer */);\n   result_range?: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_getInstances_Return = {\n      bounding_box?: boolean;\n      instance_id: (number /* Integer */);\n      model_id: (number /* Integer */);\n      transformation?: {\n         rotation: [\n            number,\n            number,\n            number,\n            number\n         ];\n         rotation_center?: [\n            number,\n            number,\n            number\n         ];\n         scale: [\n            number,\n            number,\n            number\n         ];\n         translation: [\n            number,\n            number,\n            number\n         ];\n      };\n      visible?: boolean;\n   }[]\n/**\n * Get instances\n */\nasync function getInstances(id, range: API_getInstances_Param0): Promise<API_getInstances_Return> {\n   const out = await Scene.request(\"get-instances\", id, range)\n   return out as API_getInstances_Return\n}\n//===============================\n// \"get-lights\" - get all lights\n//-------------------------------\nexport type API_getLights_Return = {\n      id: (number /* Integer */);\n      properties: {};\n      type: string;\n   }[]\n/**\n * get all lights\n */\nasync function getLights(): Promise<API_getLights_Return> {\n   const out = await Scene.request(\"get-lights\", )\n   return out as API_getLights_Return\n}\n//=================================\n// \"get-loaders\" - Get all loaders\n//---------------------------------\nexport type API_getLoaders_Return = {\n      extensions: string[];\n      name: string;\n      properties: {};\n   }[]\n/**\n * Get all loaders\n */\nasync function getLoaders(): Promise<API_getLoaders_Return> {\n   const out = await Scene.request(\"get-loaders\", )\n   return out as API_getLoaders_Return\n}\n//================================================================\n// \"get-model-properties\" - Get the properties of the given model\n//----------------------------------------------------------------\nexport type API_getModelProperties_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelProperties_Return = {}\n/**\n * Get the properties of the given model\n */\nasync function getModelProperties(id: API_getModelProperties_Param0): Promise<API_getModelProperties_Return> {\n   const out = await Scene.request(\"get-model-properties\", id)\n   return out as API_getModelProperties_Return\n}\n//==============================================================================\n// \"get-model-transfer-function\" - Get the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_getModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelTransferFunction_Return = {\n   colormap?: {\n      colors: [\n            number,\n            number,\n            number\n         ][];\n      name?: string;\n   };\n   opacity_curve?: [\n         number,\n         number\n      ][];\n   range?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the transfer function of the given model\n */\nasync function getModelTransferFunction(id: API_getModelTransferFunction_Param0): Promise<API_getModelTransferFunction_Return> {\n   const out = await Scene.request(\"get-model-transfer-function\", id)\n   return out as API_getModelTransferFunction_Return\n}\n//====================================================\n// \"get-renderer\" - Get the current state of renderer\n//----------------------------------------------------\nexport type API_getRenderer_Return = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\n/**\n * Get the current state of renderer\n */\nasync function getRenderer(): Promise<API_getRenderer_Return> {\n   const out = await Scene.request(\"get-renderer\", )\n   return out as API_getRenderer_Return\n}\n//================================================================\n// \"get-renderer-params\" - Get the params of the current renderer\n//----------------------------------------------------------------\nexport type API_getRendererParams_Return = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\n/**\n * Get the params of the current renderer\n */\nasync function getRendererParams(): Promise<API_getRendererParams_Return> {\n   const out = await Scene.request(\"get-renderer-params\", )\n   return out as API_getRendererParams_Return\n}\n//==============================================\n// \"get-scene\" - Get the current state of scene\n//----------------------------------------------\nexport type API_getScene_Return = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\n/**\n * Get the current state of scene\n */\nasync function getScene(): Promise<API_getScene_Return> {\n   const out = await Scene.request(\"get-scene\", )\n   return out as API_getScene_Return\n}\n//========================================================\n// \"get-statistics\" - Get the current state of statistics\n//--------------------------------------------------------\nexport type API_getStatistics_Return = {\n   fps: number;\n   scene_size_in_bytes: (number /* Integer */);\n}\n/**\n * Get the current state of statistics\n */\nasync function getStatistics(): Promise<API_getStatistics_Return> {\n   const out = await Scene.request(\"get-statistics\", )\n   return out as API_getStatistics_Return\n}\n//======================================================================\n// \"get-volume-parameters\" - Get the current state of volume-parameters\n//----------------------------------------------------------------------\nexport type API_getVolumeParameters_Return = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of volume-parameters\n */\nasync function getVolumeParameters(): Promise<API_getVolumeParameters_Return> {\n   const out = await Scene.request(\"get-volume-parameters\", )\n   return out as API_getVolumeParameters_Return\n}\n//====================================================\n// \"image-jpeg\" - Get the current state of image-jpeg\n//----------------------------------------------------\nexport type API_imageJpeg_Return = {\n   data: string;\n}\n/**\n * Get the current state of image-jpeg\n */\nasync function imageJpeg(): Promise<API_imageJpeg_Return> {\n   const out = await Scene.request(\"image-jpeg\", )\n   return out as API_imageJpeg_Return\n}\n//===============================================\n// \"inspect\" - Inspect the scene at x-y position\n//-----------------------------------------------\nexport type API_inspect_Param0 = [\n   number,\n   number\n]\nexport type API_inspect_Return = {\n   hit: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Inspect the scene at x-y position\n */\nasync function inspect(position: API_inspect_Param0): Promise<API_inspect_Return> {\n   const out = await Scene.request(\"inspect\", position)\n   return out as API_inspect_Return\n}\n//===================================================\n// \"loaders-schema\" - Get the schema for all loaders\n//---------------------------------------------------\nexport type API_loadersSchema_Return = {}[]\n/**\n * Get the schema for all loaders\n */\nasync function loadersSchema(): Promise<API_loadersSchema_Return> {\n   const out = await Scene.request(\"loaders-schema\", )\n   return out as API_loadersSchema_Return\n}\n//==================================================================\n// \"model-properties-schema\" - Get the property schema of the model\n//------------------------------------------------------------------\nexport type API_modelPropertiesSchema_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_modelPropertiesSchema_Return = string\n/**\n * Get the property schema of the model\n */\nasync function modelPropertiesSchema(id: API_modelPropertiesSchema_Param0): Promise<API_modelPropertiesSchema_Return> {\n   const out = await Scene.request(\"model-properties-schema\", id)\n   return out as API_modelPropertiesSchema_Return\n}\n//===============================\n// \"quit\" - Quit the application\n//-------------------------------\nexport type API_quit_Return = undefined\n/**\n * Quit the application\n */\nasync function quit(): Promise<API_quit_Return> {\n   const out = await Scene.request(\"quit\", )\n   return out as API_quit_Return\n}\n//===========================================================================\n// \"remove-clip-planes\" - Remove clip planes from the scene given their gids\n//---------------------------------------------------------------------------\nexport type API_removeClipPlanes_Param0 = (number /* Integer */)[]\nexport type API_removeClipPlanes_Return = boolean\n/**\n * Remove clip planes from the scene given their gids\n */\nasync function removeClipPlanes(ids: API_removeClipPlanes_Param0): Promise<API_removeClipPlanes_Return> {\n   const out = await Scene.request(\"remove-clip-planes\", ids)\n   return out as API_removeClipPlanes_Return\n}\n//================================================\n// \"remove-lights\" - Remove light given their IDs\n//------------------------------------------------\nexport type API_removeLights_Param0 = (number /* Integer */)[]\nexport type API_removeLights_Return = boolean\n/**\n * Remove light given their IDs\n */\nasync function removeLights(ids: API_removeLights_Param0): Promise<API_removeLights_Return> {\n   const out = await Scene.request(\"remove-lights\", ids)\n   return out as API_removeLights_Return\n}\n//==========================================================================\n// \"remove-model\" - Remove the model(s) with the given ID(s) from the scene\n//--------------------------------------------------------------------------\nexport type API_removeModel_Param0 = (number /* Integer */)[]\nexport type API_removeModel_Return = boolean\n/**\n * Remove the model(s) with the given ID(s) from the scene\n */\nasync function removeModel(ids: API_removeModel_Param0): Promise<API_removeModel_Return> {\n   const out = await Scene.request(\"remove-model\", ids)\n   return out as API_removeModel_Return\n}\n//==============================================================================================================================================\n// \"request-model-upload\" - Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n//----------------------------------------------------------------------------------------------------------------------------------------------\nexport type API_requestModelUpload_Param0 = {\n   bounding_box?: boolean;\n   chunks_id: string;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   size: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   type: string;\n   visible?: boolean;\n}\nexport type API_requestModelUpload_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n */\nasync function requestModelUpload(param: API_requestModelUpload_Param0): Promise<API_requestModelUpload_Return> {\n   const out = await Scene.request(\"request-model-upload\", param)\n   return out as API_requestModelUpload_Return\n}\n//==========================================================\n// \"reset-camera\" - Resets the camera to its initial values\n//----------------------------------------------------------\nexport type API_resetCamera_Return = undefined\n/**\n * Resets the camera to its initial values\n */\nasync function resetCamera(): Promise<API_resetCamera_Return> {\n   const out = await Scene.request(\"reset-camera\", )\n   return out as API_resetCamera_Return\n}\n//=================================================\n// \"schema\" - Get the schema of the given endpoint\n//-------------------------------------------------\nexport type API_schema_Param0 = {\n   endpoint: string;\n}\nexport type API_schema_Return = string\n/**\n * Get the schema of the given endpoint\n */\nasync function schema(endpoint: API_schema_Param0): Promise<API_schema_Return> {\n   const out = await Scene.request(\"schema\", endpoint)\n   return out as API_schema_Return\n}\n//========================================================================\n// \"set-animation-parameters\" - Set the new state of animation-parameters\n//------------------------------------------------------------------------\nexport type API_setAnimationParameters_Param0 = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\nexport type API_setAnimationParameters_Return = boolean\n/**\n * Set the new state of animation-parameters\n */\nasync function setAnimationParameters(param: API_setAnimationParameters_Param0): Promise<API_setAnimationParameters_Return> {\n   const out = await Scene.request(\"set-animation-parameters\", param)\n   return out as API_setAnimationParameters_Return\n}\n//============================================================================\n// \"set-application-parameters\" - Set the new state of application-parameters\n//----------------------------------------------------------------------------\nexport type API_setApplicationParameters_Param0 = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\nexport type API_setApplicationParameters_Return = boolean\n/**\n * Set the new state of application-parameters\n */\nasync function setApplicationParameters(param: API_setApplicationParameters_Param0): Promise<API_setApplicationParameters_Return> {\n   const out = await Scene.request(\"set-application-parameters\", param)\n   return out as API_setApplicationParameters_Return\n}\n//============================================\n// \"set-camera\" - Set the new state of camera\n//--------------------------------------------\nexport type API_setCamera_Param0 = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\nexport type API_setCamera_Return = boolean\n/**\n * Set the new state of camera\n */\nasync function setCamera(param: API_setCamera_Param0): Promise<API_setCamera_Return> {\n   const out = await Scene.request(\"set-camera\", param)\n   return out as API_setCamera_Return\n}\n//============================================================\n// \"set-camera-params\" - Set the params on the current camera\n//------------------------------------------------------------\nexport type API_setCameraParams_Param0 = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\nexport type API_setCameraParams_Return = boolean\n/**\n * Set the params on the current camera\n */\nasync function setCameraParams(input0: API_setCameraParams_Param0): Promise<API_setCameraParams_Return> {\n   const out = await Scene.request(\"set-camera-params\", input0)\n   return out as API_setCameraParams_Return\n}\n//============================================================\n// \"set-environment-map\" - Set a environment map in the scene\n//------------------------------------------------------------\nexport type API_setEnvironmentMap_Param0 = {\n   filename: string;\n}\nexport type API_setEnvironmentMap_Return = boolean\n/**\n * Set a environment map in the scene\n */\nasync function setEnvironmentMap(filename: API_setEnvironmentMap_Param0): Promise<API_setEnvironmentMap_Return> {\n   const out = await Scene.request(\"set-environment-map\", filename)\n   return out as API_setEnvironmentMap_Return\n}\n//================================================================\n// \"set-model-properties\" - Set the properties of the given model\n//----------------------------------------------------------------\nexport type API_setModelProperties_Param0 = {\n   id: (number /* Integer */);\n   properties: {};\n}\nexport type API_setModelProperties_Return = boolean\n/**\n * Set the properties of the given model\n */\nasync function setModelProperties(param: API_setModelProperties_Param0): Promise<API_setModelProperties_Return> {\n   const out = await Scene.request(\"set-model-properties\", param)\n   return out as API_setModelProperties_Return\n}\n//==============================================================================\n// \"set-model-transfer-function\" - Set the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_setModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n   transfer_function: {\n      colormap?: {\n         colors: [\n               number,\n               number,\n               number\n            ][];\n         name?: string;\n      };\n      opacity_curve?: [\n            number,\n            number\n         ][];\n      range?: [\n         number,\n         number\n      ];\n   };\n}\nexport type API_setModelTransferFunction_Return = boolean\n/**\n * Set the transfer function of the given model\n */\nasync function setModelTransferFunction(param: API_setModelTransferFunction_Param0): Promise<API_setModelTransferFunction_Return> {\n   const out = await Scene.request(\"set-model-transfer-function\", param)\n   return out as API_setModelTransferFunction_Return\n}\n//================================================\n// \"set-renderer\" - Set the new state of renderer\n//------------------------------------------------\nexport type API_setRenderer_Param0 = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\nexport type API_setRenderer_Return = boolean\n/**\n * Set the new state of renderer\n */\nasync function setRenderer(param: API_setRenderer_Param0): Promise<API_setRenderer_Return> {\n   const out = await Scene.request(\"set-renderer\", param)\n   return out as API_setRenderer_Return\n}\n//================================================================\n// \"set-renderer-params\" - Set the params on the current renderer\n//----------------------------------------------------------------\nexport type API_setRendererParams_Param0 = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\nexport type API_setRendererParams_Return = boolean\n/**\n * Set the params on the current renderer\n */\nasync function setRendererParams(input0: API_setRendererParams_Param0): Promise<API_setRendererParams_Return> {\n   const out = await Scene.request(\"set-renderer-params\", input0)\n   return out as API_setRendererParams_Return\n}\n//==========================================\n// \"set-scene\" - Set the new state of scene\n//------------------------------------------\nexport type API_setScene_Param0 = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\nexport type API_setScene_Return = boolean\n/**\n * Set the new state of scene\n */\nasync function setScene(param: API_setScene_Param0): Promise<API_setScene_Return> {\n   const out = await Scene.request(\"set-scene\", param)\n   return out as API_setScene_Return\n}\n//==================================================================\n// \"set-volume-parameters\" - Set the new state of volume-parameters\n//------------------------------------------------------------------\nexport type API_setVolumeParameters_Param0 = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_setVolumeParameters_Return = boolean\n/**\n * Set the new state of volume-parameters\n */\nasync function setVolumeParameters(param: API_setVolumeParameters_Param0): Promise<API_setVolumeParameters_Return> {\n   const out = await Scene.request(\"set-volume-parameters\", param)\n   return out as API_setVolumeParameters_Return\n}\n//==================================================\n// \"snapshot\" - Make a snapshot of the current view\n//--------------------------------------------------\nexport type API_snapshot_Param0 = {\n   animation_parameters?: (\n      null\n      | {\n            current?: (number /* Integer */);\n            delta?: (number /* Integer */);\n            dt?: number;\n            frame_count?: (number /* Integer */);\n            playing?: boolean;\n            unit?: string;\n         });\n   camera?: (\n      null\n      | {\n            current?: string;\n            orientation?: [\n               number,\n               number,\n               number,\n               number\n            ];\n            position?: [\n               number,\n               number,\n               number\n            ];\n            target?: [\n               number,\n               number,\n               number\n            ];\n            types?: string[];\n         });\n   format: string;\n   name?: string;\n   quality?: (number /* Integer */);\n   renderer?: (\n      null\n      | {\n            accumulation?: boolean;\n            background_color?: [\n               number,\n               number,\n               number\n            ];\n            current?: string;\n            head_light?: boolean;\n            max_accum_frames?: (number /* Integer */);\n            samples_per_pixel?: (number /* Integer */);\n            subsampling?: (number /* Integer */);\n            types?: string[];\n            variance_threshold?: number;\n         });\n   samples_per_pixel?: (number /* Integer */);\n   size: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_snapshot_Return = {\n   data: string;\n}\n/**\n * Make a snapshot of the current view\n */\nasync function snapshot(settings: API_snapshot_Param0): Promise<API_snapshot_Return> {\n   const out = await Scene.request(\"snapshot\", settings)\n   return out as API_snapshot_Return\n}\n//=======================================================================\n// \"update-clip-plane\" - Update a clip plane with the given coefficients\n//-----------------------------------------------------------------------\nexport type API_updateClipPlane_Param0 = {\n   id: (number /* Integer */);\n   plane: [\n      number,\n      number,\n      number,\n      number\n   ];\n}\nexport type API_updateClipPlane_Return = boolean\n/**\n * Update a clip plane with the given coefficients\n */\nasync function updateClipPlane(clip_plane: API_updateClipPlane_Param0): Promise<API_updateClipPlane_Return> {\n   const out = await Scene.request(\"update-clip-plane\", clip_plane)\n   return out as API_updateClipPlane_Return\n}\n//===============================================================\n// \"update-instance\" - Update the instance with the given values\n//---------------------------------------------------------------\nexport type API_updateInstance_Param0 = {\n   bounding_box?: boolean;\n   instance_id: (number /* Integer */);\n   model_id: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateInstance_Return = boolean\n/**\n * Update the instance with the given values\n */\nasync function updateInstance(model_instance: API_updateInstance_Param0): Promise<API_updateInstance_Return> {\n   const out = await Scene.request(\"update-instance\", model_instance)\n   return out as API_updateInstance_Return\n}\n//=========================================================\n// \"update-model\" - Update the model with the given values\n//---------------------------------------------------------\nexport type API_updateModel_Param0 = {\n   bounding_box?: boolean;\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   id: (number /* Integer */);\n   metadata?: {};\n   name?: string;\n   path?: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateModel_Return = boolean\n/**\n * Update the model with the given values\n */\nasync function updateModel(model: API_updateModel_Param0): Promise<API_updateModel_Return> {\n   const out = await Scene.request(\"update-model\", model)\n   return out as API_updateModel_Return\n}\n","import { Client as BraynsClient } from \"brayns\"\n\nimport Scene from './scene'\nimport State from '../state'\n\nimport { IModel, IVector } from '../types'\n\n\nexport default class Model {\n    constructor(private params: IModel) {}\n\n    async locate(position: IVector): Promise<boolean> {\n        this.params.transformation.translation = position;\n        return await this.applyTransfo();\n    }\n\n    /**\n     * Remove this model from the Scene.\n     */\n    async remove() {\n        return await Scene.request(\"remove-model\", [this.params.id]);\n    }\n\n    /**\n     * When a model is selected, we show its boundingBox.\n     */\n    get seleted(): boolean {\n        return this.params.$selected;\n    }\n\n    async setSelected(selected: boolean) {\n        this.params.$selected = selected;\n        this.params.boundingBox = selected;\n        await Scene.request('update-model', {\n            id: this.params.id,\n            boundingBox: selected\n        });\n        this.updateState();\n    }\n\n    get visible(): boolean {\n        return this.params.visible;\n    }\n\n    async show() {\n        await Scene.request('update-model', {\n            id: this.params.id,\n            visible: true\n        });\n        this.params.visible = true;\n        this.updateState();\n    }\n\n    async hide() {\n        await Scene.request('update-model', {\n            id: this.params.id,\n            visible: false\n        });\n        this.params.visible = false;\n        this.updateState();\n    }\n\n    /**\n     * Make to camera to look at this model.\n     */\n    async focus(): Promise<boolean> {\n        const scene = await Scene.request('get-scene');\n        const model = scene.models.find( (m: any) => m.id === this.params.id );\n        if (!model) return false;\n        await Scene.camera.lookAtBounds(model.bounds);\n        return true;\n    }\n\n    private applyTransfo() {\n        return new Promise<boolean>((resolve, reject) => {\n            const requester = Scene.request(\n                \"update-model\", {\n                    id: this.params.id,\n                    transformation: this.params.transformation\n                });\n            requester.then(resolve, reject);\n        })\n    }\n\n    private updateState() {\n        State.dispatch(State.Models.update(this.params));\n    }\n}\n","import { IVector, IQuaternion } from '../types'\n\nexport default {\n    addVectors,\n    makeQuaternionAsAxisRotation,\n    multiplyQuaternions,\n    normalize,\n    plane6to4,\n    rotateWithQuaternion,\n    scalarProduct,\n    scale,\n    vectorFromPoints\n}\n\n\nfunction addVectors(a: IVector, b: IVector): IVector {\n    return [\n        b[0] + a[0],\n        b[1] + a[1],\n        b[2] + a[2]\n    ];\n}\n\n\nfunction makeQuaternionAsAxisRotation(angle: number, axis: IVector): IQuaternion {\n    const halfAngle = angle * 0.5;\n    const c = Math.cos(halfAngle);\n    const s = Math.sin(halfAngle);\n    const [x, y, z] = axis;\n    return [ x * s, y * s, z * s, c ] as IQuaternion;\n}\n\n\nfunction multiplyQuaternions(q: IQuaternion, r: IQuaternion): IQuaternion {\n    const [q1, q2, q3, q0] = q;\n    const [r1, r2, r3, r0] = r;\n    return [\n        r0*q1 + r1*q0 - r2*q3 + r3*q2,\n        r0*q2 + r1*q3 + r2*q0 - r3*q1,\n        r0*q3 - r1*q2 + r2*q1 + r3*q0,\n        r0*q0 - r1*q1 - r2*q2 - r3*q3\n    ];\n}\n\n\nfunction normalize(vector: IVector): IVector {\n    const [x,y,z] = vector;\n    const len2 = x*x + y*y + z*z;\n    if (len2 < 0.000000001) return [0,0,0];\n    const f = 1 / Math.sqrt(len2);\n    return [x*f, y*f, z*f];\n}\n\n\n/**\n * A plan can be defined by a point and a normal.\n * This representation takes 6 floats.\n * You can also use a normal and a signed distance from the center,\n * which takes only 4 floats. This is how Brayns represent clipping planes.\n */\nfunction plane6to4(point: IVector, normal: IVector): [number, number, number, number] {\n  const d = scalarProduct(point, normal);\n  return [...normal, d];\n}\n\n\nfunction scalarProduct(v1: IVector, v2: IVector): number {\n    const [x1, y1, z1] = v1;\n    const [x2, y2, z2] = v2;\n    return x1*x2 + y1*y2 + z1*z2;\n}\n\n\nfunction rotateWithQuaternion(point: IVector, quaternion: IQuaternion): IVector {\n    const Q = quaternion;\n    const [x, y, z] = point;\n    const [qx, qy, qz, qw] = Q;\n    const invQ: IQuaternion = [-qx, -qy, -qz, qw];\n    const P: IQuaternion = [x, y, z, 0];\n\n    const R = multiplyQuaternions(\n        Q, multiplyQuaternions(P, invQ)\n    )\n    return [R[0], R[1], R[2]];\n}\n\n\n/**\n * Multiply all coords by a scalar factor.\n */\nfunction scale(vector: IVector, factor: number): IVector {\n    return vector.map((n: number) => n * factor) as IVector;\n}\n\n\nfunction vectorFromPoints(a: IVector, b: IVector): IVector {\n    return [\n        b[0] - a[0],\n        b[1] - a[1],\n        b[2] - a[2]\n    ];\n}\n","import { IBounds, IModel, IBraynsModel } from './types'\n\nexport default {\n    createModelFromBraynsData,\n    getModelsBounds\n}\n\n\n/**\n * web-brayns models have more data than Brayns one.\n * This function will enrich data from Brayns to met our needs.\n */\nfunction createModelFromBraynsData(model: IBraynsModel): IModel {\n    return {\n        brayns: Object.assign({}, model),\n        parent: 0,\n        deleted: false,\n        selected: false\n    }\n}\n\n\n/**\n * Compute the bounds of deveral models.\n */\nfunction getModelsBounds(models: IModel[]): IBounds {\n    const point: IBounds = { min: [0,0,0], max: [0,0,0] }\n    if (models.length === 0) return point;\n    const bounds = models[0].brayns.bounds || point;\n\n    for( let i=1; i<models.length; i++ ) {\n        const model = models[i];\n        if (!model.brayns.visible) continue;\n        const b = model.brayns.bounds || point;\n        bounds.min[0] = Math.min(bounds.min[0], b.min[0]);\n        bounds.min[1] = Math.min(bounds.min[0], b.min[1]);\n        bounds.min[2] = Math.min(bounds.min[0], b.min[2]);\n        bounds.max[0] = Math.max(bounds.max[0], b.max[0]);\n        bounds.max[1] = Math.max(bounds.max[0], b.max[1]);\n        bounds.max[2] = Math.max(bounds.max[0], b.max[2]);\n    }\n    return bounds;\n}\n","/**\n * Everything related to Camera.\n */\n\nimport { BoundingBox } from \"brayns\"\nimport { ICamera, IVector, IQuaternion, IAxis } from '../types'\nimport Scene from './scene'\nimport Geom from '../geometry'\nimport Models from '../models'\nimport State from '../state'\n\n\n export default class Camera {\n     constructor(private params: ICamera) {}\n\n     private async applyCamera(): Promise<boolean> {\n         const { orientation, position, target } = this.params;\n         await Scene.request('set-camera', {\n             orientation, position, target\n         });\n         return true;\n     }\n\n     get position(): IVector {\n         return this.params.position.slice() as IVector;\n     }\n\n     setPosition(position: IVector) {\n         this.params.position = position;\n         this.applyCamera();\n     }\n\n     get orientation(): IQuaternion {\n         return this.params.orientation.slice() as IQuaternion;\n     }\n\n     setOrientation(orientation: IQuaternion) {\n         this.params.orientation = orientation;\n         this.applyCamera();\n     }\n\n     setPositionAndOrientation(position: IVector, orientation: IQuaternion) {\n         this.params.position = position;\n         this.params.orientation = orientation;\n         this.applyCamera();\n     }\n\n     get axis(): IAxis {\n         const [b, c, d, a] = this.orientation;\n         const aa = a*a;\n         const bb = b*b;\n         const cc = c*c;\n         const dd = d*d;\n         const ab2 = 2*a*b;\n         const ac2 = 2*a*c;\n         const ad2 = 2*a*d;\n         const bc2 = 2*b*c;\n         const bd2 = 2*b*d;\n         const cd2 = 2*c*d;\n         return {\n             x: [\n                 aa + bb + cc + dd,\n                 ad2 + bc2,\n                 bd2 - ac2\n             ],\n             y:[\n                 bc2 - ad2,\n                 aa - bb + cc - dd,\n                 ab2 + cd2\n             ],\n             z:[\n                 ac2 + bd2,\n                 cd2 - ab2,\n                 aa - bb - cc + dd\n             ]\n         }\n     }\n\n     get target(): IVector {\n         return this.params.target.slice() as IVector;\n     }\n\n     async setTarget(target: IVector) {\n         const direction = this.direction;\n         const distance = Geom.scalarProduct(\n             Geom.vectorFromPoints(this.params.position, target),\n             direction\n         );\n         this.params.position = Geom.addVectors(\n             target,\n             Geom.scale(direction, -distance)\n         );\n         this.params.target = target;\n         return await this.applyCamera();\n     }\n\n     async getCloser(target: IVector, distanceFactor: number) {\n         const direction = this.direction;\n         const distance = Geom.scalarProduct(\n             Geom.vectorFromPoints(this.params.position, target),\n             direction\n         ) * distanceFactor;\n         this.params.position = Geom.addVectors(\n             target,\n             Geom.scale(direction, -distance)\n         );\n         this.params.target = target;\n         return await this.applyCamera();\n     }\n\n     getTargetDistance(): number {\n         const vectorZ = this.axis.z;\n         // Warning! the camera's Z axis is turning its back to the target.\n         return Geom.scalarProduct(\n             vectorZ,\n             Geom.vectorFromPoints(\n                 this.params.target,\n                 this.params.position\n             )\n         )\n     }\n\n     /**\n      * Normalized vector giving the direction of sight.\n      */\n     get direction(): IVector {\n         const { position, target } = this.params;\n         return Geom.normalize(Geom.vectorFromPoints(position, target));\n     }\n\n     async moveForward(dist: number) {\n         const dir = this.direction;\n         const { position, target } = this.params;\n         this.params.position = [\n             position[0] + dir[0] * dist,\n             position[1] + dir[1] * dist,\n             position[2] + dir[2] * dist\n         ];\n         this.params.target = [\n             target[0] + dir[0] * dist,\n             target[1] + dir[1] * dist,\n             target[2] + dir[2] * dist\n         ];\n         await this.applyCamera();\n     }\n\n     async moveBackward(dist: number) {\n         const dir = this.direction;\n         const { position, target } = this.params;\n         this.params.position = [\n             position[0] - dir[0] * dist,\n             position[1] - dir[1] * dist,\n             position[2] - dir[2] * dist\n         ];\n         this.params.target = [\n             target[0] - dir[0] * dist,\n             target[1] - dir[1] * dist,\n             target[2] - dir[2] * dist\n         ];\n         await this.applyCamera();\n     }\n\n     async lookAtWholeScene() {\n         const bounds = Models.getModelsBounds(\n           State.store.getState().models.map(m => (\n             {\n                 brayns: m\n             }\n         )))\n         await this.lookAtBounds(bounds);\n     }\n\n     async lookAtBounds(bounds: BoundingBox) {\n         const minX = bounds.min[0];\n         const minY = bounds.min[1];\n         const minZ = bounds.min[2];\n         const maxX = bounds.max[0];\n         const maxY = bounds.max[1];\n         const maxZ = bounds.max[2];\n         const centerX = (minX + maxX) / 2;\n         const centerY = (minY + maxY) / 2;\n         const centerZ = (minZ + maxZ) / 2;\n         const width = maxX - minX;\n         const height = maxY - minY;\n         const cameraZ = maxZ +Math.max(width + height) * 0.5;\n\n         this.params.orientation = [0,0,0,1];\n         this.params.position = [centerX, centerY, cameraZ];\n         this.params.target = [centerX, centerY, centerZ];\n         await this.applyCamera();\n     }\n }\n","import { Client as BraynsClient, IMAGE_JPEG } from \"brayns\"\n\nexport default class Renderer {\n    private _canvas: HTMLCanvasElement | null = null;\n    private ctx: CanvasRenderingContext2D | null = null;\n    private blob: Blob | null = null;\n    private blobIndex: number = 0;\n    private lastRederedBlobIndex: number = 0;\n\n    init(brayns: BraynsClient) {\n        brayns\n            .observe(\"image-jpeg\")\n            .subscribe((blob: Blob) => {\n                this.blob = blob;\n                this.blobIndex++;\n            });\n        requestAnimationFrame(this.paint);\n    }\n\n    get canvas() { return this._canvas; }\n    set canvas(canvas: HTMLCanvasElement | null) {\n        this._canvas = canvas;\n        if (!canvas) return;\n        this.ctx = canvas.getContext(\"2d\");\n    }\n\n    paint = async () => {\n        try {\n            // Did we already rendered this blob?\n            if (this.lastRederedBlobIndex === this.blobIndex) return;\n            const blob = this.blob;\n            if (!blob) return;\n            const canvas = this.canvas;\n            if (!canvas) return;\n            const ctx = this.ctx;\n            if (!ctx) return;\n            const img = await blobToImg(blob);\n            const srcW = img.naturalWidth;\n            const srcH = img.naturalHeight;\n            const dstW = canvas.width;\n            const dstH = canvas.height;\n            const dstX = (dstW - srcW) / 2;\n            const dstY = (dstH - srcH) / 2;\n            ctx.drawImage(\n                img,\n                dstX, dstY,\n                srcW, srcH\n            );\n            this.lastRederedBlobIndex = this.blobIndex;\n        }\n        finally {\n            requestAnimationFrame(this.paint);\n        }\n    }\n}\n\n\nfunction blobToImg(blob: Blob) {\n    const url = URL.createObjectURL(blob);\n    const img: any = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.src = url;\n        // https://medium.com/dailyjs/image-loading-with-image-decode-b03652e7d2d2\n        if (img.decode) {\n            img.decode()\n                // TODO: Figure out why decode() throws DOMException\n                .then(() => resolve(img));\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","type Action = (...args: any[]) => void;\r\n\r\n/**\r\n * The function to call as much as you want. It will perform the debouce for you.\r\n * Put in the same args as the `action` function.\r\n *\r\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\r\n * less than `delay` ms between them.\r\n * * delay - Number of milliseconds.\r\n */\r\nexport default function (action: Action, delay: number): Action {\r\n    let timer: number = 0;\r\n\r\n    return function(this: { delay: number }, ...args: any[]) {\r\n        if (timer) window.clearTimeout(timer);\r\n        timer = window.setTimeout(() => {\r\n            timer = 0;\r\n            action(...args);\r\n        }, delay) as number;\r\n    }\r\n}\r\n","import Scene from './scene'\nimport Geometry from '../geometry'\nimport Debouncer from '../../tfw/debouncer'\n\nimport { IVector, IQuaternion, IAxis, IScreenPoint, IPanningEvent } from '../types'\n\n\nexport default class GesturesHandler {\n    private savedTarget: IVector = [0,0,0];\n    private savedPosition: IVector = [0,0,0];\n    private savedOrientation: IQuaternion = [0,0,0,0];\n    private savedAxis: IAxis = {\n        x: [0,0,0], y: [0,0,0], z: [0,0,0]\n    };\n    private savedScreenPoint: IScreenPoint = { screenX: 0, screenY: 0 };\n    private savedTargetDistance: number = 0;\n\n    /**\n     * When panning starts, we should memorize the current Scene.camera/model rot/sca/loc params.\n     */\n    handlePanStart = (evt: IPanningEvent) => {\n        console.info(\"evt=\", evt);\n        const axis = Scene.camera.axis;\n        this.savedTarget = Scene.camera.target;\n        this.savedPosition = Scene.camera.position;\n        this.savedOrientation = Scene.camera.orientation;\n        this.savedAxis = axis;\n        this.savedScreenPoint = {\n            screenX: evt.screenX,\n            screenY: evt.screenY,\n            aspect: evt.aspect\n        };\n        this.savedTargetDistance = Scene.camera.getTargetDistance();\n    }\n\n    handlePan = Debouncer((evt: IPanningEvent) => {\n        if (evt.button === 4) this.translateCamera(evt);\n        else if (evt.button === 1) this.orbitCamera(evt);\n        else this.rotateCamera(evt);\n    }, 10)\n\n    private translateCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldTranslation = this.savedPosition.slice() as IVector;\n        const factor = Scene.camera.getTargetDistance() * 1.0;\n        const newTranslation = Geometry.addVectors(\n            oldTranslation,\n            Geometry.addVectors(\n                Geometry.scale(axis.x, factor * x * evt.aspect),\n                Geometry.scale(axis.y, factor * y),\n            )\n        );\n        Scene.camera.setPosition(newTranslation);\n    }\n\n    private orbitCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldOrientation = this.savedOrientation.slice() as IQuaternion;\n        const angleX = -Math.PI * y;\n        const angleY = 2 * Math.PI * x;\n        const quaternionX = Geometry.makeQuaternionAsAxisRotation(angleX, axis.x);\n        const quaternionY = Geometry.makeQuaternionAsAxisRotation(angleY, axis.y);\n        const quaternionXY = Geometry.multiplyQuaternions(quaternionX, quaternionY);\n        const newOrientation = Geometry.multiplyQuaternions(quaternionXY, oldOrientation);\n\n        const positionVector = Geometry.vectorFromPoints(\n            this.savedTarget,\n            this.savedPosition\n        );\n        const rotatedPositionVector = Geometry.rotateWithQuaternion(\n            positionVector,\n            quaternionXY\n        );\n        const newPosition = Geometry.addVectors(this.savedTarget, rotatedPositionVector);\n\n        Scene.camera.setPositionAndOrientation(newPosition, newOrientation);\n        //Scene.camera.setPosition(newPosition);\n    }\n\n    private rotateCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldOrientation = this.savedOrientation.slice() as IQuaternion;\n        const angleX = 2 * Math.PI * y;\n        const angleY = -2 * Math.PI * x;\n        const quaternionX = Geometry.makeQuaternionAsAxisRotation(angleX, axis.x);\n        const quaternionY = Geometry.makeQuaternionAsAxisRotation(angleY, axis.y);\n        const quaternionXY = Geometry.multiplyQuaternions(quaternionX, quaternionY);\n        const newOrientation = Geometry.multiplyQuaternions(quaternionXY, oldOrientation);\n        Scene.camera.setOrientation(newOrientation);\n    }\n}\n","/**\n * There is only one scene in Brayns.\n */\nimport { Client as BraynsClient } from \"brayns\"\n\nimport Api from \"./api\"\nimport { IModel } from '../types'\nimport State from '../state'\nimport ServiceHost from '../service/host'\nimport Model from './model'\nimport Camera from './camera'\nimport Renderer from './renderer'\nimport GesturesHandler from './gestures-handler'\n\n// Brayns' client.\nconst Scene: {\n    brayns: (BraynsClient | null),\n    camera: (Camera | null),\n    renderer: Renderer,\n    gestures: GesturesHandler\n} = {\n    brayns: null,\n    camera: null,\n    renderer: new Renderer(),\n    gestures: new GesturesHandler()\n}\n\nexport default {\n    Api,\n    clear,\n    connect,\n    loadMeshFromPath,\n    request,\n    setViewPort,\n    get brayns() { return Scene.brayns; },\n    get camera(): Camera { return Scene.camera || new Camera({}); },\n    get renderer(): Renderer { return Scene.renderer },\n    get gestures(): GesturesHandler { return Scene.gestures }\n }\n\n/**\n * Try to connect to a Brayns service and fails if it takes too long.\n */\nasync function connect(hostName: string): Promise<BraynsClient> {\n    Scene.brayns = await ServiceHost.connect(hostName);\n    console.info(\"Scene.brayns=\", Scene.brayns);\n    const cameraParams = await request('get-camera-params');\n    Scene.camera = new Camera(cameraParams);\n    Scene.renderer.init(Scene.brayns);\n    const animation = await Api.getAnimationParameters();\n    console.info(\"animation=\", animation);\n    State.dispatch(State.Animation.update(animation));\n\n    Scene.brayns\n        .observe(\"set-animation-parameters\")\n        .subscribe((params: any) => {\n            console.info(\"[ANIM] params=\", params);\n        });\n\n    return Scene.brayns;\n}\n\nasync function request(method: string, params: {} = {}) {\n    console.info(\"request(\", method, params, \")\");\n\n    return new Promise((resolve, reject) => {\n        if (!Scene.brayns) {\n            console.error(\"No BraynsService!\");\n            reject();\n            return;\n        }\n        const loader = Scene.brayns.request(method, params);\n        loader.then((output: any) => {\n            console.info(\"request(\", method, \") => \", output);\n            resolve(output)\n        }, reject);\n    })\n}\n\n/**\n * Remove everything from the scene.\n */\nasync function clear(): Promise<boolean> {\n    const scene: any = await request('get-scene');\n    if (!scene) return false;\n    const models = scene.models;\n    if (!models) return false;\n    const ids = models.map( (model: any) => model.id );\n    await request(\"remove-model\", ids);\n\n    const rendererParams: any = await request(\"get-renderer-params\", {});\n    if (rendererParams) {\n        // A bit brighter.\n        rendererParams.pixelAlpha = 1.7;\n        rendererParams.shadows = 1;\n        rendererParams.softShadows = 0.9;\n        await request(\"set-renderer-params\", rendererParams);\n    }\n\n    await request('set-renderer', {\n        accumulation: true,\n        backgroundColor: [.2,.1,0],\n        current: \"advanced_simulation\",\n        headLight: true,\n        maxAccumFrames: 1000,\n        samplesPerPixel: 1,\n        subsampling: 1\n    });\n\n    await request(\"set-environment-map\", {\n        filename: \"/gpfs/bbp.cscs.ch/project/proj3/resources/envmap/space.jpg\"\n    });\n\n    return true;\n}\n\nasync function setViewPort(width: number, height: number) {\n    //Scene.brayns.set_application_parameters(viewport=[800,600])\n    return await request(\"set-application-parameters\", {\n        viewport: [width, height]\n    });\n}\n\nasync function loadMeshFromPath(path: string): Promise<Model> {\n    const result = await request(\"add-model\", { path });\n    const model: IModel = result as IModel;\n    State.dispatch(State.Models.add(model));\n    return new Model(model);\n}\n","import SaveAsFile from 'save-as-file'\n\nimport Scene from '../scene'\nimport { API_snapshot_Param0 } from '../scene/api'\nimport State from '../state'\nimport { ISnapshot } from '../types'\n\n\nexport default {\n    async getCanvas(options: ISnapshot): Promise<HTMLCanvasElement> {\n        const params: API_snapshot_Param0 = {\n            animation_parameters: State.store.getState().animation,\n            samples_per_pixel: options.samples,\n            size: [options.width, options.height],\n            format: \"JPEG\",\n            camera: {\n                position: Scene.camera.position,\n                orientation: Scene.camera.orientation,\n                target: Scene.camera.target\n            }\n        }\n        console.info(\"params=\", params);\n        const snapshot = await Scene.Api.snapshot(params);\n        const dataURI = `data:;base64,${snapshot.data}`\n        return new Promise( (resolve, reject) => {\n            const img = new Image();\n            img.onload = () => {\n                const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n                canvas.width = img.width;\n                canvas.height = img.height;\n                const ctx = canvas.getContext(\"2d\");\n                if (!ctx) {\n                    reject();\n                    return;\n                }\n                ctx.drawImage(img, 0, 0);\n                resolve(canvas);\n            }\n            img.onerror = reject;\n            img.src = dataURI;\n        })\n    },\n\n    async saveCanvasToFile(canvas: HTMLCanvasElement,\n                           filename: string,\n                           mimetype: string = \"image/jpeg\") {\n        canvas.toBlob(async (blob) => {\n            if (!blob) return;\n            const result = await SaveAsFile(blob, filename);\n            console.info(\"result=\", result);\n        }, mimetype, 100);\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../types\"\nimport State from \"../../state\"\nimport { default as snapshotView, RESOLUTIONS, SAMPLINGS } from \"./snapshot\"\n\nexport { RESOLUTIONS, SAMPLINGS } from './snapshot'\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        filename: state.dialogs.snapshot.filename,\n        sizeKey: state.dialogs.snapshot.sizeKey,\n        width: state.dialogs.snapshot.width,\n        height: state.dialogs.snapshot.height,\n        samplesKey: state.dialogs.snapshot.samplesKey,\n        samples: state.dialogs.snapshot.samples\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onFilenameChange(filename: string) {\n            dispatch(State.Dialogs.updateSnapshot({ filename }))\n        },\n\n        onSizeKeyChange(sizeKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ sizeKey }))\n            const res = RESOLUTIONS[sizeKey];\n            if (!res) return;\n            const [width, height] = res;\n            dispatch(State.Dialogs.updateSnapshot({ width, height }))\n        },\n\n        onWidthChange(width: number) {\n            dispatch(State.Dialogs.updateSnapshot({ width }))\n        },\n\n        onheightChange(height: number) {\n            dispatch(State.Dialogs.updateSnapshot({ height }))\n        },\n\n        onSamplesKeyChange(samplesKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ samplesKey }))\n            const samples = SAMPLINGS[samplesKey];\n            if (!samples) return;\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        },\n\n        onSamplesChange(samples: number) {\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(snapshotView);\n","import React from \"react\"\nimport { Provider } from 'react-redux'\n\nimport Dialog from '../../tfw/factory/dialog'\nimport { ISnapshot } from '../types'\nimport State from '../state'\nimport Snapshot from '../view/snapshot/snapshot.container'\n\nexport default {\n    async show(): Promise<ISnapshot | null> {\n        console.log('SHOW');\n        const answer = await Dialog.confirm(\n            \"Take snapshot\",\n            <Provider store={State.store}><Snapshot/></Provider>);\n        if (!answer) return null;\n        return State.store.getState().dialogs.snapshot;\n    }\n}\n","export default function castDouble(v: any, defVal = 0): number {\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return v;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return num;\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Gesture from '../../gesture'\nimport Label from '../label'\nimport castInteger from \"../../converter/integer\"\nimport castString from \"../../converter/string\"\nimport castFloat from \"../../converter/double\"\n\nimport \"./slider.css\"\n\ninterface ISliderProps {\n    value: number,\n    label?: string,\n    text?: string,\n    step?: number,\n    min?: number,\n    max?: number,\n    onChange: (value: number) => void\n}\n\nexport default class Slider extends React.Component<ISliderProps, {}> {\n    private readonly ref: React.RefObject<HTMLDivElement> = React.createRef();\n\n    handleTapOrMove = (evt: any) => {\n        const div = this.ref.current;\n        if (!div) return;\n        const rect = div.getBoundingClientRect();\n        const percent = clamp(evt.x / rect.width);\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const value = this.constrainValue(\n            min + (max - min) * percent, min, max, step\n        );\n        console.info(\"evt, rect, value, percent=\", evt, rect, value, percent);\n        p.onChange(value);\n    }\n\n    componentDidMount() {\n        const div = this.ref.current;\n        if (!div) return;\n        Gesture(div).on({\n            tap: this.handleTapOrMove,\n            pan: this.handleTapOrMove\n        })\n    }\n\n    render() {\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const label = castString(p.label, '');\n        const value = this.constrainValue(p.value, min, max, step);\n        const text = castString(p.text, `${value}`);\n\n        return (<div className=\"tfw-view-Slider\"\n                     ref={this.ref}>\n            <Label label={label}/>\n            <div className=\"thm-ele-button thm-bgPD\">\n                <div className=\"thm-ele-nav thm-bgPL thm-fg\"\n                     style={{\n                         marginLeft: `calc(${100 * (value - min) / (max - min)}% - 16px)`\n                     }}>{text}</div>\n            </div>\n        </div>)\n    }\n\n    private constrainValue(value: number, min: number, max: number, step: number) {\n        let v = Math.max(min, Math.min(value, max));\n        if (step > 0) {\n            return min + step * Math.floor(step / 2 + (v - min) / step);\n        }\n        return v;\n    }\n}\n\n\nfunction clamp(value: number, min: number = 0, max: number = 1) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n}\n","export default {\n    padNumber(value: number, size: number = 6, fillWith: string = '0'): string {\n        let text = `${value}`;\n        while (text.length < size) {\n            text = fillWith.charAt(0) + text;\n        }\n        return text;\n    },\n\n    clamp(value: number, min: number = 0, max: number = 1) {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    }\n}\n","import React from \"react\"\n\nimport Debouncer from '../../../tfw/debouncer'\nimport Button from '../../../tfw/view/button'\nimport Slider from '../../../tfw/view/slider'\nimport Combo from '../../../tfw/view/combo'\nimport Icon from '../../../tfw/view/icon'\nimport Util from '../../../tfw/util'\nimport State from '../../state'\nimport Scene from '../../scene'\n\nimport \"./animation-control.css\"\n\ninterface IAnimationControlProps {\n    current?: (number /* Integer */);\n    delta?: (number /* Integer */);\n    dt?: number;\n    frameCount?: (number /* Integer */);\n    playing?: boolean;\n    unit?: string;\n}\n\ninterface IAnimationControlState {\n    speedKey: string  // \"NORMAL\" | \"x2\" | \"x4\" | \"x8\" | \"x16\" | \"x32\"\n}\n\nexport default class AnimationControl extends React.Component<IAnimationControlProps, IAnimationControlState> {\n    constructor( props: IAnimationControlProps ) {\n        super( props );\n        this.state = { speedKey: speedToKey(props.delta || 1) }\n    }\n\n    handleCurrentChange = (current: number) => {\n        const params = { current };\n        State.dispatch(State.Animation.update(params));\n        this.setAnimationParameters(params);\n    }\n\n    setAnimationParameters = Debouncer((params: IAnimationControlProps) => {\n        Scene.Api.setAnimationParameters(params);\n    }, 300)\n\n    handleSpeedChange = (speedKey: string) => {\n        this.setState({ speedKey });\n        State.dispatch(State.Animation.update({ delta: keyToSpeed(speedKey) }));\n    }\n\n    shift(delta: number) {\n        const current = this.props.current || 1;\n        const frameCount = this.props.frameCount || 1;\n        const speed = keyToSpeed(this.state.speedKey);\n        const nextValue = Util.clamp(current + speed * delta, 1, frameCount);\n        if (nextValue !== current) {\n            const params = { current: nextValue };\n            State.dispatch(State.Animation.update(params));\n            this.setAnimationParameters(params);\n        }\n    }\n\n    handleNextClick = () => { this.shift(1); }\n    handleNext2Click = () => { this.shift(10); }\n    handlePrevClick = () => { this.shift(-1); }\n    handlePrev2Click = () => { this.shift(-10); }\n\n    render() {\n        const p = this.props;\n        const current = p.current || 0;\n        const frameCount = p.frameCount || 0;\n        if (frameCount < 2) return null;\n\n        const percent = Math.floor(.5 + 100 * (p.current || 0) / frameCount);\n        return (<div className=\"webBrayns-view-AnimationControl thm-bgPD-C\">\n            <div className=\"thm-bgPD flex\">\n                <Icon content=\"skip-prev2\" enabled={current > 1}\n                    onClick={this.handlePrev2Click}/>\n                <Icon content=\"skip-prev\" enabled={current > 1}\n                    onClick={this.handlePrevClick}/>\n                <Button icon=\"play\" small={true}/>\n                <Icon content=\"skip-next\" enabled={current < frameCount}\n                    onClick={this.handleNextClick}/>\n                <Icon content=\"skip-next2\" enabled={current < frameCount}\n                    onClick={this.handleNext2Click}/>\n            </div>\n            <div className=\"label\">\n                <b>{p.current}</b>\n                <span className='hint'>{` / ${frameCount} (${p.unit})`}</span>\n            </div>\n            <Slider min={0} max={frameCount}\n                    value={p.current || 0}\n                    step={1}\n                    text={`${percent} %`}\n                    onChange={this.handleCurrentChange} />\n            <Combo value={this.state.speedKey} label=\"Speed\" onChange={this.handleSpeedChange}>\n                <div key=\"NORMAL\">x1</div>\n                <div key=\"x2\">x2</div>\n                <div key=\"x4\">x4</div>\n                <div key=\"x8\">x8</div>\n                <div key=\"x16\">x16</div>\n                <div key=\"x32\">x32</div>\n            </Combo>\n        </div>)\n    }\n}\n\n\n// The speed is the number of frames to skip to go to the next one.\n// In Brayns' animation parameters, it is own by the parameter `delta`.\nconst SPEEDS: [string,number][] = [\n    [\"NORMAL\", 1],\n    [\"x2\", 2],\n    [\"x4\", 4],\n    [\"x8\", 8],\n    [\"x16\", 16],\n    [\"x32\", 32]\n]\n\nfunction speedToKey(speed: number): string {\n    const item = SPEEDS.find(x => x[1] === speed);\n    if (!item) return \"NORMAL\";\n    return item[0];\n}\n\nfunction keyToSpeed(key: string): number {\n    const item = SPEEDS.find(x => x[0] === key);\n    if (!item) return 1;\n    return item[1];\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../types\"\nimport View from \"./animation-control\"\n\nfunction mapStateToProps(state: IAppState) {\n    return { ...state.animation };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n","import React from 'react';\n\nimport SnapshotService from '../../service/snapshot'\nimport { IQuaternion, IScreenPoint, IHitPoint, IPanningEvent } from '../../types'\nimport Scene from '../../scene'\nimport Gesture from '../../../tfw/gesture'\nimport Button from '../../../tfw/view/button'\nimport Snapshot from '../../dialog/snapshot'\nimport AnimationControl from '../animation-control'\nimport { IEvent } from '../../../tfw/gesture/types'\n\nimport \"./image-stream.css\"\n\ninterface IImageStreamProps {\n    onHit?: (point: IHitPoint) => void,\n    // Hitting the void, actually\n    onTap?: (point: IScreenPoint) => void,\n    onPanStart?: (panning: IPanningEvent) => void,\n    onPan?: (panning: IPanningEvent) => void\n}\n\nexport default class ImageStream extends React.Component<IImageStreamProps> {\n    private readonly canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n    private orientation: IQuaternion = [0,0,0,1];\n\n    constructor(props: IImageStreamProps) {\n        super(props);\n    }\n\n    get canvas(): HTMLCanvasElement | null {\n        return this.canvasRef.current;\n    }\n\n    componentDidMount() {\n        // If there's no container el we can bind the camera to,\n        // there's no point in continuing\n        if (!this.canvas) {\n            return;\n        }\n\n        Scene.renderer.canvas = this.canvas;\n\n        const that = this;\n\n        Gesture(this.canvas).on({\n            down: this.handleDown,\n            async tap(evt) {\n                const canvas = that.canvas;\n                if (!canvas) return;\n                const rect = canvas.getBoundingClientRect();\n                const x = evt.x / rect.width;\n                const y = 1 - (evt.y / rect.height);\n                const hitResult = await Scene.request('inspect', [x, y]);\n                console.info(\"hitResult=\", hitResult);\n                if (hitResult.hit === true) {\n                    Scene.camera.getCloser(hitResult.position, 0.5);\n                }\n            },\n            wheel(evt) {\n                if (!Scene.camera) return;\n                if (evt.deltaY < 0) {\n                    Scene.camera.moveForward(10);\n                }\n                else if (evt.deltaY > 0) {\n                    Scene.camera.moveBackward(10);\n                }\n            },\n            pan: this.handlePan\n        });\n        this.updateViewPort();\n        window.onfocus = this.updateViewPort;\n    }\n\n    private handleDown = (evt: IEvent) => {\n        const handler = this.props.onPanStart;\n        if (typeof handler !== 'function') return;\n        evt.clear();\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    private handlePan = (evt: IEvent) => {\n        const handler = this.props.onPan;\n        if (typeof handler !== 'function') return;\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    /**\n     * Get pixel coordinates and return a ScreenPoint.\n     * In a screen point, every coordinate is a real number\n     * between 0 and 1.\n     */\n    private getScreenPoint(x: number, y: number): IScreenPoint {\n        if (!this.canvas) return { screenX: -1, screenY: -1, aspect: 1 };\n        const w = this.canvas.clientWidth;\n        const h = this.canvas.clientHeight;\n        return {\n            screenX: x / w,\n            screenY: 1 - (y / h),\n            aspect: w / h\n        }\n    }\n\n    private updateViewPort = async () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas ) return;\n        const rect = canvas.getBoundingClientRect();\n        const w = Math.floor(rect.width);\n        const h = Math.floor(rect.height);\n        canvas.width = w;\n        canvas.height = h;\n        await Scene.setViewPort(w, h);\n    }\n\n    private handleScreenShot = async () => {\n        console.log(\"handleScreenShot\");\n        const options = await Snapshot.show();\n        if (!options) return;  // Action cancelled.\n        const canvas = await SnapshotService.getCanvas(options);\n        await SnapshotService.saveCanvasToFile(canvas, `${options.filename}.jpg`);\n    }\n\n    // We use moz-opaque to improve the perf. of the canvas\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n    render() {\n        return (\n            <div className=\"webBrayns-view-ImageStream\">\n                <canvas\n                    ref={this.canvasRef}\n                    className=\"\"\n                    moz-opaque=\"true\" />\n                <div className=\"icons\">\n                    <Button\n                        icon=\"camera\"\n                        onClick={this.handleScreenShot}\n                        warning={true}/>\n                </div>\n                <AnimationControl />\n            </div>\n        );\n    }\n}\n","import React from \"react\"\r\nimport castArray from \"../converter/array\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport \"./stack.css\"\r\n\r\ninterface IStackProps {\r\n    value: string;\r\n    classNames?: string | string[];\r\n    fullscreen?: boolean;\r\n    scrollable?: boolean;\r\n    children: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Stack extends React.Component<IStackProps, {}> {\r\n    render() {\r\n        const children = castArray(this.props.children);\r\n        const scrollable = castBoolean(this.props.scrollable, false);\r\n        const fullscreen = castBoolean(this.props.fullscreen, false);\r\n        const classes = [\"tfw-layout-stack\"];\r\n        classes.push(...castStringArray(this.props.classNames));\r\n        if (scrollable) classes.push(\"scrollable\");\r\n        if (fullscreen) classes.push(\"fullscreen\");\r\n\r\n        return (\r\n            <div className={classes.join(\" \")}>{\r\n                children.filter(elem => elem.key == this.props.value)\r\n            }</div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Icon from '../../../tfw/view/icon'\nimport Input from '../../../tfw/view/input'\nimport Button from '../../../tfw/view/button'\nimport Storage from '../../../tfw/storage'\nimport Scene from '../../scene'\n\nimport \"./websocket-console.css\"\n\n\ninterface IWebsocketConsoleProps {\n    visible: boolean\n}\n\ninterface IWebsocketConsoleState {\n    method: string,\n    params: string,\n    output: string,\n    error: string | null,\n    querying: boolean\n}\n\n\nexport default class WebsocketConsole extends React.Component<IWebsocketConsoleProps, IWebsocketConsoleState> {\n    constructor( props: IWebsocketConsoleProps ) {\n        super( props );\n        this.state = {\n            method: get(\"method\", \"get-renderer-params\"),\n            params: get(\"params\", \"{}\"),\n            output: \"\",\n            error: null,\n            querying: false\n        }\n    }\n\n    handleMethodChange = (method: string) => {\n        this.setState({ method });\n    }\n\n    handleParamsChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setState({ params: event.target.value });\n    }\n\n    handleExecute = async () => {\n        const { method, params } = this.state;\n\n        set(\"method\", method);\n        set(\"params\", params);\n\n        this.setState({ querying: true, output: `${Date.now()}`, error: null });\n        try {\n            const input = parseJSON(params);\n            const output = await Scene.request(method, input);\n            this.setState({ error: null, output: JSON.stringify(output, null, '  ') });\n        }\n        catch( ex ) {\n            console.error(\"WebSocket console error:\", ex);\n            this.setState({ error: parseError(ex) });\n        }\n        finally {\n            this.setState({ querying: false });\n        }\n    }\n\n    render() {\n        const classNames = [\"webBrayns-view-WebsocketConsole\", \"thm-bg0\"];\n        if (this.props.visible) classNames.push(\"visible\");\n\n        return (<div className={classNames.join(' ')}>\n            <div className=\"head\">\n                <Input\n                    label=\"Method\"\n                    value={this.state.method}\n                    onChange={this.handleMethodChange}\n                    onEnterPressed={this.handleExecute}\n                    wide={true}/>\n            </div>\n            <textarea\n                className=\"input\"\n                onChange={this.handleParamsChange}\n                defaultValue={this.state.params}></textarea>\n            <div className=\"button\">\n                <Button\n                    label=\"Execute request\"\n                    wide={true}\n                    wait={this.state.querying}\n                    icon=\"gear\"\n                    onClick={this.handleExecute}/>\n            </div>\n            {\n                this.state.error ?\n                <div className=\"error\">{this.state.error}</div> :\n                <textarea\n                    className=\"output thm-bgPL\"\n                    readOnly={true}\n                    value={this.state.output}>\n                </textarea>\n            }\n        </div>)\n    }\n}\n\n\nconst STORAGE_PREFIX = 'websocket-console::';\n\nfunction get(key: string, defaultValue: any): any {\n    return Storage.local.get(`${STORAGE_PREFIX}${key}`, defaultValue);\n}\n\nfunction set(key: string, value: any): any {\n    return Storage.local.set(`${STORAGE_PREFIX}${key}`, value);\n}\n\n\nfunction parseJSON(json: string): any {\n    try {\n        return JSON.parse(json);\n    }\n    catch(ex) {\n        throw Error(`This parameter is not in valid JSON format:\\n${json}\\n\\nReason: ${ex}!`);\n    }\n}\n\n\nfunction parseError(ex: any) {\n    let output = JSON.stringify(ex, null, '  ');\n    if (ex && typeof ex.toString === 'function') {\n        output += '\\n\\n' + ex.toString();\n    }\n    return output;\n}\n","import * as React from \"react\"\nimport castArray from \"../converter/array\"\nimport castFunction from \"../converter/function\"\nimport castBoolean from \"../converter/boolean\"\nimport TouchableBehavior from \"../behavior/touchable\"\nimport \"./touchable.css\"\n\ninterface ITouchableProps {\n    enabled?: boolean;\n    onClick?: ()=>void;\n    title?: string;\n    classNames?: string[];\n    color?: string;\n    children?: React.ReactElement<any>|React.ReactElement<any>[];\n}\n\nexport default class Touchable extends React.Component<ITouchableProps, {}> {\n    readonly touchable: TouchableBehavior;\n    private ref = React.createRef();\n\n    constructor(props: ITouchableProps) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.touchable = new TouchableBehavior({onTap: this.handleClick, color: props.color});\n    }\n\n    componentDidMount() {\n        const element = this.ref.current;\n        if (!element) return;\n        this.touchable.element = element;\n    }\n\n    handleClick() {\n        const handler = this.props.onClick;\n        if( typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    render() {\n        const p = this.props;\n        const enabled = castBoolean(p.enabled, true);\n        const classes = [\"tfw-view-touchable\"].concat(castArray(p.classNames));\n        if( enabled ) classes.push(\"enabled\");\n        return <div ref={this.ref}\n                tabIndex={0}\n                className={classes.join(\" \")}\n                title={p.title}>{\n            p.children\n        }</div>\n    }\n}\n","import React from \"react\"\n\nimport Touchable from '../../../../tfw/view/touchable'\n\nimport \"./path-bar.css\"\n\ninterface IPathBarProps {\n    path: string,\n    root: string,\n    onClick: (path: string) => void\n}\n\nexport default class PathBar extends React.Component<IPathBarProps, {}> {\n    render() {\n        const { path, root } = this.props;\n        const pieces = [\n            root,\n            ...path.substr(root.length).split(\"/\")\n        ].filter((item: string) => item.length > 0);\n        console.info(\"pieces=\", pieces);\n        const lastIndex = pieces.length - 1;\n        const buttons = [];\n        for (let i=0 ; i<pieces.length ; i++) {\n            const piece = pieces[i];\n            const path = pieces.slice(0, i + 1).join(\"/\");\n            console.info(\"path=\", path);\n            const handler = () => { this.props.onClick(path) };\n            if (i === lastIndex) {\n                // Last item is not a button, because it makes no sense to click on the folder\n                // you already are in.\n                buttons.push(<div>{piece}</div>)\n            } else {\n                const button = (<div key={path} className=\"thm-bgPL thm-ele-button\">\n                        <Touchable onClick={handler}><div>{piece}</div></Touchable>\n                    </div>);\n                buttons.push(button);\n            }\n        }\n\n        return (<div className=\"webBrayns-view-PathBar\">\n            <header>{path}</header>\n            <div>{buttons}</div>\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport Button from '../../../../tfw/view/button'\n\nimport \"./path-list.css\"\n\ninterface IPathListProps {\n    files: string[],\n    folders: string[],\n    onFileClick: (name: string) => void,\n    onFolderClick: (name: string) => void\n}\n\nexport default class PathList extends React.Component<IPathListProps, {}> {\n    constructor( props: IPathListProps ) {\n        super( props );\n    }\n\n    render() {\n        const { files, folders, onFileClick, onFolderClick } = this.props;\n        return (<div className=\"webBrayns-view-PathList\">\n            <div className=\"thm-bg1\">{\n                folders.sort().map((name: string) => (\n                    <Button key={name}\n                            small={true}\n                            flat={true}\n                            wide={false}\n                            warning={true}\n                            icon=\"folder\"\n                            onClick={() => onFolderClick(name)}\n                            label={name}/>\n                ))\n            }</div>\n            <div className=\"thm-bg2\">{\n                files.sort().map((name: string) => (\n                    <Button key={name}\n                            small={true}\n                            flat={true}\n                            wide={false}\n                            icon=\"file\"\n                            onClick={() => onFileClick(name)}\n                            label={name}/>\n                ))\n            }</div>\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport PathBar from './path-bar'\nimport PathList from './path-list'\n\nimport \"./path-selector.css\"\n\n\ninterface IBookmark {\n    name: string,\n    path: string\n}\n\ninterface IPathSelectorProps {\n    path: string,\n    //The path cannot be outside the root.\n    root: string,\n    files: string[],\n    folders: string[],\n    onFolderClick: (path: string) => void,\n    onFileClick: (path: string) => void\n    // bookmarks: IBookmark[],\n    // onAddBookmarkClick: (path: string) => void,\n    // onRemoveBookmarkClick: (path: string) => void\n}\n\nexport default class PathSelector extends React.Component<IPathSelectorProps, {}> {\n    render() {\n        const {\n            path, root, files, folders,\n            onFileClick, onFolderClick\n        } = this.props;\n        console.info(\"path, root, files, folders=\", path, root, files, folders);\n        return (<div className=\"webBrayns-view-PathSelector\">\n            <PathBar path={path} root={root} onClick={onFolderClick}/>\n            <PathList files={files}\n                      folders={folders}\n                      onFileClick={(name: string) => onFileClick(concatPath(path, name))}\n                      onFolderClick={(name: string) => {\n                          console.log(\"CLICK\", concatPath(path, name))\n                          onFolderClick(concatPath(path, name))\n                      }}/>\n        </div>)\n    }\n}\n\n\n/**\n * Concat a path, taking care of the separator.\n */\nfunction concatPath(path: string, filename: string): string {\n    if (path.endsWith(\"/\")) return `${path}${filename}`\n    return `${path}/${filename}`\n}\n","import { connect } from 'react-redux'\n\nimport { IAppState } from \"../../types\"\n\nimport PathService from \"../../service/path\"\nimport View from \"./path-selector\"\n\nfunction mapStateToProps(state: IAppState) {\n    return { ...state.path };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        async onFolderClick(path: string) {\n            const browse = await PathService.browse(path);\n            console.info(\"path, browse=\", path, browse);\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n","import React from \"react\"\nimport { Provider } from 'react-redux'\n\nimport Input from '../../../tfw/view/input'\nimport PathSelector from '../path-selector'\nimport State from '../../state'\nimport LocalStorage from '../../service/local-storage'\n\n\nconst Storage = new LocalStorage(\"input-path\");\n\ninterface IInputPathProps {\n    onChange: (path: string) => void\n}\n\ninterface IInputPathState {\n    path: string\n}\n\nexport default class  extends React.Component<IInputPathProps, IInputPathState> {\n    constructor( props: IInputPathProps ) {\n        super( props );\n        this.state = { path: '' }\n\n        this.handleChange(\n            Storage.get(\"path\", '/gpfs/bbp.cscs.ch/project/proj3/resources/meshes/astrocytes/GLIA_000099.h5_decimated.off')\n        )\n    }\n\n    handleChange = (path: string) => {\n        const handler = this.props.onChange;\n        this.setState({ path });\n        Storage.set('path', path);\n        if (typeof handler !== 'function') return;\n        handler(path);\n    }\n\n    render() {\n        return <div>\n            <Input\n                label=\"Please type a model path\"\n                size={100}\n                value={this.state.path}\n                onChange={this.handleChange}\n                wide={true}/>\n            <Provider store={State.store}>\n                <PathSelector onFileClick={this.handleChange}/>\n            </Provider>\n        </div>\n    }\n}\n","import Storage from '../../tfw/storage'\n\nexport default class localStorage {\n    constructor(private prefix: string = '') {}\n\n    get(key: string, defaultValue: any): any {\n        return Storage.local.get(this.key(key), defaultValue);\n    }\n\n    set(key: string, val: any) {\n        Storage.local.set(this.key(key), val);\n    }\n\n    private key(key: string): string {\n        if (this.prefix.length === 0) return key;\n        return `${this.prefix}:\\t${key}`;\n    }\n}\n","import React from \"react\"\n\nimport { IModel } from '../../types'\nimport Button from '../../../tfw/view/button'\nimport Model from '../../scene/model'\nimport Touchable from '../../../tfw/view/touchable'\n\nimport \"./model-button.css\"\n\ninterface IModelButtonProps {\n    model: IModel,\n    onToggleSelection: (model: IModel) => void\n}\n\nexport default class ModelButton extends React.Component<IModelButtonProps, {}> {\n    constructor( props: IModelButtonProps ) {\n        super( props );\n    }\n\n    handleToggleSelection = () => {\n        const handle = this.props.onToggleSelection;\n        if (typeof handle === 'function') handle(this.props.model);\n        console.info(\"this.props.model=\", this.props.model);\n    }\n\n    handleFocus = async () => {\n        const model = new Model(this.props.model);\n        await model.focus();\n    }\n\n    handleShow = async () => {\n        const model = new Model(this.props.model);\n        await model.show();\n    }\n\n    handleHide = async () => {\n        const model = new Model(this.props.model);\n        await model.hide();\n    }\n\n    render() {\n        const { model } = this.props;\n        const classNames = [\"webBrayns-view-ModelButton\", \"thm-ele-button\"];\n        if (model.visible) {\n            classNames.push(model.$selected ? \"thm-bgSL\" : \"thm-bg2\");\n        } else {\n            classNames.push(model.$selected ? \"thm-bgSD\" : \"thm-bg0\");\n        }\n        return (<Touchable classNames={classNames.join((\" \"))}\n                           onClick={this.handleToggleSelection}\n                           title={model.path}>\n                <div className=\"name\">\n                    <div className={model.visible ? \"visible\" : \"invisible\"}>{model.name}</div>\n                    <div className='id'>{`#${model.id}`}</div>\n                </div>\n                <div className=\"icons\">\n                    <div>\n                        <Button small={true} icon=\"gps\" onClick={this.handleFocus}/>\n                        <Button enabled={false} small={true} icon=\"more\"/>\n                    </div>\n                    {\n                        model.visible ?\n                        <Button small={true} icon=\"hide\" onClick={this.handleHide}/> :\n                        <Button small={true} icon=\"show\" onClick={this.handleShow}/>\n                    }\n                    <Button enabled={false} small={true} icon=\"delete\" warning={true}/>\n                </div>\n            </Touchable>)\n    }\n}\n","import * as React from \"react\"\nimport \"./list.css\"\nimport Debouncer from \"../../debouncer\";\nimport castUnit from \"../../converter/unit\"\nimport castBoolean from \"../../converter/boolean\"\nimport castInteger from \"../../converter/integer\"\nimport Gesture from \"../../gesture\"\n\ninterface IListProps {\n    // Array of all the items to hold.\n    items: any[];\n    // Function which takes an item and return a component.\n    mapper: (item: any) => React.ReactElement;\n    itemHeight?: number;\n    width?: string;\n    height?: string;\n    animateRefresh?: boolean;\n    onRefreshAsked?: () => void;\n}\n\ninterface IListState {\n    items: any[];\n}\n\nexport default class List extends React.Component<IListProps, IListState> {\n    private readonly refMain: React.RefObject<HTMLDivElement>;\n    private readonly refHead: React.RefObject<HTMLDivElement>;\n    private readonly refBody: React.RefObject<HTMLDivElement>;\n    private readonly refTail: React.RefObject<HTMLDivElement>;\n    private lastFirstItemIndex: number;\n    private lastVisibleItemsCount: number;\n    private lastItemsArray: any[];\n    private itemHeight: number = 36;\n\n    constructor(props: IListProps) {\n        super(props);\n        this.refMain = React.createRef();\n        this.refHead = React.createRef();\n        this.refBody = React.createRef();\n        this.refTail = React.createRef();\n        this.onScroll = Debouncer(this.onScroll.bind(this), 30);\n        this.onPanDown = this.onPanDown.bind(this);\n        this.lastFirstItemIndex = -1;\n        this.lastVisibleItemsCount = -1;\n        this.lastItemsArray = [];\n        this.state = { items: [] };\n    }\n\n    onPanDown() {\n        const main = this.refMain.current;\n        if (!main) return;\n        if (main.scrollTop > 0) return;\n\n        const onRefresh = this.props.onRefreshAsked;\n        if (typeof onRefresh !== 'function') return;\n        onRefresh();\n    }\n\n    onScroll(evt: any = null): void {\n        const main = this.refMain.current;\n        const head = this.refHead.current;\n        const body = this.refBody.current;\n        const tail = this.refTail.current;\n        if (!main || !head || !body || !tail) return;\n\n        if (this.props.animateRefresh) main.scrollTop = 0;\n\n        const rect = main.getBoundingClientRect();\n        const top = Math.floor(main.scrollTop);\n        const height = Math.floor(rect.height);\n        const itemsCount = this.props.items.length;\n        const firstItemIndex = Math.min(\n            itemsCount, Math.floor(top / this.itemHeight));\n        const visibleItemsCount = Math.min(\n            itemsCount - firstItemIndex,\n            1 + Math.ceil(height / this.itemHeight)\n        );\n        const tailCount = this.props.items.length - firstItemIndex - visibleItemsCount;\n\n        head.style.height = `${this.itemHeight * firstItemIndex}px`;\n        body.style.height = `${this.itemHeight * visibleItemsCount}px`;\n        tail.style.height = `${this.itemHeight * tailCount}px`;\n\n        main.scrollTop = top;\n\n        if (this.lastFirstItemIndex !== firstItemIndex\n            || this.lastVisibleItemsCount !== visibleItemsCount) {\n            this.lastFirstItemIndex = firstItemIndex;\n            this.lastVisibleItemsCount = visibleItemsCount;\n            this.setState({\n                items: this.props.items.slice(firstItemIndex, firstItemIndex + visibleItemsCount)\n            });\n        }\n\n        // Resize background image for head and tail.\n        const backgroundSize = `${main.clientWidth}px ${this.itemHeight}px`;\n        head.style.backgroundSize = backgroundSize;\n        tail.style.backgroundSize = backgroundSize;\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.onScroll, false);\n        const main = this.refMain.current;\n        if (!main) return;\n        Gesture(main).on({\n            pandown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                main.classList.add(\"animate-refresh\");\n            },\n            swipedown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                this.onPanDown();\n            },\n            up: () => main.classList.remove(\"animate-refresh\")\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onScroll, false);\n    }\n\n    render() {\n        this.itemHeight = castInteger(this.props.itemHeight, 36);\n        if (this.lastItemsArray !== this.props.items) {\n            this.lastVisibleItemsCount = -1;\n            this.lastItemsArray = this.props.items;\n        }\n        this.onScroll();\n\n        if (typeof this.props.mapper !== 'function') {\n            console.error(\"props =\", this.props);\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper must be a function which returns a ReactElement!`);\n        }\n        let children = null;\n        try {\n            children = this.state.items\n                .map(this.props.mapper)\n                .map(content => (\n                    <div className=\"item\" key={content.key}\n                        style={{\n                            height: `${this.itemHeight}px`,\n                            minHeight: `${this.itemHeight}px`,\n                            maxHeight: `${this.itemHeight}px`\n                        }}>{content}</div >\n                ));\n        }\n        catch (ex) {\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper returns an exception:\\n${ex}`);\n        }\n\n        const width = castUnit(this.props.width, \"auto\");\n        const height = castUnit(this.props.height, \"auto\");\n        const animateRefresh = castBoolean(this.props.animateRefresh, false);\n        const classes = [\"tfw-view-list\", \"thm-bg2\"];\n        if (animateRefresh) classes.push(\"animate-refresh\", \"refreshing\");\n\n        return (\n            <div className={classes.join(\" \")}\n                style={{ width, height }}\n                onScroll={this.onScroll}\n                ref={this.refMain}>\n                <div className=\"space\" ref={this.refHead} />\n                <div className=\"body\" ref={this.refBody}>{\n                    children\n                }</div>\n                <div className=\"space\" ref={this.refTail} />\n            </div>\n        );\n    }\n}\n","const RX_SEPARATOR = /[ \\t\\n\\r,.|<>:]+/g;\n\n/**\n * ```\n * const m = new Matcher(\"Pi cell\");\n * m.matches('This is a cells pie!') === true\n * m.matches('I bought pins and a cellular.') === 'true'\n * m.matcher('What a nive cellular!') === 'false'\n * ```\n */\nexport default class Matcher {\n  private items: string[];\n\n  constructor(textToMatchAgainst: string) {\n    this.items = textToMatchAgainst\n      .split(RX_SEPARATOR)\n      .map( (item: string) => item.trim().toLowerCase() )\n      .filter( (item: string) => item.length > 0 );\n  }\n\n  matches(text: string) {\n    if( this.items.length === 0 ) return true;\n    const lowerCaseText = text.toLowerCase();\n    for( const item of this.items ) {\n      const pos = lowerCaseText.indexOf( item );\n      if( pos === -1 ) return false;\n    }\n    return true;\n  }\n}\n","import React from \"react\"\n\nimport { IModel } from '../../types'\nimport ModelButton from '../model-button'\nimport List from '../../../tfw/view/list'\nimport Input from '../../../tfw/view/input'\nimport Combo from '../../../tfw/view/combo'\nimport Model from '../../scene/model'\nimport Matcher from '../../tool/matcher'\nimport Debouncer from '../../../tfw/debouncer'\n\nimport \"./model-list.css\"\n\ninterface IModelListProps {\n    models: IModel[]\n}\n\ninterface IModelListState {\n    // In the Input.\n    filterInput: string,\n    // Real filter updated from `filterInput` after a debouncer does it.\n    filter: string,\n    sort: \"name\" | \"volume\"\n}\n\nexport default class modelList extends React.Component<IModelListProps, IModelListState> {\n    constructor( props: IModelListProps ) {\n        super( props );\n        this.state = { filterInput: '', filter: '', sort: 'name' }\n    }\n\n    handleToggleSelection = (model: IModel) => {\n        const currentlySelectedModel = this.props.models.find((m: IModel) => m.$selected);\n        if (currentlySelectedModel) {\n            const modelObject1 = new Model(currentlySelectedModel);\n            modelObject1.setSelected(false);\n        }\n        if (model !== currentlySelectedModel) {\n            const modelObject2 = new Model(model);\n            modelObject2.setSelected(true);\n        }\n    }\n\n    handleFilterInputChange = (value: string) => {\n        const filterInput = value.trim().toLowerCase();\n        this.setState({ filterInput });\n        this.handleFilterChange(filterInput);\n    }\n\n    handleFilterChange = Debouncer((value: string) => {\n        const filter = value.trim().toLowerCase();\n        this.setState({ filter });\n    }, 200)\n\n    handleSortChange = (sort: string) => {\n        this.setState({ sort });\n    }\n\n    private filter(): IModel[] {\n        const { filter } = this.state;\n        const { models } = this.props;\n        const matcher = new Matcher(filter);\n        return models.filter((model: IModel) => matcher.matches(model.name))\n            .sort(this.state.sort === 'name' ? sortByName : sortByVolume);\n    }\n\n    render() {\n        const models = this.props.models;\n        const filteredModels = this.filter();\n        const mapper = (model: IModel) => <ModelButton key={model.id}\n                                                       onToggleSelection={this.handleToggleSelection}\n                                                       model={model}/>;\n\n        return (<div className=\"webBrayns-view-ModelList\">\n            <header>\n                <Input\n                    label={`Filter by name (${filteredModels.length} / ${models.length})`}\n                    value={this.state.filterInput}\n                    onChange={this.handleFilterInputChange}\n                    wide={true}/>\n                <Combo\n                    label=\"Sorting\"\n                    value={this.state.sort}\n                    onChange={this.handleSortChange}>\n                    <div key=\"name\">Name</div>\n                    <div key=\"volume\">Volume</div>\n                </Combo>\n            </header>\n            <List itemHeight={100}\n                  items={filteredModels}\n                  width=\"100%\"\n                  mapper={mapper}/>\n        </div>)\n    }\n}\n\n\nfunction sortByName(model1: IModel, model2: IModel) {\n    const name1 = model1.name.toLowerCase();\n    const name2 = model2.name.toLowerCase();\n    if (name1 < name2 ) return -1;\n    if (name1 > name2 ) return +1;\n    return 0;\n}\n\n\nfunction sortByVolume(model1: IModel, model2: IModel) {\n    return computeVolume(model2.bounds) - computeVolume(model1.bounds);\n}\n\n\nfunction computeVolume(bounds) {\n    const { max, min } = bounds;\n    return (max[0] - min[0]) * (max[1] - min[1]) * (max[2] - min[2])\n}\n","import { connect } from 'react-redux'\n\nimport { IAppState, IAction } from \"../../types\"\nimport ModelList from './model-list'\n\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        models: state.models\n    };\n}\n\nfunction mapDispatchToProps(dispatch: (action: IAction) => void) {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelList);\n","import React from \"react\"\n\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Dialog from '../../../../tfw/factory/dialog'\nimport Icon from '../../../../tfw/view/icon'\nimport InputPath from '../../../view/input-path'\nimport ModelList from '../../../view/model-list/container'\n\nimport \"./model.css\"\n\nexport default class Model extends React.Component<{}, {}> {\n    handleClip = () => {\n        State.dispatch(State.Navigation.setPanel(\"clip\"));\n    }\n\n    handleLoadMesh = async () => {\n        let path = '';\n        const confirmed = await Dialog.confirm(\n            \"Load Mesh\",\n            <InputPath onChange={(p: string) => path = p}/>);\n        if (!confirmed) return;\n        const model = await Scene.loadMeshFromPath(path);\n        console.info(\"model=\", model);\n    }\n\n    toggleConsoleVisibility = async () => {\n        State.dispatch(State.Navigation.toggleConsoleVisibility())\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-panel-Model\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <p>Web-Brayns</p>\n                <div>\n                    <Icon content='cut' onClick={this.handleClip}/>\n                    <Icon content='import' onClick={this.handleLoadMesh}/>\n                    <Icon content='gps' onClick={() => Scene.camera.lookAtWholeScene()}/>\n                    <Icon content='bug' onClick={this.toggleConsoleVisibility}/>\n                </div>\n            </header>\n            <ModelList />\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport Label from '../../../tfw/view/label'\nimport Gesture from '../../../tfw/gesture'\nimport Color from '../../../tfw/color'\n\nimport \"./range.css\"\n\n// Left and right margins for the range.\nconst MARGIN = 16;\n\ninterface IRangeProps {\n    label?: string,\n    min: number,\n    max: number,\n    color: string,    // CSS color string\n    onChange: (min: number, max: number) => void\n}\n\nexport default class Range extends React.Component<IRangeProps, {}> {\n    private readonly refCanvas: React.RefObject<HTMLCanvasElement> = React.createRef();\n    private ctx: CanvasRenderingContext2D | null = null;\n    // -1 left bound, +1 right bound, 0 center (to move both bounds).\n    private selection: number = 0;\n\n    constructor( props: IRangeProps ) {\n        super( props );\n    }\n\n    componentDidMount() {\n        const canvas = this.refCanvas.current;\n        if (!canvas) return;\n\n        this.ctx = canvas.getContext(\"2d\");\n        const rect = canvas.getBoundingClientRect();\n        canvas.setAttribute(\"width\", `${rect.width}`);\n        Gesture(canvas).on({\n            down: this.handleDown,\n            pan: this.handlePan\n        });\n\n        this.paint();\n    }\n\n    handleDown = (evt) => {\n        const x = this.getX(evt);\n        const { min, max, onChange } = this.props;\n        const A = Math.abs(min - x);\n        const B = Math.abs(max - x);\n        const M = Math.abs(x - (max + min) / 2);\n\n        if (A < M) {\n            if (A < B) this.selection = -1;\n            else this.selection = +1;\n        }\n        // M < A\n        else {\n            if (M <= B) this.selection = 0;\n            else this.selection = +1;\n        }\n        this.moveTo(x);\n    }\n\n    moveTo(x: number) {\n        const { min, max, onChange } = this.props;\n        const { selection } = this;\n\n        if (selection === -1) {\n            onChange(clamp(x, 0, max), max);\n        }\n        else if (selection === +1) {\n            onChange(min, clamp(x, min, 1));\n        }\n        else {\n            const shift = (max - min) / 2;\n            let A = x - shift;\n            let B = x + shift;\n            if (A < 0) {\n                B -= A;\n                A = 0;\n            }\n            else if (B > 1) {\n                A += B - 1;\n                B = 1;\n            }\n            onChange(A, B);\n        }\n    }\n\n    handlePan = (evt) => {\n        const x = this.getX(evt);\n        this.moveTo(x);\n    }\n\n    getX(evt) {\n        const canvas = this.refCanvas.current;\n        if (!canvas) return 0;\n\n        const rect = canvas.getBoundingClientRect();\n        return (evt.x - MARGIN) / (rect.width - 2 * MARGIN);\n    }\n\n    paint() {\n        const ctx = this.ctx;\n        if (!ctx) return;\n        const { canvas } = ctx;\n\n        const rect = canvas.getBoundingClientRect();\n        const w = rect.width;\n        const h = rect.height;\n        canvas.width = w;\n        canvas.height = h;\n\n        ctx.clearRect(0, 0, w, h);\n        const space = w - 2 * MARGIN;\n        if (space < MARGIN) return;   // Too narrow to paint anything useful.\n\n        ctx.strokeStyle = \"#333\";\n        ctx.fillStyle = \"#999\";\n        ctx.beginPath();\n        ctx.rect(MARGIN, 0, space, h);\n        ctx.fill();\n        ctx.stroke();\n\n        const { min, max } = normalize(this.props.min, this.props.max);\n        const a = MARGIN + space * min;\n        const b = MARGIN + space * max;\n        const grad = ctx.createLinearGradient(0, 0, 0, h);\n        grad.addColorStop(0, \"#000\");\n        grad.addColorStop(1, this.props.color);\n        ctx.fillStyle = grad;\n        ctx.beginPath();\n        ctx.rect(a,0, b - a, h);\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.save();\n        ctx.beginPath();\n        ctx.fillStyle = \"#fff5\";\n        ctx.rect(a,0, b - a, h * .5);\n        ctx.fill();\n        ctx.restore();\n\n        ctx.beginPath();\n        ctx.moveTo(0,0);\n        ctx.lineTo(w,0);\n        ctx.moveTo(0,h);\n        ctx.lineTo(w,h);\n        ctx.stroke();\n\n    }\n\n    componentDidUpdate() {\n        this.paint();\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-Range\">\n            <div style={{ margin: `0 ${MARGIN}px`}}>\n                <Label label={this.props.label} />\n            </div>\n            <canvas ref={this.refCanvas} height=\"32\"></canvas>\n        </div>)\n    }\n}\n\n\nfunction clamp(v: number, min: number = 0, max: number = 1): number {\n    if (v < min) return min;\n    if (v > max) return max;\n    return v;\n}\n\n\nfunction normalize(min: number, max: number): { min: number, max: number } {\n    let a = clamp(min);\n    let b = clamp(max);\n    if (a > b) {\n        const tmp = a;\n        a = b;\n        b = tmp;\n    }\n\n    return { min: a, max: b };\n}\n","type Action = (...args: any[]) => void;\n\n/**\n * The function to call as much as you want. It will perform the debouce for you.\n * Put in the same args as the `action` function.\n *\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\n * less than `delay` ms between them.\n * * delay - Number of milliseconds.\n */\nexport default function(action: Action, delay: number): Action {\n    let timer = 0;\n    let timestamp = 0;\n    let nextAction: Action = () => {};\n    let nextArgs: any[] = [];\n    const throttleAction = () => {\n        timer = 0;\n        nextAction(...nextArgs);\n    }\n\n    return function(this: { delay: number }, ...args: any[]) {\n        nextAction = action;\n        nextArgs = args;\n        const now = Date.now();\n        const elapsedTime = now - timestamp;\n        timestamp = now;\n        if (elapsedTime > delay) {\n            throttleAction();\n        }\n        else if (timer === 0) {\n            timer = window.setTimeout(throttleAction, delay - elapsedTime);\n        }\n    }\n}\n","import React from \"react\"\n\nimport SnapshotService from '../../../service/snapshot'\nimport Snapshot from '../../../dialog/snapshot'\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Models from '../../../models'\nimport Geom from '../../../geometry'\nimport Util from '../../../../tfw/util'\nimport Icon from '../../../../tfw/view/icon'\nimport Button from '../../../../tfw/view/button'\nimport Slider from '../../../../tfw/view/slider'\nimport Range from '../../range'\nimport Throttler from '../../../../tfw/throttler'\nimport Debouncer from '../../../../tfw/debouncer'\nimport Theme from '../../../../tfw/theme'\n\nimport { IBounds } from '../../../types'\n\nimport \"./clip.css\"\n\ninterface IPlane {\n    id: number,\n    plane: [number, number, number, number]\n}\n\ninterface IClipProps {\n    activated: boolean,\n    minX: number,\n    maxX: number,\n    minY: number,\n    maxY: number,\n    minZ: number,\n    maxZ: number,\n    latitude: number,\n    longitude: number,\n    collageDepth: number\n}\n\nexport default class Model extends React.Component<IClipProps, {}> {\n    // 6 Planes for the slices. We hold the id in order to update them.\n    private minPlaneIndex: number = 0;\n    private maxPlaneIndex: number = 0;\n    // Most of the time, we display the main slice, but while you are sliding on\n    // the frames count slider, we display the last slice.\n    private indexOfFrameToShow: number = 0;\n\n    private sceneCenter: [number,number,number] = [0,0,0];\n    private sceneRadius: number = 1;\n\n    private resetIndexOfFrameToShow = Debouncer(() => {\n        this.indexOfFrameToShow = 0;\n        this.updatePlanes();\n    }, 600);\n\n    private async removeAllClipPlanes() {\n        const planes = await Scene.Api.getClipPlanes();\n        if (planes.length === 0) return;\n        const ids = planes.map(plane => plane ? plane.id : 0);\n        Scene.Api.removeClipPlanes(ids);\n    }\n\n    async componentDidMount() {\n        this.clear();\n        this.updatePlanes();\n    }\n\n    async componentDidUpdate() {\n        this.updatePlanes();\n    }\n\n    updatePlanes = Throttler(() => {\n        Scene.Api.updateClipPlane({id: this.minPlaneIndex, plane: this.getDefOfMinPlane()});\n        Scene.Api.updateClipPlane({id: this.maxPlaneIndex, plane: this.getDefOfMaxPlane()});\n    }, 100)\n\n    private computePlaneDirection(): [number, number, number] {\n        const lat = Math.PI * this.props.latitude / 180;\n        const lng = Math.PI * this.props.longitude / 180;\n        const y = Math.sin(lng);\n        const radius = Math.cos(lng);\n        const x = Math.cos(lat) * radius;\n        const z = Math.sin(lat) * radius;\n        return [x,y,z];\n    }\n\n    private computeThickness() {\n        const { sceneRadius, props } = this;\n        return sceneRadius * Math.abs(props.maxX - props.minX);\n    }\n\n    getDefOfMinPlane(): [number, number, number, number] {\n        const { sceneRadius, sceneCenter } = this;\n        const thickness = this.computeThickness();\n        const distanceFromCenter = sceneRadius * (this.props.minX - .5)\n            + thickness * this.indexOfFrameToShow;\n        const normal = this.computePlaneDirection();\n        const pointOnPlan = Geom.addVectors(\n            sceneCenter,\n            Geom.scale(normal, -distanceFromCenter)\n        );\n        console.log(\"MIN: thickness, distanceFromCenter, normal, pointOnPlan=\", thickness, distanceFromCenter, normal, pointOnPlan)\n        return Geom.plane6to4(pointOnPlan, normal);\n    }\n\n    getDefOfMaxPlane(): [number, number, number, number] {\n        const { sceneRadius, sceneCenter } = this;\n        const thickness = this.computeThickness();\n        const distanceFromCenter = sceneRadius * (this.props.maxX - .5)\n            + thickness * this.indexOfFrameToShow;\n        const normal = Geom.scale(this.computePlaneDirection(), -1);\n        const pointOnPlan = Geom.addVectors(\n            sceneCenter,\n            Geom.scale(normal, distanceFromCenter)\n        );\n        console.log(\"MAX: thickness, distanceFromCenter, normal, pointOnPlan=\", thickness, distanceFromCenter, normal, pointOnPlan)\n        return Geom.plane6to4(pointOnPlan, normal);\n    }\n\n    componentWillUnmount() {\n        //this.removeAllClipPlanes();\n    }\n\n    handleBack = () => {\n        State.dispatch(State.Navigation.setPanel(\"model\"));\n    }\n\n    handleActivatedChange = (activated: boolean) => {\n        State.dispatch(State.Slicer.update({ activated }))\n    }\n\n    handleXChange(min: number, max: number) {\n        State.dispatch(State.Slicer.update({ minX: min, maxX: max }));\n    }\n\n    handleLatitudeChange = (latitude: number) => {\n        console.info(\"latitude=\", latitude);\n        State.dispatch(State.Slicer.update({ latitude }));\n    }\n\n    handleLongitudeChange = (longitude: number) => {\n        State.dispatch(State.Slicer.update({ longitude }));\n    }\n\n    handleCollageDepthChange = (collageDepth: number) => {\n        this.indexOfFrameToShow = collageDepth;\n        this.resetIndexOfFrameToShow();\n        State.dispatch(State.Slicer.update({ collageDepth }));\n    }\n\n    clear = async () => {\n        // Computing current scene bounding box.]\n        const state = State.store.getState();\n        const models = state.models\n            .filter(m => m.visible)\n            .map(Models.createModelFromBraynsData);\n        const bounds = Models.getModelsBounds(models);\n        const [x,y,z] = bounds.min;\n        const [X,Y,Z] = bounds.max;\n        const xx = x - X;\n        const yy = x - X;\n        const zz = x - X;\n        this.sceneRadius = Math.sqrt(xx*xx + yy*yy + zz*zz);\n        this.sceneCenter[0] = (x + X) / 2;\n        this.sceneCenter[1] = (y + Y) / 2;\n        this.sceneCenter[2] = (z + Z) / 2;\n\n        // Trying to find our clipping planes and taking theirs ids.\n        const planes = await Scene.Api.getClipPlanes();\n        await Scene.Api.removeClipPlanes(planes.map(p => p.id));\n\n        this.minPlaneIndex = await addPlane(this.getDefOfMinPlane());\n        this.maxPlaneIndex = await addPlane(this.getDefOfMaxPlane());\n\n        State.dispatch(State.Slicer.update({\n            maxX: 1, minX: 0\n        }));\n    }\n\n    handleMovieClick = async () => {\n        const queryForPlanes = Scene.Api.getClipPlanes();\n        const snapshotOptions = await Snapshot.show();\n        if (!snapshotOptions) return;\n        const planes =await queryForPlanes;\n        const minPlane = planes.find(p => p.id === this.minPlaneIndex);\n        if (!minPlane) return;\n        const maxPlane = planes.find(p => p.id === this.maxPlaneIndex);\n        if (!maxPlane) return;\n        const planesPerFrame = this.getPlanesPerFrame(minPlane, maxPlane);\n        for( let frame = 0; frame < this.props.collageDepth; frame++ ) {\n            const [planeA, planeB] = planesPerFrame[frame];\n            console.info(\"frame, planeA, planeB=\", frame, planeA, planeB);\n            await Scene.Api.updateClipPlane(planeA);\n            await Scene.Api.updateClipPlane(planeB);\n            const canvas = await SnapshotService.getCanvas(snapshotOptions);\n            const filename = `${snapshotOptions.filename}-${Util.padNumber(frame)}.jpg`;\n            console.info(\"filename=\", filename);\n            await SnapshotService.saveCanvasToFile(canvas, filename);\n        }\n        this.updatePlanes();\n    }\n\n    private getPlanesPerFrame(minPlane: IPlane, maxPlane: IPlane) {\n        const planesPerFrame = [];\n        for( let frame = 0; frame < this.props.collageDepth; frame++ ) {\n            this.indexOfFrameToShow = frame;\n            planesPerFrame.push([\n                {\n                    id: minPlane.id,\n                    plane: this.getDefOfMinPlane()\n                },\n                {\n                    id: maxPlane.id,\n                    plane: this.getDefOfMaxPlane()\n                }\n            ])\n        }\n        this.indexOfFrameToShow = 0;\n        console.info(\"minPlane, maxPlane, planesPerFrame=\", minPlane, maxPlane, planesPerFrame);\n        return planesPerFrame;\n    }\n\n    render() {\n        console.info(\"this.props.latitude=\", this.props.latitude);\n        return (<div className=\"webBrayns-view-panel-Clip\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <div>\n                    <Icon content=\"back\" onClick={this.handleBack}/>\n                </div>\n                <p>Slicing</p>\n            </header>\n            <div>\n                <Button\n                    wide={true} warning={true}\n                    label=\"Remove all clipping planes\"\n                    icon=\"delete\"\n                    onClick={this.clear}/>\n                <p>\n                    Slide the colored bar below to set the thickness and position of the main slice.\n                </p>\n                <Range\n                    label=\"Main slice\"\n                    color={Theme.bgS()}\n                    min={this.props.minX}\n                    max={this.props.maxX}\n                    onChange={this.handleXChange}/>\n                <p>Orientation can be set by latitude/longitude.</p>\n                <Slider min={-180}\n                        max={180}\n                        onChange={this.handleLatitudeChange}\n                        step={1}\n                        label={`Latitude: ${this.props.latitude}`}\n                        text={`${this.props.latitude}`}\n                        value={this.props.latitude}/>\n                <Slider min={-90}\n                        max={90}\n                        onChange={this.handleLongitudeChange}\n                        step={1}\n                        label={`Longitude: ${this.props.longitude}`}\n                        text={`${this.props.longitude}`}\n                        value={this.props.longitude}/>\n                <br/>\n                <Button wide={true} flat={true}\n                    label=\"Make camera face the slice\"\n                    icon=\"camera\"/>\n                <p>Make snapshots of each adjacent slice.</p>\n                <Slider min={1}\n                        max={20}\n                        onChange={this.handleCollageDepthChange}\n                        step={1}\n                        label={`Frames count: ${this.props.collageDepth}`}\n                        text={`${this.props.collageDepth}`}\n                        value={this.props.collageDepth}/>\n                <Button wide={true}\n                        label=\"Create Filmstrip\"\n                        onClick={this.handleMovieClick}\n                        icon=\"movie\"/>\n            </div>\n        </div>)\n    }\n}\n\n\n/**\n * Create a plane and returns its ID.\n */\nasync function addPlane(def: [number, number, number, number]): Promise<number> {\n    const plane = await Scene.Api.addClipPlane(def);\n    if (!plane) return 0;\n    return plane.id;\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../../types\"\nimport ClipView from \"./clip\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        activated: state.slicer.activated,\n        minX: state.slicer.minX,\n        maxX: state.slicer.maxX,\n        minY: state.slicer.minY,\n        maxY: state.slicer.maxY,\n        minZ: state.slicer.minZ,\n        maxZ: state.slicer.maxZ,\n        latitude: state.slicer.latitude,\n        longitude: state.slicer.longitude,\n        collageDepth: state.slicer.collageDepth\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClipView);\n","import React from \"react\"\nimport { Client as BraynsClient } from \"brayns\"\n\nimport Scene from './web-brayns/scene'\nimport Model from './web-brayns/scene/model'\nimport ImageStream from './web-brayns/view/image-stream'\nimport Stack from './tfw/layout/stack'\nimport WebsocketConsole from './web-brayns/view/websocket-console'\nimport PanelModel from './web-brayns/view/panel/model'\nimport PanelClip from './web-brayns/view/panel/clip/container'\n\nimport { IVector } from './web-brayns/types'\n\nimport \"./app.css\"\n\n\ninterface IAppProps {\n    panel: string,\n    showConsole: boolean\n}\n\nexport default class App extends React.Component<IAppProps, {}> {\n    constructor( props: IAppProps ) {\n        super( props );\n    }\n\n    async componentDidMount() {\n        try {\n            /*\n            //Scene.clear();\n            let modelNumber = 1;\n            const factor = 200;\n            const models: Model[] = [];\n            const positions: IVector[] = [];\n\n            for (let x=-1; x<=1; x++) {\n                for (let y=-1; y<=1; y++) {\n                    for (let z=-1; z<=1; z++) {\n                        const astro = await loadAstrocyte(modelNumber++);\n                        models.push(astro);\n                        positions.push([\n                            factor * x,\n                            factor * y,\n                            factor * z\n                        ])\n                    }\n                }\n            }\n\n            models.forEach( async (model: Model, index: number) => {\n                await model.locate(positions[index]);\n            })*/\n\n            Scene.camera.lookAtWholeScene();\n        }\n        catch( ex ) {\n            console.error(ex);\n        }\n    }\n\n    render() {\n        return (<div className=\"App\">\n            <div className=\"panel\">\n                <Stack value={this.props.panel}>\n                    <PanelModel key=\"model\"/>\n                    <PanelClip key=\"clip\"/>\n                </Stack>\n            </div>\n            <div className='view'>\n                <ImageStream\n                    onPan={Scene.gestures.handlePan}\n                    onPanStart={Scene.gestures.handlePanStart}/>\n                <WebsocketConsole visible={this.props.showConsole}/>\n            </div>\n        </div>)\n    }\n}\n\n\nasync function loadAstrocyte(id: number): Promise<Model> {\n    const path = `/gpfs/bbp.cscs.ch/project/proj3/resources/meshes/astrocytes/GLIA_${pad(id)}.h5_decimated.off`;\n    return await Scene.loadMeshFromPath(path);\n}\n\n\nfunction pad(value: number): string {\n    let out = `${value}`;\n    while (out.length < 6 ) {\n        out = `0${out}`;\n    }\n    return out;\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"./web-brayns/types\"\nimport AppView from \"./app\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        panel: state.navigation.panel,\n        showConsole: state.navigation.showConsole\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppView);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport PathService from \"./web-brayns/service/path\"\nimport ServiceHost from \"./web-brayns/service/host\"\nimport Scene from \"./web-brayns/scene\"\nimport Dialog from \"./tfw/factory/dialog\"\nimport Theme from \"./tfw/theme\"\nimport App from './app.container';\nimport State from './web-brayns/state'\n\nimport \"./tfw/font/josefin.css\"\n\nimport Python from './web-brayns/service/python'\n\nTheme.apply(\"default\");\n\nasync function start() {\n    const output = await Python.exec(\"test\", {text: \"Hello world!\"})\n    console.info(\"output=\", output);\n\n    const hostName = await ServiceHost.getHostName(false);\n    console.info(\"hostName=\", hostName);\n\n    const browse = await PathService.browse();\n    console.info(\"browse=\", browse);\n\n    try {\n        const client = await Dialog.wait(\"Contacting Brayns...\", Scene.connect(hostName), false);\n        const scene = await Dialog.wait(\"Loading models...\", Scene.Api.getScene(), false);\n        const planes = await Scene.Api.getClipPlanes();\n        const planeIds = planes.map( p => p.id );\n        Scene.Api.removeClipPlanes(planeIds);\n\n        State.dispatch(State.Models.reset(scene.models));\n\n        // Entry point for our app\n        const root = document.getElementById('root') as HTMLElement;\n        ReactDOM.render(<Provider store={State.store}><App brayns={client}/></Provider>, root);\n\n        const splash = document.getElementById('splash-screen');\n        if (splash) {\n            splash.classList.add(\"vanish\");\n            window.setTimeout(() => document.body.removeChild(splash), 600);\n        }\n    }\n    catch(ex) {\n        await Dialog.alert(`Seems like Brayns is not reachable on ${hostName}!`);\n        location.reload();\n    }\n\n}\n\nstart();\n"],"sourceRoot":""}