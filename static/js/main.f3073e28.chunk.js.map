{"version":3,"sources":["web-brayns/view/material/preview/diffuse.jpg","web-brayns/view/material/preview/diffuse2.jpg","web-brayns/view/material/preview/glossy.jpg","web-brayns/view/material/preview/cartoon.jpg","web-brayns/view/material/preview/electron.jpg","tfw/factory/dialog.yaml","web-brayns/service/python.ts","web-brayns/state/animation.ts","web-brayns/state/current-model.ts","tfw/storage.ts","tfw/converter/string.ts","tfw/converter/boolean.ts","tfw/converter/string-array.ts","tfw/gesture/moves.ts","tfw/gesture/finger.ts","tfw/gesture/basic-handler.ts","tfw/gesture/gesture.ts","tfw/color.ts","tfw/theme.ts","tfw/converter/function.ts","tfw/behavior/touchable.ts","tfw/converter/integer.ts","tfw/converter/unit.ts","tfw/icons.ts","tfw/view/icon.tsx","tfw/view/label/label.tsx","tfw/escape-handler.ts","tfw/view/combo.tsx","tfw/view/input/input.tsx","tfw/layout/flex.tsx","web-brayns/view/snapshot/snapshot.tsx","web-brayns/state/dialogs.ts","web-brayns/state/models.ts","web-brayns/state/navigation.ts","web-brayns/state/path.ts","web-brayns/state/slicer.ts","web-brayns/state/state.ts","web-brayns/service/path.ts","tfw/url-args.ts","tfw/converter/array.ts","tfw/intl.ts","tfw/view/button.tsx","tfw/factory/dialog.tsx","web-brayns/view/input-host-name/input-host-name.tsx","tfw/listeners.ts","web-brayns/service/brayns.ts","web-brayns/service/host.tsx","web-brayns/scene/api.ts","web-brayns/geometry/geometry.ts","web-brayns/scene/model.ts","web-brayns/models/models.ts","web-brayns/scene/camera.ts","web-brayns/scene/renderer.ts","tfw/throttler.ts","web-brayns/scene/gestures-handler.ts","web-brayns/scene/scene.ts","web-brayns/object/clip-plane.ts","web-brayns/script/script.ts","web-brayns/service/snapshot.ts","web-brayns/view/snapshot/snapshot.container.ts","web-brayns/dialog/snapshot.tsx","tfw/debouncer.ts","tfw/converter/double.ts","tfw/view/slider/slider.tsx","tfw/util.ts","web-brayns/view/animation-control/animation-control.tsx","web-brayns/view/animation-control/animation-control.container.ts","tfw/factory/image.ts","web-brayns/view/image-stream/image-stream.tsx","tfw/watcher/resize.ts","web-brayns/view/video-stream/video-stream.tsx","tfw/layout/stack.tsx","web-brayns/view/websocket-console/websocket-console.tsx","tfw/view/touchable.tsx","web-brayns/view/path-selector/path-bar/path-bar.tsx","tfw/view/list/list.tsx","web-brayns/view/path-selector/path-list/path-list.tsx","web-brayns/view/path-selector/path-selector.tsx","web-brayns/view/path-selector/path-selector.container.ts","web-brayns/view/input-path/input-path.tsx","web-brayns/service/local-storage.ts","web-brayns/view/model-button/model-button.tsx","web-brayns/tool/matcher.ts","web-brayns/view/model-list/model-list.tsx","web-brayns/view/model-list/container.ts","web-brayns/view/panel/models/models.tsx","web-brayns/view/material/material.tsx","web-brayns/dialog/material.tsx","web-brayns/view/panel/model/model.tsx","web-brayns/view/panel/model/container.ts","tfw/view/checkbox.tsx","web-brayns/view/orientation/orientation.tsx","web-brayns/view/location/location.tsx","web-brayns/view/scale/scale.tsx","web-brayns/view/panel/clip/clip.tsx","web-brayns/view/panel/clip/container.ts","app.tsx","app.container.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","en","cancel","close","ok","fr","python","exec","_exec","Object","asyncToGenerator","regenerator_default","a","mark","_callee","serviceName","params","data","url","init","response","text","output","_args","arguments","wrap","_context","prev","next","length","undefined","FormData","append","JSON","stringify","concat","method","body","credentials","fetch","sent","parse","abrupt","t0","Error","code","status","statusText","stop","_x","apply","this","state_animation","INITIAL_STATE","current","delta","dt","frameCount","playing","unit","reducer","state","action","type","startsWith","substr","assign","animation","update","current_model","brayns","id","name","path","bounds","max","min","transformation","rotation","scale","translation","parent","deleted","selected","technical","materialIds","objectSpread","model","reset","storage","local","makeStorage","window","localStorage","session","sessionStorage","get","key","defaultValue","value","getItem","ex","console","error","removeItem","set","setItem","del","castString","t","isNaN","castBoolean","v","trim","toLowerCase","num","parseInt","castStringArray","defaultArray","defaultString","Array","isArray","map","item","CAPACITY","Moves","x","y","classCallCheck","_x0","_y0","_time0","_y","_time","_cursor","now","fill","shift","idx","Date","idx0","idx1","_index","time","time0","time1","time01","idx2","time12","x0","x1","y0","y1","Finger","fingers","identifier","index","indexOf","indexOfFirstNull","push","movingElements","addEventListener","event","_i","_movingElements","movingElem","cancelBubble","target","handleMove","clientX","clientY","pointer","buttons","translateButtons","clear","createClear","_i2","_movingElements2","handleUp","splice","BasicHandler","element","handleDown","mouseType","mouseTypeTime","deviceHandlers","pressed","_this","handler","checkMouseType","rect","getBoundingClientRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","changedTouches","Symbol","iterator","done","touch","getIndex","left","top","err","return","touchstart","call","_this2","mousedown","delay","_this$deviceHandlers","removeEventListener","evt","preventDefault","stopPropagation","metaKey","ctrlKey","SYMBOL","ID","STANDARD_EVENTS","Gesture","elem","handlers","pointers","bind","rawHandlers","_Object$keys","keys","eventName","wheel","deltaX","deltaY","deltaZ","wrapSpecialHandlers","forEach","_len","names","_key","_names","isDown","moves","width","height","ptr","getPointer","down","add","up","recognizeTap","recognizeSwipe","recognizePan","tap","elapsedTime","Math","abs","startX","startY","recognizePanDown","recognizePanUp","pan","_ptr$moves","hasHandlerFor","sx","speedX","speedY","dx","pandown","panvertical","panup","recognizeSwipeDown","recognizeSwipeUp","recognizeSwipeLeft","swipe","_ptr$moves2","dy","swipedown","swipevertical","swipeup","swipeleft","swipehorizontal","gesture","Color","codeCSS","R","G","B","H","S","L","A","input","toUpperCase","parseHexa","parseRGB","parseRGBA","parseHSL","luminance","color","hexa2","newColor","chroma","INV6","charAt","INV15","INV255","m","RX_RGB","clamp01","RX_RGBA","parseFloat","RX_HSL","INV359","INV99","hsl2rgb","luminanceStep","rgb","_rgb","slicedToArray","newRGB","rgba","_rgba","newRGBA","color1","color2","alpha","beta","colors","newBlack","spacesCount","firstColorIndex","floor","translatedAlpha","mix","red","green","blue","out","toString","tfw_theme","register","registerTheme","document","THEMES","css","classList","remove","vars","bg0","makeGetCurrentColor","bg1","bg2","bg3","bgP","bgPD","bgPL","bgS","bgSD","bgSL","black","white","isDark","colorName","$isDark","average","isThemeGloballyDark","varName","setFontSize","size","html","documentElement","normalize","completeWithDefaultValues","COLOR","THEME_COLOR_NAMES","themeName","_style","style","s","ALPHA_HEXA","pen","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","letter","codeVariables","codeBackground","elevationColor","addAlpha","ELEVATIONS","elevationKey","elevation","codeElevation","depth","_THEME_COLOR_NAMES","fgColorName","bgColorName","styleFgColorName","styleBgColorName","bgClass","fgClass","position","piecesFG","piecesSVG","piecesBG","pop","join","tail","codeText","styleElement","createElement","getElementsByTagName","appendChild","textContent","0","2","4","6","8","9","10","11","12","16","24","completeBackgrounds","has0","has1","has2","has3","rgb2hsl","darkenBackground","color0","r0","g0","b0","color3","r3","g3","b3","dark","light","rotateHue","bg","hexa","EMPTY_FUNCTION","Touchable","args","_element","_enabled","accent","onTap","enabled","castFunction","that","on","keydown","fire","getComputedStyle","screen","div","className","createScreen","borderRadius","getPropertyValue","w","h","radius","ceil","sqrt","ripple","background","Theme","setTimeout","removeChild","castInteger","defVal","RX_CSS_UNIT","castUnit","scalar","draw","d","stroke","iconsBook","android","bug","camera","center","child","copy","counter","cut","delete","direction","down-double","edit","eraser","export","file","flag-jp","r","flag-fr","flag-it","flag-de","flag-en","folder","font","format-align-center","format-align-justify","format-align-left","format-align-right","format-bold","format-italic","format-float-center","format-float-left","format-float-none","format-float-right","format-header","format-underline","fullscreen","gear","gps","hand","heart","hide","home","image","import","improvement","info","left-double","link","location","logout","mail","map-layer","menu","minus","minus-o","minus-small","more","movie","pack","pause","play","plug","plus","plus-o","plus-small","print","question","redo","refresh","right","right-double","run","search","select","sitemap","unselect","share","show","skip-next","skip-next2","skip-prev","skip-prev2","speaker","speaker-off","split-vertical","split-horizontal","star","stat","switch","tri-down","tri-left","tri-right","tri-up","twitter","undo","up-double","user","wait","zoom-in","zoom-out","warning","synonyms","back","help","save","_Object$keys2","val","EnumPenColor","Icon","props","possibleConstructorReturn","getPrototypeOf","refIcon","visible","timeoutHandle","React","sort","elemIcon","clearTimeout","requestAnimationFrame","slot","onHide","_this3","animate","flipH","flipV","content","castContent","rotate","onClick","classes","svgContent","createSvgContent","transform","triggerVisibleAnimation","react","ref","viewBox","preserveAspectRatio","strokeWidth","strokeLinecap","strokeLinejoin","def","elementName","_parseDef","_ref","attributes","children","_ref2","arg1","arg2","parseDef","attribs","split","attribName","attribValue","CLASSES","PENS","manageColors","Label","label","react_default","htmlFor","Component","escape_handler","listener","initialized","Combo","touchable","list","button","bigList","selectedKey","selectedIndex","handleClick","assertThisInitialized","expand","onChange","_list$getBoundingClie","innerHeight","innerHTML","items","querySelectorAll","scrollTop","_ensureSelectionVisible","EscapeHandler","_swapItems","_this$_computeDimensi","_computeDimensions","_this$_showList","_showList","handleKeyboard","_handleKeyboard","scroll","wide","goodKeys","minimalLength","k","ensureGoodKeys","label_Label","icon_Icon","Input","handleKeyDown","_this$props","onEnterPressed","onFocus","setSelectionRange","onBlur","placeholder","focus","globalId","inputClassName","maxWidth","autoFocus","disabled","onKeyDown","Flex","dir","justifyContent","alignItems","flexWrap","toConsumableArray","RESOLUTIONS","fullHD","thumbnail","presentation","ultraHD","SAMPLINGS","medium","quick","low","high","ultra","res","resolution","_resolution","Snapshot","handleWidthChange","onWidthChange","handleHeightChange","onHeightChange","handleSizeKeyChange","onSizeKeyChange","handleSamplesChange","samples","onSamplesChange","handleSamplesKeyChange","onSamplesKeyChange","handleFilenameChange","filename","onFilenameChange","input_Input","combo_Combo","sizeKey","flex_Flex","samplesKey","RESOLUTION_NAME","SAMPLING_NAME","dialogs","snapshot","Storage","newState","updateSnapshot","state_models","models","slice","alreadyAddedIds","filter","alreadyHere","includes","navigation","panel","showConsole","setPanel","toggleConsoleVisibility","state_path","root","files","folders","slicer","activated","minX","maxX","latitude","longitude","collageDepth","sliceInfo","Animation","currentModel","CurrentModel","Dialogs","Models","Navigation","Path","Slicer","store","createStore","state_state","dispatch","service_path","browse","ROOT","result","Python","State","UrlArgs","substring","itemWithSpacesInsteadOfPlus","indexOfEqual","decodeURIComponent","castArray","Mode","Button","tag","icon","flat","small","gCurrentLanguage","navigator","language","Intl","translations","addParams","languages","_languages","lang","instance","translate","defineProperty","intl","defaultText","toIntl","_value","mode","Text","paramIndex","c","Escape","Placeholder","_","make","require","tfw_factory_dialog","alert","Promise","resolve","dialog","Dialog","onClose","footer","button_Button","confirm","caption","title","confirmed","btnCancel","btnOK","options","_screen","_options","closeOnEscape","_hide","opt","header","ReactDOM","render","task","reject","then","HostNameInput","handleChange","hostName","setState","handleEnterPressed","Listeners","listeners","argument","BraynsService","host","debug","ws","autogeneratedId","queries","readyListeners","binaryListeners","subscribers","handleOpen","handleMessage","handleStringMessage","handleClose","log","connect","handleError","handleReject","WebSocket","binaryType","handleResolve","btoa","protocol","jsonrpc","send","message","handleUpdate","handleResponse","query","CONNECTION_TIMEOUT","service_host","getHostName","_callee3","ignoreQueryString","_context3","_callee2","urlArgs","hostFromQueryString","validated","onOk","_context2","input_host_name_HostNameInput","_onClose","reload","_x3","_callee5","_context5","_callee4","client","_context4","_x4","_x5","api","addClipPlane","addLightAmbient","addLightDirectional","addLightQuad","addLightSphere","addLightSpot","addModel","chunk","clearLights","getAnimationParameters","getApplicationParameters","getCamera","getCameraParams","getClipPlanes","getEnvironmentMap","getInstances","getLights","getLoaders","getModelProperties","getModelTransferFunction","getRenderer","getRendererParams","getScene","getStatistics","getVolumeParameters","imageJpeg","inspect","loadersSchema","modelPropertiesSchema","quit","removeClipPlanes","removeLights","removeModel","requestModelUpload","resetCamera","schema","setAnimationParameters","setApplicationParameters","setCamera","setCameraParams","setEnvironmentMap","setModelProperties","setModelTransferFunction","setRenderer","setRendererParams","setScene","setVolumeParameters","updateClipPlane","updateInstance","updateModel","plane","Scene","request","_callee6","_context6","_callee7","model_param","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","_callee13","_context13","_callee14","_context14","_callee15","_context15","_callee16","range","_context16","_callee17","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","_context21","_callee22","_context22","_callee23","_context23","_callee24","_context24","_callee25","_context25","_callee26","_context26","_callee27","_context27","_callee28","_context28","_callee29","_context29","_callee30","_context30","_callee31","ids","_context31","_callee32","_context32","_callee33","_context33","_callee34","param","_context34","_callee35","_context35","_callee36","endpoint","_context36","_callee37","_context37","_callee38","_context38","_callee39","_context39","_callee40","input0","_context40","_callee41","_context41","_callee42","_context42","_callee43","_context43","_callee44","_context44","_callee45","_context45","_callee46","_context46","_callee47","_context47","_callee48","settings","_context48","_callee49","clip_plane","_context49","_callee50","model_instance","_context50","_callee51","_context51","geometry","addVectors","deg2rad","makeQuaternionAsAxisRotation","makeQuaternionFromLatLngTilt","lat","lng","tilt","qA","qC","multiplyQuaternions","rotateWithQuaternion","makeVector","startPoint","endPoint","plane6to4","point","normal","scalarProduct","rotateBounds","scaleBounds","vector","factor","n","translateBounds","b","angle","axis","halfAngle","cos","sin","_axis","q","_q","q1","q2","q3","q0","_r","r1","r2","_vector","z","len2","f","v1","v2","_v","z1","_v2","quaternion","Q","_point","_Q","deg","PI","Model","nextPosition","currentBounds","currentPosition","relativeMoving","Geom","nextBounds","nextScale","currentScale","boundsAtCenter","scaledBounds","nextRotation","rotatedBounds","Api","bounding_box","updateState","lookAtBounds","models_models","createModelFromBraynsData","getAllModels","getModelsBounds","modelsWithValidBounds","hasValidBounds","i","getVisibleModels","getState","Camera","states","orientation","applyCamera","applyToBrayns","distance","distanceFactor","vectorZ","dist","minY","minZ","maxY","maxZ","centerX","centerY","centerZ","cameraZ","_this$orientation","aa","bb","cc","dd","ab2","ac2","ad2","bc2","bd2","cd2","Renderer","_canvas","ctx","blob","blobIndex","lastRederedBlobIndex","paint","canvas","img","srcW","srcH","dstW","dstH","dstX","dstY","blobToImg","naturalWidth","naturalHeight","drawImage","finish","getContext","URL","createObjectURL","Image","src","decode","onload","throttler","timer","timestamp","nextAction","nextArgs","throttleAction","GesturesHandler","savedTarget","savedPosition","savedOrientation","savedAxis","savedScreenPoint","screenX","screenY","savedTargetDistance","handlePanStart","computeCurrentTarget","aspect","getTargetDistance","handlePan","Throttler","translateCamera","orbitCamera","hitPoint","hit","setTarget","oldTranslation","newTranslation","setPosition","oldOrientation","angleX","angleY","quaternionX","quaternionY","quaternionYX","newOrientation","positionVector","rotatedPositionVector","newPosition","setPositionAndOrientation","renderer","gestures","defaultObjectToExport","loadMeshFromPath","setMaterial","setViewPort","cameraParams","ServiceHost","_args2","scene","rendererParams","pixel_alpha","shadows","soft_shadows","accumulation","background_color","head_light","max_accum_frames","samples_per_pixel","subsampling","viewport","fixedOptions","modelInstance","_args5","fixBoundsIfNeeded","locate","applyTransfo","getMaterialIds","modelId","materialId","material","braynsModel","_braynsModel$bounds","modelWithSearchedId","find","PATH","ClipPlane","partialState","attached","isActivated","frontPlaneId","backPlaneId","updateClippingPlanes","_this$computeClipping","frontPlane","backPlane","planes","planes2","computeClippingPlanes","remoteness","cameraCenter","setOrthographic","frontPlaneDescriptor","backPlaneDescriptor","setTransformation","_this$state2","setColor","fromArrayRGB","diffuseColor","toArrayRGB","specularColor","newWhite","shadingMode","script","getAstrocytePath","test","testAstrocytes","X","Y","Z","rnd","decimated","len","padNumber","random","service_snapshot","getCanvas","_getCanvas","dataURI","animation_parameters","format","onerror","saveCanvasToFile","_saveCanvasToFile","mimetype","_args3","toBlob","SaveAsFile","_x2","_res","snapshotView","dialog_snapshot","_show","es","snapshot_container","debouncer","castDouble","Slider","createRef","handleTapOrMove","percent","clamp","step","castFloat","constrainValue","marginLeft","util","AnimationControl","handleCurrentChange","Debouncer","handleSpeedChange","speedKey","keyToSpeed","handleNextClick","handleNext2Click","handlePrevClick","handlePrev2Click","speedToKey","speed","nextValue","Util","slider_Slider","SPEEDS","View","factory_image","fromArrayBuffer","arrayBuffer","Blob","fromBlob","ImageStream","canvasRef","handleImage","ImageFactory","clientWidth","clientHeight","onPanStart","getScreenPoint","onPan","updateViewPort","handleScreenShot","SnapshotService","moveForward","moveBackward","onfocus","moz-opaque","animation_control_container","ResizeObserver","intervalId","targets","checkSize","entries","areDifferent","inlineSize","blockSize","borderBoxSize","contentBoxSize","contentRect","createClass","getTarget","setInterval","clearInterval","ResizeWatcher","debouncerDelay","observer","onEntries","filteredEntries","Debounder","attach","detach","observe","unobserve","obj","MIMECODEC","VideoStream","refVideo","sourceBuffer","lastWidth","lastHeight","arraySize","bufArray","mediaSource","resizeWatcher","handleGestureWheel","handleGestureDown","handleGesturePan","createMediaSource","video","MediaSource","addSourceBuffer","enableVideoStream","revokeObjectURL","handleResize","dimension","disableVideoStream","handleWebSocketMessage","bs","streamBuffer","Uint8Array","updating","appendBuffer","paused","videoWidth","videoHeight","handleVideoError","subscribe","unsubscribe","onError","autoPlay","crossOrigin","Stack","scrollable","classNames","WebsocketConsole","handleMethodChange","handleParamsChange","handleExecute","_this$state","querying","parseJSON","parseError","readOnly","STORAGE_PREFIX","json","TouchableBehavior","tabIndex","PathBar","pieces","lastIndex","_loop","piece","view_touchable_Touchable","List","refMain","refHead","refBody","refTail","lastFirstItemIndex","lastVisibleItemsCount","lastItemsArray","itemHeight","onScroll","onPanDown","main","onRefresh","onRefreshAsked","head","animateRefresh","itemsCount","firstItemIndex","visibleItemsCount","tailCount","backgroundSize","mapper","minHeight","maxHeight","PathList","onFileClick","onFolderClick","list_List","PathSelector","path_bar_PathBar","path_list_PathList","concatPath","endsWith","_onFolderClick","PathService","prefix","_default","path_selector_container","ModelButton","handleToggleSelection","handle","onToggleSelection","handleFocus","handleShow","setVisible","handleHide","handleMore","saveState","RX_SEPARATOR","Matcher","textToMatchAgainst","lowerCaseText","modelList","currentlySelectedModel","setSelected","handleFilterInputChange","filterInput","handleFilterChange","handleSortChange","matcher","matches","sortByName","sortByVolume","filteredModels","model_button_ModelButton","model1","model2","name1","name2","computeVolume","ModelList","handleClip","handleLoadMesh","input_path_default","lookAtWholeScene","container","SHADINGS","SHADING_FLAT","glossiness","SHADING_DIFFUSE","SHADING_GLOSSY","SHADING_CARTOON","SHADING_ELECTRON","Material","handleHueChange","hue","handleShaderChange","shaderIndex","onSelect","opacity","shader","backgroundImage","dialog_material","material_Material","handleBack","restoreState","handleMaterial","MaterialDialog","_model$brayns","ModelView","Checkbox","reverse","Orientation","handleLatitudeChange","handleLongitudeChange","_this$props2","handleTiltChange","_this$props3","_this$props4","handleXChange","handleYChange","handleZChange","Scale","handleDepthChange","COLOR_RAMP","clipPlanes","clipPlaneObject","ClipPlaneObject","updatePlanes","handlePlaneOrientationChange","handlePlaneLocationChange","handlePlaneScaleChange","setActivated","handleActivatedChange","_ref3","currentPlaneIndex","setCurrentPlaneIndex","planeColor","ramp","clipPlane","checkbox_Checkbox","scale_Scale","location_Orientation","orientation_Orientation","ClipView","App","Script","stack_Stack","models_Model","model_container","clip_container","stream","image_stream_ImageStream","video_stream_VideoStream","websocket_console_WebsocketConsole","AppView","planeIds","splash","figureOutStreamType","getElementById","app_container","start"],"mappings":"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","file":"static/js/main.f3073e28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/diffuse.43f36ea2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/diffuse2.ba0af4a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/glossy.316efeae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cartoon.35183a92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/electron.1e49f830.jpg\";","module.exports = {\"en\":{\"cancel\":\"Cancel\",\"close\":\"Close\",\"ok\":\"Ok\"},\"fr\":{\"cancel\":\"Annuler\",\"close\":\"Fermer\",\"ok\":\"OK\"}}","export default {\n    async exec(serviceName: string, params: any = \"\"): Promise<any> {\n        //console.info(\"[Python]\", serviceName, params);\n        const data = new FormData();\n        data.append(\"i\", JSON.stringify(params));\n        const\n            url = `/cgi-bin/${serviceName}.py`,\n            init: RequestInit = { method: \"POST\", body: data, credentials: \"include\" },\n            response = await fetch(url, init);\n        if (response.ok) {\n            const text = await response.text();\n            try {\n                const output = JSON.parse(text);\n                //console.info(\"[Python]\", serviceName, \" => \", output);\n                return output;\n            }\n            catch( ex ) {\n                throw Error(text);\n            }\n        }\n        throw {\n            code: response.status,\n            text: response.statusText\n        }\n    }\n}\n","import { IAnimation, IAction } from '../types'\n\nconst PREFIX = \"animation:\"\n\n\nexport default {\n    INITIAL_STATE: {\n        current: 0,\n        delta: 1,\n        dt: 1,\n        frameCount: 0,\n        playing: false,\n        unit: ''\n    },\n\n    reducer(state: IAnimation, action: IAction): IAnimation {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(animation: Partial<IAnimation>): IAction {\n        return { type: `${PREFIX}update`, animation };\n    }\n}\n\n\nfunction update(state: IAnimation, action: IAction): IAnimation {\n    return Object.assign( state, action.animation );\n}\n","import { IModel, IAction } from \"../types\"\n\nconst PREFIX = \"current-model:\"\n\nexport default {\n    INITIAL_STATE: {\n        brayns: {\n            id: -1,\n            name: \"\",\n            path: \"\",\n            bounds: { max: [0,0,0], min: [0,0,0] },\n            transformation: {\n                rotation: [0,0,0,1],\n                scale: [1,1,1],\n                translation: [0,0,0]\n            }\n        },\n        parent: -1,\n        deleted: false,\n        selected: false,\n        technical: false,\n        materialIds: []\n    },\n\n    reducer(state: IModel, action: IAction): IModel {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"reset\": return reset(state, action);\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    reset(model: IModel): IAction {\n        return { type: `${PREFIX}reset`, model };\n    },\n\n    update(model: IModel): IAction {\n        return { type: `${PREFIX}update`, model };\n    }\n}\n\n\nfunction reset(state: IModel, action: IAction): IModel {\n    return { ...action.model }\n}\n\n\nfunction update(state: IModel, action: IAction): IModel {\n    return { state, ...action.model }\n}\n","/**\r\n * @example\r\n * import Storage from \"./tfw/storage\";\r\n * Storage.local.set(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * const state = Storage.local.get(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * Storage.local.del(\"state\");\r\n */\r\n\r\nexport default {\r\n    local: makeStorage(window.localStorage),\r\n    session: makeStorage(window.sessionStorage)\r\n};\r\n\r\ninterface IStorage {\r\n    getItem: (key: string)=>any;\r\n    setItem: (key: string, val: any)=>void;\r\n    removeItem: (key: string)=>void;\r\n}\r\n\r\nfunction makeStorage(storage:IStorage) {\r\n    return {\r\n        get(key: string, defaultValue: any): any {\r\n            const value = storage.getItem(key);\r\n            if( value === null) return defaultValue;\r\n            try {\r\n                return JSON.parse(value);\r\n            }\r\n            catch( ex ) {\r\n                console.error(`storage[\"${key}\"] is not parsable as a JSON object!\\n`\r\n                + `Its value is: \"${value}\".\\nThis item will be deleted.`);\r\n                storage.removeItem(key);\r\n                return defaultValue;\r\n            }\r\n        },\r\n\r\n        set(key: string, value: any) {\r\n            storage.setItem(key, JSON.stringify(value));\r\n        },\r\n\r\n        del(key: string) {\r\n            storage.removeItem(key);\r\n        }\r\n    }\r\n}\r\n","export default function castString(value: any, defaultValue: string): string {\r\n    const t = typeof value;\r\n    if (t === 'number' && !isNaN(value)) {\r\n        return `${value}`;\r\n    }\r\n    if (t === 'string') return value;\r\n    return defaultValue;\r\n}\r\n","export default function castBoolean(v: any, defaultValue = false): boolean {\r\n    switch (typeof v) {\r\n        case \"undefined\":\r\n            return defaultValue;\r\n        case \"boolean\":\r\n            return v;\r\n        case \"number\":\r\n            return v !== 0;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text === 'true' || text === 'yes') return true;\r\n            const num = parseInt(text);\r\n            if (!isNaN(num)) return num !== 0;\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n","import castString from \"./string\";\n\n/**\n * If `value` is not an array, return `defaultArray`.\n * Else if `defaultString` is undefined, return `value`.\n * Else return a copy of `value` with a castString on all its elements.\n *\n * @param   value         [description]\n * @param   defaultArray  [description]\n * @param   defaultString [description]\n * @returns               [description]\n */\nexport default function castStringArray(\n    value: any, defaultArray: string[] = [], defaultString: string = \"\"\n) {\n    if (typeof value === 'string') return [value];\n    if (!Array.isArray(value)) return defaultArray;\n    if (typeof defaultString === 'undefined') return value;\n    return value.map(item => castString(item, defaultString));\n}\n","const CAPACITY = 3;\r\n\r\n/**\r\n * Helper to manage a pointer move.\r\n * It gives you the location, the speed and the acceleration of your pointer.\r\n *\r\n * @type {[type]}\r\n */\r\nexport default class Moves {\r\n    private _x0: number;\r\n    private _y0: number;\r\n    private _time0: number;\r\n    private _x: number[] = new Array(CAPACITY);\r\n    private _y: number[] = new Array(CAPACITY);\r\n    private _time: number[] = new Array(CAPACITY);\r\n    private _cursor: number = 0;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.init(x, y);\r\n    }\r\n\r\n    init(x: number, y: number) {\r\n        this._time0 = this.now;\r\n        this._x0 = x;\r\n        this._y0 = y;\r\n        this._x = this._x.fill(this._x0, 0, CAPACITY);\r\n        this._y = this._y.fill(this._y0, 0, CAPACITY);\r\n        this._time = this._time.fill(this._time0, 0, CAPACITY);\r\n    }\r\n\r\n    _index(shift: number) {\r\n        return (this._cursor + shift) % CAPACITY;\r\n    }\r\n\r\n    get now() { return Date.now(); }\r\n\r\n    add(x: number, y: number) {\r\n        const idx = (this._cursor + CAPACITY - 1) % CAPACITY;\r\n        this._time[idx] = this.now;\r\n        this._x[idx] = x;\r\n        this._y[idx] = y;\r\n        this._cursor = idx;\r\n    }\r\n\r\n    get elapsedTime() { return this.now - this._time0; }\r\n\r\n    get x() { return this._x[this._cursor]; }\r\n    get y() { return this._y[this._cursor]; }\r\n\r\n    get startX() { return this._x0; }\r\n    get startY() { return this._y0; }\r\n\r\n    get speedX() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._x[idx0] - this._x[idx1]) / time;\r\n    }\r\n\r\n    get speedY() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._y[idx0] - this._y[idx1]) / time;\r\n    }\r\n\r\n    get accelX() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const x0 = this._x[idx0];\r\n        const x1 = this._x[idx1];\r\n        const x2 = this._x[idx2];\r\n\r\n        const speed01 = (x0 - x1) / time01;\r\n        const speed12 = (x1 - x2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n\r\n    get accelY() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const y0 = this._y[idx0];\r\n        const y1 = this._y[idx1];\r\n        const y2 = this._y[idx2];\r\n\r\n        const speed01 = (y0 - y1) / time01;\r\n        const speed12 = (y1 - y2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n}\r\n","type TIdentifier = number | null;\r\n\r\nexport default class Finger {\r\n    private fingers: TIdentifier[] = [];\r\n\r\n    getIndex(identifier: number): number {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) return index;\r\n        const indexOfFirstNull = this.fingers.indexOf(null);\r\n        if (indexOfFirstNull !== -1) {\r\n            this.fingers[indexOfFirstNull] = identifier;\r\n            return indexOfFirstNull;\r\n        }\r\n        this.fingers.push(identifier);\r\n        return this.fingers.length - 1;\r\n    }\r\n\r\n    remove(identifier: number) {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) this.fingers[index] = null;\r\n    }\r\n}\r\n","/**\r\n * BasicHandler(\r\n *     element: HTMLElement,\r\n *     handleDown: TBasicHandler,\r\n *     handleUp: TBasicHandler,\r\n *     handleMove: TBasicHandler\r\n * )\r\n *\r\n * Deals with three basic events : DOWN, UP and MOVE.\r\n * If the device has several input mouses, we will return\r\n * only one event.\r\n *\r\n * A TBasicHandler is a synthetic event object:\r\n *   - x: X coordinate relative to the viewport, not including any scroll offset.\r\n *   - y: Y coordinate relative to the viewport, not including any scroll offset.\r\n *   - startX\r\n *   - startY\r\n *   - index: For multi-touch system. The first one is 0, the second is 1, etc.\r\n *   - buttons: 1 = left, 2 = right.\r\n *   - mouse: \"mouse\" | \"touch\" | \"pen\".\r\n *   - clear(): Call stopPropagation() and preventDefault() on this event.\r\n *\r\n */\r\nimport Finger from \"./finger\"\r\nimport { IBasicEvent } from \"./basic-handler.types\"\r\n\r\ninterface IMovingElement {\r\n    // Coords relative to the element.\r\n    x: number,\r\n    y: number,\r\n    index: number,\r\n    target: HTMLElement,\r\n    handleUp: (event: IBasicEvent) => void,\r\n    handleMove: (event: IBasicEvent) => void\r\n}\r\n\r\nconst movingElements: IMovingElement[] = [];\r\n\r\nwindow.addEventListener(\"mousemove\", (event: MouseEvent) => {\r\n    for (const movingElem of movingElements) {\r\n        if (event.cancelBubble) continue;\r\n        const { target, handleMove, x, y, index } = movingElem;\r\n        if (typeof handleMove !== 'function') continue;\r\n        try {\r\n            handleMove({\r\n                x: event.clientX - x,\r\n                y: event.clientY - y,\r\n                index,\r\n                event,\r\n                pointer: \"mouse\",\r\n                buttons: translateButtons(event),\r\n                target,\r\n                clear: createClear(event)\r\n            })\r\n        }\r\n        catch (ex) {\r\n            console.error(`[tfw.gesture.basic-handler] window.mousemove`, ex)\r\n            console.error(\"    handler=\", handleMove)\r\n            console.error(\"    event=\", event)\r\n        }\r\n    }\r\n}, false);\r\n\r\nwindow.addEventListener(\"mouseup\", (event: MouseEvent) => {\r\n    for (const movingElem of movingElements) {\r\n        if (event.cancelBubble) continue;\r\n        const { target, handleUp, x, y, index } = movingElem;\r\n        if (typeof handleUp !== 'function') continue;\r\n        try {\r\n            handleUp({\r\n                x: event.clientX - x,\r\n                y: event.clientY - y,\r\n                index,\r\n                event,\r\n                pointer: \"mouse\",\r\n                buttons: translateButtons(event),\r\n                target,\r\n                clear: createClear(event)\r\n            })\r\n        }\r\n        catch (ex) {\r\n            console.error(`[tfw.gesture.basic-handler] window.mouseup`, ex)\r\n            console.error(\"    handler=\", handleUp)\r\n            console.error(\"    event=\", event)\r\n        }\r\n    }\r\n    movingElements.splice(0, movingElements.length)\r\n}, false);\r\n\r\n\r\n\r\n\r\ntype TTouchEventHandler = (evt: TouchEvent) => void;\r\n\r\ntype TMouseEventHandler = (evt: MouseEvent) => void;\r\n\r\ntype TBasicHandler = (evt: IBasicEvent) => void | undefined;\r\n\r\ninterface IDeviceHandlers {\r\n    touchstart?: TTouchEventHandler;\r\n    touchend?: TTouchEventHandler;\r\n    touchmove?: TTouchEventHandler;\r\n    mousedown?: TMouseEventHandler;\r\n    mouseup?: TMouseEventHandler;\r\n    mousemove?: TMouseEventHandler;\r\n    mouseout?: TMouseEventHandler;\r\n}\r\n\r\nexport default class BasicHandler {\r\n    readonly element: HTMLElement;\r\n    mouseType: string = \"\";\r\n    mouseTypeTime: number = 0;\r\n    deviceHandlers: IDeviceHandlers = {};\r\n    fingers: Finger = new Finger();\r\n    pressed: boolean = false;\r\n\r\n    constructor(element: HTMLElement,\r\n                handleDown: TBasicHandler,\r\n                handleUp: TBasicHandler,\r\n                handleMove: TBasicHandler) {\r\n        this.element = element;\r\n        attachDownEvent.call(this, handleDown, handleUp, handleMove);\r\n    }\r\n\r\n    /**\r\n     * If you device can hold mouse and touch events, you will receive two events.\r\n     * This function prevent it.\r\n     *\r\n     * @param   mouseType\r\n     * @returns If `false`, we must ignore this event.\r\n     */\r\n    checkMouseType(mouseType: string): boolean {\r\n        const now = Date.now();\r\n        const delay = now - this.mouseTypeTime;\r\n        this.mouseTypeTime = now;\r\n        if (this.mouseType.length === 0 || delay > 500) {\r\n            // If the user waits more than 500ms, he can change of mouse.\r\n            this.mouseType = mouseType;\r\n            return true;\r\n        }\r\n        return this.mouseType === mouseType;\r\n    }\r\n\r\n    detachEvents() {\r\n        const element = this.element;\r\n        const { touchstart, mousedown } = this.deviceHandlers;\r\n\r\n        if (touchstart) element.removeEventListener(\"touchstart\", touchstart, false);\r\n        if (mousedown) element.removeEventListener(\"mousedown\", mousedown, false);\r\n    }\r\n}\r\n\r\n\r\nfunction attachDownEvent(this: BasicHandler,\r\n                         handleDown: TBasicHandler,\r\n                         handleUp: TBasicHandler,\r\n                         handleMove: TBasicHandler) {\r\n    attachDownEventTouch.call(this, handleDown, handleUp, handleMove);\r\n    attachDownEventMouse.call(this, handleDown, handleUp, handleMove);\r\n}\r\n\r\n\r\nfunction attachDownEventTouch(this: BasicHandler,\r\n                              handleDown: TBasicHandler,\r\n                              handleUp: TBasicHandler,\r\n                              handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (event: TouchEvent) => {\r\n        if (!this.checkMouseType(\"touch\")) return;\r\n        const rect = element.getBoundingClientRect();\r\n        for (const touch of event.changedTouches) {\r\n            const index = this.fingers.getIndex(touch.identifier)\r\n            const x = touch.clientX - rect.left;\r\n            const y = touch.clientY - rect.top;\r\n            handleDown({\r\n                x,\r\n                y,\r\n                index,\r\n                event,\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                target: element,\r\n                clear: createClear(event)\r\n            });\r\n            movingElements.push({\r\n                handleUp, handleMove, index,\r\n                target: element,\r\n                x,\r\n                y\r\n            })\r\n        }\r\n    };\r\n    deviceHandlers.touchstart = handler;\r\n    element.addEventListener(\"touchstart\", handler, false);\r\n}\r\n\r\n\r\nfunction attachDownEventMouse(this: BasicHandler,\r\n                              handleDown: TBasicHandler,\r\n                              handleUp: TBasicHandler,\r\n                              handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (event: MouseEvent) => {\r\n        if (!this.checkMouseType(\"mouse\")) return;\r\n        const rect = element.getBoundingClientRect();\r\n        this.pressed = true;\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        if (typeof handleDown === 'function') {\r\n            handleDown({\r\n                x,\r\n                y,\r\n                index: 0,\r\n                buttons: translateButtons(event),\r\n                pointer: \"mouse\",\r\n                event,\r\n                target: element,\r\n                clear: createClear(event)\r\n            });\r\n        }\r\n        movingElements.push({\r\n            handleUp, handleMove,\r\n            index: 0,\r\n            target: element,\r\n            x: rect.left,\r\n            y: rect.top\r\n        })\r\n    };\r\n    deviceHandlers.mousedown = handler;\r\n    element.addEventListener(\"mousedown\", handler, false);\r\n}\r\n\r\n\r\nfunction createClear(evt: MouseEvent | TouchEvent) {\r\n    return () => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n}\r\n\r\n/**\r\n * Some mouses have only one button (on Mac, for instance).\r\n * So we will emulate the other buttons by looking at Ctrl and Meta keys.\r\n */\r\nfunction translateButtons(event: MouseEvent): number {\r\n    const { buttons, metaKey, ctrlKey } = event;\r\n    if (buttons !== 1) return buttons;\r\n    if (metaKey && !ctrlKey) return 2;\r\n    if (!metaKey && ctrlKey) return 4;\r\n    return buttons;\r\n}\r\n","/**\n * Here is the list of all parameters used if all the handlers.\n * * x, y: coord relative to the upper-left corner of the element.\n *\n * tap({ x: number, y: number, index: number })\n *\n */\n\nimport Moves from \"./moves\"\nimport BasicHandler from \"./basic-handler\"\nimport { IBasicEvent } from \"./basic-handler.types\"\nimport { IEvent, IWheelEvent } from \"./types\"\n\nconst SYMBOL = Symbol(\"gesture\");\n\nlet ID = 0;\n\nexport interface IHTMLElementWithGesture extends HTMLElement {\n    // A special attribute to attach Gesture object.\n    [SYMBOL]?: Gesture\n}\n\ntype THandlers = {\n    tap?: (event: IEvent) => void;\n    down?: (event: IEvent) => void;\n    up?: (event: IEvent) => void;\n    pan?: (event: IEvent) => void;\n    pandown?: (event: IEvent) => void;\n    panup?: (event: IEvent) => void;\n    panvertical?: (event: IEvent) => void;\n    swipe?: (event: IEvent) => void;\n    swipedown?: (event: IEvent) => void;\n    swipeup?: (event: IEvent) => void;\n    swipevertical?: (event: IEvent) => void;\n    swipeleft?: (event: IEvent) => void;\n    keydown?: (event: KeyboardEvent) => void;\n    keyup?: (event: KeyboardEvent) => void;\n    wheel?: (event: IWheelEvent) => void;\n    [key: string]: ((evt: any) => void) | undefined;\n};\n\ninterface IPointer {\n    isDown: boolean;\n    moves: Moves;\n    rect: {\n        left: number;\n        top: number;\n        width: number;\n        height: number;\n    };\n    type?: string | null;\n    time?: number;\n    id?: number;\n}\n\nconst STANDARD_EVENTS = [\"keydown\", \"keyup\", \"wheel\"];\n\nclass Gesture {\n    //private readonly basicHandler: BasicHandler;\n    private handlers: THandlers;\n    private element: IHTMLElementWithGesture;\n    private readonly pointers: IPointer[];\n    private readonly id: number;\n\n    constructor(elem: IHTMLElementWithGesture) {\n        elem[SYMBOL] = this;\n        this.id = ID++;\n        this.element = elem;\n        this.handlers = {};\n        new BasicHandler(\n            elem,\n            this.handleDown.bind(this),\n            this.handleUp.bind(this),\n            this.handleMove.bind(this)\n        );\n        this.pointers = new Array(3);\n        elem.addEventListener(\"contextmenu\", (evt) => { evt.preventDefault() }, false);\n    }\n\n    get identifier() { return this.id; }\n\n    on(handlers: THandlers) {\n        this.handlers = wrapSpecialHandlers(Object.assign(this.handlers, handlers));\n        Object.keys(this.handlers).forEach(eventName => {\n            if (STANDARD_EVENTS.indexOf(eventName) === -1) return;\n            // This is a non-pointer event. (i.e., keyboard, resize, ...)\n            const handler = this.handlers[eventName];\n            if (typeof handler === 'function' ) {\n                this.element.addEventListener(eventName, handler, false);\n            }\n        });\n    }\n\n    /**\n     * Returns true if current gesture has at least one of the provided handlers.\n     */\n    private hasHandlerFor(...names: string[]) {\n        for( const name of names ) {\n            if (this.handlers[name]) return true;\n        }\n        return false;\n    }\n\n    private getPointer(index: number) {\n        const pointers = this.pointers;\n        if (typeof pointers[index] === 'undefined') {\n            pointers[index] = {\n                isDown: false,\n                moves: new Moves(0, 0),\n                rect: { left: 0, top: 0, width: 0, height: 0 }\n            }\n        }\n        return pointers[index];\n    }\n\n    private handleDown(event: IBasicEvent) {\n        // We don't want to deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { x, y } = event;\n        const { element } = this;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = true;\n        ptr.moves.init(x, y);\n\n        if (this.handlers.down) {\n            this.handlers.down(Object.assign(event, { x, y, target: element }))\n        }\n    }\n\n    private handleUp(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { x, y } = event;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = false;\n        ptr.moves.add(x, y);\n\n        if (this.handlers.up) {\n            this.handlers.up(Object.assign(event, { x, y, target: this.element }));\n        }\n        this.recognizeTap(event, ptr);\n        this.recognizeSwipe(event, ptr);\n    }\n\n    private handleMove(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const ptr = this.getPointer(event.index);\n        const { x, y } = event;\n        ptr.moves.add(x, y);\n        this.recognizePan(event, ptr);\n    }\n\n    private recognizeTap(evt: IBasicEvent, ptr: IPointer) {\n        // A tap is recognized only if there is less than 400ms\n        // between down and up, and if the pointer has not moves more\n        // than 16px.\n        if (!this.handlers.tap || ptr.moves.elapsedTime > 400) return;\n        const moves = ptr.moves;\n        const dx = Math.abs(moves.x - moves.startX);\n        if (dx > 16) return;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dy > 16) return;\n\n        evt.clear();\n        this.handlers.tap({ ...evt, x: moves.x, y: moves.y, target: this.element });\n    }\n\n    private recognizePan(evt: IBasicEvent, ptr: IPointer) {\n        if (!ptr.isDown) return;\n        this.recognizePanDown(evt, ptr);\n        this.recognizePanUp(evt, ptr);\n        if (this.handlers.pan) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.pan(\n                { ...evt, x, y, startX, startY, target: this.element });\n        }\n    }\n\n    private recognizePanDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"pandown\", \"panvertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n\n        if (this.handlers.pandown) {\n            this.handlers.pandown(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizePanUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"panup\", \"panvertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = -moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.startY - moves.y;\n        if (dy < dx) return;\n\n        if (this.handlers.panup) {\n            this.handlers.panup(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipe(evt: IBasicEvent, ptr: IPointer) {\n        this.recognizeSwipeDown(evt, ptr);\n        this.recognizeSwipeUp(evt, ptr);\n        this.recognizeSwipeLeft(evt, ptr);\n        if (this.handlers.swipe) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.swipe({ ...evt, x, y, startX, startY, target: this.element });\n        }\n    }\n\n    private recognizeSwipeDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipedown\", \"swipevertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipedown) {\n            this.handlers.swipedown(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipeUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeup\", \"swipevertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeup) {\n            this.handlers.swipeup({ ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipeLeft(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeleft\", \"swipehorizontal\")) return;\n\n        // Check that we are panning left.\n        const moves = ptr.moves;\n        const sx = -moves.speedX;\n        const sy = Math.abs(moves.speedY);\n        if (sx < sy) return;\n        // Check that the final point is beneath the initial one.\n        const dx = moves.startX - moves.x;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dx < dy) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dx / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeleft) {\n            this.handlers.swipeleft(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipehorizontal) {\n            this.handlers.swipehorizontal(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n}\n\nexport default function(elem: IHTMLElementWithGesture): Gesture {\n    let gesture = elem[SYMBOL];\n    if( gesture ) return gesture;\n    gesture = new Gesture(elem);\n    elem[SYMBOL] = gesture;\n    return gesture;\n}\n\n\n/**\n * Somw event (like \"wheel\") need their handler to be wrapped in order to\n * map the event is something else.\n */\nfunction wrapSpecialHandlers(rawHandlers: THandlers): THandlers {\n    const handlers: THandlers = {};\n    for( const eventName of Object.keys(rawHandlers) ) {\n        if (eventName === 'wheel') {\n            handlers.wheel = (evt: WheelEvent) => {\n                rawHandlers.wheel({\n                    deltaX: evt.deltaX,\n                    deltaY: evt.deltaY,\n                    deltaZ: evt.deltaZ,\n                    x: 0,\n                    y: 0\n                });\n            }\n            continue;\n        }\n        handlers[eventName] = rawHandlers[eventName];\n    }\n    return handlers;\n}\n","/**\r\n * @class Color\r\n * Fast color manipulations.\r\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\r\n * (saturation), and L (luminance) are all floats between 0 and 1.\r\n */\r\nexport default class Color {\r\n    public R: number;\r\n    public G: number;\r\n    public B: number;\r\n    public H: number;\r\n    public S: number;\r\n    public L: number;\r\n    public A: number;\r\n\r\n    constructor(codeCSS: string = \"#000000\") {\r\n        this.R = 0;\r\n        this.G = 0;\r\n        this.B = 0;\r\n        this.H = 0;\r\n        this.S = 0;\r\n        this.L = 0;\r\n        this.A = 1;\r\n\r\n        this.parse(codeCSS);\r\n    }\r\n\r\n    toArrayRGB(): [number, number, number] {\r\n        return [this.R, this.G, this.B]\r\n    }\r\n\r\n    toArrayRGBA(): [number, number, number, number] {\r\n        return [this.R, this.G, this.B, this.A]\r\n    }\r\n\r\n    static isValid(codeCSS: string) {\r\n        if( typeof codeCSS !== 'string' ) return false;\r\n        if( codeCSS.charAt(0) !== '#' ) return false;\r\n        switch( codeCSS.length ) {\r\n            case 4:  // #RGB\r\n            case 5:  // #RGBA\r\n            case 7:  // #RRGGBB\r\n            case 9:  // #RRGGBBAA\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static normalize(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.stringify();\r\n    }\r\n\r\n    static luminance(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminance();\r\n    }\r\n\r\n    /**\r\n     * Returns 1 for bright colors and 0 for dark colors.\r\n     */\r\n    static luminanceStep(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminanceStep();\r\n    }\r\n\r\n    static fromArrayRGB(rgb: [number, number, number]): Color {\r\n        const [R, G, B] = rgb\r\n        return this.newRGB(R, G, B)\r\n    }\r\n\r\n    static fromArrayRGBA(rgba: [number, number, number, number]): Color {\r\n        const [R, G, B, A] = rgba\r\n        return this.newRGBA(R, G, B, A)\r\n    }\r\n\r\n    /**\r\n     * Mix two colors. alpha should be between 0 and 1,\r\n     * but there is no check on this.\r\n     * If alpha is 0, the resulting color is `color1`,\r\n     * if alpha is 1, the resulting color is `color2`.\r\n     */\r\n    static mix(color1: Color, color2: Color, alpha: number=.5): Color {\r\n        const beta = 1 - alpha;\r\n        return Color.newRGBA(\r\n            alpha * color2.R + beta * color1.R,\r\n            alpha * color2.G + beta * color1.G,\r\n            alpha * color2.B + beta * color1.B,\r\n            alpha * color2.A + beta * color1.A\r\n        );\r\n    }\r\n\r\n    /**\r\n     * If `colors` has only two elements, this method is the same as `mix()`.\r\n     * Otherwise, it will perform a linear blending through the colors.\r\n     * If alpha is 0, the resulting color is `colors[0]`,\r\n     * If alpha is 1, the resulting color is `colors[colors.length - 1]`,\r\n     */\r\n    static ramp(colors: Color[], alpha: number=.5): Color {\r\n        if (colors.length === 0) return Color.newBlack()\r\n        if (colors.length === 1) return colors[0]\r\n\r\n        const spacesCount = colors.length - 1\r\n        const firstColorIndex = Math.floor(alpha * spacesCount)\r\n        const color1 = colors[firstColorIndex]\r\n        if (firstColorIndex === spacesCount) return color1\r\n        const color2 = colors[firstColorIndex + 1]\r\n        const translatedAlpha = firstColorIndex + alpha / spacesCount\r\n        return Color.mix(color1, color2, translatedAlpha)\r\n    }\r\n\r\n    static newBlack() {\r\n        return Color.newRGB(0, 0, 0);\r\n    }\r\n\r\n    static newWhite() {\r\n        return Color.newRGB(1, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGB(red: number, green: number, blue: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = 1;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B,A channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @param   {number} alpha - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGBA(red: number, green: number, blue: number, alpha: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = alpha;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Parse a color writtent in CSS syntax.\r\n     *\r\n     * @param   {string} code - CSS color.\r\n     * @returns {boolean} `true` if the color has valid syntax.\r\n     */\r\n    parse(code: string = \"#000000\"): boolean {\r\n        const input = code.trim().toUpperCase();\r\n        if (this.parseHexa.call(this, input)) return true;\r\n        if (this.parseRGB.call(this, input)) return true;\r\n        if (this.parseRGBA.call(this, input)) return true;\r\n        if (this.parseHSL.call(this, input)) return true;\r\n        // @TODO parseHSLA.\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @see https://en.wikipedia.org/wiki/Grayscale\r\n     * @this Color\r\n     * @returns {undefined}\r\n     */\r\n    luminance(): number {\r\n        return (0.2126 * this.R) + (0.7152 * this.G) + (0.0722 * this.B);\r\n    }\r\n\r\n    /**\r\n     * @returns {integer} 0 if the color is dark and 1 if it is light.\r\n     */\r\n    luminanceStep(): number {\r\n        return this.luminance() < .6 ? 0 : 1;\r\n    }\r\n\r\n    /**\r\n     * @this Color\r\n     * @returns {string} String value of the color. `#fd45a7`.\r\n     */\r\n    stringify() {\r\n        let color = hexa2(this.R * 255) + hexa2(this.G * 255) + hexa2(this.B * 255);\r\n        if (this.A < 1) {\r\n            color += hexa2(this.A * 255);\r\n        }\r\n        return `#${color}`;\r\n    }\r\n\r\n    copy() {\r\n        const newColor = new Color();\r\n        newColor.R = this.R;\r\n        newColor.G = this.G;\r\n        newColor.B = this.B;\r\n        newColor.A = this.A;\r\n        newColor.H = this.H;\r\n        newColor.S = this.S;\r\n        newColor.L = this.L;\r\n        return newColor;\r\n    }\r\n\r\n    /**\r\n         * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\r\n         * @this Color\r\n         * @returns {undefined}\r\n         */\r\n    hsl2rgb() {\r\n        const\r\n            H = 6 * this.H,\r\n            S = this.S,\r\n            L = this.L,\r\n            chroma = (1 - Math.abs(2 * L - 1)) * S,\r\n            x = chroma * (1 - Math.abs(H % 2 - 1));\r\n\r\n        let R = 0, G = 0, B = 0;\r\n\r\n        if (H < 3) {\r\n            if (H < 1) {\r\n                R = chroma; G = x; B = 0;\r\n            } else if (H < 2) {\r\n                R = x; G = chroma; B = 0;\r\n            } else {\r\n                // H == 2.\r\n                R = 0; G = chroma; B = x;\r\n            }\r\n        } else if (H < 4) {\r\n            R = 0; G = x; B = chroma;\r\n        } else if (H < 5) {\r\n            R = x; G = 0; B = chroma;\r\n        } else {\r\n            R = chroma; G = 0; B = x;\r\n        }\r\n\r\n        const shift = L - chroma * 0.5;\r\n        this.R = R + shift;\r\n        this.G = G + shift;\r\n        this.B = B + shift;\r\n    }\r\n\r\n    rgb2hsl() {\r\n        const R = this.R;\r\n        const G = this.G;\r\n        const B = this.B;\r\n\r\n        const min = Math.min(R, G, B);\r\n        const max = Math.max(R, G, B);\r\n        const delta = max - min;\r\n\r\n        this.L = 0.5 * (max + min);\r\n\r\n        if (delta < 0.000001) {\r\n            this.H = 0;\r\n            this.S = 0;\r\n        }\r\n        else {\r\n            this.S = delta / (1 - Math.abs(2 * this.L - 1));\r\n            if (max === R) {\r\n                if (G >= B) {\r\n                    this.H = INV6 * ((G - B) / delta);\r\n                } else {\r\n                    this.H = 1 - INV6 * ((B - G) / delta);\r\n                }\r\n            }\r\n            else if (max === G) {\r\n                this.H = INV6 * (2 + (B - R) / delta);\r\n            }\r\n            else {\r\n                this.H = INV6 * (4 + (R - G) / delta);\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseHexa(text: string) {\r\n        if (text.charAt(0) !== '#') return false;\r\n        let R = 0, G = 0, B = 0, A = 1;\r\n\r\n        switch (text.length) {\r\n            case 4:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                break;\r\n            case 5:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                A = parseInt(text.charAt(4), 16) * INV15;\r\n                break;\r\n            case 7:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                break;\r\n            case 9:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                A = parseInt(text.substr(7, 2), 16) * INV255;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        if (isNaN(R) || isNaN(G) || isNaN(B) || isNaN(A)) {\r\n            this.R = this.G = this.B = this.A = 0;\r\n        } else {\r\n            this.R = R;\r\n            this.G = G;\r\n            this.B = B;\r\n            this.A = A;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgb(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgb()` syntax.\r\n     */\r\n    private parseRGB(text: string) {\r\n        const m = RX_RGB.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = 1;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgba(200, 140, 50, 0.5)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgba()` syntax.\r\n     */\r\n    private parseRGBA(text: string) {\r\n        const m = RX_RGBA.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = clamp01(parseFloat(m[4]));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `hsl(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `hsl()` syntax.\r\n     */\r\n    private parseHSL(text: string) {\r\n        const m = RX_HSL.exec(text);\r\n        if (!m) return false;\r\n        this.H = clamp01(parseInt(m[1], 10) * INV359);\r\n        this.S = clamp01(parseInt(m[2], 10) * INV99);\r\n        this.L = clamp01(parseInt(m[3], 10) * INV99);\r\n        this.A = 1;\r\n        this.hsl2rgb();\r\n        return true;\r\n    }\r\n}\r\n\r\nconst\r\n    INV6 = 1 / 6,\r\n    INV15 = 1 / 15,\r\n    INV99 = 1 / 99,\r\n    INV255 = 1 / 255,\r\n    INV359 = 1 / 359;\r\n\r\nconst RX_RGB = /^RGB[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\nconst RX_RGBA = /^RGBA[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/;\r\nconst RX_HSL = /^HSL[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\n\r\nfunction clamp01(value: number): number {\r\n    if (value < 0) return 0;\r\n    if (value > 1) return 1;\r\n    return value;\r\n}\r\n\r\nfunction hexa2(value: number) {\r\n    let out = Math.floor(value).toString(16);\r\n    if (out.length < 2) out = \"0\" + out;\r\n    return out;\r\n}\r\n","import \"./theme.css\"\nimport Color from \"./color\"\n\n/**\n * Manage CSS styles.\n */\nexport default {\n    register: registerTheme,\n    apply: applyTheme,\n    get: getTheme,\n    bg0: makeGetCurrentColor(\"bg0\"),\n    bg1: makeGetCurrentColor(\"bg1\"),\n    bg2: makeGetCurrentColor(\"bg2\"),\n    bg3: makeGetCurrentColor(\"bg3\"),\n    bgP: makeGetCurrentColor(\"bgP\"),\n    bgPD: makeGetCurrentColor(\"bgPD\"),\n    bgPL: makeGetCurrentColor(\"bgPL\"),\n    bgS: makeGetCurrentColor(\"bgS\"),\n    bgSD: makeGetCurrentColor(\"bgSD\"),\n    bgSL: makeGetCurrentColor(\"bgSL\"),\n    black: makeGetCurrentColor(\"black\"),\n    white: makeGetCurrentColor(\"white\"),\n    isDark,\n    setFontSize,\n    normalize: completeWithDefaultValues\n};\n\ninterface IStyle {\n    bg0?: string;\n    bg1?: string;\n    bg2?: string;\n    bg3?: string;\n    bgP?: string;\n    bgPD?: string;\n    bgPL?: string;\n    bgS?: string;\n    bgSD?: string;\n    bgSL?: string;\n    fg0?: string;\n    fg1?: string;\n    fg2?: string;\n    fg3?: string;\n    fgP?: string;\n    fgPD?: string;\n    fgPL?: string;\n    fgS?: string;\n    fgSD?: string;\n    fgSL?: string;\n    black?: string;\n    white?: string;\n    [key: string]: string | undefined;\n};\n\ninterface ITheme {\n    bg0: string,\n    bg1: string,\n    bg2: string,\n    bg3: string,\n    bgP: string,\n    bgPL: string,\n    bgPD: string,\n    bgS: string,\n    bgSL: string,\n    bgSD: string,\n    black: string,\n    white: string\n}\n\n\n//################################################################################\n\ninterface IThemes {\n    css: { [name: string]: HTMLStyleElement };\n    vars: { [name: string]: IStyle }\n    current: string | null;\n}\n\n// Used for luminance computations. Because we need to know which text color\n// can be used based on the background's luminance.\nconst COLOR = new Color();\n\nconst THEME_COLOR_NAMES = [\"0\", \"1\", \"2\", \"3\", \"P\", \"PD\", \"PL\", \"S\", \"SD\", \"SL\"];\nconst THEMES: IThemes = {\n    css: {},\n    vars: {},\n    current: null\n};\n\nfunction registerTheme(themeName: string, _style: IStyle) {\n    const style = completeWithDefaultValues(_style);\n    THEMES.vars[themeName] = style;\n\n    let codeCSS = codeVariables(themeName, style);\n    codeCSS += codeBackground(themeName, style);\n    codeCSS += codeElevation(themeName, style);\n    codeCSS += codeText(themeName, style);\n\n    let styleElement = THEMES.css[themeName];\n    if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        document.getElementsByTagName('head')[0].appendChild(styleElement);\n        THEMES.css[themeName] = styleElement;\n    }\n\n    styleElement.textContent = codeCSS;\n}\n\nfunction codeText(themeName: string, style: IStyle) {\n    let codeCSS = '';\n    for (let depth = 1; depth <= 10; depth++) {\n        for (const colorName of THEME_COLOR_NAMES) {\n            const fgColorName = `fg${colorName}`;\n            const bgColorName = `bg${colorName}`;\n            const styleFgColorName: string = style[fgColorName] as string;\n            const styleBgColorName: string = style[bgColorName] as string;\n            const bgClass = \".thm-bg\" + colorName;\n            const fgClass = \".thm-fg\" + colorName;\n            for (let position = 1; position <= depth; position++) {\n                const piecesFG = [];\n                const piecesSVG = [];\n                const piecesBG = [];\n                for (let index = 1; index <= depth; index++) {\n                    piecesBG.push(position === index ? bgClass : '*');\n                    piecesSVG.push(position === index ? bgClass : '*');\n                    piecesFG.push(position === index ? fgClass : '*');\n                    if (index === depth) {\n                        piecesBG.push(piecesBG.pop() + \".thm-fg\");\n                        piecesFG.push(piecesFG.pop() + fgClass);\n                    }\n                }\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesBG.join(\" > \")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + removeTail(piecesBG.join(\" > \"), \".thm-fg\")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesFG.join(\" > \")\n                    + \" { color: \" + styleBgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-fill0\"\n                    + \" { fill: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-stroke0\"\n                    + \" { stroke: \" + styleFgColorName + \" }\\n\";\n            }\n        }\n    }\n    return codeCSS;\n}\n\nconst ALPHA_HEXA = \"123456789ABCDE\";\nfunction codeVariables(themeName: string, style: IStyle) {\n    let codeCSS = \"body.dom-theme-\" + themeName + '{\\n';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        const s = style[`bg${colorName}`] as string;\n        codeCSS += `  --thm-bg${colorName}: ${s};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-bg${colorName}-${a}: ${s}${a}${a};\\n`;\n        }\n        COLOR.parse(s);\n        const pen = COLOR.luminanceStep() ? style.black : style.white;\n        codeCSS += `  --thm-fg${colorName}: ${pen};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-fg${colorName}-${a}: ${pen}${a}${a};\\n`;\n        }\n    });\n    style.white = normalize(style.white);\n    style.black = normalize(style.black);\n    codeCSS += `  --thm-white: ${style.white};\\n`;\n    codeCSS += `  --thm-black: ${style.black};\\n`;\n    for (const letter of ALPHA_HEXA) {\n        codeCSS += `  --thm-white-${letter}: ${style.white}${letter}${letter};\\n`;\n        codeCSS += `  --thm-black-${letter}: ${style.black}${letter}${letter};\\n`;\n    }\n    codeCSS += \"}\\n\";\n    return codeCSS;\n}\n\n\nfunction codeBackground(themeName: string, style: IStyle) {\n    var codeCSS = '';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        codeCSS += \"body.dom-theme-\" + themeName + \".thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-fg\" + colorName\n            + \" { color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += `body.dom-theme-${themeName} .thm-bg${colorName}-text`\n            + \" { background-color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-bottom\"\n            + \" { background: linear-gradient(to top,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-top\"\n            + \" { background: linear-gradient(to bottom,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-left\"\n            + \" { background: linear-gradient(to right,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-right\"\n            + \" { background: linear-gradient(to left,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n\n        if (!isNaN(parseInt(colorName))) return;\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-fill\" + colorName\n            + \" { fill: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-stroke\" + colorName\n            + \" { stroke: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n    });\n    return codeCSS;\n}\n\nconst ELEVATIONS: { [ele: string]: string[] } = {\n    \"0\": [\"none\"],\n    \"2\": [\"button\", \"card\"],\n    \"4\": [\"bar\"],\n    \"6\": [\"floating\"],\n    \"8\": [\"button:active\", \"button-raised\", \"card-raised\"],\n    \"9\": [\"sunmenu-0\"],\n    \"10\": [\"sunmenu-1\"],\n    \"11\": [\"sunmenu-2\"],\n    \"12\": [\"floating:active\"],\n    \"16\": [\"nav\"],\n    \"24\": [\"dialog\"]\n};\nfunction codeElevation(themeName: string, style: IStyle) {\n    COLOR.parse(style.bg2);\n    const luminance = COLOR.luminance();\n    var elevationColor = luminance < .6\n        ? addAlpha(style.white, 4)\n        : addAlpha(style.black, 6);\n    var codeCSS = '';\n    const elevationKeys = Object.keys(ELEVATIONS);\n    elevationKeys.forEach(function(elevationKey) {\n        const elevation = parseInt(elevationKey, 10);\n        ELEVATIONS[elevationKey].forEach(name => {\n            codeCSS += `body.dom-theme-${themeName} .thm-ele-${name} {\n  box-shadow: 0 ${elevation}px ${2 * elevation}px ${elevationColor}\n}\\n`;\n        })\n    });\n    return codeCSS;\n}\n\nfunction applyTheme(name: string, target: HTMLElement = document.body) {\n    if (!THEMES.css[name]) {\n        console.error(\"This theme has not been registered: \", name);\n        return;\n    }\n    var body = document.body;\n    if (typeof THEMES.current === 'string') {\n        body.classList.remove(`dom-theme-${THEMES.current}`);\n    }\n    THEMES.current = name;\n    body.classList.add(`dom-theme-${THEMES.current}`);\n}\n\nfunction getTheme(name: string = \"default\"): ITheme {\n    return THEMES.vars[name] as ITheme;\n}\n\nfunction completeBackgrounds(style: IStyle) {\n    let has0 = typeof style.bg0 === 'string';\n    const has1 = typeof style.bg1 === 'string';\n    const has2 = typeof style.bg2 === 'string';\n    let has3 = typeof style.bg3 === 'string';\n\n    if (has0 && has1 && has2 && has3) return\n\n    if (!has0 && !has1 && !has2 && !has3) {\n        style.bg0 = \"#E0E0E0\";\n        style.bg1 = \"#F5F5F5\";\n        style.bg2 = \"#FAFAFA\";\n        style.bg3 = \"#FFF\";\n        return;\n    }\n    if (has0 && !has1 && !has2 && !has3) {\n        style.bg3 = lightenBackground(style.bg0 as string);\n        has3 = true;\n    }\n    if (!has0 && !has1 && !has2 && has3) {\n        style.bg0 = darkenBackground(style.bg3 as string);\n        has3 = true;\n    }\n    const color0 = new Color(style.bg0);\n    const r0 = color0.R;\n    const g0 = color0.G;\n    const b0 = color0.B;\n    const color3 = new Color(style.bg3);\n    const r3 = color3.R;\n    const g3 = color3.G;\n    const b3 = color3.B;\n    const color1 = Color.newRGB((2 * r0 + r3) / 3, (2 * g0 + g3) / 3, (2 * b0 + b3) / 3);\n    const color2 = Color.newRGB((r0 + 2 * r3) / 3, (g0 + 2 * g3) / 3, (b0 + 2 * b3) / 3);\n    style.bg1 = color1.stringify();\n    style.bg2 = color2.stringify();\n}\n\nfunction completeWithDefaultValues(style: IStyle) {\n    if (typeof style === 'undefined') style = {};\n\n    completeBackgrounds(style);\n\n    if (typeof style.bgP !== 'string') style.bgP = \"#3E50B4\";\n    if (typeof style.bgPD !== 'string') style.bgPD = dark(style.bgP);\n    if (typeof style.bgPL !== 'string') style.bgPL = light(style.bgP);\n    if (typeof style.bgS !== 'string') style.bgS = rotateHue(style.bgP);\n    if (typeof style.bgSD !== 'string') style.bgSD = dark(style.bgS);\n    if (typeof style.bgSL !== 'string') style.bgSL = light(style.bgS);\n\n    if (typeof style.white !== 'string') style.white = '#fff';\n    if (typeof style.black !== 'string') style.black = '#000';\n\n    THEME_COLOR_NAMES.forEach(function(name) {\n        const bg: string = style[`bg${name}`] || '#000';\n        COLOR.parse(bg);\n        var luminance = COLOR.luminance();\n        style[`fg${name}`] = luminance < .6 ? style.white : style.black;\n    });\n\n    return style;\n}\n\nfunction dark(color: string) {\n    const percent = .25;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L *= 1 - percent;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction darkenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.max(0, COLOR.L - 0.15);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction light(color: string) {\n    var percent = .4;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = percent + (1 - percent) * COLOR.L;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction lightenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.min(1, COLOR.L + 0.3);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction rotateHue(color: string): string {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.H = COLOR.H + .5;\n    if (COLOR.H > 1) COLOR.H--;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\n/**\n * @param {string} color - RGB color in format #xxx or #xxxxxx.\n * @param {string} alpha - Single char between 0 and F.\n */\nfunction addAlpha(color: string, alpha: string) {\n    if (color.length < 5) return color + alpha;\n    return color + alpha + alpha;\n}\n\nfunction removeTail(text: string, tail: string) {\n    return text.substr(0, text.length - tail.length);\n}\n\nfunction isDark(colorName: string = \"\"): boolean {\n    if (colorName === \"\") return isThemeGloballyDark();\n\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    const varName = `$isDark/${colorName}`;\n    let isDark = vars[varName];\n    if (typeof isDark === 'boolean') return isDark;\n\n    const color = new Color(vars[colorName]);\n    vars[varName] = !color.luminanceStep();\n    return vars[varName];\n}\n\nfunction isThemeGloballyDark(): boolean {\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    let isDark = vars.$isDark;\n    if (typeof isDark === 'boolean') return isDark;\n\n    const bg0 = new Color(vars.bg0);\n    const bg1 = new Color(vars.bg1);\n    const bg2 = new Color(vars.bg2);\n    const bg3 = new Color(vars.bg3);\n    const average = Color.mix(\n        Color.mix(bg0, bg1),\n        Color.mix(bg2, bg3)\n    );\n    vars.$isDark = !average.luminanceStep();\n    return vars.$isDark;\n}\n\nfunction makeGetCurrentColor(colorName: string): () => string {\n    return () => THEMES.vars[THEMES.current || \"default\"][colorName];\n}\n\nfunction setFontSize(size: \"small\" | \"medium\" | \"large\") {\n    const html = document.documentElement;\n    html.classList.remove(`thm-font-size-small`);\n    html.classList.remove(`thm-font-size-medium`);\n    html.classList.remove(`thm-font-size-large`);\n    html.classList.add(`thm-font-size-${size}`);\n}\n\nfunction normalize(hexa: string): string {\n    const color = new Color(hexa);\n    return color.stringify();\n}\n\nregisterTheme(\"default\", { bgP: \"#1e90ff\" });\n","const EMPTY_FUNCTION = () => { };\r\n\r\ntype TFunction = () => void;\r\n\r\n\r\nexport default function castBoolean(value: any, defaultValue: TFunction = EMPTY_FUNCTION): TFunction {\r\n    if (typeof value === 'function') return value;\r\n    return defaultValue;\r\n}\r\n","import Gesture from \"../gesture\"\nimport Theme from \"../theme\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castFunction from \"../converter/function\"\nimport \"./touchable.css\"\n\ninterface IArgs {\n    element?: HTMLElement;\n    enabled?: boolean;\n    color?: string;\n    onTap?: () => void;\n}\n\ninterface IRect {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n}\n\nexport default class Touchable {\n    _element: HTMLElement | undefined;\n    _enabled: boolean = true;\n    color: string = \"#000\";\n    accent: boolean = false;\n    onTap: () => void;\n\n    constructor(args: IArgs) {\n        this.element = args.element;\n        this.enabled = castBoolean(args.enabled, true);\n        this.color = castString(args.color, \"\");\n        this.onTap = castFunction(args.onTap);\n    }\n\n    fire() {\n        if (!this.enabled) return;\n\n        const handler = this.onTap;\n        if (typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    get enabled() { return this._enabled; }\n    set enabled(value: boolean) { this._enabled = value; }\n\n    get element() { return this._element; }\n    set element(element: HTMLElement | undefined) {\n        const that = this;\n        if (typeof element === 'undefined') return;\n        Gesture(element).on({\n            keydown(evt: any) {\n                if (!that.enabled) return;\n\n                const key = evt.key;\n                if (key === \" \" || key === \"Enter\") {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                    that.fire();\n                }\n            },\n\n            down(evt) {\n                if (!that.enabled) return;\n            },\n\n            tap(evt) {\n                if (!that.enabled) return;\n                that.fire();\n\n                const rect = element.getBoundingClientRect();\n                const style = window.getComputedStyle(element);\n                const screen = createScreen(rect);\n                screen.style.borderRadius = style.getPropertyValue(\"border-radius\");\n                const x = evt.x || 0;\n                const y = evt.y || 0;\n                const w = Math.max(x, rect.width - x);\n                const h = Math.max(y, rect.height - y);\n                const radius = Math.ceil(1.1 * Math.sqrt(w * w + h * h));\n                const ripple = document.createElement(\"div\");\n                screen.appendChild(ripple);\n                ripple.style.left = `${x - radius}px`;\n                ripple.style.top = `${y - radius}px`;\n                ripple.style.width = `${2 * radius}px`;\n                ripple.style.height = `${2 * radius}px`;\n                if (that.color.length > 0) {\n                    ripple.style.background = that.color;\n                } else {\n                    ripple.style.background = Theme.isDark() ? \"#fff\" : \"#000\";\n                }\n                window.setTimeout(() => ripple.className = \"open\");\n                window.setTimeout(() => document.body.removeChild(screen), 500);\n            }\n        })\n    }\n}\n\n\nfunction createScreen(rect: IRect) {\n    const div = document.createElement(\"div\");\n    div.className = \"tfw-behavior-touchable\";\n    div.style.left = `${rect.left}px`;\n    div.style.top = `${rect.top}px`;\n    div.style.width = `${rect.width}px`;\n    div.style.height = `${rect.height}px`;\n    document.body.appendChild(div);\n    return div;\n}\n","export default function castInteger(v: any, defaultValue = 0): number {\r\n    const defVal = Math.floor(.5 + defaultValue);\r\n\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return Math.floor(.5 + v);\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return Math.floor(.5 + num);\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","const RX_CSS_UNIT = /^(-?[.0-9]+)[ \\n\\r]*([a-z%]*)/;\r\n\r\nexport default function castUnit(v: any, defaultValue: string = \"100%\") {\r\n    if (typeof v === 'number') return `${v}px`;\r\n    if (typeof v !== 'string') return defaultValue;\r\n    const text = `${v}`.trim().toLowerCase();\r\n    if (text === 'auto' || text === 'inherit') return text;\r\n    if (text.startsWith(\"calc(\")) return text;\r\n    const m = RX_CSS_UNIT.exec(text);\r\n    if (!m) return defaultValue;\r\n    const scalar = parseFloat(m[1]);\r\n    if (isNaN(scalar) || scalar === 0) return \"0\";\r\n    const unit = m[2].length < 1 ? \"px\" : m[2];\r\n    return `${scalar}${unit}`;\r\n}\r\n","/**\r\n * @module\r\n * This module provides a list of SVG icons definitions.\r\n * You can register new one if you wish.\r\n */\r\n\r\n\r\nexport type TIconDefinition =\r\n    [string, {}] |\r\n    [string, TIconDefinitionArray] |\r\n    [string, {}, TIconDefinitionArray] |\r\n    [string, TIconDefinitionArray, {}];\r\n\r\ninterface TIconDefinitionArray extends Array<TIconDefinition> { }\r\n\r\nexport interface IIconsDefinition {\r\n    [name: string]: TIconDefinition\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register new icons.\r\n * @param {object}  icons - The  keys are the  name of the  icons, the\r\n * value is the object representing an SVG image.\r\n * @returns {undefined}\r\n */\r\nexport function register(icons: IIconsDefinition): void {\r\n    for (const key of Object.keys(icons)) {\r\n        const val: TIconDefinition = icons[key];\r\n        iconsBook[key] = val;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {string} d - Path definition, as in the attribute `d` of the\r\n * SVG tag `path`.\r\n * @returns {array} SVG description.\r\n */\r\nfunction draw(d: string): TIconDefinition {\r\n    return ['path', { d, stroke: 'none', fill: 0 }];\r\n}\r\n\r\n\r\nexport const iconsBook: IIconsDefinition = {\r\n    android: draw('M15,-35H10V-40H15M-10,-35H-15V-40H-10M18,-49L24,-56C25,-57,25,-58,24,-59C23,-60,22,-60,21,-59L13,-52C9,-54,5,-55,0,-55C-5,-55,-9,-54,-13,-52L-21,-59C-22,-60,-23,-60,-24,-59C-25,-58,-25,-57,-24,-56L-18,-49C-25,-44,-30,-35,-30,-25H30C30,-35,25,-44,18,-49M43,-20A8,8,0,0,0,35,-12V23A8,8,0,0,0,43,30A8,8,0,0,0,50,23V-12A8,8,0,0,0,43,-20M-42,-20A8,8,0,0,0,-50,-12V23A8,8,0,0,0,-42,30A8,8,0,0,0,-35,23V-12A8,8,0,0,0,-42,-20M-30,30A5,5,0,0,0,-25,35H-20V53A8,8,0,0,0,-12,60A8,8,0,0,0,-5,53V35H5V53A8,8,0,0,0,13,60A8,8,0,0,0,20,53V35H25A5,5,0,0,0,30,30V-20H-30V30Z'),\r\n    bug: draw(\"M10,0H-10V-10H10M10,20H-10V10H10M40,-20H26C24,-24 21,-27 17,-30L25,-38L18,-45L7,-34C5,-35 3,-35 0,-35C-2,-35 -5,-35 -7,-34L-18,-45L-25,-38L-17,-30C-21,-27 -24,-24 -26,-20H-40V-10H-30C-30,-8 -30,-7 -30,-5V0H-40V10H-30V15C-30,17 -30,18 -30,20H-40V30H-26C-21,39 -11,45 0,45C11,45 21,39 26,30H40V20H30C30,18 30,17 30,15V10H40V0H30V-5C30,-7 30,-8 30,-10H40V-20Z\"),\r\n    camera: draw('M-40,-40H-25L-15,-50H15L25,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M0,-25A25,25,0,0,0,-25,0A25,25,0,0,0,0,25A25,25,0,0,0,25,0A25,25,0,0,0,0,-25M0,-15A15,15,0,0,1,15,0A15,15,0,0,1,0,15A15,15,0,0,1,-15,0A15,15,0,0,1,0,-15Z'),\r\n    cancel: draw('M7,0L35,28V35H28L0,7L-28,35H-35V28L-7,0L-35,-28V-35H-28L0,-7L28,-35H35V-28L7,0Z'),\r\n    center: draw(\r\n        'M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M35,35H15V45H35A10,10,0,0,0,45,35V15H35M35,-45H15V-35H35V-15H45V-35A10,10,0,0,0,35,-45M-35,-35H-15V-45H-35A10,10,0,0,0,-45,-35V-15H-35M-35,15H-45V35A10,10,0,0,0,-35,45H-15V35H-35V15Z'\r\n    ),\r\n    child: draw('M5,-50V-10H45A40,40,0,0,0,5,-50M37,19C42,13,45,4,45,-5H-28L-32,-15H-50V-5H-39C-39,-5,-29,15,-28,17C-34,20,-37,26,-37,33A18,18,0,0,0,-20,50C-11,50,-4,44,-3,35H8C9,44,16,50,25,50A18,18,0,0,0,43,33C43,27,40,23,37,19M-20,40A8,8,0,0,1,-27,33A8,8,0,0,1,-20,25A8,8,0,0,1,-12,33A8,8,0,0,1,-20,40M25,40A8,8,0,0,1,18,33A8,8,0,0,1,25,25A8,8,0,0,1,33,33A8,8,0,0,1,25,40Z'),\r\n    close: draw('M0,-50C28,-50,50,-28,50,0C50,28,28,50,0,50C-28,50,-50,28,-50,0C-50,-28,-28,-50,0,-50M18,-25L0,-7L-18,-25L-25,-18L-7,0L-25,18L-18,25L0,7L18,25L25,18L7,0L25,-18L18,-25Z'),\r\n    code: draw('M13,23L36,0L13,-23L20,-30L50,0L20,30L13,23M-13,23L-36,0L-13,-23L-20,-30L-50,0L-20,30L-13,23Z'),\r\n    copy: draw('M35,45H-20V-25H35M35,-35H-20A10,10,0,0,0,-30,-25V45A10,10,0,0,0,-20,55H35A10,10,0,0,0,45,45V-25A10,10,0,0,0,35,-35M20,-55H-40A10,10,0,0,0,-50,-45V25H-40V-45H20V-55Z'),\r\n    counter: draw('M-40,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M-40,-30V30H-5V-30H-40M40,30V-30H34C35,-27,35,-25,35,-24C34,-21,32,-17,31,-16L20,-3L36,-4L36,3L10,2L10,-3C10,-3,25,-19,26,-20C27,-22,30,-30,23,-30C16,-30,17,-23,17,-23L9,-23C9,-23,9,-27,11,-30H5V30H18L18,26L23,26C23,26,27,25,27,20C28,15,23,15,23,15C22,15,17,16,17,20H10C10,20,10,9,23,9C36,9,35,20,35,20C35,20,35,26,29,28L32,30H40M-15,20H-23V-9L-32,-6V-12L-16,-18H-15V20Z'),\r\n    cut: draw('M35,-45L5,-15L15,-5L50,-40V-45M0,3A3,3,0,0,1,-2,0A3,3,0,0,1,0,-2A3,3,0,0,1,3,0A3,3,0,0,1,0,3M-30,40A10,10,0,0,1,-40,30C-40,24,-35,20,-30,20A10,10,0,0,1,-20,30C-20,36,-24,40,-30,40M-30,-20A10,10,0,0,1,-40,-30C-40,-36,-35,-40,-30,-40A10,10,0,0,1,-20,-30C-20,-24,-24,-20,-30,-20M-12,-22C-11,-24,-10,-27,-10,-30A20,20,0,0,0,-30,-50A20,20,0,0,0,-50,-30A20,20,0,0,0,-30,-10C-27,-10,-24,-11,-22,-12L-10,0L-22,12C-24,11,-27,10,-30,10A20,20,0,0,0,-50,30A20,20,0,0,0,-30,50A20,20,0,0,0,-10,30C-10,27,-11,24,-12,22L0,10L35,45H50V40L-12,-22Z'),\r\n    delete: draw(\r\n        'M35,-40H18L13,-45H-12L-17,-40H-35V-30H35M-30,35A10,10,0,0,0,-20,45H20A10,10,0,0,0,30,35V-25H-30V35Z'),\r\n    direction: draw('M10,13V0H-10V15H-20V-5A5,5,0,0,1,-15,-10H10V-22L28,-5M49,-4L4,-49H3C2,-50,-2,-50,-4,-49L-49,-4C-50,-2,-50,2,-49,4L-4,49C-2,50,2,51,4,49L49,4C51,2,51,-2,49,-4Z'),\r\n    down: draw('M-30,-30L0,30,30,-30'),\r\n    'down-double': draw('M-30,-40L0,-10,30,-40M-30,10L0,40,30,10'),\r\n    edit: draw(\r\n        \"M24,-46C22,-46,20,-46,19,-44L8,-34L35,-7L45,-17C48,-21,48,-25,45,-28L29,-44C28,-46,26,-46,24,-46M5,-30L-36,11L-23,12L-22,23L-11,24L-9,37L31,-3M-39,15L-47,49L-14,40L-15,29L-27,28L-28,16\"\r\n    ),\r\n    eraser: draw('M21,-42L46,-17C50,-14,50,-7,46,-3L0,43C-8,50,-20,50,-28,43L-46,25C-50,21,-50,15,-46,11L7,-42C11,-46,17,-46,21,-42M-39,18L-21,36C-17,39,-11,39,-7,36L11,18L-14,-7L-39,18Z'),\r\n    'export': draw('M-35,40H35V30H-35M35,-15H15V-45H-15V-15H-35L0,20L35,-15Z'),\r\n    file: draw('M10,-50H-30A10,10,0,0,0,-40,-40V40A10,10,0,0,0,-30,50H30A10,10,0,0,0,40,40V-20L10,-50M30,40H-30V-40H5V-15H30V40Z'),\r\n    \"flag-jp\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,45h120v-90h-120z\"\r\n            }],\r\n            [\"circle\", {\r\n                fill: \"#bc002d\",\r\n                r: 24\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-fr\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002395\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ed2939\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-it\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#009246\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ce2b37\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-de\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,41h130v-82h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ffce00\",\r\n                d: \"M-60,36h120v-24h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#dd0000\",\r\n                d: \"M-60,12h120v-24h-120z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-en\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,37h130v-75h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#bb133e\",\r\n                d: \"M-60,32h120v-65h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,22h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,12h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,2h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-8h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-18h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-28h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002664\",\r\n                d: \"M-60,-33h48v35h-48z\"\r\n            }],\r\n\r\n        ]\r\n    ],\r\n    folder: draw('M40,30H-40V-20H40M40,-30H0L-10,-40H-40C-46,-40,-50,-36,-50,-30V30A10,10,0,0,0,-40,40H40A10,10,0,0,0,50,30V-20C50,-26,46,-30,40,-30Z'),\r\n    font: draw('M25,-20H40V40H45V45H25V40H30V25H10L3,40H10V45H-10V40H-5L25,-20M30,-15L13,20H30V-15M-35,-45H-10C-4,-45,0,-41,0,-35V20H-15V-5H-30V20H-45V-35C-45,-41,-41,-45,-35,-45M-30,-35V-15H-15V-35H-30Z'),\r\n    'format-align-center': draw('M-45,-45H45V-35H-45V-45M-25,-25H25V-15H-25V-25M-45,-5H45V5H-45V-5M-25,15H25V25H-25V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-justify': draw('M-45,-45H45V-35H-45V-45M-45,-25H45V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H45V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-left': draw('M-45,-45H45V-35H-45V-45M-45,-25H15V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H15V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-right': draw(' M-45,-45H45V-35H-45V-45M-15,-25H45V-15H-15V-25M-45,-5H45V5H-45V-5M-15,15H45V25H-15V15M-45,35H45V45H-45V35Z '),\r\n    'format-bold': draw('M8,18H-10V3H8A8,8,0,0,1,15,10A8,8,0,0,1,8,18M-10,-27H5A8,8,0,0,1,13,-20A8,8,0,0,1,5,-12H-10M18,-6C23,-9,26,-15,26,-20C26,-31,18,-40,6,-40H-25V30H10C21,30,29,22,29,11C29,3,24,-3,18,-6Z'),\r\n    'format-italic': draw('M-10,-40V-25H1L-16,15H-30V30H10V15H-1L16,-25H30V-40H-10Z'),\r\n    'format-float-center': draw('M-15,-25H15V5H-15V-25M-45,-45H45V-35H-45V-45M-45,15H45V25H-45V15M-45,35H25V45H-45V35Z'),\r\n    'format-float-left': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-25V-15H-5V-25H45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-none': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-right': draw('M15,-25H45V5H15V-25M-45,-45H45V-35H-45V-45M5,-25V-15H-45V-25H5M-15,-5V5H-45V-5H-15M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-header': draw('M-40,-40H-30V-10H-10V-40H0V30H-10V0H-30V30H-40V-40M13,-23L31,-5L13,13L20,20L45,-5L20,-30L13,-23Z'),\r\n    'format-underline': draw(\r\n        'M-35,45H35V35H-35V45M0,25A30,30,0,0,0,30,-5V-45H18V-5A18,18,0,0,1,0,13A18,18,0,0,1,-17,-5V-45H-30V-5A30,30,0,0,0,0,25Z'\r\n    ),\r\n    fullscreen: draw('M-35,-35H-10V-25H-25V-10H-35V-35M10,-35H35V-10H25V-25H10V-35M25,10H35V35H10V25H25V10M-10,25V35H-35V10H-25V25H-10Z'),\r\n    gear: draw(\r\n        'M0,18A18,18,0,0,1,-17,0A18,18,0,0,1,0,-17A18,18,0,0,1,18,0A18,18,0,0,1,0,18M37,5C37,3,38,2,38,0C38,-2,37,-3,37,-5L48,-13C49,-14,49,-15,48,-16L38,-34C38,-35,36,-35,35,-35L23,-30C20,-32,18,-33,14,-35L13,-48C12,-49,11,-50,10,-50H-10C-11,-50,-12,-49,-12,-48L-14,-35C-17,-33,-20,-32,-23,-30L-35,-35C-36,-35,-38,-35,-38,-34L-48,-16C-49,-15,-49,-14,-48,-13L-37,-5C-37,-3,-37,-2,-37,0C-37,2,-37,3,-37,5L-48,13C-49,14,-49,15,-48,16L-38,34C-38,35,-36,35,-35,35L-23,30C-20,32,-17,33,-14,35L-12,48C-12,49,-11,50,-10,50H10C11,50,12,49,13,48L14,35C18,33,20,32,23,30L35,35C36,35,38,35,38,34L48,16C49,15,49,14,48,13L37,5Z'\r\n    ),\r\n    gps: draw(\r\n        'M0,-20A20,20,0,0,1,20,0A20,20,0,0,1,0,20A20,20,0,0,1,-20,0A20,20,0,0,1,0,-20M-45,5H-55V-5H-45C-42,-26,-26,-42,-5,-45V-55H5V-45C26,-42,43,-26,45,-5H55V5H45C43,26,26,43,5,45V55H-5V45C-26,43,-42,26,-45,5M0,-35A35,35,0,0,0,-35,0A35,35,0,0,0,0,35A35,35,0,0,0,35,0A35,35,0,0,0,0,-35Z'\r\n    ),\r\n    hand: draw(\r\n        \"M-10,-50A10,10,0,0,1,0,-40V-17C0,-17,10,-19,10,-14C10,-14,20,-15,20,-10C20,-10,30,-11,30,-6C30,-6,40,-7,40,-2V15C40,20,25,45,25,50H-15C-15,50,-25,15,-40,5C-40,5,-45,-25,-20,0V-40A10,10,0,0,1,-10,-50Z\"\r\n    ),\r\n    heart: draw('M0,47L-7,40C-33,17,-50,1,-50,-17C-50,-33,-38,-45,-22,-45C-14,-45,-5,-41,0,-35C5,-41,14,-45,23,-45C38,-45,50,-33,50,-17C50,1,33,17,7,40L0,47Z'),\r\n    hide: draw(\r\n        'M-1,-15L15,1C15,1,15,0,15,0A15,15,0,0,0,0,-15C0,-15,-1,-15,-1,-15M-22,-11L-15,-3C-15,-2,-15,-1,-15,0A15,15,0,0,0,0,15C1,15,2,15,3,15L11,22C8,24,4,25,0,25A25,25,0,0,1,-25,0C-25,-4,-24,-8,-22,-11M-50,-39L-39,-27L-36,-25C-45,-18,-51,-10,-55,0C-46,22,-25,38,0,38C8,38,15,36,22,33L24,35L39,50L45,44L-44,-45M0,-25A25,25,0,0,1,25,0C25,3,24,6,23,9L38,24C45,18,51,9,55,0C46,-22,25,-37,0,-37C-7,-37,-14,-36,-20,-34L-9,-23C-6,-24,-3,-25,0,-25Z'\r\n    ),\r\n    home: draw('M-10,40V10H10V40H35V0H50L0,-45L-50,0H-35V40H-10Z'),\r\n    image: draw('M5,-15H33L5,-42V-15M-30,-50H10L40,-20V40A10,10,0,0,1,30,50H-30C-36,50,-40,46,-40,40V-40C-40,-46,-36,-50,-30,-50M-30,40H15L30,40V0L10,20L0,10L-30,40M-20,-15A10,10,0,0,0,-30,-5A10,10,0,0,0,-20,5A10,10,0,0,0,-10,-5A10,10,0,0,0,-20,-15Z'),\r\n    import: draw('M-15,20V-10H-35L0,-45L35,-10H15V20H-15M-35,40V30H35V40H-35Z'),\r\n    improvement: draw(\"M0,50A50,50,0,0,1,-50,0A50,50,0,0,1,0,-50A50,50,0,0,1,50,0A50,50,0,0,1,0,50M0,-25L-25,0H-10V20H10V0H25L0,-25Z\"),\r\n    info: draw('M8,-40A8,8,0,0,0,0,-32A8,8,0,0,0,8,-25A8,8,0,0,0,15,-32A8,8,0,0,0,8,-40M6,-16C0,-16,-17,-3,-17,-3C-17,-2,-17,-2,-16,-1C-16,1,-16,1,-15,0C-14,0,-12,-2,-9,-3C1,-10,-8,6,-12,32C-14,45,-2,39,1,37C4,35,12,29,13,28C14,28,13,27,12,26C12,25,11,26,11,26C8,28,2,32,1,29C0,27,6,7,9,-6C10,-10,12,-17,6,-16Z'),\r\n    left: ['path', { fill: 0, d: 'M40,-5V5H-20L8,33L0,40L-39,0L0,-40L8,-32L-20,-5H40Z' }],\r\n    'left-double': draw('M-10,-30L-40,0,-10,30M40,-30L10,0,40,30'),\r\n    link: draw('M-7,7C-5,9,-5,12,-7,14C-9,16,-12,16,-14,14C-24,4,-24,-11,-14,-21V-21L4,-39C13,-49,29,-49,39,-39C49,-29,49,-13,39,-4L31,4C32,0,31,-4,29,-8L32,-11C38,-16,38,-26,32,-32C26,-38,16,-38,11,-32L-7,-14C-13,-8,-13,1,-7,7M7,-14C9,-16,12,-16,14,-14C24,-4,24,11,14,21V21L-4,39C-13,49,-29,49,-39,39C-49,29,-49,13,-39,4L-31,-4C-31,0,-31,4,-29,8L-32,11C-38,16,-38,26,-32,32C-26,38,-16,38,-11,32L7,14C13,8,13,-1,7,-7C5,-9,5,-12,7,-14Z'),\r\n    location: draw('M0,-2A13,13,0,0,1,-12,-15A13,13,0,0,1,0,-27A13,13,0,0,1,13,-15A13,13,0,0,1,0,-2M0,-50A35,35,0,0,0,-35,-15C-35,11,0,50,0,50C0,50,35,11,35,-15A35,35,0,0,0,0,-50Z'),\r\n    logout: draw(\r\n        \"M25,26V10H-10V-10H25V-26L51,0L25,26M5,-50A10,10,0,0,1,15,-40V-20H5V-40H-40V40H5V20H15V40A10,10,0,0,1,5,50H-40A10,10,0,0,1,-50,40V-40A10,10,0,0,1,-40,-50H5Z\"\r\n    ),\r\n    mail: draw(\r\n        'M40,-40H-40A10,10,0,0,0,-50,-30V30A10,10,0,0,0,-40,40H40A10,10,0,0,0,50,30V-30A10,10,0,0,0,40,-40M40,30H-40V-20L0,5L40,-20V30M40,-30L0,-5L-40,-30V-30H40V-30Z'\r\n    ),\r\n    map: draw('M15,35L-15,24V-35L15,-24M43,-45C42,-45,42,-45,42,-45L15,-34L-15,-45L-43,-35C-44,-35,-45,-34,-45,-33V43A3,3,0,0,0,-42,45C-42,45,-42,45,-42,45L-15,34L15,45L43,36C44,35,45,34,45,33V-42A3,3,0,0,0,43,-45Z'),\r\n    \"map-layer\": draw('M0,20L37,-9L45,-15L0,-50L-45,-15L-37,-9M0,33L-37,4L-45,10L0,45L45,10L37,4L0,33Z'),\r\n    menu: draw('M-45,-30H45V-20H-45V-30M-45,-5H45V5H-45V-5M-45,20H45V30H-45V20Z'),\r\n    minus: draw('M35,5H-35V-5H35V5Z'),\r\n    \"minus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M-25,5H25V-5H-25'),\r\n    \"minus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M25,-5V5H-25V-5H25Z'),\r\n    more: draw('M20,0A10,10,0,0,1,30,-10A10,10,0,0,1,40,0A10,10,0,0,1,30,10A10,10,0,0,1,20,0M-10,0A10,10,0,0,1,0,-10A10,10,0,0,1,10,0A10,10,0,0,1,0,10A10,10,0,0,1,-10,0M-40,0A10,10,0,0,1,-30,-10A10,10,0,0,1,-20,0A10,10,0,0,1,-30,10A10,10,0,0,1,-40,0Z'),\r\n    movie: draw('M44,-49L25,-45L38,-27L48,-29L44,-49M10,-42L0,-40L14,-23L24,-25L10,-42M-15,-37L-24,-35L-11,-18L-1,-20L-15,-37M-39,-32L-44,-32A10,10,0,0,0,-52,-20L-50,-10L-25,-15L-39,-32M-50,-10V40C-50,46,-45,50,-40,50H40C46,50,50,46,50,40V-10H-50Z'),\r\n    ok: draw('M45,-25L-15,35L-42,8L-35,0L-15,21L38,-32L45,-25Z'),\r\n    pack: ['path', { fill: 0, d: 'M45,23C45,24,44,26,42,27L3,49C2,50,1,50,0,50C-1,50,-2,50,-3,49L-42,27C-44,26,-45,24,-45,23V-22C-45,-24,-44,-26,-42,-27L-3,-49C-2,-50,-1,-50,0,-50C1,-50,2,-50,3,-49L42,-27C44,-26,45,-24,45,-22V23M0,-39L-35,-20V20L0,39L35,20V-20L0,-39M0,-29L24,-15L0,-1L-24,-15L0,-29M25,14L5,26V8L25,-3V14M-5,26L-25,14V-3L-5,8V26Z' }],\r\n    pause: draw('M10,35H30V-35H10M-30,35H-10V-35H-30V35Z'),\r\n    play: draw('M-20,-34V36L35,1L-20,-34Z'),\r\n    plug: draw('M20,-25V-45H10V-25H-10V-45H-20V-25H-20C-25,-25,-30,-20,-30,-15V13L-12,30V45H13V30L30,13V-15C30,-20,25,-25,20,-25Z'),\r\n    plus: draw('M35,5H5V35H-5V5H-35V-5H-5V-35H5V-5H35V5Z'),\r\n    \"plus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M5,-25H-5V-5H-25V5H-5V25H5V5H25V-5H5V-25Z'),\r\n    \"plus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M-5,-25H5V-5H25V5H5V25H-5V5H-25V-5H-5V-25Z'),\r\n    print: ['path', {\r\n        fill: 0,\r\n        d: 'M30,-45H-30V-25H30M35,0A5,5,0,0,1,30,-5A5,5,0,0,1,35,-10A5,5,0,0,1,40,-5A5,5,0,0,1,35,0M20,35H-20V10H20M35,-20H-35A15,15,0,0,0,-50,-5V25H-30V45H30V25H50V-5A15,15,0,0,0,35,-20Z'\r\n    }],\r\n    question: draw(\"M-10,35H5V50H-10V35M0,-50C27,-49,38,-22,23,-2C18,3,12,7,8,11C5,15,5,20,5,25H-10C-10,17,-10,10,-7,5C-3,0,3,-3,8,-7C20,-18,17,-34,0,-35A15,15,0,0,0,-15,-20H-30A30,30,0,0,1,0,-50Z\"),\r\n    redo: draw('M32,-7C23,-15,11,-20,-2,-20C-26,-20,-45,-5,-52,16L-40,20C-35,4,-20,-7,-2,-7C7,-7,16,-4,23,2L5,20H50V-25L32,-7Z'),\r\n    refresh: draw('M28,-28C21,-35,11,-40,0,-40A40,40,0,0,0,-40,0A40,40,0,0,0,0,40C19,40,34,27,39,10H28C24,22,13,30,0,30A30,30,0,0,1,-30,0A30,30,0,0,1,0,-30C8,-30,16,-27,21,-21L5,-5H40V-40L28,-28Z'),\r\n    right: ['path', { fill: 0, d: 'M-40,-5V5H20L-7,33L0,40L39,0L0,-40L-7,-32L20,-5H-40Z' }],\r\n    'right-double': draw('M10,-30L40,0,10,30M-40,-30L-10,0,-40,30'),\r\n    run: draw('M23,-32A10,10,0,0,0,33,-42A10,10,0,0,0,23,-52A10,10,0,0,0,13,-42A10,10,0,0,0,23,-32M5,37L10,15L20,25V55H30V18L20,8L23,-7C29,0,39,5,50,5V-5C41,-5,33,-9,28,-17L23,-25C22,-28,18,-30,15,-30C13,-30,13,-29,11,-29L-15,-18V5H-5V-12L4,-15L-4,25L-28,20L-30,30L5,37M-40,-15A5,5,0,0,1,-45,-20A5,5,0,0,1,-40,-25H-25V-15H-40M-35,-35A5,5,0,0,1,-40,-40A5,5,0,0,1,-35,-45H-10V-35H-35M-45,5A5,5,0,0,1,-50,0A5,5,0,0,1,-45,-5H-25V5H-45Z'),\r\n    search: draw('M-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45M-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35Z'),\r\n    select: draw('M35,35H-35V-35H15V-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-5H35M-20,-10L-27,-2L-5,20L45,-30L38,-37L-5,6L-20,-10Z'),\r\n    sitemap: draw('M-15,-50V-20H-5V-5H-35C-41,-5,-45,-1,-45,5V20H-55V50H-25V20H-35V5H-5V20H-15V50H15V20H5V5H35V20H25V50H55V20H45V5C45,-1,41,-5,35,-5H5V-20H15V-50H-15Z'),\r\n    unselect: draw('M35,-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-35C45,-41,41,-45,35,-45M35,-35V35H-35V-35H35Z'),\r\n    share: draw('M30,20C26,20,23,22,20,24L-15,3C-15,2,-15,1,-15,0C-15,-1,-15,-2,-15,-3L20,-24C23,-22,26,-20,30,-20A15,15,0,0,0,45,-35A15,15,0,0,0,30,-50A15,15,0,0,0,15,-35C15,-34,15,-33,15,-31L-20,-11C-22,-13,-26,-15,-30,-15A15,15,0,0,0,-45,0A15,15,0,0,0,-30,15C-26,15,-22,13,-20,11L16,32C16,33,15,34,15,35C15,43,22,50,30,50C38,50,45,43,45,35A15,15,0,0,0,30,20Z'),\r\n    show: draw('M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M0,25A25,25,0,0,1,-25,0A25,25,0,0,1,0,-25A25,25,0,0,1,25,0A25,25,0,0,1,0,25M0,-37C-25,-37,-46,-22,-55,0C-46,22,-25,38,0,38C25,38,46,22,55,0C46,-22,25,-37,0,-37Z'),\r\n    \"skip-next\": draw('M20,30H30V-30H20M-30,30L13,0L-30,-30V30Z'),\r\n    \"skip-next2\": draw('M-40,-35V35L-5,0M30,-35V35H40V-35M-5,-35V35L30,0'),\r\n    \"skip-prev\": draw('M-30,30V-30H-20V30H-30M-12,0L30,-30V30L-12,0Z'),\r\n    \"skip-prev2\": draw('M40,-35V35L5,0M-30,-35V35H-40V-35M5,-35V35L-30,0'),\r\n    speaker: draw('M40,35L33,28C41,21,45,11,45,0C45,-11,41,-21,33,-28L40,-35C49,-26,55,-14,55,0C55,14,49,26,40,35M26,21L19,14C23,11,25,6,25,0C25,-6,23,-11,19,-14L26,-21C32,-16,35,-8,35,0C35,8,32,16,26,21M-40,-45H0A10,10,0,0,1,10,-35V35A10,10,0,0,1,0,45H-40A10,10,0,0,1,-50,35V-35A10,10,0,0,1,-40,-45M-20,-35A10,10,0,0,0,-30,-25A10,10,0,0,0,-20,-15A10,10,0,0,0,-10,-25A10,10,0,0,0,-20,-35M-20,-5A20,20,0,0,0,-40,15A20,20,0,0,0,-20,35A20,20,0,0,0,0,15A20,20,0,0,0,-20,-5M-20,5A10,10,0,0,1,-10,15A10,10,0,0,1,-20,25A10,10,0,0,1,-30,15A10,10,0,0,1,-20,5Z'),\r\n    \"speaker-off\": draw('M-50,-34L-44,-40L45,49L39,55L31,48C30,49,28,50,25,50H-25C-31,50,-35,46,-35,40V-19L-50,-34M0,30A15,15,0,0,1,-15,15C-15,11,-14,8,-11,5L-18,-2C-22,3,-25,8,-25,15A25,25,0,0,0,0,40C7,40,13,38,17,33L10,26C7,29,4,30,0,30M25,15A25,25,0,0,0,0,-10H-1L-34,-43C-33,-47,-29,-50,-25,-50H25A10,10,0,0,1,35,-40V26L25,16V15M0,-40C-6,-40,-10,-36,-10,-30A10,10,0,0,0,0,-20A10,10,0,0,0,10,-30C10,-36,5,-40,0,-40Z'),\r\n    \"split-vertical\": draw('M30,20V5H15V50H5V-50H15V-5H30V-20L50,0L30,20M-50,0L-30,20V5H-15V50H-5V-50H-15V-5H-30V-20L-50,0Z'),\r\n    \"split-horizontal\": draw('M-20,30H-5V15H-50V5H50V15H5V30H20L0,50L-20,30M0,-50L-20,-30H-5V-15H-50V-5H50V-15H5V-30H20L0,-50Z'),\r\n    star: draw('M0,26L31,45L23,10L50,-14L14,-17L0,-50L-14,-17L-50,-14L-23,10L-31,45L0,26Z'),\r\n    stat: draw('M-45,50V-20H-25V50H-45M-10,50V-50H10V50H-10M25,50V10H45V50H25Z'),\r\n    'switch': draw('M-45,-40V3L-30,-12L-15,5C-10,10,-10,15,-10,15V45H10V10C10,10,10,5,7,0C5,-5,0,-10,0,-10L-15,-27L-2,-40M30,-40L8,-18L10,-15C10,-15,15,-10,17,-5C18,-3,19,-1,19,1L45,-25'),\r\n    'tri-down': draw('M-23,-17L0,6L23,-17L30,-10L0,20L-30,-10L-23,-17Z'),\r\n    'tri-left': draw('M17,23L-6,0L17,-23L10,-30L-20,0L10,30L17,23Z'),\r\n    'tri-right': draw('M-17,23L6,0L-17,-23L-10,-30L20,0L-10,30L-17,23Z'),\r\n    'tri-up': draw('M-23,17L0,-6L23,17L30,10L0,-20L-30,10L-23,17Z'),\r\n    twitter: draw('M52,-30C48,-28,44,-27,40,-27C44,-29,48,-33,49,-38C45,-36,41,-34,36,-33C32,-37,26,-40,20,-40C8,-40,-1,-30,-1,-19C-1,-17,-1,-15,-1,-14C-19,-15,-34,-23,-45,-36C-47,-33,-48,-29,-48,-25C-48,-18,-44,-11,-38,-7C-42,-7,-45,-8,-48,-10C-48,-10,-48,-10,-48,-10C-48,1,-41,9,-31,11C-33,12,-35,12,-37,12C-38,12,-39,12,-41,12C-38,20,-30,26,-21,26C-28,32,-37,36,-47,36C-49,36,-51,36,-52,35C-43,41,-31,45,-19,45C20,45,42,12,42,-16C42,-17,42,-18,42,-19C46,-22,49,-26,52,-30Z'),\r\n    undo: draw('M3,-20C-11,-20,-23,-15,-32,-7L-50,-25V20H-5L-23,2C-16,-4,-7,-7,3,-7C20,-7,35,4,41,20L52,16C45,-5,26,-20,3,-20Z'),\r\n    up: draw('M-30,30L0,-30,30,30'),\r\n    'up-double': draw('M-30,40L0,10,30,40M-30,-10L0,-40,30,-10'),\r\n    user: draw(\r\n        'M0,-40A20,20,0,0,1,20,-20A20,20,0,0,1,0,0A20,20,0,0,1,-20,-20A20,20,0,0,1,0,-40M0,10C22,10,40,19,40,30V40H-40V30C-40,19,-22,10,0,10Z'\r\n    ),\r\n    wait: draw('M0,-5A5,5,0,0,0,-5,0A5,5,0,0,0,0,5A5,5,0,0,0,5,0A5,5,0,0,0,0,-5M3,-50C25,-50,26,-32,14,-26C9,-24,7,-19,6,-14C8,-13,10,-11,12,-9C30,-19,50,-15,50,3C50,25,32,26,26,14C24,9,19,7,14,6C13,8,11,10,9,12C19,30,15,50,-2,50C-25,50,-25,32,-14,26C-9,24,-7,19,-6,14C-8,13,-10,11,-12,9C-30,19,-50,15,-50,-2C-50,-25,-32,-26,-26,-14C-24,-9,-19,-7,-14,-6C-13,-8,-11,-10,-9,-12C-19,-30,-15,-50,3,-50Z'),\r\n    \"zoom-in\": draw('M18,10L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18M-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10M0,-10H-10V0H-15V-10H-25V-15H-15V-25H-10V-15H0V-10Z'),\r\n    \"zoom-out\": draw('M18,10H14L12,9C17,3,20,-4,20,-12A33,33,0,0,0,-12,-45A33,33,0,0,0,-45,-12A33,33,0,0,0,-12,20C-4,20,3,17,9,12L10,14V18L35,43L43,35L18,10M-12,10C-25,10,-35,0,-35,-12C-35,-25,-25,-35,-12,-35C0,-35,10,-25,10,-12C10,0,0,10,-12,10M-25,-15H0V-10H-25V-15Z'),\r\n    warning: draw('M0,-50L-55,45H55M0,-30L38,35H-38M-5,-10V10H5V-10M-5,20V30H5V20')\r\n};\r\n\r\n\r\n// Synonyms.\r\nconst synonyms: { [name: string]: string } = {\r\n    add: \"plus\",\r\n    back: \"left\",\r\n    help: \"question\",\r\n    save: \"export\"\r\n};\r\nfor (const key of Object.keys(synonyms)) {\r\n    const val: string = synonyms[key];\r\n    iconsBook[key] = iconsBook[val];\r\n}\r\n","import * as React from \"react\";\r\nimport castBoolean from \"../converter/boolean\";\r\nimport castInteger from \"../converter/integer\";\r\nimport castUnit from \"../converter/unit\";\r\nimport { iconsBook, TIconDefinition } from \"../icons\";\r\nimport \"./icon.css\";\r\n\r\nenum EnumPenColor { B, W, P, PD, PL, S, SD, SL }\r\n\r\ninterface IIconProps {\r\n    visible?: boolean;\r\n    content?: string | TIconDefinition;\r\n    size?: string | number;\r\n    enabled?: boolean;\r\n    animate?: boolean;\r\n    flipH?: boolean;\r\n    flipV?: boolean;\r\n    rotate?: number;\r\n    pen0?: EnumPenColor | string;\r\n    pen1?: EnumPenColor | string;\r\n    pen2?: EnumPenColor | string;\r\n    pen3?: EnumPenColor | string;\r\n    pen4?: EnumPenColor | string;\r\n    pen5?: EnumPenColor | string;\r\n    pen6?: EnumPenColor | string;\r\n    pen7?: EnumPenColor | string;\r\n    onClick?: () => void;\r\n    onHide?: () => void;\r\n}\r\n\r\nexport default class Icon extends React.Component<IIconProps, {}> {\r\n    static isValidIconName(name: string): boolean {\r\n        return typeof iconsBook[name] !== 'undefined';\r\n    }\r\n\r\n    static getAllIconNames(): string[] {\r\n        return Object.keys(iconsBook).sort();\r\n    }\r\n\r\n    private refIcon: any;\r\n    private visible: boolean;\r\n    private timeoutHandle: number;\r\n\r\n    constructor(props: IIconProps) {\r\n        super(props);\r\n        this.refIcon = React.createRef();\r\n        this.visible = false;\r\n        this.timeoutHandle = 0;\r\n    }\r\n\r\n    triggerVisibleAnimation() {\r\n        const\r\n            elemIcon = this.refIcon.current,\r\n            visible = this.visible;\r\n        if( !elemIcon ) return;\r\n        if (this.timeoutHandle) {\r\n            window.clearTimeout(this.timeoutHandle);\r\n            this.timeoutHandle = 0;\r\n        }\r\n        requestAnimationFrame(() => {\r\n            if (visible) elemIcon.classList.remove(\"zero\");\r\n            else {\r\n                elemIcon.classList.add(\"zero\");\r\n                const slot = this.props.onHide;\r\n                if (typeof slot === 'function') {\r\n                    this.timeoutHandle = window.setTimeout(slot, 300);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const\r\n            p = this.props,\r\n            visible = castBoolean(p.visible, true),\r\n            enabled = castBoolean(p.enabled, true),\r\n            animate = castBoolean(p.animate, false),\r\n            flipH = castBoolean(p.flipH, false),\r\n            flipV = castBoolean(p.flipV, false),\r\n            size = castUnit(p.size, \"28px\"),\r\n            content = castContent(p.content),\r\n            rotate = castInteger(p.rotate, 0),\r\n            onClick = p.onClick,\r\n            classes = [\"tfw-view-icon\"];\r\n        const svgContent = createSvgContent(content, p);\r\n        if (!svgContent) return null;\r\n\r\n        if (!enabled) classes.push(\"disabled\");\r\n        if (animate) classes.push(\"animate\");\r\n        if (visible) classes.push(\"zero\");\r\n        if (typeof onClick === 'function' && enabled) classes.push(\"active\");\r\n\r\n        let transform = \"\";\r\n        if (rotate !== 0) {\r\n            transform += `rotate(${rotate}deg) `;\r\n        }\r\n        if (flipH || flipV) {\r\n            transform += `scale(${flipH ? -1 : 1},${flipV ? -1 : 1})`;\r\n        }\r\n        const style: React.CSSProperties = { width: size, height: size };\r\n        if (transform.length > 0) style.transform = transform;\r\n\r\n        requestAnimationFrame(() => this.triggerVisibleAnimation());\r\n        this.visible = visible;\r\n\r\n        return (\r\n            <svg className={classes.join(\" \")}\r\n                ref={this.refIcon}\r\n                viewBox=\"-65 -65 130 130\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n                width={size}\r\n                height={size}\r\n                onClick={enabled ? onClick : undefined}\r\n                style={style}>\r\n                {svgContent}\r\n                < g strokeWidth=\"6\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n                    {createSvgContent(content, p)}\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nfunction createSvgContent(def: TIconDefinition, props: IIconProps, key: string = \"\"): any {\r\n    const\r\n        elementName = def[0],\r\n        { attributes, children } = parseDef(def);\r\n\r\n    if (typeof elementName === 'undefined') return <g key={key}></g>;\r\n\r\n    const attribs: React.Attributes = manageColors({ ...attributes }, props);\r\n    if (key.length > 0) attribs.key = key;\r\n\r\n    return React.createElement(\r\n        elementName,\r\n        attribs,\r\n        children.map((child, index) => createSvgContent(child, props, `${index}`))\r\n    ) as React.ReactSVGElement;\r\n}\r\n\r\nconst CLASSES = [\"P\", \"PL\", \"PD\", \"S\", \"SL\", \"SD\"];\r\nconst PENS = \"01234567\";\r\n\r\n/**\r\n * If the value of the attribute \"fill\" is an element of CLASSES,\r\n * it will be removed and replace with a class.\r\n * Same thing for the attibute \"stroke\".\r\n *\r\n * @example\r\n * manageColors({ fill: \"1\" }) === { className: \"thn-svg-fill-1\" }\r\n *\r\n * @param   attribs [description]\r\n * @param   props   [description]\r\n * @returns         [description]\r\n */\r\nfunction manageColors(attribs: { [key: string]: any }, props: IIconProps) {\r\n    // @TODO For special forms of \"fill\" and \"stroke\", add classes.\r\n    const classes = (attribs.className || \"\").split(\" \");\r\n\r\n    [\"fill\", \"stroke\"].forEach(attribName => {\r\n        const attribValue = `${attribs[attribName]}`;\r\n        if (typeof attribValue === 'undefined') return;\r\n        if (attribValue === 'undefined') return;\r\n        const key = `${attribValue}`.toUpperCase();\r\n        if (CLASSES.indexOf(key) === -1 && PENS.indexOf(key) === -1) return;\r\n        if (PENS.indexOf(attribValue) !== -1 ) {\r\n            // If we find fill=\"3\", then we must look for property pen3.\r\n            const pen = props[`pen${attribValue}`];\r\n            if( typeof pen === 'string' ) {\r\n                if( CLASSES.indexOf(pen) === -1 ) {\r\n                    attribs[attribName] = pen;\r\n                } else {\r\n                    delete attribs[attribName];\r\n                    classes.push(`thm-svg-${attribName}${pen}`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        delete attribs[attribName];\r\n        classes.push(`thm-svg-${attribName}${key}`);\r\n    });\r\n\r\n    attribs.className = classes.join(\" \").trim();\r\n    return attribs;\r\n}\r\n\r\nfunction parseDef([name, arg1, arg2]: TIconDefinition) {\r\n    let attributes: undefined | {},\r\n        children: undefined | any[];\r\n\r\n    if (Array.isArray(arg1)) children = arg1;\r\n    else if (typeof arg1 !== 'undefined') attributes = arg1;\r\n    if (Array.isArray(arg2)) children = arg2;\r\n    else if (typeof arg2 !== 'undefined') attributes = arg2;\r\n\r\n    if (typeof attributes === 'undefined') attributes = {};\r\n    if (typeof children === 'undefined') children = [];\r\n\r\n    return { attributes, children };\r\n}\r\n\r\nfunction castContent(content: string | TIconDefinition = \"ok\"): TIconDefinition {\r\n    if (Array.isArray(content)) return content;\r\n    return iconsBook[content] || [];\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./label.css\"\r\n\r\ninterface ILabelProps {\r\n    label?: string;\r\n    htmlFor?: string;\r\n}\r\n\r\nexport default class Label extends React.Component<ILabelProps, {}> {\r\n    render() {\r\n        const label = this.props.label;\r\n        if( typeof label !== 'string' || label.trim().length === 0 ) return null;\r\n        return (<label className=\"tfw-view-Label\" htmlFor={this.props.htmlFor}>{\r\n            this.props.label\r\n        }</label>)\r\n    }\r\n}\r\n","/**\r\n * The ESCAPE key is often used to close a dialog, collapse a combo list, ...\r\n * This module helps you nesting closable things.\r\n *\r\n * @example\r\n * import * from EscapeHandler from \"./tfw/escape-handler\"\r\n * EscapeHandler.add(() => myDialog.close());\r\n * EscapeHandler.fire();\r\n */\r\n\r\nexport default {add, fire};\r\n\r\ntype THandler = ()=>void;\r\n\r\nlet handlers:THandler[] = [];\r\nlet initialized = false;\r\n\r\nexport function add(listener: THandler) {\r\n    if( !initialized) {\r\n        initialized = true;\r\n        addKeyboardListener();\r\n    }\r\n\r\n    handlers.push(listener);\r\n}\r\n\r\nexport function fire() {\r\n    if( handlers.length === 0 ) return;\r\n    const handler = handlers.pop();\r\n    if (typeof handler === 'function') handler();\r\n}\r\n\r\nfunction addKeyboardListener() {\r\n    document.addEventListener(\"keydown\", evt => {\r\n        if( evt.key !== 'Escape') return;\r\n        fire();\r\n    }, true);\r\n}\r\n","import * as React from \"react\"\r\nimport \"./combo.css\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport Icon from \"./icon\"\r\nimport Label from \"./label\"\r\nimport Gesture from \"../gesture\"\r\nimport EscapeHandler from \"../escape-handler\"\r\n\r\ninterface IComboProps {\r\n    label?: string;\r\n    value?: string;\r\n    keys?: string[];\r\n    wide?: boolean;\r\n    onChange?: (value: string) => void;\r\n    children: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Combo extends React.Component<IComboProps, {}> {\r\n    readonly touchable: Touchable;\r\n\r\n    ref = React.createRef<HTMLButtonElement>()\r\n    list = React.createRef<HTMLDivElement>()\r\n    button = React.createRef<HTMLDivElement>()\r\n\r\n    bigList: HTMLElement | undefined;\r\n\r\n    keys: string[] = []\r\n    selectedKey: string = \"\"\r\n    selectedIndex: number = -1\r\n\r\n    constructor(props: IComboProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n    }\r\n\r\n    handleClick(event: React.MouseEvent) {\r\n        this.expand();\r\n    }\r\n\r\n    /**\r\n     * If there are only two items, we don't open the list: we just swap them.\r\n     */\r\n    _swapItems() {\r\n        // With two items, clicking will immediatly switch to the next one.\r\n        for (const key of this.keys) {\r\n            if (this.props.value !== key) {\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(key);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    _computeDimensions(list: HTMLElement, button: HTMLElement): { left: number, top: number, width: number, height: number } {\r\n        let { left, top, height } = list.getBoundingClientRect();\r\n        const { width } = button.getBoundingClientRect();\r\n        height = Math.min(height, window.innerHeight - 32);\r\n        if (top + height > window.innerHeight) {\r\n            top -= 32 * Math.ceil(window.innerHeight - top - height / 32);\r\n        }\r\n        if (top < 0) {\r\n            top += 32 * Math.ceil(-top / 32);\r\n        }\r\n        return { left, top, width, height };\r\n    }\r\n\r\n    _showList(list: HTMLElement, button: HTMLElement, left: number, top: number, width: number, height: number): { screen: HTMLElement, bigList: HTMLElement } {\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-view-combo-screen\";\r\n        const bigList = document.createElement(\"div\");\r\n        bigList.className = \"thm-ele-nav thm-bg3\";\r\n        bigList.innerHTML = list.innerHTML;\r\n\r\n        bigList.style.top = `${top}px`;\r\n        bigList.style.left = `${left}px`;\r\n        bigList.style.width = `${width}px`;\r\n        bigList.style.height = `${height}px`;\r\n        screen.appendChild(bigList);\r\n        document.body.appendChild(screen);\r\n\r\n        this.bigList = bigList;\r\n        return { screen, bigList };\r\n    }\r\n\r\n    _ensureSelectionVisible() {\r\n        let index = 0;\r\n        const bigList: HTMLElement | undefined = this.bigList;\r\n        if (!bigList) return;\r\n        const items = bigList.querySelectorAll(\"div.item\");\r\n        for (const key of this.keys) {\r\n            const item = items[index];\r\n            if (key === this.selectedKey) {\r\n                const rect = bigList.getBoundingClientRect();\r\n                bigList.scrollTop = (32 * index) - rect.height / 2;\r\n                this.selectedIndex = index;\r\n                item.classList.add(\"thm-bgSL\");\r\n            } else {\r\n                item.classList.remove(\"thm-bgSL\");\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n    _handleKeyboard(event: React.KeyboardEvent) {\r\n        switch (event.key) {\r\n            case \"ArrowDown\":\r\n                this.selectedIndex++;\r\n                this.selectedKey = this.keys[this.selectedIndex % this.keys.length];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"ArrowUp\":\r\n                this.selectedIndex = (this.selectedIndex + this.keys.length - 1) % this.keys.length;\r\n                this.selectedKey = this.keys[this.selectedIndex];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"Enter\":\r\n            case \" \":\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(this.selectedKey);\r\n                }\r\n                EscapeHandler.fire();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n        }\r\n    }\r\n\r\n    expand() {\r\n        if (this.keys.length < 3) {\r\n            this._swapItems();\r\n            return;\r\n        }\r\n\r\n        const list = this.list.current;\r\n        const button = this.button.current;\r\n        if (!list || !button) return;\r\n\r\n        const { left, top, width, height } = this._computeDimensions(list, button);\r\n        const { screen, bigList } = this._showList(list, button, left, top, width, height);\r\n        this.selectedKey = this.props.value || \"\";\r\n        window.setTimeout(() => this._ensureSelectionVisible(bigList), 10);\r\n\r\n        const handleKeyboard = this._handleKeyboard.bind(this);\r\n        document.addEventListener(\"keydown\", handleKeyboard, true);\r\n        EscapeHandler.add(() => {\r\n            document.body.removeChild(screen)\r\n            document.removeEventListener(\"keydown\", handleKeyboard, true);\r\n        });\r\n        Gesture(screen).on({ tap: () => {\r\n            EscapeHandler.fire()\r\n        }});\r\n        Gesture(bigList).on({\r\n            tap: evt => {\r\n                if (!evt || typeof evt.y === 'undefined') return;\r\n                const scroll = bigList.scrollTop;\r\n                const index = Math.floor((evt.y + scroll) / 32);\r\n                const value = this.keys[index];\r\n                EscapeHandler.fire()\r\n                requestAnimationFrame(() => {\r\n                    if (typeof this.props.onChange === 'function') {\r\n                        this.props.onChange(value)\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    render() {\r\n        const p = this.props;\r\n        const children = p.children;\r\n        const label = castString(p.label, \"\").trim();\r\n        const wide = castBoolean(p.wide, false);\r\n        const keys = ensureGoodKeys(p.keys, children);\r\n        const value = castString(p.value, keys[0]);\r\n        const classes = [\"tfw-view-combo\"];\r\n        const items = children.map(item => {\r\n            const key = item.key;\r\n            return (<div className=\"item\" key={key} > {item} </div>);\r\n        });\r\n\r\n        if (wide) classes.push(\"wide\");\r\n\r\n        this.keys = keys;\r\n\r\n        const index = getIndex(keys, value);\r\n\r\n        return (\r\n            <button ref={this.ref} className={classes.join(\" \")}>\r\n                {label.length > 0 ? <Label label={label}/> : null}\r\n                <div ref={this.button} className=\"button thm-bg3 thm-ele-button\">\r\n                    <div className=\"list-container\"\r\n                        style={{\r\n                            transform: `translateY(-${32 * index}px)`\r\n                        }}>\r\n                        <div ref={this.list} className=\"tfw-view-combo-list\" >{items}</div>\r\n                    </div>\r\n                    <div className=\"icon\" >\r\n                        <Icon size=\"24px\" content=\"down\" />\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getIndex(keys: string[], value: string) {\r\n    const index = keys.indexOf(value);\r\n    return Math.max(0, index);\r\n}\r\n\r\n/**\r\n * Keys must be non empty strings. If a key is not defined, it will take its index (stringified) as value.\r\n * And if a \"key\" its defined on a child, it will take precedence on anything else.\r\n *\r\n* @param  {string[]} keys\r\n* @param  {ReactElement[]} children\r\n          *\r\n* @return {string[]}\r\n*/\r\nfunction ensureGoodKeys(keys: string[] | undefined, children: React.ReactElement<any>[]): string[] {\r\n    const goodKeys: string[] = castStringArray(keys, []);\r\n    const minimalLength: number = children.length;\r\n\r\n    while (goodKeys.length < minimalLength) {\r\n        goodKeys.push(`${goodKeys.length}`);\r\n    }\r\n    for (let k = 0; k < goodKeys.length; k++) {\r\n        if (goodKeys[k].trim().length === 0) {\r\n            goodKeys[k] = `${k}`;\r\n        }\r\n    }\r\n    children.forEach((child, index) => {\r\n        const key = child.key;\r\n        if (typeof key === \"string\") {\r\n            goodKeys[index] = key;\r\n        } else {\r\n            child.key = goodKeys[index];\r\n        }\r\n    });\r\n\r\n    return goodKeys;\r\n}\r\n\r\n\r\nfunction onTap(elem: HTMLElement, handler: () => void) {\r\n    const slot = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        elem.removeEventListener(\"mousedown\", slot);\r\n        elem.removeEventListener(\"touchdown\", slot);\r\n        handler();\r\n    };\r\n    elem.addEventListener(\"mousedown\", slot, false);\r\n    elem.addEventListener(\"touchdown\", slot, false);\r\n}\r\n","import * as React from \"react\"\nimport \"./input.css\"\nimport castInteger from \"../../converter/integer\"\nimport castBoolean from \"../../converter/boolean\"\nimport castString from \"../../converter/string\"\nimport castUnit from \"../../converter/unit\"\nimport Label from \"../label\"\n\ninterface IStringSlot {\n    (value: string): void;\n}\n\ninterface IInputProps {\n    value: string;\n    label?: string;\n    wide?: boolean;\n    size?: number;\n    focus?: boolean;\n    width?: string;\n    enabled?: boolean;\n    placeholder?: string;\n    type?: \"text\" | \"password\" | \"submit\" | \"color\" | \"date\"\n    | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"range\"\n    | \"search\" | \"tel\" | \"time\" | \"url\" | \"week\";\n    validator?: (value: string) => boolean | RegExp;\n    onValidation?: (validation: boolean) => void;\n    onChange?: IStringSlot,\n    onEnterPressed?: (value: string) => void\n}\n\nexport default class Input extends React.Component<IInputProps, {}> {\n    private readonly input: React.RefObject<HTMLInputElement> = React.createRef();\n\n    handleKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n        if (evt.key === \"Enter\") {\n            evt.preventDefault();\n            evt.stopPropagation();\n            const { onEnterPressed, value } = this.props;\n            if (typeof onEnterPressed === 'function') {\n                onEnterPressed(value);\n            }\n        }\n    }\n\n    onFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.remove(\"thm-bg3\");\n        input.classList.add(\"thm-bgSL\");\n        if (this.props.type !== 'number') {\n            // setSelectionRange fails for \"number\" input.\n            input.setSelectionRange(0, input.value.length);\n        }\n    }\n\n    onBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.add(\"thm-bg3\");\n        input.classList.remove(\"thm-bgSL\");\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        //if (!this.checkValidity(event.target.value)) return;\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            event.preventDefault();\n            onChange(event.target.value);\n        }\n    }\n\n    render() {\n        const\n            p = this.props,\n            type = castString(p.type, \"text\"),\n            label = castString(p.label, \"\"),\n            value = castString(p.value, \"\"),\n            placeholder = castString(p.placeholder, \"\"),\n            wide = castBoolean(p.wide, false),\n            focus = castBoolean(p.focus, false),\n            enabled = castBoolean(p.enabled, true),\n            size = Math.max(1, castInteger(p.size, 8)),\n            width = castUnit(p.width, \"auto\"),\n            id = nextId();\n        const classes = [\"tfw-view-input\"];\n        if (wide) classes.push(\"wide\");\n        /*\n        const header = (error ? <div className=\"error\">{error}</div> :\n            (label ? (<Label htmlFor={id} label={label}/>) : null));\n        */\n        const inputClassName = \"thm-ele-button \"\n            + (enabled ? 'thm-bg3' : 'thm-bg0');\n        return (<div\n                    className={classes.join(\" \")}\n                    style={{ width, maxWidth: width }}>\n            <Label htmlFor={id} label={label}/>\n            <input\n                ref={this.input}\n                autoFocus={focus}\n                className={inputClassName}\n                placeholder={placeholder}\n                disabled={!enabled}\n                type={type}\n                id={id}\n                size={size}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                onKeyDown={this.handleKeyDown}\n                value={value}/>\n        </div>);\n    }\n}\n\n\nlet globalId = 0;\nfunction nextId() {\n    return `tfw-view-input-${globalId++}`;\n}\n","import * as React from \"react\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castStringArray from \"../converter/string-array\"\nimport \"./flex.css\"\n\ninterface IFlexProp {\n    wide?: boolean;\n    classes?: string[] | string;\n    dir?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\" | \"wide\" | \"narrow\";\n    wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n    justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-around\" | \"space-between\" | \"space-evenly\";\n    alignItems?: \"stretch\" | \"flex-start\" | \"flex-end\" | \"center\";\n    children: React.ReactElement<any>[] | React.ReactElement<any>;\n}\n\nexport default class Flex extends React.Component<IFlexProp, {}> {\n    render() {\n        const p = this.props;\n        const wide = castBoolean(p.wide, true);\n        const dir = castString(p.dir, \"row\");\n        const style: React.CSSProperties = {\n            justifyContent: castString(p.justifyContent, \"space-around\"),\n            alignItems: castString(p.alignItems, \"center\"),\n            flexWrap: castString(p.wrap, \"wrap\")\n        };\n        const classes = [\"tfw-view-flex\", `dir-${dir}`];\n        classes.push(...castStringArray(p.classes));\n\n        if (wide) classes.push(\"wide\");\n\n        return (\n            <div className={classes.join(\" \")} style={style}>{\n                p.children\n            }</div>\n        )\n    }\n}\n","import React from \"react\"\n\nimport Combo from '../../../tfw/view/combo'\nimport Input from '../../../tfw/view/input'\nimport Flex from '../../../tfw/layout/flex'\n\nimport { ISnapshot } from '../../types'\n\nexport const RESOLUTIONS: {[key: string]: [number,number]} = {\n    fullHD: [1920,1080],\n    thumbnail: [160,120],\n    presentation: [800,600],\n    ultraHD: [3840,2160]\n}\n\nexport const SAMPLINGS: {[key: string]: number} = {\n    medium: 50,\n    quick: 1,\n    low: 10,\n    high: 250,\n    ultra: 1250\n}\n\n\ninterface IProps extends ISnapshot {\n    onFilenameChange: (filename: string) => void,\n    onSizeKeyChange: (key: string) => void,\n    onWidthChange: (width: number) => void,\n    onHeightChange: (width: number) => void,\n    onSamplesKeyChange: (key: string) => void,\n    onSamplesChange: (samples: number) => void\n}\n\nfunction res(name: string): string {\n    const resolution = RESOLUTIONS[name];\n    if (!resolution) return '';\n    const [w,h] = resolution;\n    return `(${w} x ${h})`\n}\n\nexport default class Snapshot extends React.Component<IProps, {}> {\n    constructor( props: IProps ) {\n        super( props );\n    }\n\n    handleWidthChange = (width: string) => {\n        const value = parseInt(width, 10);\n        if (isNaN(value)) return;\n        this.props.onWidthChange(value);\n    }\n\n    handleHeightChange = (height: string) => {\n        const value = parseInt(height, 10);\n        if (isNaN(value)) return;\n        this.props.onHeightChange(value);\n    }\n\n    handleSizeKeyChange = (size: string) => {\n        this.props.onSizeKeyChange(size);\n    }\n\n    handleSamplesChange = (samples: string) => {\n        const value = parseInt(samples, 10);\n        if (isNaN(value)) return;\n        this.props.onSamplesChange(value);\n    }\n\n    handleSamplesKeyChange = (key: string) => {\n        this.props.onSamplesKeyChange(key);\n    }\n\n    handleFilenameChange = (filename: string) => {\n        this.props.onFilenameChange(filename);\n    }\n\n    render() {\n        const p = this.props;\n\n        return (<div className=\"webBrayns-dialog-screenshot\">\n            <Input wide={true}\n                   label=\"File name\"\n                   value={`${p.filename}`}\n                   onChange={this.handleFilenameChange}/>\n            <Combo value={p.sizeKey} wide={true} onChange={this.handleSizeKeyChange}>\n                <div key=\"ultraHD\">Ultra HD <em>{res(\"ultraHD\")}</em></div>\n                <div key=\"fullHD\">Full HD <em>{res(\"fullHD\")}</em></div>\n                <div key=\"presentation\">Presentation <em>{res(\"presentation\")}</em></div>\n                <div key=\"thumbnail\">Thumbnail <em>{res(\"thumbnail\")}</em></div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Flex>\n                <Input label=\"Width\" value={`${p.width}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleWidthChange}/>\n                <Input label=\"Height\" value={`${p.height}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleHeightChange}/>\n            </Flex>\n            <Combo value={p.samplesKey} wide={true} onChange={this.handleSamplesKeyChange}>\n                <div key=\"quick\">Quick and dirty</div>\n                <div key=\"low\">Low quality</div>\n                <div key=\"medium\">Medium quality</div>\n                <div key=\"high\">High quality</div>\n                <div key=\"ultra\">Very high quality</div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Input wide={true}\n                   label=\"Sampling\"\n                   value={`${p.samples}`}\n                   enabled={p.samplesKey === 'custom'}\n                   onChange={this.handleSamplesChange}/>\n        </div>)\n    }\n}\n","import { IDialogs, ISnapshot, IAction } from '../types'\nimport Storage from '../../tfw/storage'\nimport { RESOLUTIONS, SAMPLINGS } from '../view/snapshot'\n\nconst PREFIX = \"dialogs:\"\n\n\nconst RESOLUTION_NAME = Object.keys(RESOLUTIONS)[0];\nconst SAMPLING_NAME = Object.keys(SAMPLINGS)[0];\n\nexport default {\n    INITIAL_STATE: {\n        snapshot: Storage.local.get('state/dialogs/snapshot', {\n            filename: 'snapshot',\n            sizeKey: RESOLUTION_NAME,\n            width: RESOLUTIONS[RESOLUTION_NAME][0],\n            height: RESOLUTIONS[RESOLUTION_NAME][1],\n            samplesKey: SAMPLING_NAME,\n            samples: SAMPLINGS[SAMPLING_NAME]\n        })\n    },\n\n    reducer(state: IDialogs, action: IAction): IDialogs {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update-snapshot\": return updateSnapshot(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    updateSnapshot(snapshot: Partial<ISnapshot>): IAction {\n        return { type: `${PREFIX}update-snapshot`, snapshot };\n    }\n}\n\n\nfunction updateSnapshot(state: IDialogs, action: IAction): IDialogs {\n    const newState = Object.assign( state, {\n        snapshot: Object.assign( state.snapshot, action.snapshot )\n    });\n    Storage.local.set('state/dialogs/snapshot', newState.snapshot)\n    return newState;\n}\n","import { IModel, IAction } from \"../types\"\n\nconst PREFIX = \"models:\"\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: IModel[], action: IAction): IModel[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"add\": return add(state, action);\n            case \"reset\": return reset(state, action);\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    add(model: IModel): IAction {\n        return { type: `${PREFIX}add`, model };\n    },\n\n    reset(models: IModel[]): IAction {\n        return { type: `${PREFIX}reset`, models };\n    },\n\n    update(model: IModel): IAction {\n        return { type: `${PREFIX}update`, model };\n    }\n}\n\n\nfunction add(state: IModel[], action: IAction): IModel[] {\n    const models = state.slice();\n    models.push(action.model);\n    return models;\n}\n\n/**\n * This function seem complicated, but it aism to remove doubles.\n * It's strange but its true thay Brayns can return doubles when you call \"get-scene\".\n */\nfunction reset(state: IModel[], action: IAction): IModel[] {\n    const alreadyAddedIds: number[] = [];\n    const models = action.models.filter( (model: {id: number}) => {\n        const id = model.id;\n        const alreadyHere = alreadyAddedIds.includes(id);\n        if (alreadyHere) return false;\n        alreadyAddedIds.push(id);\n        return true;\n    });\n    return models;\n}\n\n\nfunction update(state: IModel[], action: IAction): IModel[] {\n    const { model } = action;\n    const models = state.filter((m: IModel) => m.brayns.id !== model.brayns.id);\n    models.push(model);\n    return models;\n}\n","import { INavigation, IAction } from '../types'\n\nconst PREFIX = \"navigation:\"\n\nexport default {\n    INITIAL_STATE: {\n        panel: \"models\",\n        showConsole: false\n    },\n\n    reducer(state: INavigation, action: IAction): INavigation {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"set-panel\": return setPanel(state, action);\n            case \"toggle-console-visibility\": return toggleConsoleVisibility(state);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    setPanel(panel: string): IAction {\n        return { type: `${PREFIX}set-panel`, panel };\n    },\n\n    toggleConsoleVisibility(): IAction {\n        return { type: `${PREFIX}toggle-console-visibility` };\n    }\n}\n\n\nfunction setPanel(state: INavigation, action: IAction): INavigation {\n    return Object.assign( state, { panel: action.panel });\n}\n\nfunction toggleConsoleVisibility(state: INavigation): INavigation {\n    return Object.assign( state, { showConsole: !state.showConsole });\n}\n","import { IAction, IPathState } from \"../types\"\n\nconst PREFIX = \"path:\"\n\nexport default {\n    INITIAL_STATE: {\n        path: \"\",\n        root: \"\",\n        files: [],\n        folders: []\n    },\n\n    reducer(state: IPathState, action: IAction): IPathState {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(state: Partial<IPathState>): IAction {\n        return { type: `${PREFIX}update`, state };\n    }\n}\n\n\nfunction update(state: IPathState, action: IAction): IPathState {\n    return { ...state, ...action.state }\n}\n","import { ISlicerState, IAction } from '../types'\n\nconst PREFIX = \"slicer:\"\n\nexport default {\n    INITIAL_STATE: {\n        activated: false,\n        minX: 0,\n        maxX: 1,\n        latitude: 0,\n        longitude: 0,\n        collageDepth: 1\n    },\n\n    reducer(state: ISlicerState, action: IAction): ISlicerState {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(sliceInfo: Partial<ISlicerState>): IAction {\n        return { type: `${PREFIX}update`, sliceInfo };\n    }\n}\n\n\nfunction update(state: ISlicerState, action: IAction): ISlicerState {\n    return Object.assign( state, action.sliceInfo );\n}\n","/**\n * The full state of the application is stored and managed here.\n */\nimport { createStore } from 'redux'\nimport { IAppState, IAction } from \"../types\"\n\nimport Animation from './animation'\nimport CurrentModel from './current-model'\nimport Dialogs from './dialogs'\nimport Models from \"./models\"\nimport Navigation from './navigation'\nimport Path from './path'\nimport Slicer from './slicer'\n\n\nconst INITIAL_STATE: IAppState = {\n    animation: Animation.INITIAL_STATE,\n    currentModel: CurrentModel.INITIAL_STATE,\n    dialogs: Dialogs.INITIAL_STATE,\n    models: Models.INITIAL_STATE,\n    navigation: Navigation.INITIAL_STATE,\n    path: Path.INITIAL_STATE,\n    slicer: Slicer.INITIAL_STATE\n};\n\nfunction reducer(state: IAppState | undefined = INITIAL_STATE, action: IAction): IAppState {\n    return {\n        animation: Animation.reducer(state.animation, action),\n        currentModel: CurrentModel.reducer(state.currentModel, action),\n        dialogs: Dialogs.reducer(state.dialogs, action),\n        models: Models.reducer(state.models, action),\n        navigation: Navigation.reducer(state.navigation, action),\n        path: Path.reducer(state.path, action),\n        slicer: Slicer.reducer(state.slicer, action)\n    };\n}\n\nconst store = createStore(reducer);\nexport default {\n    store, dispatch: store.dispatch,\n    Animation,\n    CurrentModel,\n    Dialogs,\n    Models,\n    Navigation,\n    Path,\n    Slicer\n};\n","import Python from './python'\nimport State from '../state'\n\nexport default { browse }\n\nconst ROOT = '/gpfs/bbp.cscs.ch/project/';\n\n/**\n * Set the current Path state according to the content of `dir`.\n */\nasync function browse(dir: string = \"\") {\n    const result = await Python.exec(\"dir\", { path: dir });\n    if (typeof result.code === 'number') {\n        throw result;\n    }\n    const children = result.children;\n    const path = result.path;\n    const files: string[] = [];\n    const folders: string[] = [];\n\n    children.forEach((item: any) => {\n        const { name, size } = item;\n        if (typeof size === 'undefined') folders.push(name);\n        else files.push(name);\n    })\n    const state = { path, root: ROOT, files, folders };\n    State.dispatch(State.Path.update(state));\n    return state;\n}\n","interface IMap {\r\n    [key: string]: string;\r\n}\r\n\r\nconst UrlArgs = {\r\n    parse(): IMap {\r\n        const\r\n            args: IMap = {},\r\n            t = location.search;\r\n\r\n        if (t.length < 2) return args;\r\n        const items = t.substring(1).split('&');\r\n        items.forEach((item, index) => {\r\n            const itemWithSpacesInsteadOfPlus = item.split(\"+\").join(\" \");\r\n            const indexOfEqual = itemWithSpacesInsteadOfPlus.indexOf(\"=\");\r\n            if (indexOfEqual === -1) {\r\n                args[`${index}`] = itemWithSpacesInsteadOfPlus;\r\n            } else {\r\n                const key = itemWithSpacesInsteadOfPlus.substr(0, indexOfEqual);\r\n                const val = itemWithSpacesInsteadOfPlus.substr(indexOfEqual + 1);\r\n                args[key] = decodeURIComponent(val);\r\n            }\r\n        });\r\n\r\n        return args;\r\n    }\r\n};\r\n\r\nexport default UrlArgs;\r\n","export default function castArray(v: any, defaultValue: any[] = []): any[] {\r\n    if (typeof v === 'undefined') return defaultValue;\r\n    if (Array.isArray(v)) return v;\r\n    return [v];\r\n}\r\n","import { IIntlText, IIntlOrString } from \"./types\"\r\n\r\ninterface ITranslations {\r\n    [language: string]: { [key: string]: string }\r\n}\r\n\r\nlet gCurrentLanguage: string =\r\n    localStorage.getItem(\"CurrentLanguage\") || navigator.language.split(\"-\")[0];\r\n\r\nexport default class Intl {\r\n    constructor(private translations: ITranslations) { }\r\n\r\n    static make(translations: ITranslations) {\r\n        const instance = new Intl(translations);\r\n        return instance.translate.bind(instance);\r\n    }\r\n\r\n    static toIntl(text: IIntlOrString | undefined, lang: string | null = null): IIntlText {        \r\n        if (!text) return { [lang || Intl.lang]: \"\" };\r\n        if (typeof text !== 'string') return text;\r\n        return { [lang || Intl.lang]: text };\r\n    }\r\n\r\n    static toText(intl: IIntlOrString | undefined, lang?: string | undefined): string {\r\n        if (!intl) return \"\";\r\n        if (typeof intl === 'string') return intl;\r\n        if (typeof lang === 'undefined') lang = Intl.lang;\r\n        const text = intl[lang];\r\n        if (typeof text === 'string') return text;\r\n        const defaultText = intl[Object.keys(intl)[0]];\r\n        if (typeof defaultText === 'string') return defaultText;\r\n        return \"\";\r\n    }\r\n\r\n    static addTextToIntl(lang: string, text: string, intl: IIntlOrString): IIntlText {\r\n        intl = Intl.toIntl(intl, lang);\r\n        intl[lang] = text;\r\n        const result: IIntlText = {};\r\n        for (const key of Object.keys(intl)) {\r\n            const val = intl[key];\r\n            if (val.trim().length === 0) continue;\r\n            result[key] = val;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static get lang() { return gCurrentLanguage; }\r\n\r\n    static set lang(_value: string) {\r\n        if (typeof _value !== 'string') return;\r\n        const value = _value.split(\"-\")[0];\r\n        gCurrentLanguage = value;\r\n        localStorage.setItem(\"CurrentLanguage\", value);\r\n    }\r\n\r\n    translate(item: string, ...params: string[]) {\r\n        try {\r\n            if (this.translations[gCurrentLanguage]) {\r\n                const translation = this.translations[gCurrentLanguage][item];\r\n                if (translation) return addParams(translation, params);\r\n            }\r\n\r\n            // If we don't find a translation in the current language,\r\n            // we look in the other languages.\r\n            const languages = Object.keys(this.translations);\r\n            for (const lang of languages) {\r\n                const vocabulary = this.translations[lang];\r\n                const translation = vocabulary[item];\r\n                if (typeof translation !== 'string') continue;\r\n                return addParams(translation, params);\r\n            }\r\n\r\n            console.error(`Missing translation for item \"${item}\"!`, params);\r\n            return \"\";\r\n        }\r\n        catch (ex) {\r\n            throw Error(`Error while looking for a translation of \"${item}\":\\n${ex}`);\r\n        }\r\n    }\r\n}\r\n\r\n// Used for the states automate in order to parse a translation\r\n// with placeholders.\r\nenum Mode { Text, Escape, Placeholder }\r\n\r\n/**\r\n * In a translation, you can find placeholders for potential params.\r\n * They are marked with a dollar and a digit from 1 to 9.\r\n * For instance: \"Welcome mister $1!\".\r\n *\r\n * Order doesn't matter and you can have several occurences of the same\r\n * placeholder.\r\n * For instance: \"Hello $2! Welcome into $1. $1 is the best...\".\r\n *\r\n * @param   {string} translation - A string which can own placeholders.\r\n * @param   {string[]} params - Array of replacements for placeholders.\r\n * @returns The transformed string.\r\n */\r\nfunction addParams(translation: string, params: string[]): string {\r\n    let output = '';\r\n    let mark = 0;\r\n    let mode: Mode = Mode.Text;\r\n    let paramIndex = -1;\r\n    let paramValue = '';\r\n\r\n    for (let index = 0; index < translation.length; index++) {\r\n        const c = translation.charAt(index);\r\n        switch (mode) {\r\n            case Mode.Text:\r\n                if (c === '\\\\') {\r\n                    mode = Mode.Escape;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 1;\r\n                }\r\n                else if (c === '$') {\r\n                    mode = Mode.Placeholder;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 2;\r\n                }\r\n                break;\r\n            case Mode.Escape:\r\n                mode = Mode.Text;\r\n                break;\r\n            case Mode.Placeholder:\r\n                mode = Mode.Text;\r\n                paramIndex = parseInt(c, 10);\r\n                if (isNaN(paramIndex))\r\n                    throw Error(`Parsing error at position ${index} for translation \"${translation}\"!\r\nEscape \"$\" if you don't want to use a placeholder.`);\r\n                paramValue = params[paramIndex - 1] || \"\";\r\n                output += paramValue;\r\n                break;\r\n            default:\r\n                mode = Mode.Text;\r\n        }\r\n    }\r\n\r\n    return output + translation.substr(mark);\r\n}\r\n","import * as React from \"react\"\r\nimport Icon from \"./icon\"\r\nimport \"./button.css\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport castArray from \"../converter/array\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\n\r\ninterface IButtonProps {\r\n    label?: string;\r\n    icon?: string;\r\n    wide?: boolean;\r\n    wait?: boolean;\r\n    flat?: boolean;\r\n    small?: boolean;\r\n    warning?: boolean;\r\n    enabled?: boolean;\r\n    classes?: string[] | string;\r\n    tag?: any;\r\n    onClick?: (tag: any) => void;\r\n}\r\n\r\nexport default class Button extends React.Component<IButtonProps, {}> {\r\n    readonly touchable: Touchable;\r\n    readonly ref: React.RefObject<HTMLButtonElement>;\r\n\r\n    constructor(props: IButtonProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    handleClick() {\r\n        const slot = this.props.onClick;\r\n        if (typeof slot !== 'function') return;\r\n        slot(this.props.tag);\r\n    }\r\n\r\n    render() {\r\n        const p = this.props,\r\n            label = castString(p.label, \"\"),\r\n            icon = castString(p.icon, \"\"),\r\n            wide = castBoolean(p.wide, false),\r\n            wait = castBoolean(p.wait, false),\r\n            flat = castBoolean(p.flat, false),\r\n            small = castBoolean(p.small, false),\r\n            enabled = !wait && castBoolean(p.enabled, true),\r\n            warning = castBoolean(p.warning, false),\r\n            classes = [\"tfw-view-button\"].concat(castArray(p.classes));\r\n        if (wide) classes.push(\"wide\");\r\n        if (flat) {\r\n            classes.push(\"flat\");\r\n            classes.push(warning ? \"thm-fgS\" : \"thm-fgP\");\r\n        }\r\n        else {\r\n            if (enabled) classes.push(\"thm-ele-button\");\r\n            classes.push(warning ? \"thm-bgS\" : \"thm-bgP\");\r\n        }\r\n        if (small) classes.push(\"small\");\r\n        if (label.length === 0) classes.push(\"floating\");\r\n\r\n        this.touchable.enabled = enabled;\r\n        return (\r\n            <button ref={this.ref}\r\n                className={classes.join(\" \")}\r\n                disabled={!enabled}>\r\n                {icon.length > 0\r\n                    ? <Icon content={icon}\r\n                        animate={wait}\r\n                        size={`${small ? 1.375 : 1.875}rem`} />\r\n                    : null}\r\n                {label.length > 0\r\n                    ? <div className=\"text\" > {label} </div>\r\n                    : null}\r\n            </button>);\r\n    }\r\n}\r\n","import * as React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport Icon from \"../view/icon\"\r\nimport Flex from \"../layout/flex\"\r\nimport EscapeHandler from \"../escape-handler\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport \"./dialog.css\"\r\n\r\nimport Button from \"../view/button\"\r\n\r\nimport Intl from \"../intl\";\r\nconst _ = Intl.make(require(\"./dialog.yaml\"));\r\n\r\nexport default {\r\n    /**\r\n    * @param {string|React.ReactElement<any>} message\r\n    * @param {()=>void|null} onClose\r\n    */\r\n    alert,\r\n    /**\r\n    * @param {string} caption - Title and button caption.\r\n    * @param {any} content - Content to display.\r\n    * @return Promise<boolean> Confirmed or not?\r\n    */\r\n    confirm,\r\n    show,\r\n    wait\r\n};\r\n\r\ninterface IOptions {\r\n    onClose?: () => void;\r\n    closeOnEscape?: boolean;\r\n    icon?: string;\r\n    title?: string;\r\n    content?: string | React.ReactElement<any>;\r\n    footer?: React.ReactElement<any>[] | React.ReactElement<any> | null;\r\n    maxWidth?: number;\r\n}\r\n\r\nclass Dialog {\r\n    _screen: HTMLElement;\r\n    _options: IOptions;\r\n    footer: React.ReactElement<any>[] | React.ReactElement<any> | null = null;\r\n\r\n    constructor(options: IOptions = {}) {\r\n        this._options = Object.assign({\r\n            closeOnEscape: true,\r\n            footer: <Button\r\n                icon=\"close\"\r\n                label = { _('close') }\r\n                flat={ true}\r\n                onClick={() => this.hide()}/>\r\n        }, options);\r\n        this._options.closeOnEscape = castBoolean(this._options.closeOnEscape, true);\r\n        this.footer = this._options.footer || null;\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-factory-dialog\";\r\n        document.body.appendChild(screen);\r\n        this._screen = screen;\r\n        this.hide = this.hide.bind(this);\r\n        if (this._options.closeOnEscape) {\r\n            EscapeHandler.add(() => this._hide());\r\n        }\r\n    }\r\n\r\n    set onClose(slot: () => void) {\r\n        this._options.onClose = slot;\r\n    }\r\n\r\n    show() {\r\n        const opt = this._options;\r\n        const title = castString(opt.title, \"\").trim();\r\n        const icon = castString(opt.icon, \"\").trim();\r\n        let footer: React.ReactElement<any> | null =\r\n            this.footer ? (<footer className= \"thm-bg2 thm-ele-button\">{\r\n                this.footer\r\n            }</footer>) : null;\r\n            let header = null;\r\n        if (title.length > 0) {\r\n            header = (\r\n                <header className= \"thm-bgPD\">\r\n                    { icon.length > 0 ? <Icon content={ icon } /> : null}\r\n                    <div>{title}</div>\r\n                </header>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render((\r\n            <div\r\n                className=\"thm-ele-dialog thm-bg1\"\r\n                style={{\r\n                    maxWidth: typeof opt.maxWidth === 'number' ? `${opt.maxWidth}px` : \"auto\"\r\n                }}>\r\n                {header}\r\n                <div>{opt.content}</div>\r\n                {footer}\r\n            </div>\r\n        ), this._screen);\r\n        setTimeout(() => this._screen.classList.add(\"show\"), 10);\r\n    }\r\n\r\n    hide() {\r\n        if (!this._options.closeOnEscape) {\r\n            this._hide();\r\n        } else {\r\n            EscapeHandler.fire();\r\n        }\r\n    }\r\n\r\n    _hide() {\r\n        const screen = this._screen;\r\n        screen.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n            document.body.removeChild(screen);\r\n        }, 200);\r\n        const onClose = this._options.onClose;\r\n        if (typeof onClose === 'function') {\r\n            requestAnimationFrame(onClose);\r\n        }\r\n    }\r\n}\r\n\r\nfunction alert(content: string | React.ReactElement<any>,\r\n               onClose: (() => void) | undefined = undefined): Promise<void> {\r\n    return new Promise(resolve => {\r\n        const dialog = new Dialog({ onClose: resolve, content, maxWidth: 420 });\r\n        dialog.footer = (<Button\r\n            icon=\"close\"\r\n            label={_('close')}\r\n            flat={true}\r\n            onClick={resolve} />);\r\n        dialog.show();\r\n    });\r\n}\r\n\r\n/**\r\n * ```\r\n * const isConfirmed = await Dialog.confirm(\"Delete file\", <p>Are you sure?</p>);\r\n * ```\r\n * @param caption - Title and button caption.\r\n * @param content - Content to display.\r\n */\r\nfunction confirm( caption: string,\r\n                  content: string | React.ReactElement<any>): Promise<boolean> {\r\n    return new Promise( resolve => {\r\n        const dialog = new Dialog({ title: caption, content });\r\n        const close = (confirmed: boolean) => {\r\n            dialog.hide();\r\n            resolve( confirmed );\r\n        };\r\n        dialog.onClose = () => close(false);\r\n        const btnCancel = (<Button\r\n            key=\"cancel\"\r\n            flat={true}\r\n            label={_(\"cancel\")}\r\n            onClick={() => close(false)}/>);\r\n        const btnOK = (<Button\r\n            key=\"ok\"\r\n            warning={true}\r\n            label={caption}\r\n            onClick={() => close(true)}/>);\r\n        dialog.footer = [ btnCancel, btnOK ];\r\n        dialog.show();\r\n    });\r\n}\r\n\r\nfunction show(options: IOptions): Dialog {\r\n    const dialog = new Dialog(options);\r\n    dialog.show();\r\n    return dialog;\r\n}\r\n\r\nasync function wait(label: string, task: Promise<any>, blocking: boolean = true): Promise<any> {\r\n    if (!blocking) {\r\n        return await task;\r\n    }\r\n    const content = (\r\n        <Flex dir=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" >\r\n            <Icon content=\"wait\" animate={true}/>\r\n            <div>{label}</div>\r\n        </Flex>\r\n    );\r\n    const dialog = new Dialog({ content, footer: null, closeOnEscape: false });\r\n    dialog.show();\r\n    const close = dialog.hide.bind( dialog );\r\n    return new Promise( (resolve, reject) => {\r\n        task.then(\r\n            (result: any) => {\r\n                close();\r\n                resolve( result );\r\n            },\r\n            (error: any) => {\r\n                console.error( error );\r\n                close();\r\n                reject( error );\r\n            }\r\n        );\r\n    });\r\n}\r\n","import React from \"react\"\nimport Input from \"../../../tfw/view/input\"\nimport Button from \"../../../tfw/view/button\"\nimport Storage from \"../../../tfw/storage\"\n\n\ninterface IHostNameInputProps {\n    onChange: (hostName: string) => void,\n    onEnterPressed: () => void\n}\n\ninterface IHostNameInputState {\n    hostName: string\n}\n\n\nexport default class HostNameInput extends React.Component<IHostNameInputProps, IHostNameInputState> {\n    constructor( props: IHostNameInputProps ) {\n        super( props );\n        this.state = { hostName: Storage.local.get(\"brayns-host-name\", \"http://r1i7n13.bbp.epfl.ch:5000\") };\n    }\n\n    handleChange = (hostName: string) => {\n        this.setState({ hostName });\n\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            onChange(hostName);\n            Storage.local.set(\"brayns-host-name\", hostName);\n        }\n    }\n\n    handleEnterPressed = () => {\n        const { onEnterPressed } = this.props;\n        if (typeof onEnterPressed === 'function') {\n            onEnterPressed();\n        }\n    }\n\n    componentDidMount() {\n        this.handleChange(this.state.hostName);\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-inputHostName\">\n            <Input\n                wide={true}\n                focus={true}\n                label=\"Brayns host name\"\n                value={this.state.hostName}\n                onEnterPressed={this.handleEnterPressed}\n                onChange={this.handleChange}/>\n            {/*\n            <Button\n                wide={true} flat={true}\n                label=\"How can I find that Brayns host name?\"\n                icon=\"help\"/>*/}\n        </div>)\n    }\n}\n","\r\n/**\r\n * Listeners are function with only one argument of type TArgument.\r\n * @param name [description]\r\n */\r\nexport default class Listeners<TArgument> {\r\n    private listeners: ((arg: TArgument) => void)[] = [];\r\n\r\n    constructor(private name: string = \"Listener\") {}\r\n\r\n    /**\r\n     * How many listeners are currently registred.\r\n     */\r\n    get length() {\r\n        return Listeners.length\r\n    }\r\n\r\n    add(listener: ((arg: TArgument) => void)) {\r\n        this.remove( listener);\r\n        this.listeners.push(listener);\r\n    }\r\n\r\n    remove(listener: ((arg: TArgument) => void)) {\r\n        this.listeners = this.listeners.filter( x => x !== listener);\r\n    }\r\n\r\n    fire(argument: TArgument) {\r\n        this.listeners.forEach((listener: ((arg: TArgument) => void)) => {\r\n            try {\r\n                listener(argument);\r\n            } catch(ex) {\r\n                console.error(`[${this.name}] Error in a listener!`);\r\n                console.error(\">  ex.: \", ex);\r\n                console.error(\">  arg.: \", argument);\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\n * Communication to Brayns service is made through WebSocket.\n */\nimport Listeners from '../../tfw/listeners'\n\ninterface IQuery {\n    id: string,\n    resolve: (data: {}) => void\n}\n\ninterface IQueries {\n    [key: string]: IQuery\n}\n\ninterface ISubscribers {\n    [key: string]: Listeners<{}>\n}\n\nexport default class BraynsService {\n    debug: boolean = false\n    private ws: WebSocket | undefined\n    private autogeneratedId: number = 1\n    private queries: IQueries = {}\n    readonly readyListeners = new Listeners<boolean>()\n    readonly binaryListeners = new Listeners<ArrayBuffer>()\n    readonly subscribers: ISubscribers = {}\n\n    constructor(private host: string) {}\n\n    async connect(): Promise<boolean> {\n        const host = `ws://${this.host}/ws`\n\n        return new Promise((resolve) => {\n            const handleResolve = () => {\n                ws.removeEventListener('open', handleResolve)\n                resolve(true)\n            }\n            const handleReject = (evt: any) => {\n                console.error(`Unable to connect to ${host}!`, evt)\n                ws.removeEventListener('close', handleReject)\n                ws.removeEventListener('error', handleReject)\n                resolve(false)\n            }\n\n            // The protocol (\"rocjets\") is mandatory otherwise Brayns will ignore you.\n            const ws = new WebSocket(host, [\"rockets\"])\n            // This is very IMPORTANT! With blobs,\n            // we have weird bugs when trying to get the videostreaming messages.\n            ws.binaryType = 'arraybuffer'\n            ws.addEventListener('open', this.handleOpen)\n            ws.addEventListener('open', handleResolve)\n            ws.addEventListener('message', this.handleMessage)\n            ws.addEventListener('close', this.handleClose)\n            ws.addEventListener('close', handleReject)\n            ws.addEventListener('error', this.handleError)\n            ws.addEventListener('error', handleReject)\n            this.ws = ws\n        })\n    }\n\n    exec(method: string, params: any={}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const id = btoa(`${this.autogeneratedId++}`)\n                this.log(\"id, method, params=\", id, method, params);\n                const protocol = {\n                    jsonrpc: \"2.0\",\n                    id,\n                    method,\n                    params\n                }\n                if (!this.ws) return;\n                this.queries[id] = { id, resolve }\n                this.ws.send(JSON.stringify(protocol));\n            }\n            catch( ex ) {\n                console.error(\"WS: \", ex)\n                reject(ex)\n            }\n        })\n    }\n\n    /**\n     * Brayns service will notify us on updates.\n     * You can subscribe to receive updates for a specific method.\n     */\n    subscribe(method: string, listener: (arg: {}) => void) {\n        if (!this.subscribers[method]) {\n            this.subscribers[method] = new Listeners<{}>()\n        }\n        this.subscribers[method].add(listener)\n    }\n\n    /**\n     * Unsubscribe for specific updates.\n     */\n    unsubscribe(method: string, listener: (arg: {}) => void) {\n        if (!this.subscribers[method]) return\n        this.subscribers[method].remove(listener)\n    }\n\n\n    private log(message: string) {\n        if (!this.debug) return\n        console.log(message)\n    }\n\n    private handleOpen = (event: Event) => {\n        this.readyListeners.fire(true)\n    }\n\n    private handleMessage = (event: MessageEvent) => {\n        if (typeof event.data === 'string') {\n            this.handleStringMessage(event.data)\n        } else {\n            this.binaryListeners.fire(event.data)\n        }\n    }\n\n    private handleStringMessage(text: string) {\n        try {\n            const data = JSON.parse(text)\n            const { id, method, result, params } = data;\n            if (typeof id === 'undefined') {\n                this.handleUpdate(method, params)\n            }\n            else {\n                this.handleResponse(id, result);\n            }\n        }\n        catch (ex) {\n            console.error(\"Unable to parse websocket incoming message:\", ex)\n            console.error(\"    text = \", text)\n        }\n    }\n\n    private handleUpdate(method: string, params: {}) {\n        const listeners = this.subscribers[method];\n        if (!listeners) return\n        listeners.fire(params)\n    }\n\n    private handleResponse(id: string, params: string) {\n        this.log(\"id, params=\", id, params);\n        const query = this.queries[id]\n        if (typeof query === 'undefined') {\n            // Just ignore this message because it is not a response\n            // to any of our queries.\n            return;\n        }\n\n        delete this.queries[id]\n        query.resolve(params);\n    }\n\n    private handleClose = (event: Event) => {\n        console.log('### [WS] Close:', event)\n        this.readyListeners.fire(false)\n        window.setTimeout(() => this.connect(), 150)\n    }\n\n    private handleError = (event: Event) => {\n        console.error('### [WS] Error:', event)\n    }\n}\n","//import { Client as BraynsClient } from \"brayns\"\nimport React from 'react';\nimport UrlArgs from \"../../tfw/url-args\"\nimport Dialog from \"../../tfw/factory/dialog\"\nimport Button from \"../../tfw/view/button\"\nimport InputHostName from \"../view/input-host-name\"\nimport BraynsService from \"../service/brayns\"\n\n// Timeout connection to Brayns service.\nconst CONNECTION_TIMEOUT = 5000;\n\n\nexport default { getHostName, connect }\n\n\n/**\n * Retrieve Brayns' host name from querystring of from user input.\n */\nasync function getHostName(ignoreQueryString: boolean): Promise<string> {\n    return new Promise(async resolve => {\n        if (!ignoreQueryString) {\n            const urlArgs = UrlArgs.parse();\n            const hostFromQueryString = urlArgs.host;\n            if (typeof hostFromQueryString === 'string') {\n                resolve(hostFromQueryString);\n                return;\n            }\n        }\n\n        let hostName = \"\";\n        let validated = false;\n        const onOk = () => {\n            validated = true;\n            dialog.hide();\n            resolve(hostName);\n        }\n        const input = <InputHostName\n            onEnterPressed={onOk}\n            onChange={(value: string) => hostName = value}/>;\n        const dialog = Dialog.show({\n            closeOnEscape: true,\n            content: input,\n            footer: <Button label=\"Connect to Brayns Service\"\n                            onClick={onOk}\n                            icon=\"plug\"/>,\n            icon: \"plug\",\n            title: \"Connect to Brayns Service\",\n            onClose: async () => {\n                if (validated) return;\n                await Dialog.alert((<p>Web-Brayns absolutly needs to be connected to the Brayns server...</p>));\n                location.reload();\n                resolve(\"\");\n            }\n        });\n    });\n}\n\n\n/**\n * Try to connect to a Brayns service and fails if it take too long.\n */\nasync function connect(hostName: string): Promise<BraynsService> {\n    return new Promise(async (resolve, reject) => {\n        const timeout = window.setTimeout(\n            () => reject(\"Connection timeout!\"),\n            CONNECTION_TIMEOUT\n        );\n        const client = new BraynsService(hostName);\n        try {\n            const isReady = await client.connect()\n            if (isReady) resolve(client)\n        }\n        catch( ex ) {\n            reject( ex )\n        }\n    })\n}\n","\nimport Scene from './scene'\n\nexport default {\n   addClipPlane /* Add a clip plane; returns the clip plane descriptor */,\n   addLightAmbient /* Add an ambient light */,\n   addLightDirectional /* Add a directional light */,\n   addLightQuad /* Add a quad light */,\n   addLightSphere /* Add a sphere light */,\n   addLightSpot /* Add a spotlight, returns id */,\n   addModel /* Add model from remote path; returns model descriptor on success */,\n   chunk /* Indicate sending of a binary chunk after this message */,\n   clearLights /* Remove all lights in the scene */,\n   getAnimationParameters /* Get the current state of animation-parameters */,\n   getApplicationParameters /* Get the current state of application-parameters */,\n   getCamera /* Get the current state of camera */,\n   getCameraParams /* Get the params of the current camera */,\n   getClipPlanes /* Get all clip planes */,\n   getEnvironmentMap /* Get the environment map from the scene */,\n   getInstances /* Get instances */,\n   getLights /* get all lights */,\n   getLoaders /* Get all loaders */,\n   getModelProperties /* Get the properties of the given model */,\n   getModelTransferFunction /* Get the transfer function of the given model */,\n   getRenderer /* Get the current state of renderer */,\n   getRendererParams /* Get the params of the current renderer */,\n   getScene /* Get the current state of scene */,\n   getStatistics /* Get the current state of statistics */,\n   getVolumeParameters /* Get the current state of volume-parameters */,\n   imageJpeg /* Get the current state of image-jpeg */,\n   inspect /* Inspect the scene at x-y position */,\n   loadersSchema /* Get the schema for all loaders */,\n   modelPropertiesSchema /* Get the property schema of the model */,\n   quit /* Quit the application */,\n   removeClipPlanes /* Remove clip planes from the scene given their gids */,\n   removeLights /* Remove light given their IDs */,\n   removeModel /* Remove the model(s) with the given ID(s) from the scene */,\n   requestModelUpload /* Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success */,\n   resetCamera /* Resets the camera to its initial values */,\n   schema /* Get the schema of the given endpoint */,\n   setAnimationParameters /* Set the new state of animation-parameters */,\n   setApplicationParameters /* Set the new state of application-parameters */,\n   setCamera /* Set the new state of camera */,\n   setCameraParams /* Set the params on the current camera */,\n   setEnvironmentMap /* Set a environment map in the scene */,\n   setModelProperties /* Set the properties of the given model */,\n   setModelTransferFunction /* Set the transfer function of the given model */,\n   setRenderer /* Set the new state of renderer */,\n   setRendererParams /* Set the params on the current renderer */,\n   setScene /* Set the new state of scene */,\n   setVolumeParameters /* Set the new state of volume-parameters */,\n   snapshot /* Make a snapshot of the current view */,\n   updateClipPlane /* Update a clip plane with the given coefficients */,\n   updateInstance /* Update the instance with the given values */,\n   updateModel /* Update the model with the given values */}\n\n//========================================================================\n// \"add-clip-plane\" - Add a clip plane; returns the clip plane descriptor\n//------------------------------------------------------------------------\nexport type API_addClipPlane_Param0 = [\n   number,\n   number,\n   number,\n   number\n]\nexport type API_addClipPlane_Return = (\n   null\n   | {\n         id: (number /* Integer */);\n         plane: [\n            number,\n            number,\n            number,\n            number\n         ];\n      })\n/**\n * Add a clip plane; returns the clip plane descriptor\n */\nasync function addClipPlane(plane: API_addClipPlane_Param0): Promise<API_addClipPlane_Return> {\n   const out = await Scene.request(\"add-clip-plane\", plane)\n   return out as API_addClipPlane_Return\n}\n//============================================\n// \"add-light-ambient\" - Add an ambient light\n//--------------------------------------------\nexport type API_addLightAmbient_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightAmbient_Return = (number /* Integer */)\n/**\n * Add an ambient light\n */\nasync function addLightAmbient(light: API_addLightAmbient_Param0): Promise<API_addLightAmbient_Return> {\n   const out = await Scene.request(\"add-light-ambient\", light)\n   return out as API_addLightAmbient_Return\n}\n//===================================================\n// \"add-light-directional\" - Add a directional light\n//---------------------------------------------------\nexport type API_addLightDirectional_Param0 = {\n   angularDiameter: number;\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightDirectional_Return = (number /* Integer */)\n/**\n * Add a directional light\n */\nasync function addLightDirectional(light: API_addLightDirectional_Param0): Promise<API_addLightDirectional_Return> {\n   const out = await Scene.request(\"add-light-directional\", light)\n   return out as API_addLightDirectional_Return\n}\n//=====================================\n// \"add-light-quad\" - Add a quad light\n//-------------------------------------\nexport type API_addLightQuad_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   edge1: [\n      number,\n      number,\n      number\n   ];\n   edge2: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_addLightQuad_Return = (number /* Integer */)\n/**\n * Add a quad light\n */\nasync function addLightQuad(light: API_addLightQuad_Param0): Promise<API_addLightQuad_Return> {\n   const out = await Scene.request(\"add-light-quad\", light)\n   return out as API_addLightQuad_Return\n}\n//=========================================\n// \"add-light-sphere\" - Add a sphere light\n//-----------------------------------------\nexport type API_addLightSphere_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSphere_Return = (number /* Integer */)\n/**\n * Add a sphere light\n */\nasync function addLightSphere(light: API_addLightSphere_Param0): Promise<API_addLightSphere_Return> {\n   const out = await Scene.request(\"add-light-sphere\", light)\n   return out as API_addLightSphere_Return\n}\n//================================================\n// \"add-light-spot\" - Add a spotlight, returns id\n//------------------------------------------------\nexport type API_addLightSpot_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   openingAngle: number;\n   penumbraAngle: number;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSpot_Return = (number /* Integer */)\n/**\n * Add a spotlight, returns id\n */\nasync function addLightSpot(light: API_addLightSpot_Param0): Promise<API_addLightSpot_Return> {\n   const out = await Scene.request(\"add-light-spot\", light)\n   return out as API_addLightSpot_Return\n}\n//===============================================================================\n// \"add-model\" - Add model from remote path; returns model descriptor on success\n//-------------------------------------------------------------------------------\nexport type API_addModel_Param0 = {\n   bounding_box?: boolean;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_addModel_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Add model from remote path; returns model descriptor on success\n */\nasync function addModel(model_param: API_addModel_Param0): Promise<API_addModel_Return> {\n   const out = await Scene.request(\"add-model\", model_param)\n   return out as API_addModel_Return\n}\n//=================================================================\n// \"chunk\" - Indicate sending of a binary chunk after this message\n//-----------------------------------------------------------------\nexport type API_chunk_Param0 = {\n   id?: string;\n}\nexport type API_chunk_Return = undefined\n/**\n * Indicate sending of a binary chunk after this message\n */\nasync function chunk(chunk: API_chunk_Param0): Promise<API_chunk_Return> {\n   const out = await Scene.request(\"chunk\", chunk)\n   return out as API_chunk_Return\n}\n//=================================================\n// \"clear-lights\" - Remove all lights in the scene\n//-------------------------------------------------\nexport type API_clearLights_Return = undefined\n/**\n * Remove all lights in the scene\n */\nasync function clearLights(): Promise<API_clearLights_Return> {\n   const out = await Scene.request(\"clear-lights\", )\n   return out as API_clearLights_Return\n}\n//============================================================================\n// \"get-animation-parameters\" - Get the current state of animation-parameters\n//----------------------------------------------------------------------------\nexport type API_getAnimationParameters_Return = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\n/**\n * Get the current state of animation-parameters\n */\nasync function getAnimationParameters(): Promise<API_getAnimationParameters_Return> {\n   const out = await Scene.request(\"get-animation-parameters\", )\n   return out as API_getAnimationParameters_Return\n}\n//================================================================================\n// \"get-application-parameters\" - Get the current state of application-parameters\n//--------------------------------------------------------------------------------\nexport type API_getApplicationParameters_Return = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of application-parameters\n */\nasync function getApplicationParameters(): Promise<API_getApplicationParameters_Return> {\n   const out = await Scene.request(\"get-application-parameters\", )\n   return out as API_getApplicationParameters_Return\n}\n//================================================\n// \"get-camera\" - Get the current state of camera\n//------------------------------------------------\nexport type API_getCamera_Return = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\n/**\n * Get the current state of camera\n */\nasync function getCamera(): Promise<API_getCamera_Return> {\n   const out = await Scene.request(\"get-camera\", )\n   return out as API_getCamera_Return\n}\n//============================================================\n// \"get-camera-params\" - Get the params of the current camera\n//------------------------------------------------------------\nexport type API_getCameraParams_Return = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\n/**\n * Get the params of the current camera\n */\nasync function getCameraParams(): Promise<API_getCameraParams_Return> {\n   const out = await Scene.request(\"get-camera-params\", )\n   return out as API_getCameraParams_Return\n}\n//=========================================\n// \"get-clip-planes\" - Get all clip planes\n//-----------------------------------------\nexport type API_getClipPlanes_Return = (\n      null\n      | {\n            id: (number /* Integer */);\n            plane: [\n               number,\n               number,\n               number,\n               number\n            ];\n         })[]\n/**\n * Get all clip planes\n */\nasync function getClipPlanes(): Promise<API_getClipPlanes_Return> {\n   const out = await Scene.request(\"get-clip-planes\", )\n   return out as API_getClipPlanes_Return\n}\n//================================================================\n// \"get-environment-map\" - Get the environment map from the scene\n//----------------------------------------------------------------\nexport type API_getEnvironmentMap_Return = {\n   filename: string;\n}\n/**\n * Get the environment map from the scene\n */\nasync function getEnvironmentMap(): Promise<API_getEnvironmentMap_Return> {\n   const out = await Scene.request(\"get-environment-map\", )\n   return out as API_getEnvironmentMap_Return\n}\n//=================================\n// \"get-instances\" - Get instances\n//---------------------------------\nexport type API_getInstances_Param0 = {\n   id: (number /* Integer */);\n   result_range?: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_getInstances_Return = {\n      bounding_box?: boolean;\n      instance_id: (number /* Integer */);\n      model_id: (number /* Integer */);\n      transformation?: {\n         rotation: [\n            number,\n            number,\n            number,\n            number\n         ];\n         rotation_center?: [\n            number,\n            number,\n            number\n         ];\n         scale: [\n            number,\n            number,\n            number\n         ];\n         translation: [\n            number,\n            number,\n            number\n         ];\n      };\n      visible?: boolean;\n   }[]\n/**\n * Get instances\n */\nasync function getInstances(id, range: API_getInstances_Param0): Promise<API_getInstances_Return> {\n   const out = await Scene.request(\"get-instances\", id, range)\n   return out as API_getInstances_Return\n}\n//===============================\n// \"get-lights\" - get all lights\n//-------------------------------\nexport type API_getLights_Return = {\n      id: (number /* Integer */);\n      properties: {};\n      type: string;\n   }[]\n/**\n * get all lights\n */\nasync function getLights(): Promise<API_getLights_Return> {\n   const out = await Scene.request(\"get-lights\", )\n   return out as API_getLights_Return\n}\n//=================================\n// \"get-loaders\" - Get all loaders\n//---------------------------------\nexport type API_getLoaders_Return = {\n      extensions: string[];\n      name: string;\n      properties: {};\n   }[]\n/**\n * Get all loaders\n */\nasync function getLoaders(): Promise<API_getLoaders_Return> {\n   const out = await Scene.request(\"get-loaders\", )\n   return out as API_getLoaders_Return\n}\n//================================================================\n// \"get-model-properties\" - Get the properties of the given model\n//----------------------------------------------------------------\nexport type API_getModelProperties_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelProperties_Return = {}\n/**\n * Get the properties of the given model\n */\nasync function getModelProperties(id: API_getModelProperties_Param0): Promise<API_getModelProperties_Return> {\n   const out = await Scene.request(\"get-model-properties\", id)\n   return out as API_getModelProperties_Return\n}\n//==============================================================================\n// \"get-model-transfer-function\" - Get the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_getModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelTransferFunction_Return = {\n   colormap?: {\n      colors: [\n            number,\n            number,\n            number\n         ][];\n      name?: string;\n   };\n   opacity_curve?: [\n         number,\n         number\n      ][];\n   range?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the transfer function of the given model\n */\nasync function getModelTransferFunction(id: API_getModelTransferFunction_Param0): Promise<API_getModelTransferFunction_Return> {\n   const out = await Scene.request(\"get-model-transfer-function\", id)\n   return out as API_getModelTransferFunction_Return\n}\n//====================================================\n// \"get-renderer\" - Get the current state of renderer\n//----------------------------------------------------\nexport type API_getRenderer_Return = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\n/**\n * Get the current state of renderer\n */\nasync function getRenderer(): Promise<API_getRenderer_Return> {\n   const out = await Scene.request(\"get-renderer\", )\n   return out as API_getRenderer_Return\n}\n//================================================================\n// \"get-renderer-params\" - Get the params of the current renderer\n//----------------------------------------------------------------\nexport type API_getRendererParams_Return = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\n/**\n * Get the params of the current renderer\n */\nasync function getRendererParams(): Promise<API_getRendererParams_Return> {\n   const out = await Scene.request(\"get-renderer-params\", )\n   return out as API_getRendererParams_Return\n}\n//==============================================\n// \"get-scene\" - Get the current state of scene\n//----------------------------------------------\nexport type API_getScene_Return = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\n/**\n * Get the current state of scene\n */\nasync function getScene(): Promise<API_getScene_Return> {\n   const out = await Scene.request(\"get-scene\", )\n   return out as API_getScene_Return\n}\n//========================================================\n// \"get-statistics\" - Get the current state of statistics\n//--------------------------------------------------------\nexport type API_getStatistics_Return = {\n   fps: number;\n   scene_size_in_bytes: (number /* Integer */);\n}\n/**\n * Get the current state of statistics\n */\nasync function getStatistics(): Promise<API_getStatistics_Return> {\n   const out = await Scene.request(\"get-statistics\", )\n   return out as API_getStatistics_Return\n}\n//======================================================================\n// \"get-volume-parameters\" - Get the current state of volume-parameters\n//----------------------------------------------------------------------\nexport type API_getVolumeParameters_Return = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of volume-parameters\n */\nasync function getVolumeParameters(): Promise<API_getVolumeParameters_Return> {\n   const out = await Scene.request(\"get-volume-parameters\", )\n   return out as API_getVolumeParameters_Return\n}\n//====================================================\n// \"image-jpeg\" - Get the current state of image-jpeg\n//----------------------------------------------------\nexport type API_imageJpeg_Return = {\n   data: string;\n}\n/**\n * Get the current state of image-jpeg\n */\nasync function imageJpeg(): Promise<API_imageJpeg_Return> {\n   const out = await Scene.request(\"image-jpeg\", )\n   return out as API_imageJpeg_Return\n}\n//===============================================\n// \"inspect\" - Inspect the scene at x-y position\n//-----------------------------------------------\nexport type API_inspect_Param0 = [\n   number,\n   number\n]\nexport type API_inspect_Return = {\n   hit: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Inspect the scene at x-y position\n */\nasync function inspect(position: API_inspect_Param0): Promise<API_inspect_Return> {\n   const out = await Scene.request(\"inspect\", position)\n   return out as API_inspect_Return\n}\n//===================================================\n// \"loaders-schema\" - Get the schema for all loaders\n//---------------------------------------------------\nexport type API_loadersSchema_Return = {}[]\n/**\n * Get the schema for all loaders\n */\nasync function loadersSchema(): Promise<API_loadersSchema_Return> {\n   const out = await Scene.request(\"loaders-schema\", )\n   return out as API_loadersSchema_Return\n}\n//==================================================================\n// \"model-properties-schema\" - Get the property schema of the model\n//------------------------------------------------------------------\nexport type API_modelPropertiesSchema_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_modelPropertiesSchema_Return = string\n/**\n * Get the property schema of the model\n */\nasync function modelPropertiesSchema(id: API_modelPropertiesSchema_Param0): Promise<API_modelPropertiesSchema_Return> {\n   const out = await Scene.request(\"model-properties-schema\", id)\n   return out as API_modelPropertiesSchema_Return\n}\n//===============================\n// \"quit\" - Quit the application\n//-------------------------------\nexport type API_quit_Return = undefined\n/**\n * Quit the application\n */\nasync function quit(): Promise<API_quit_Return> {\n   const out = await Scene.request(\"quit\", )\n   return out as API_quit_Return\n}\n//===========================================================================\n// \"remove-clip-planes\" - Remove clip planes from the scene given their gids\n//---------------------------------------------------------------------------\nexport type API_removeClipPlanes_Param0 = (number /* Integer */)[]\nexport type API_removeClipPlanes_Return = boolean\n/**\n * Remove clip planes from the scene given their gids\n */\nasync function removeClipPlanes(ids: API_removeClipPlanes_Param0): Promise<API_removeClipPlanes_Return> {\n   const out = await Scene.request(\"remove-clip-planes\", ids)\n   return out as API_removeClipPlanes_Return\n}\n//================================================\n// \"remove-lights\" - Remove light given their IDs\n//------------------------------------------------\nexport type API_removeLights_Param0 = (number /* Integer */)[]\nexport type API_removeLights_Return = boolean\n/**\n * Remove light given their IDs\n */\nasync function removeLights(ids: API_removeLights_Param0): Promise<API_removeLights_Return> {\n   const out = await Scene.request(\"remove-lights\", ids)\n   return out as API_removeLights_Return\n}\n//==========================================================================\n// \"remove-model\" - Remove the model(s) with the given ID(s) from the scene\n//--------------------------------------------------------------------------\nexport type API_removeModel_Param0 = (number /* Integer */)[]\nexport type API_removeModel_Return = boolean\n/**\n * Remove the model(s) with the given ID(s) from the scene\n */\nasync function removeModel(ids: API_removeModel_Param0): Promise<API_removeModel_Return> {\n   const out = await Scene.request(\"remove-model\", ids)\n   return out as API_removeModel_Return\n}\n//==============================================================================================================================================\n// \"request-model-upload\" - Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n//----------------------------------------------------------------------------------------------------------------------------------------------\nexport type API_requestModelUpload_Param0 = {\n   bounding_box?: boolean;\n   chunks_id: string;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   size: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   type: string;\n   visible?: boolean;\n}\nexport type API_requestModelUpload_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n */\nasync function requestModelUpload(param: API_requestModelUpload_Param0): Promise<API_requestModelUpload_Return> {\n   const out = await Scene.request(\"request-model-upload\", param)\n   return out as API_requestModelUpload_Return\n}\n//==========================================================\n// \"reset-camera\" - Resets the camera to its initial values\n//----------------------------------------------------------\nexport type API_resetCamera_Return = undefined\n/**\n * Resets the camera to its initial values\n */\nasync function resetCamera(): Promise<API_resetCamera_Return> {\n   const out = await Scene.request(\"reset-camera\", )\n   return out as API_resetCamera_Return\n}\n//=================================================\n// \"schema\" - Get the schema of the given endpoint\n//-------------------------------------------------\nexport type API_schema_Param0 = {\n   endpoint: string;\n}\nexport type API_schema_Return = string\n/**\n * Get the schema of the given endpoint\n */\nasync function schema(endpoint: API_schema_Param0): Promise<API_schema_Return> {\n   const out = await Scene.request(\"schema\", endpoint)\n   return out as API_schema_Return\n}\n//========================================================================\n// \"set-animation-parameters\" - Set the new state of animation-parameters\n//------------------------------------------------------------------------\nexport type API_setAnimationParameters_Param0 = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\nexport type API_setAnimationParameters_Return = boolean\n/**\n * Set the new state of animation-parameters\n */\nasync function setAnimationParameters(param: API_setAnimationParameters_Param0): Promise<API_setAnimationParameters_Return> {\n   const out = await Scene.request(\"set-animation-parameters\", param)\n   return out as API_setAnimationParameters_Return\n}\n//============================================================================\n// \"set-application-parameters\" - Set the new state of application-parameters\n//----------------------------------------------------------------------------\nexport type API_setApplicationParameters_Param0 = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\nexport type API_setApplicationParameters_Return = boolean\n/**\n * Set the new state of application-parameters\n */\nasync function setApplicationParameters(param: API_setApplicationParameters_Param0): Promise<API_setApplicationParameters_Return> {\n   const out = await Scene.request(\"set-application-parameters\", param)\n   return out as API_setApplicationParameters_Return\n}\n//============================================\n// \"set-camera\" - Set the new state of camera\n//--------------------------------------------\nexport type API_setCamera_Param0 = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\nexport type API_setCamera_Return = boolean\n/**\n * Set the new state of camera\n */\nasync function setCamera(param: API_setCamera_Param0): Promise<API_setCamera_Return> {\n   const out = await Scene.request(\"set-camera\", param)\n   return out as API_setCamera_Return\n}\n//============================================================\n// \"set-camera-params\" - Set the params on the current camera\n//------------------------------------------------------------\nexport type API_setCameraParams_Param0 = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\nexport type API_setCameraParams_Return = boolean\n/**\n * Set the params on the current camera\n */\nasync function setCameraParams(input0: API_setCameraParams_Param0): Promise<API_setCameraParams_Return> {\n   const out = await Scene.request(\"set-camera-params\", input0)\n   return out as API_setCameraParams_Return\n}\n//============================================================\n// \"set-environment-map\" - Set a environment map in the scene\n//------------------------------------------------------------\nexport type API_setEnvironmentMap_Param0 = {\n   filename: string;\n}\nexport type API_setEnvironmentMap_Return = boolean\n/**\n * Set a environment map in the scene\n */\nasync function setEnvironmentMap(filename: API_setEnvironmentMap_Param0): Promise<API_setEnvironmentMap_Return> {\n   const out = await Scene.request(\"set-environment-map\", filename)\n   return out as API_setEnvironmentMap_Return\n}\n//================================================================\n// \"set-model-properties\" - Set the properties of the given model\n//----------------------------------------------------------------\nexport type API_setModelProperties_Param0 = {\n   id: (number /* Integer */);\n   properties: {};\n}\nexport type API_setModelProperties_Return = boolean\n/**\n * Set the properties of the given model\n */\nasync function setModelProperties(param: API_setModelProperties_Param0): Promise<API_setModelProperties_Return> {\n   const out = await Scene.request(\"set-model-properties\", param)\n   return out as API_setModelProperties_Return\n}\n//==============================================================================\n// \"set-model-transfer-function\" - Set the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_setModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n   transfer_function: {\n      colormap?: {\n         colors: [\n               number,\n               number,\n               number\n            ][];\n         name?: string;\n      };\n      opacity_curve?: [\n            number,\n            number\n         ][];\n      range?: [\n         number,\n         number\n      ];\n   };\n}\nexport type API_setModelTransferFunction_Return = boolean\n/**\n * Set the transfer function of the given model\n */\nasync function setModelTransferFunction(param: API_setModelTransferFunction_Param0): Promise<API_setModelTransferFunction_Return> {\n   const out = await Scene.request(\"set-model-transfer-function\", param)\n   return out as API_setModelTransferFunction_Return\n}\n//================================================\n// \"set-renderer\" - Set the new state of renderer\n//------------------------------------------------\nexport type API_setRenderer_Param0 = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\nexport type API_setRenderer_Return = boolean\n/**\n * Set the new state of renderer\n */\nasync function setRenderer(param: API_setRenderer_Param0): Promise<API_setRenderer_Return> {\n   const out = await Scene.request(\"set-renderer\", param)\n   return out as API_setRenderer_Return\n}\n//================================================================\n// \"set-renderer-params\" - Set the params on the current renderer\n//----------------------------------------------------------------\nexport type API_setRendererParams_Param0 = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\nexport type API_setRendererParams_Return = boolean\n/**\n * Set the params on the current renderer\n */\nasync function setRendererParams(input0: API_setRendererParams_Param0): Promise<API_setRendererParams_Return> {\n   const out = await Scene.request(\"set-renderer-params\", input0)\n   return out as API_setRendererParams_Return\n}\n//==========================================\n// \"set-scene\" - Set the new state of scene\n//------------------------------------------\nexport type API_setScene_Param0 = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\nexport type API_setScene_Return = boolean\n/**\n * Set the new state of scene\n */\nasync function setScene(param: API_setScene_Param0): Promise<API_setScene_Return> {\n   const out = await Scene.request(\"set-scene\", param)\n   return out as API_setScene_Return\n}\n//==================================================================\n// \"set-volume-parameters\" - Set the new state of volume-parameters\n//------------------------------------------------------------------\nexport type API_setVolumeParameters_Param0 = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_setVolumeParameters_Return = boolean\n/**\n * Set the new state of volume-parameters\n */\nasync function setVolumeParameters(param: API_setVolumeParameters_Param0): Promise<API_setVolumeParameters_Return> {\n   const out = await Scene.request(\"set-volume-parameters\", param)\n   return out as API_setVolumeParameters_Return\n}\n//==================================================\n// \"snapshot\" - Make a snapshot of the current view\n//--------------------------------------------------\nexport type API_snapshot_Param0 = {\n   animation_parameters?: (\n      null\n      | {\n            current?: (number /* Integer */);\n            delta?: (number /* Integer */);\n            dt?: number;\n            frame_count?: (number /* Integer */);\n            playing?: boolean;\n            unit?: string;\n         });\n   camera?: (\n      null\n      | {\n            current?: string;\n            orientation?: [\n               number,\n               number,\n               number,\n               number\n            ];\n            position?: [\n               number,\n               number,\n               number\n            ];\n            target?: [\n               number,\n               number,\n               number\n            ];\n            types?: string[];\n         });\n   format: string;\n   name?: string;\n   quality?: (number /* Integer */);\n   renderer?: (\n      null\n      | {\n            accumulation?: boolean;\n            background_color?: [\n               number,\n               number,\n               number\n            ];\n            current?: string;\n            head_light?: boolean;\n            max_accum_frames?: (number /* Integer */);\n            samples_per_pixel?: (number /* Integer */);\n            subsampling?: (number /* Integer */);\n            types?: string[];\n            variance_threshold?: number;\n         });\n   samples_per_pixel?: (number /* Integer */);\n   size: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_snapshot_Return = {\n   data: string;\n}\n/**\n * Make a snapshot of the current view\n */\nasync function snapshot(settings: API_snapshot_Param0): Promise<API_snapshot_Return> {\n   const out = await Scene.request(\"snapshot\", settings)\n   return out as API_snapshot_Return\n}\n//=======================================================================\n// \"update-clip-plane\" - Update a clip plane with the given coefficients\n//-----------------------------------------------------------------------\nexport type API_updateClipPlane_Param0 = {\n   id: (number /* Integer */);\n   plane: [\n      number,\n      number,\n      number,\n      number\n   ];\n}\nexport type API_updateClipPlane_Return = boolean\n/**\n * Update a clip plane with the given coefficients\n */\nasync function updateClipPlane(clip_plane: API_updateClipPlane_Param0): Promise<API_updateClipPlane_Return> {\n   const out = await Scene.request(\"update-clip-plane\", clip_plane)\n   return out as API_updateClipPlane_Return\n}\n//===============================================================\n// \"update-instance\" - Update the instance with the given values\n//---------------------------------------------------------------\nexport type API_updateInstance_Param0 = {\n   bounding_box?: boolean;\n   instance_id: (number /* Integer */);\n   model_id: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateInstance_Return = boolean\n/**\n * Update the instance with the given values\n */\nasync function updateInstance(model_instance: API_updateInstance_Param0): Promise<API_updateInstance_Return> {\n   const out = await Scene.request(\"update-instance\", model_instance)\n   return out as API_updateInstance_Return\n}\n//=========================================================\n// \"update-model\" - Update the model with the given values\n//---------------------------------------------------------\nexport type API_updateModel_Param0 = {\n   bounding_box?: boolean;\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   id: (number /* Integer */);\n   metadata?: {};\n   name?: string;\n   path?: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateModel_Return = boolean\n/**\n * Update the model with the given values\n */\nasync function updateModel(model: API_updateModel_Param0): Promise<API_updateModel_Return> {\n   const out = await Scene.request(\"update-model\", model)\n   return out as API_updateModel_Return\n}\n","import { IVector, IQuaternion, IBounds } from '../types'\n\nexport default {\n    addVectors,\n    deg2rad,\n    makeQuaternionAsAxisRotation,\n    makeQuaternionFromLatLngTilt,\n    makeVector,\n    multiplyQuaternions,\n    normalize,\n    plane6to4,\n    rotateBounds,\n    rotateWithQuaternion,\n    scaleBounds,\n    scalarProduct,\n    scale,\n    translateBounds\n}\n\n\nfunction addVectors(a: IVector, b: IVector): IVector {\n    return [\n        b[0] + a[0],\n        b[1] + a[1],\n        b[2] + a[2]\n    ];\n}\n\n\nfunction makeQuaternionAsAxisRotation(angle: number, axis: IVector): IQuaternion {\n    const halfAngle = angle * 0.5;\n    const c = Math.cos(halfAngle);\n    const s = Math.sin(halfAngle);\n    const [x, y, z] = axis;\n    return [ x * s, y * s, z * s, c ] as IQuaternion;\n}\n\n\nfunction makeQuaternionFromLatLngTilt(lat: number, lng: number, tilt: number): IQuaternion {\n    const X: IVector = [1,0,0]\n    const Y: IVector = [0,1,0]\n    const Z: IVector = [0,0,1]\n    const qA = makeQuaternionAsAxisRotation(deg2rad(-lat), X)\n    const qB = makeQuaternionAsAxisRotation(deg2rad(lng), Y)\n    const qC = multiplyQuaternions(qB, qA)\n    const direction = rotateWithQuaternion(Z, qC)\n    const qD = makeQuaternionAsAxisRotation(deg2rad(-tilt), direction)\n    return multiplyQuaternions(qD, qC)\n}\n\n\n/**\n * Make a vector from two points.\n */\nfunction makeVector(startPoint: IVector, endPoint: IVector): IVector {\n    return [\n        endPoint[0] - startPoint[0],\n        endPoint[1] - startPoint[1],\n        endPoint[2] - startPoint[2]\n    ]\n}\n\nfunction multiplyQuaternions(q: IQuaternion, r: IQuaternion): IQuaternion {\n    const [q1, q2, q3, q0] = q;\n    const [r1, r2, r3, r0] = r;\n    return [\n        r0*q1 + r1*q0 - r2*q3 + r3*q2,\n        r0*q2 + r1*q3 + r2*q0 - r3*q1,\n        r0*q3 - r1*q2 + r2*q1 + r3*q0,\n        r0*q0 - r1*q1 - r2*q2 - r3*q3\n    ];\n}\n\n\nfunction normalize(vector: IVector): IVector {\n    const [x,y,z] = vector;\n    const len2 = x*x + y*y + z*z;\n    if (len2 < 0.000000001) return [0,0,0];\n    const f = 1 / Math.sqrt(len2);\n    return [x*f, y*f, z*f];\n}\n\n\n/**\n * A plan can be defined by a point and a normal.\n * This representation takes 6 floats.\n * You can also use a normal and a signed distance from the center,\n * which takes only 4 floats. This is how Brayns represent clipping planes.\n */\nfunction plane6to4(point: IVector, normal: IVector): [number, number, number, number] {\n  const d = scalarProduct(point, normalize(normal));\n  return [...normal, d];\n}\n\n\nfunction scalarProduct(v1: IVector, v2: IVector): number {\n    const [x1, y1, z1] = v1;\n    const [x2, y2, z2] = v2;\n    return x1*x2 + y1*y2 + z1*z2;\n}\n\n\nfunction rotateWithQuaternion(point: IVector, quaternion: IQuaternion): IVector {\n    const Q = quaternion;\n    const [x, y, z] = point;\n    const [qx, qy, qz, qw] = Q;\n    const invQ: IQuaternion = [-qx, -qy, -qz, qw];\n    const P: IQuaternion = [x, y, z, 0];\n\n    const R = multiplyQuaternions(\n        Q, multiplyQuaternions(P, invQ)\n    )\n    return [R[0], R[1], R[2]];\n}\n\n\n/**\n * Multiply all coords by a scalar factor.\n */\nfunction scale(vector: IVector, factor: number): IVector {\n    return vector.map((n: number) => n * factor) as IVector;\n}\n\n\nfunction rotateBounds(bounds: IBounds, rotation: IQuaternion): IBounds {\n    const { min, max } = bounds;\n    const A = rotateWithQuaternion(min, rotation)\n    const B = rotateWithQuaternion(max, rotation)\n    return {\n        min: [\n            Math.min(A[0], B[0]),\n            Math.min(A[1], B[1]),\n            Math.min(A[2], B[2])\n        ],\n        max: [\n            Math.max(A[0], B[0]),\n            Math.max(A[1], B[1]),\n            Math.max(A[2], B[2])\n        ]\n    }\n}\n\n\nfunction scaleBounds(bounds: IBounds, scale: IVector): IBounds {\n    return {\n        min: [\n            bounds.min[0] * scale[0],\n            bounds.min[1] * scale[1],\n            bounds.min[2] * scale[2]\n        ],\n        max: [\n            bounds.max[0] * scale[0],\n            bounds.max[1] * scale[1],\n            bounds.max[2] * scale[2]\n        ]\n    }\n}\n\nfunction translateBounds(bounds: IBounds, translation: IVector): IBounds {\n    return {\n        min: addVectors(bounds.min, translation),\n        max: addVectors(bounds.max, translation)\n    }\n}\n\nfunction deg2rad(deg: number): number {\n    return deg * Math.PI / 180\n}\n","//import { Client as BraynsClient } from \"brayns\"\n\nimport Scene from './scene'\nimport Geom from '../geometry'\nimport State from '../state'\n\nimport { IModel, IVector, IQuaternion } from '../types'\n\n\nexport default class Model {\n    constructor(private model: IModel) {}\n\n    /**\n     * Set the location of the center.\n     * Do not forget to call this.applyTransfo() when you want\n     * the transformations to be applied.\n     */\n    locate(nextPosition: IVector) {\n        const currentBounds = this.model.brayns.bounds\n        const currentPosition = this.model.brayns.transformation.translation\n        const relativeMoving = Geom.makeVector(currentPosition, nextPosition)\n        const nextBounds = Geom.translateBounds(currentBounds, relativeMoving)\n        this.model.brayns.transformation.translation = nextPosition\n        this.model.brayns.bounds = nextBounds\n    }\n\n    /**\n     * Scale the object.\n     * Do not forget to call this.applyTransfo() when you want\n     * the transformations to be applied.\n     */\n    scale(nextScale: IVector) {\n        const currentBounds = this.model.brayns.bounds\n        const currentPosition = this.model.brayns.transformation.translation\n        const currentScale = this.model.brayns.transformation.scale\n        const relativeMoving = Geom.makeVector(currentPosition, [0,0,0])\n        const boundsAtCenter = Geom.translateBounds(currentBounds, relativeMoving)\n        const scaledBounds = Geom.scaleBounds(\n            boundsAtCenter,\n            [\n                nextScale[0] / currentScale[0],\n                nextScale[1] / currentScale[1],\n                nextScale[2] / currentScale[2]\n            ]\n        )\n        const nextBounds = Geom.translateBounds(\n            scaledBounds,\n            Geom.scale(relativeMoving, -1)\n        )\n        this.model.brayns.transformation.scale = nextScale\n        this.model.brayns.bounds = nextBounds\n    }\n\n    /**\n     * Rotate the object.\n     * Do not forget to call this.applyTransfo() when you want\n     * the transformations to be applied.\n     */\n    rotate(nextRotation: IQuaternion) {\n        const currentBounds = this.model.brayns.bounds\n        const currentPosition = this.model.brayns.transformation.translation\n        const relativeMoving = Geom.makeVector(currentPosition, [0,0,0])\n        const boundsAtCenter = Geom.translateBounds(currentBounds, relativeMoving)\n        const rotatedBounds = Geom.rotateBounds(\n            boundsAtCenter, nextRotation\n        )\n        const nextBounds = Geom.translateBounds(\n            rotatedBounds,\n            Geom.scale(relativeMoving, -1)\n        )\n        this.model.brayns.transformation.rotation = nextRotation\n        this.model.brayns.bounds = nextBounds\n    }\n\n    async getMaterialIds(): Promise<number[]> {\n        // TODO: use the circuitExplorer again.\n        return []\n\n        const id = this.model.brayns.id;\n        const currentMaterialIds = this.model.materialIds;\n        if (Array.isArray(currentMaterialIds) && currentMaterialIds.length > 0) {\n            return currentMaterialIds;\n        }\n        const result: { ids: number[] } = await Scene.request(\"getMaterialIds\", { id }) as { ids: number[] }\n        // This strage filter is because Javascript only support 53 bits integers,\n        // but Brayns can send up to 64 bits integers.\n        this.model.materialIds = result.ids.filter((id: number) => id < 18000000000000000000)\n        return this.model.materialIds\n    }\n\n    /**\n     * Remove this model from the Scene.\n     */\n    async remove() {\n        const id = this.model.brayns.id;\n        return await Scene.Api.removeModel([id]);\n    }\n\n    get id(): number {\n        return this.model.brayns.id;\n    }\n    /**\n     * When a model is selected, we show its boundingBox.\n     */\n    get seleted(): boolean {\n        return this.model.selected;\n    }\n\n    async setSelected(selected: boolean) {\n        this.model.selected = selected;\n        this.model.brayns.bounding_box = selected;\n        await Scene.Api.updateModel({\n            id: this.model.brayns.id,\n            bounding_box: selected\n        });\n        this.updateState();\n    }\n\n    get visible(): boolean {\n        return this.model.brayns.visible === true;\n    }\n\n    async setVisible(visible: boolean) {\n        await Scene.Api.updateModel({\n            id: this.model.brayns.id,\n            visible\n        });\n        this.model.brayns.visible = true;\n        this.updateState();\n    }\n\n    /**\n     * Make to camera to look at this model.\n     */\n    async focus(): Promise<boolean> {\n        await Scene.camera.lookAtBounds(this.model.brayns.bounds);\n        return true;\n    }\n\n    /**\n     * Transformations remains local until you call this function.\n     */\n    async applyTransfo() {\n        await Scene.Api.updateModel({\n            id: this.model.brayns.id,\n            transformation: this.model.brayns.transformation\n        });\n    }\n\n    private updateState() {\n        State.dispatch(State.Models.update(this.model));\n    }\n}\n","import { IBounds, IModel, IBraynsModel } from './types'\nimport State from '../state'\n\nexport default {\n    createModelFromBraynsData,\n    getAllModels,\n    getModelsBounds,\n    getVisibleModels\n}\n\n\n/**\n * web-brayns models have more data than Brayns one.\n * This function will enrich data from Brayns to met our needs.\n */\nfunction createModelFromBraynsData(model: IBraynsModel): IModel {\n    return {\n        brayns: { ...model },\n        parent: 0,\n        deleted: false,\n        selected: false,\n        technical: false\n    }\n}\n\n\n/**\n * Compute the bounds of deveral models.\n */\nfunction getModelsBounds(models: IModel[]): IBounds {\n    const point: IBounds = { min: [-10,-10,-10], max: [10,10,10] }\n    const modelsWithValidBounds = models.filter(hasValidBounds)\n    if (modelsWithValidBounds.length === 0) return point;\n    const bounds = { ...modelsWithValidBounds[0].brayns.bounds };\n\n    for( let i=1; i<modelsWithValidBounds.length; i++ ) {\n        const model = modelsWithValidBounds[i];\n        const b = model.brayns.bounds || point;\n        bounds.min[0] = Math.min(bounds.min[0], b.min[0]);\n        bounds.min[1] = Math.min(bounds.min[1], b.min[1]);\n        bounds.min[2] = Math.min(bounds.min[2], b.min[2]);\n        bounds.max[0] = Math.max(bounds.max[0], b.max[0]);\n        bounds.max[1] = Math.max(bounds.max[1], b.max[1]);\n        bounds.max[2] = Math.max(bounds.max[2], b.max[2]);\n    }\n    return bounds;\n}\n\n\nfunction getVisibleModels(): IModel[] {\n    return getAllModels().filter((model: IModel) => (\n        model.deleted === false &&\n        model.technical === false &&\n        model.brayns.visible === true\n    ));\n}\n\n\nfunction getAllModels(): IModel[] {\n    return State.store.getState().models;\n}\n\n\n\nfunction hasValidBounds(model: IModel): boolean {\n    if (!model.brayns) return false;\n    if (!model.brayns.bounds) return false;\n    const bounds = model.brayns.bounds;\n    if (bounds.min[0] > bounds.max[0]) return false;\n    if (bounds.min[1] > bounds.max[1]) return false;\n    if (bounds.min[2] > bounds.max[2]) return false;\n    return true;\n}\n","/**\n * Everything related to Camera.\n */\n\nimport { BoundingBox } from \"brayns\"\nimport { ICamera, IVector, IQuaternion, IAxis } from '../types'\nimport Scene from './scene'\nimport Geom from '../geometry'\nimport Models from '../models'\nimport State from '../state'\n\n\nexport default class Camera {\n    private states: ICamera[] = [];\n\n    constructor(private params: ICamera) { }\n\n    private async applyCamera(): Promise<boolean> {\n        const { orientation, position, target, current, height } = this.params;\n        await Scene.Api.setCamera({\n            orientation, position, target,\n            current: current || \"perspective\"\n        });\n        if (current === 'orthographic') {\n            await Scene.Api.setCameraParams({ height });\n        }\n        return true;\n    }\n\n    saveState() {\n        this.states.push(this.params);\n    }\n\n    async restoreState() {\n        const { states } = this;\n        if (states.length === 0) {\n            console.error(Error(\"[web-brayns/scene/camera/restoreState()] Trying to restore a state which has not been saved!\"))\n            return;\n        }\n        this.params = states.pop() as ICamera;\n        await this.applyCamera()\n    }\n\n    get position(): IVector {\n        return this.params.position.slice() as IVector;\n    }\n\n    setPosition(position: IVector) {\n        this.params.position = position;\n        this.applyCamera();\n    }\n\n    get orientation(): IQuaternion {\n        return this.params.orientation.slice() as IQuaternion;\n    }\n\n    setOrientation(orientation: IQuaternion) {\n        this.params.orientation = orientation;\n        this.applyCamera();\n    }\n\n    setPositionAndOrientation(position: IVector, orientation: IQuaternion) {\n        this.params.position = position;\n        this.params.orientation = orientation;\n        this.applyCamera();\n    }\n\n    async setOrthographic(width: number, height: number,\n                    position: IVector,\n                    orientation: IQuaternion) {\n        const { params } = this\n        params.current = \"orthographic\"\n        params.position = position\n        params.orientation = orientation\n        params.height = height  //Math.max(width, height)\n        await this.applyCamera();\n    }\n\n    get axis(): IAxis {\n        const [b, c, d, a] = this.orientation;\n        const aa = a * a;\n        const bb = b * b;\n        const cc = c * c;\n        const dd = d * d;\n        const ab2 = 2 * a * b;\n        const ac2 = 2 * a * c;\n        const ad2 = 2 * a * d;\n        const bc2 = 2 * b * c;\n        const bd2 = 2 * b * d;\n        const cd2 = 2 * c * d;\n        return {\n            x: [\n                aa + bb + cc + dd,\n                ad2 + bc2,\n                bd2 - ac2\n            ],\n            y: [\n                bc2 - ad2,\n                aa - bb + cc - dd,\n                ab2 + cd2\n            ],\n            z: [\n                ac2 + bd2,\n                cd2 - ab2,\n                aa - bb - cc + dd\n            ]\n        }\n    }\n\n    get target(): IVector {\n        return this.params.target.slice() as IVector;\n    }\n\n    /**\n     * Target is used for space navigation, but also for focus point.\n     * If you don't need to change the focus point, there is no need\n     * in setting this target in Brayns service. Then you can set\n     * `applyToBrayns` to `false`.\n     */\n    async setTarget(target: IVector, applyToBrayns: boolean = true ) {\n        const direction = this.direction;\n        const distance = Geom.scalarProduct(\n            Geom.makeVector(this.params.position, target),\n            direction\n        );\n        this.params.position = Geom.addVectors(\n            target,\n            Geom.scale(direction, -distance)\n        );\n        this.params.target = target;\n        if (applyToBrayns) {\n            return await this.applyCamera();\n        }\n    }\n\n    async getCloser(target: IVector, distanceFactor: number) {\n        const direction = this.direction;\n        const distance = Geom.scalarProduct(\n            Geom.makeVector(this.params.position, target),\n            direction\n        ) * distanceFactor;\n        this.params.position = Geom.addVectors(\n            target,\n            Geom.scale(direction, -distance)\n        );\n        this.params.target = target;\n        return await this.applyCamera();\n    }\n\n    getTargetDistance(): number {\n        const vectorZ = this.axis.z;\n        // Warning! the camera's Z axis is turning its back to the target.\n        return Geom.scalarProduct(\n            vectorZ,\n            Geom.makeVector(\n                this.params.target,\n                this.params.position\n            )\n        )\n    }\n\n    /**\n     * Normalized vector giving the direction of sight.\n     */\n    get direction(): IVector {\n        const { orientation } = this.params\n        const z: IVector = [0,0,1];\n        const direction = Geom.rotateWithQuaternion(z, orientation)\n        return direction;\n    }\n\n    async moveForward(dist: number) {\n        const dir = this.direction;\n        const { position, target } = this.params;\n        this.params.position = [\n            position[0] + dir[0] * dist,\n            position[1] + dir[1] * dist,\n            position[2] + dir[2] * dist\n        ];\n        this.params.target = [\n            target[0] + dir[0] * dist,\n            target[1] + dir[1] * dist,\n            target[2] + dir[2] * dist\n        ];\n        await this.applyCamera();\n    }\n\n    async moveBackward(dist: number) {\n        const dir = this.direction;\n        const { position, target } = this.params;\n        this.params.position = [\n            position[0] - dir[0] * dist,\n            position[1] - dir[1] * dist,\n            position[2] - dir[2] * dist\n        ];\n        this.params.target = [\n            target[0] - dir[0] * dist,\n            target[1] - dir[1] * dist,\n            target[2] - dir[2] * dist\n        ];\n        await this.applyCamera();\n    }\n\n    async lookAtWholeScene() {\n        const models = Models.getVisibleModels();\n        const bounds = Models.getModelsBounds(models);\n        await this.lookAtBounds(bounds);\n    }\n\n    async lookAtBounds(bounds: BoundingBox) {\n        const minX = bounds.min[0];\n        const minY = bounds.min[1];\n        const minZ = bounds.min[2];\n        const maxX = bounds.max[0];\n        const maxY = bounds.max[1];\n        const maxZ = bounds.max[2];\n        const centerX = (minX + maxX) / 2;\n        const centerY = (minY + maxY) / 2;\n        const centerZ = (minZ + maxZ) / 2;\n        const width = maxX - minX;\n        const height = maxY - minY;\n        const cameraZ = maxZ + Math.max(width + height) * 0.5;\n\n        this.params.orientation = [0, 0, 0, 1];\n        this.params.position = [centerX, centerY, cameraZ];\n        this.params.target = [centerX, centerY, centerZ];\n        await this.applyCamera();\n    }\n}\n","import { /*Client as BraynsClient,*/ IMAGE_JPEG } from \"brayns\"\nimport BraynsService from '../service/brayns'\n\nexport default class Renderer {\n    private _canvas: HTMLCanvasElement | null = null;\n    private ctx: CanvasRenderingContext2D | null = null;\n    private blob: Blob | null = null;\n    private blobIndex: number = 0;\n    private lastRederedBlobIndex: number = 0;\n\n    init(brayns: BraynsService) {\n        /*\n        brayns.binaryListeners.add((blob: Blob) => {\n            console.log(\"New bin...\", blob)\n            this.blob = blob\n            this.blobIndex++\n        })\n        requestAnimationFrame(this.paint);*/\n    }\n\n    get canvas() { return this._canvas; }\n    set canvas(canvas: HTMLCanvasElement | null) {\n        this._canvas = canvas;\n        if (!canvas) return;\n        this.ctx = canvas.getContext(\"2d\");\n    }\n\n    paint = async () => {\n        try {\n            // Did we already rendered this blob?\n            if (this.lastRederedBlobIndex === this.blobIndex) return;\n            const blob = this.blob;\n            if (!blob) return;\n            const canvas = this.canvas;\n            if (!canvas) return;\n            const ctx = this.ctx;\n            if (!ctx) return;\n            const img = await blobToImg(blob);\n            const srcW = img.naturalWidth;\n            const srcH = img.naturalHeight;\n            const dstW = canvas.width;\n            const dstH = canvas.height;\n            const dstX = (dstW - srcW) / 2;\n            const dstY = (dstH - srcH) / 2;\n            ctx.drawImage(\n                img,\n                dstX, dstY,\n                srcW, srcH\n            );\n            this.lastRederedBlobIndex = this.blobIndex;\n        }\n        finally {\n            requestAnimationFrame(this.paint);\n        }\n    }\n}\n\n\nfunction blobToImg(blob: Blob) {\n    const url = URL.createObjectURL(blob);\n    const img: any = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.src = url;\n        // https://medium.com/dailyjs/image-loading-with-image-decode-b03652e7d2d2\n        if (img.decode) {\n            img.decode()\n                // TODO: Figure out why decode() throws DOMException\n                .then(() => resolve(img));\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","type Action = (...args: any[]) => void;\n\n/**\n * The function to call as much as you want. It will perform the debouce for you.\n * Put in the same args as the `action` function.\n *\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\n * less than `delay` ms between them.\n * * delay - Number of milliseconds.\n */\nexport default function(action: Action, delay: number): Action {\n    let timer = 0;\n    let timestamp = 0;\n    let nextAction: Action = () => {};\n    let nextArgs: any[] = [];\n    const throttleAction = () => {\n        timer = 0;\n        nextAction(...nextArgs);\n    }\n\n    return function(this: { delay: number }, ...args: any[]) {\n        nextAction = action;\n        nextArgs = args;\n        const now = Date.now();\n        const elapsedTime = now - timestamp;\n        timestamp = now;\n        if (elapsedTime > delay) {\n            throttleAction();\n        }\n        else if (timer === 0) {\n            timer = window.setTimeout(throttleAction, delay - elapsedTime);\n        }\n    }\n}\n","import Scene from './scene'\nimport Models from '../models'\nimport Geom from '../geometry'\nimport Throttler from '../../tfw/throttler'\n\nimport { IVector, IQuaternion, IAxis, IScreenPoint, IPanningEvent } from '../types'\n\n\nexport default class GesturesHandler {\n    private savedTarget: IVector = [0,0,0];\n    private savedPosition: IVector = [0,0,0];\n    private savedOrientation: IQuaternion = [0,0,0,0];\n    private savedAxis: IAxis = {\n        x: [0,0,0], y: [0,0,0], z: [0,0,0]\n    };\n    private savedScreenPoint: IScreenPoint = { screenX: 0, screenY: 0 };\n    private savedTargetDistance: number = 0;\n\n    /**\n     * When panning starts, we should memorize the current\n     * Scene.camera/model rot/sca/loc params, and compute the target.\n     */\n    handlePanStart = async (evt: IPanningEvent) => {\n        await this.computeCurrentTarget(evt.screenX, evt.screenY)\n        const axis = Scene.camera.axis;\n        this.savedTarget = Scene.camera.target;\n        this.savedPosition = Scene.camera.position;\n        this.savedOrientation = Scene.camera.orientation;\n        this.savedAxis = axis;\n        this.savedScreenPoint = {\n            screenX: evt.screenX,\n            screenY: evt.screenY,\n            aspect: evt.aspect\n        };\n        this.savedTargetDistance = Scene.camera.getTargetDistance();\n    }\n\n    handlePan = Throttler((evt: IPanningEvent) => {\n        if (evt.button === 2) this.translateCamera(evt);\n        else if (evt.button === 1) this.orbitCamera(evt);\n        //else this.rotateCamera(evt);\n    }, 20)\n\n    /**\n     * screenX and screenY are between 0 and 1.\n     */\n    private async computeCurrentTarget(screenX: number, screenY: number) {\n        const hitPoint = await Scene.Api.inspect([screenX, screenY]);\n        console.info(\"screenX, screenY=\", screenX, screenY);\n        console.info(\"hitPoint=\", hitPoint);\n        if (hitPoint.hit) {\n            Scene.camera.setTarget(hitPoint.position, false);\n        } else {\n            const bounds = Models.getModelsBounds(Models.getVisibleModels());\n            const centerX = (bounds.min[0] + bounds.max[0]) / 2;\n            const centerY = (bounds.min[1] + bounds.max[1]) / 2;\n            const centerZ = (bounds.min[2] + bounds.max[2]) / 2;\n            Scene.camera.setTarget([centerX, centerY, centerZ], false)\n        }\n    }\n\n    private translateCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldTranslation = this.savedPosition.slice() as IVector;\n        const factor = Scene.camera.getTargetDistance() * 1.0;\n        const newTranslation = Geom.addVectors(\n            oldTranslation,\n            Geom.addVectors(\n                Geom.scale(axis.x, -factor * x * evt.aspect),\n                Geom.scale(axis.y, -factor * y),\n            )\n        );\n        Scene.camera.setPosition(newTranslation);\n    }\n\n    private orbitCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldOrientation = this.savedOrientation.slice() as IQuaternion;\n        const angleX = Math.PI * y;\n        const angleY = -2 * Math.PI * x;\n        const quaternionX = Geom.makeQuaternionAsAxisRotation(angleX, axis.x);\n        const quaternionY = Geom.makeQuaternionAsAxisRotation(angleY, axis.y);\n        const quaternionYX = Geom.multiplyQuaternions(quaternionY, quaternionX);\n        const newOrientation = Geom.multiplyQuaternions(quaternionYX, oldOrientation);\n\n        const positionVector = Geom.makeVector(\n            this.savedTarget,\n            this.savedPosition\n        );\n        const rotatedPositionVector = Geom.rotateWithQuaternion(\n            positionVector,\n            quaternionYX\n        );\n        const newPosition = Geom.addVectors(this.savedTarget, rotatedPositionVector);\n\n        Scene.camera.setPositionAndOrientation(newPosition, newOrientation);\n    }\n}\n","/**\n * There is only one scene in Brayns.\n */\n//import { Client as BraynsClient } from \"brayns\"\n\nimport Api from \"./api\"\nimport { IBraynsModel, IModel, IModelOptions, IMaterial } from '../types'\nimport Python from '../service/python'\nimport State from '../state'\nimport ServiceHost from '../service/host'\nimport Model from './model'\nimport Camera from './camera'\nimport Renderer from './renderer'\nimport GesturesHandler from './gestures-handler'\nimport BraynsService from '../service/brayns'\n\n// Brayns' client.\nconst Scene: {\n    brayns: (BraynsService | null),\n    camera: (Camera | null),\n    host: string,\n    renderer: Renderer,\n    gestures: GesturesHandler\n} = {\n    brayns: null,\n    camera: null,\n    host: '',\n    renderer: new Renderer(),\n    gestures: new GesturesHandler()\n}\n\nconst defaultObjectToExport = {\n    Api,\n    clear,\n    connect,\n    loadMeshFromPath,\n    request,\n    setMaterial,\n    setViewPort,\n    get brayns() { return Scene.brayns },\n    get camera(): Camera { return Scene.camera || new Camera({}) },\n    get host() { return Scene.host },\n    get renderer(): Renderer { return Scene.renderer },\n    get gestures(): GesturesHandler { return Scene.gestures }\n }\n\n export default defaultObjectToExport;\n\n/**\n * Try to connect to a Brayns service and fails if it takes too long.\n */\nasync function connect(hostName: string): Promise<BraynsService> {\n    /*const bs = new BraynsService(hostName);\n    const isConnected = await bs.connect()*/\n\n    Scene.host = hostName;\n    Scene.brayns = await ServiceHost.connect(hostName);\n\n    await request(\"set-videostream\", {\n        enabled: false\n    })\n\n    const camera = await request('get-camera');\n    const cameraParams = await request('get-camera-params');\n    Scene.camera = new Camera({ ...cameraParams, ...camera });\n    Scene.renderer.init(Scene.brayns);\n    const animation = await Api.getAnimationParameters();\n    State.dispatch(State.Animation.update(animation));\n\n    return Scene.brayns;\n}\n\nasync function request(method: string, params: {} = {}) {\n    return new Promise((resolve, reject) => {\n        try {\n            if (!Scene.brayns) {\n                console.error(\"No BraynsService!\");\n                reject();\n                return;\n            }\n            const loader = Scene.brayns.exec(method, params);\n            loader.then((output: any) => {\n                resolve(output)\n            },\n            (error: any) => {\n                console.error(\"Brayns request error!\", error);\n                console.error(\"   >>> method =\", method);\n                console.error(\"   >>> params =\", params);\n                reject(error)\n            });\n        }\n        catch( error ) {\n            console.error(\"Brayns request exception!\", error);\n            console.error(\"   >>> method =\", method);\n            console.error(\"   >>> params =\", params);\n            reject(error)\n        }\n    })\n}\n\n/**\n * Remove everything from the scene.\n */\nasync function clear(): Promise<boolean> {\n    const scene: any = await request('get-scene');\n    if (!scene) return false;\n    const models = scene.models;\n    if (!models) return false;\n    const ids = models.map( (model: any) => model.id );\n    await request(\"remove-model\", ids);\n    State.dispatch(State.Models.reset([]))\n\n    const rendererParams: any = await request(\"get-renderer-params\", {});\n    if (rendererParams) {\n        // A bit brighter.\n        rendererParams.pixel_alpha = 1;\n        rendererParams.shadows = 1;\n        rendererParams.soft_shadows = 0.5;\n        await request(\"set-renderer-params\", rendererParams);\n    }\n\n    await Api.setRenderer({\n        accumulation: true,\n        background_color: [0.3,0.4,0.5],\n        current: \"advanced_simulation\",\n        head_light: true,\n        max_accum_frames: 16,\n        samples_per_pixel: 1,\n        subsampling: 1\n    });\n\n    return true;\n}\n\nasync function setViewPort(width: number, height: number) {\n    // NEgative or null sizes make Brayns crash!\n    if (width < 32 || height < 32) return\n\n    return await request(\"set-application-parameters\", {\n        viewport: [width, height]\n    });\n}\n\nasync function loadMeshFromPath(\n            path: string,\n            options: IModelOptions = {}): Promise<Model> {\n    const result: IBraynsModel = (await Api.addModel({\n        ...options.brayns,\n        path\n    })) as IBraynsModel;\n\n    const fixedOptions = await fixBoundsIfNeeded(result);\n\n    const model: IModel = {\n        brayns: {\n            name: path,\n            bounds: {\n                min: [-10, -10, -10],\n                max: [+10, +10, +10]\n            },\n            transformation: {\n                rotation: [0,0,0,1],\n                scale: [1,1,1],\n                translation: [0,0,0]\n            },\n            ...result\n        },\n        materialIds: [],\n        deleted: false,\n        selected: false,\n        technical: false,\n        parent: -1,\n        ...fixedOptions\n    };\n    const modelInstance = new Model(model);\n    // We have to applyTransfo because the scale can change the location.\n    modelInstance.locate(model.brayns.transformation.translation)\n    modelInstance.applyTransfo()\n    const materialIds = await modelInstance.getMaterialIds();\n    model.materialIds = materialIds;\n    State.dispatch(State.Models.add(model));\n    return new Model(model);\n}\n\nasync function setMaterial(modelId: number, materialId: number,\n                           material: Partial<IMaterial>) {\n    return await Python.exec(\"phaneron/set-material\", {\n        ...material,\n        modelId,\n        materialId,\n        host: Scene.host\n    });\n}\n\n\n/**\n * There is a bug in addModel(). The returns doen't compute the bounds.\n * It will be fixed soon, but in the meantime, we will ask for the bounds to the scene.\n */\nasync function fixBoundsIfNeeded(braynsModel: IBraynsModel): Promise<IBraynsModel> {\n    const { min, max } = braynsModel.bounds\n    if (min[0] < max[0]) return braynsModel\n\n    const scene = await Api.getScene()\n    if (!scene) return braynsModel\n    const models = scene.models\n    if (!models) return braynsModel\n    const modelWithSearchedId = models\n        .find((m: any) => m && m.id === braynsModel.id)\n    if (!modelWithSearchedId) return braynsModel\n    braynsModel.bounds = {\n        ...braynsModel.bounds,\n        ...modelWithSearchedId.bounds\n    }\n    return braynsModel;\n}\n","import Geom from '../geometry'\nimport Scene from '../scene'\nimport Model from '../scene/model'\nimport Color from '../../tfw/color'\n\nimport { IQuaternion, IVector } from '../types'\n\nexport interface IClipPlaneState {\n    width: number,\n    height: number,\n    depth: number,\n    center: [number, number, number],\n    orientation: IQuaternion,\n    color: [number, number, number]\n}\n\ninterface ITransformation {\n    location?: IVector,\n    scale?: IVector,\n    rotation?: IQuaternion\n}\n\nconst EPSILON = 0.001\nconst PATH = '/gpfs/bbp.cscs.ch/project/proj3/.tolokoban/clipping-plane.ply'\n\nexport default class ClipPlane {\n    private readonly state: IClipPlaneState;\n    private attached: boolean = false;\n    private model: Model | null = null;\n    private isActivated = false;\n    private frontPlaneId: number = -1;\n    private backPlaneId: number = -1;\n\n    constructor(private partialState: Partial<IClipPlaneState>) {\n        this.state = {\n            width: 32,\n            height: 24,\n            depth: 2,\n            center: [0,0,0],\n            orientation: [0,0,0,1],\n            color: [0,1,0],\n            ...partialState\n        }\n    }\n\n    /**\n     * For snapshots, we will put the camera in orthographic mode\n     * and configure it in order to make the plane take the whole screen.\n     */\n    async setCameraForSnapshot() {\n        const { depth, center, orientation, width, height } = this.state\n        const normal = Geom.rotateWithQuaternion([0,0,1], orientation)\n        const remoteness = Geom.scale(normal, depth * 3)\n        const cameraCenter = Geom.addVectors(center, remoteness)\n        await Scene.camera.setOrthographic(\n            width*3, height*3, cameraCenter, orientation\n        )\n    }\n\n    get activated(): boolean {\n        return this.isActivated;\n    }\n\n    async setActivated(activated: boolean) {\n        if (this.isActivated === activated) return;\n\n        if (activated === false) {\n            await Scene.Api.removeClipPlanes([\n                this.frontPlaneId, this.backPlaneId])\n            this.isActivated = false;\n            return;\n        }\n\n        const { frontPlane, backPlane } = this.computeClippingPlanes()\n\n        const frontPlaneDescriptor = await Scene.Api.addClipPlane(frontPlane)\n        this.frontPlaneId = frontPlaneDescriptor.id\n        const backPlaneDescriptor = await Scene.Api.addClipPlane(backPlane)\n        this.backPlaneId = backPlaneDescriptor.id\n\n        this.isActivated = true;\n    }\n\n    async setTransformation(transformation: ITransformation) {\n        const { model } = this\n        const { location, scale, rotation } = transformation\n        if (model) {\n            const state = this.state\n            if (location) {\n                model.locate(location)\n                state.center = location\n            }\n            if (scale) {\n                model.scale(scale)\n                state.width = scale[0]\n                state.height = scale[1]\n                state.depth = scale[2]\n            }\n            if (rotation) {\n                model.rotate(rotation)\n                state.orientation = rotation\n            }\n            this.updateClippingPlanes()\n            await model.applyTransfo()\n        }\n    }\n\n    updateClippingPlanes = async () => {\n        const { frontPlane, backPlane } = this.computeClippingPlanes()\n\n        if (this.isActivated) {\n            const planes = await Scene.Api.getClipPlanes()\n            console.info(\">>> planes=\", planes);\n            console.info(\"this.frontPlaneId, frontPlane=\", this.frontPlaneId, frontPlane);\n            await Scene.Api.updateClipPlane({\n                id: this.frontPlaneId, plane: frontPlane\n            })\n            await Scene.Api.updateClipPlane({\n                id: this.backPlaneId, plane: backPlane\n            })\n            const planes2 = await Scene.Api.getClipPlanes()\n            console.info(\"<<< planes=\", planes2);\n        }\n    }\n\n    async setLocation(location: IVector) {\n        return await this.setTransformation({ location })\n    }\n    /**\n     * Clipping planes depend on the location and orientation\n     * of the object.\n     */\n    private computeClippingPlanes() {\n        const { depth, center, orientation } = this.state\n        const normal = Geom.rotateWithQuaternion([0,0,1], orientation)\n\n        const frontPlane = Geom.plane6to4(\n            Geom.addVectors(center, Geom.scale(normal, depth * 0.5 + EPSILON)),\n            normal\n        )\n\n        const backPlane = Geom.plane6to4(\n            Geom.addVectors(center, Geom.scale(normal, -depth * 0.5 - EPSILON)),\n            Geom.scale(normal, -1)\n        )\n\n        console.info(\"{ frontPlane, backPlane }=\", { frontPlane, backPlane });\n\n        return { frontPlane, backPlane }\n    }\n\n    async attach(): Promise<boolean> {\n        const { state } = this;\n        const model = await Scene.loadMeshFromPath(\n            PATH, {\n                technical: true,\n                brayns: {\n                    path: PATH,\n                    transformation: {\n                        rotation: state.orientation,\n                        scale: [ state.width, state.height, state.depth ],\n                        translation: state.center\n                    }\n                }\n            });\n        if (!model) return false;\n\n        this.model = model;\n        await this.setColor(Color.fromArrayRGB(this.state.color))\n\n        return true;\n    }\n\n    async setColor(color: Color) {\n        const diffuseColor = color.toArrayRGB()\n        const specularColor = Color.mix(color, Color.newWhite(), 0.8).toArrayRGB()\n        this.state.color = diffuseColor\n\n        if (!this.model) return\n\n        const modelId: number = this.model.id;\n\n        await Scene.setMaterial(modelId, 0, {\n            diffuseColor: diffuseColor,\n            specularColor: specularColor,\n            shadingMode: \"diffuse\"\n            //intensity: 2,\n            //emission: 0\n        })\n        /*Scene.setMaterial(modelId, 1, {\n            diffuseColor: [0.5, 0.5, 1.0],\n            specularColor: [0.75, 0.75, 1.0],\n            shadingMode: \"diffuse-alpha\",\n            opacity: 0.2\n        })*/\n    }\n\n    async detach() {\n        const { model } = this\n        if (!model) return\n        await Scene.Api.removeModel([model.id])\n    }\n}\n","import Scene from '../scene'\nimport Model from '../scene/model'\nimport Geom from '../geometry'\nimport ClipPlane from '../object/clip-plane'\n\nexport default { getAstrocytePath, test }\n\n\nasync function test() {\n    await Scene.clear();\n    await testAstrocytes();\n}\n\nasync function testConnectionBrowser() {\n    const path = \"/gpfs/bbp.cscs.ch/project/proj3/simulations/vizCa2p0_1x7/BlueConfig\"\n    const model = await Scene.loadMeshFromPath(path, {\n        brayns: {}\n    });\n}\n\nasync function testRotScaLocBug() {\n    await Scene.clear();\n    const clipPlane = new ClipPlane({ center: [0, 0, -10] })\n    await clipPlane.attach()\n    await Scene.Api.setCamera({\n        \"current\": \"perspective\",\n        \"orientation\": [\n            -0.14017151685192156,\n            -0.32251824876133234,\n            0.03719006603400091,\n            0.9353880606826994\n        ],\n        \"position\": [\n            -47.53281877713789,\n            25.377329151439724,\n            58.55470704433519\n        ],\n        \"target\": [\n            5.0802962060580015,\n            4.955568450963256,\n            -5.963281187412066\n        ]\n    })\n}\n\nasync function testAstrocytes() {\n    const X = 0;\n    const Y = 0;\n    const Z = 0;\n\n    for (let i = 0; i < 3; i++) {\n        const path = getAstrocytePath(\n            i, //Math.floor(Math.random() * 5000),\n            false);\n        const model = await Scene.loadMeshFromPath(path);\n        model.locate([\n            X + rnd(-10, 10),\n            Y + rnd(-10, 10),\n            Z + rnd(-10, 10)\n        ])\n        await model.applyTransfo();\n    }\n\n/*\n    const clipPlane = new ClipPlane({\n        width: 32, height: 12,\n        center: [X, Y, Z],\n        orientation: Geom.makeQuaternionAsAxisRotation(\n            0 * Math.PI,\n            //Math.random() * Math.PI * 2,\n            [0,0,1]\n        )\n    })\n    await clipPlane.attach()\n    await clipPlane.setActivated(true)\n*/\n    Scene.Api.setCamera({\n        \"current\": \"perspective\",\n        \"orientation\": [\n            0.1369767963305153,\n            -0.3116113279986347,\n            -0.0454473587151425,\n            0.9391859640751522\n        ],\n        \"position\": [\n            -26.063496883772473 + X,\n            -9.46257268249269 + Y,\n            32.349090206357516 + Z\n        ]\n    })\n\n    //await clipPlane.setCameraForSnapshot()\n}\n\n/**\n * Add an astrocyte model and return it's object as an instance of Model class.\n */\nfunction getAstrocytePath(id: number, decimated: boolean = true): string {\n    const path = `/gpfs/bbp.cscs.ch/project/proj3/resources/meshes/astrocytes/GLIA_${\n        padNumber(id)\n        }.h5${decimated ? '_decimated' : ''}.off`;\n    return path;\n}\n\n\nfunction padNumber(value: number, len: number = 6): string {\n    let out = `${value}`;\n    while (out.length < len) {\n        out = `0${out}`;\n    }\n    return out;\n}\n\n\nfunction rnd(min: number, max: number): number {\n    return min + Math.random() * (max - min);\n}\n","import SaveAsFile from 'save-as-file'\n\nimport Scene from '../scene'\nimport { API_snapshot_Param0 } from '../scene/api'\nimport State from '../state'\nimport { ISnapshot } from '../types'\n\n\nexport default {\n    async getCanvas(options: ISnapshot): Promise<HTMLCanvasElement> {\n        const params: API_snapshot_Param0 = {\n            animation_parameters: State.store.getState().animation,\n            samples_per_pixel: options.samples,\n            size: [options.width, options.height],\n            format: \"JPEG\",\n            camera: {\n                position: Scene.camera.position,\n                orientation: Scene.camera.orientation,\n                target: Scene.camera.target\n            }\n        }\n        const snapshot = await Scene.Api.snapshot(params);\n        const dataURI = `data:;base64,${snapshot.data}`\n        return new Promise( (resolve, reject) => {\n            const img = new Image();\n            img.onload = () => {\n                const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n                canvas.width = img.width;\n                canvas.height = img.height;\n                const ctx = canvas.getContext(\"2d\");\n                if (!ctx) {\n                    reject();\n                    return;\n                }\n                ctx.drawImage(img, 0, 0);\n                resolve(canvas);\n            }\n            img.onerror = reject;\n            img.src = dataURI;\n        })\n    },\n\n    async saveCanvasToFile(canvas: HTMLCanvasElement,\n                           filename: string,\n                           mimetype: string = \"image/jpeg\") {\n        canvas.toBlob(async (blob) => {\n            if (!blob) return;\n            const result = await SaveAsFile(blob, filename);\n        }, mimetype, 100);\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../types\"\nimport State from \"../../state\"\nimport { default as snapshotView, RESOLUTIONS, SAMPLINGS } from \"./snapshot\"\n\nexport { RESOLUTIONS, SAMPLINGS } from './snapshot'\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        filename: state.dialogs.snapshot.filename,\n        sizeKey: state.dialogs.snapshot.sizeKey,\n        width: state.dialogs.snapshot.width,\n        height: state.dialogs.snapshot.height,\n        samplesKey: state.dialogs.snapshot.samplesKey,\n        samples: state.dialogs.snapshot.samples\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onFilenameChange(filename: string) {\n            dispatch(State.Dialogs.updateSnapshot({ filename }))\n        },\n\n        onSizeKeyChange(sizeKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ sizeKey }))\n            const res = RESOLUTIONS[sizeKey];\n            if (!res) return;\n            const [width, height] = res;\n            dispatch(State.Dialogs.updateSnapshot({ width, height }))\n        },\n\n        onWidthChange(width: number) {\n            dispatch(State.Dialogs.updateSnapshot({ width }))\n        },\n\n        onHeightChange(height: number) {\n            dispatch(State.Dialogs.updateSnapshot({ height }))\n        },\n\n        onSamplesKeyChange(samplesKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ samplesKey }))\n            const samples = SAMPLINGS[samplesKey];\n            if (!samples) return;\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        },\n\n        onSamplesChange(samples: number) {\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(snapshotView);\n","import React from \"react\"\nimport { Provider } from 'react-redux'\n\nimport Dialog from '../../tfw/factory/dialog'\nimport { ISnapshot } from '../types'\nimport State from '../state'\nimport Snapshot from '../view/snapshot/snapshot.container'\n\nexport default {\n    async show(): Promise<ISnapshot | null> {\n        const answer = await Dialog.confirm(\n            \"Take snapshot\",\n            <Provider store={State.store}><Snapshot/></Provider>);\n        if (!answer) return null;\n        return State.store.getState().dialogs.snapshot;\n    }\n}\n","type Action = (...args: any[]) => void;\r\n\r\n/**\r\n * The function to call as much as you want. It will perform the debouce for you.\r\n * Put in the same args as the `action` function.\r\n *\r\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\r\n * less than `delay` ms between them.\r\n * * delay - Number of milliseconds.\r\n */\r\nexport default function (action: Action, delay: number): Action {\r\n    let timer: number = 0;\r\n\r\n    return function(this: { delay: number }, ...args: any[]) {\r\n        if (timer) window.clearTimeout(timer);\r\n        timer = window.setTimeout(() => {\r\n            timer = 0;\r\n            action(...args);\r\n        }, delay) as number;\r\n    }\r\n}\r\n","export default function castDouble(v: any, defVal = 0): number {\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return v;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return num;\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Gesture from '../../gesture'\nimport Label from '../label'\nimport castInteger from \"../../converter/integer\"\nimport castString from \"../../converter/string\"\nimport castFloat from \"../../converter/double\"\n\nimport \"./slider.css\"\n\ninterface ISliderProps {\n    value: number,\n    label?: string,\n    text?: string,\n    step?: number,\n    min?: number,\n    max?: number,\n    onChange: (value: number) => void\n}\n\nexport default class Slider extends React.Component<ISliderProps, {}> {\n    private readonly ref: React.RefObject<HTMLDivElement> = React.createRef();\n\n    handleTapOrMove = (evt: any) => {\n        const div = this.ref.current;\n        if (!div) return;\n        const rect = div.getBoundingClientRect();\n        const percent = clamp(evt.x / rect.width);\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const value = this.constrainValue(\n            min + (max - min) * percent, min, max, step\n        );\n        p.onChange(value);\n    }\n\n    componentDidMount() {\n        const div = this.ref.current;\n        if (!div) return;\n        Gesture(div).on({\n            tap: this.handleTapOrMove,\n            pan: this.handleTapOrMove\n        })\n    }\n\n    render() {\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const label = castString(p.label, '');\n        const value = this.constrainValue(p.value, min, max, step);\n        const text = castString(p.text, `${value}`);\n\n        return (<div className=\"tfw-view-Slider\"\n                     ref={this.ref}>\n            <Label label={label}/>\n            <div className=\"thm-ele-button thm-bgPD\">\n                <div className=\"thm-ele-nav thm-bgPL thm-fg\"\n                     style={{\n                         marginLeft: `calc(${100 * (value - min) / (max - min)}% - 16px)`\n                     }}>{text}</div>\n            </div>\n        </div>)\n    }\n\n    private constrainValue(value: number, min: number, max: number, step: number) {\n        let v = Math.max(min, Math.min(value, max));\n        if (step > 0) {\n            return min + step * Math.floor(step / 2 + (v - min) / step);\n        }\n        return v;\n    }\n}\n\n\nfunction clamp(value: number, min: number = 0, max: number = 1) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n}\n","export default {\n    padNumber(value: number, size: number = 6, fillWith: string = '0'): string {\n        let text = `${value}`;\n        while (text.length < size) {\n            text = fillWith.charAt(0) + text;\n        }\n        return text;\n    },\n\n    clamp(value: number, min: number = 0, max: number = 1) {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    },\n\n    loadTextFromURL(url: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    if (!response.ok) {\n                        reject(`Error ${response.status}: ${response.statusText}!`);\n                    }\n                    return response.text();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    },\n\n    loadJsonFromURL(url: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    return response.json();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    }\n}\n","import React from \"react\"\n\nimport Debouncer from '../../../tfw/debouncer'\nimport Button from '../../../tfw/view/button'\nimport Slider from '../../../tfw/view/slider'\nimport Combo from '../../../tfw/view/combo'\nimport Icon from '../../../tfw/view/icon'\nimport Util from '../../../tfw/util'\nimport State from '../../state'\nimport Scene from '../../scene'\n\nimport \"./animation-control.css\"\n\ninterface IAnimationControlProps {\n    current?: (number /* Integer */);\n    delta?: (number /* Integer */);\n    dt?: number;\n    frameCount?: (number /* Integer */);\n    playing?: boolean;\n    unit?: string;\n}\n\ninterface IAnimationControlState {\n    speedKey: string  // \"NORMAL\" | \"x2\" | \"x4\" | \"x8\" | \"x16\" | \"x32\"\n}\n\nexport default class AnimationControl extends React.Component<IAnimationControlProps, IAnimationControlState> {\n    constructor( props: IAnimationControlProps ) {\n        super( props );\n        this.state = { speedKey: speedToKey(props.delta || 1) }\n    }\n\n    handleCurrentChange = (current: number) => {\n        const params = { current };\n        State.dispatch(State.Animation.update(params));\n        this.setAnimationParameters(params);\n    }\n\n    setAnimationParameters = Debouncer((params: IAnimationControlProps) => {\n        Scene.Api.setAnimationParameters(params);\n    }, 300)\n\n    handleSpeedChange = (speedKey: string) => {\n        this.setState({ speedKey });\n        State.dispatch(State.Animation.update({ delta: keyToSpeed(speedKey) }));\n    }\n\n    shift(delta: number) {\n        const current = this.props.current || 1;\n        const frameCount = this.props.frameCount || 1;\n        const speed = keyToSpeed(this.state.speedKey);\n        const nextValue = Util.clamp(current + speed * delta, 1, frameCount);\n        if (nextValue !== current) {\n            const params = { current: nextValue };\n            State.dispatch(State.Animation.update(params));\n            this.setAnimationParameters(params);\n        }\n    }\n\n    handleNextClick = () => { this.shift(1); }\n    handleNext2Click = () => { this.shift(10); }\n    handlePrevClick = () => { this.shift(-1); }\n    handlePrev2Click = () => { this.shift(-10); }\n\n    render() {\n        const p = this.props;\n        const current = p.current || 0;\n        const frameCount = p.frameCount || 0;\n        if (frameCount < 2) return null;\n\n        const percent = Math.floor(.5 + 100 * (p.current || 0) / frameCount);\n        return (<div className=\"webBrayns-view-AnimationControl thm-bgPD-C\">\n            <div className=\"thm-bgPD flex\">\n                <Icon content=\"skip-prev2\" enabled={current > 1}\n                    onClick={this.handlePrev2Click}/>\n                <Icon content=\"skip-prev\" enabled={current > 1}\n                    onClick={this.handlePrevClick}/>\n                <Button icon=\"play\" small={true}/>\n                <Icon content=\"skip-next\" enabled={current < frameCount}\n                    onClick={this.handleNextClick}/>\n                <Icon content=\"skip-next2\" enabled={current < frameCount}\n                    onClick={this.handleNext2Click}/>\n            </div>\n            <div className=\"label\">\n                <b>{p.current}</b>\n                <span className='hint'>{` / ${frameCount} (${p.unit})`}</span>\n            </div>\n            <Slider min={0} max={frameCount}\n                    value={p.current || 0}\n                    step={1}\n                    text={`${percent} %`}\n                    onChange={this.handleCurrentChange} />\n            <Combo value={this.state.speedKey} label=\"Speed\" onChange={this.handleSpeedChange}>\n                <div key=\"NORMAL\">x1</div>\n                <div key=\"x2\">x2</div>\n                <div key=\"x4\">x4</div>\n                <div key=\"x8\">x8</div>\n                <div key=\"x16\">x16</div>\n                <div key=\"x32\">x32</div>\n            </Combo>\n        </div>)\n    }\n}\n\n\n// The speed is the number of frames to skip to go to the next one.\n// In Brayns' animation parameters, it is own by the parameter `delta`.\nconst SPEEDS: [string,number][] = [\n    [\"NORMAL\", 1],\n    [\"x2\", 2],\n    [\"x4\", 4],\n    [\"x8\", 8],\n    [\"x16\", 16],\n    [\"x32\", 32]\n]\n\nfunction speedToKey(speed: number): string {\n    const item = SPEEDS.find(x => x[1] === speed);\n    if (!item) return \"NORMAL\";\n    return item[0];\n}\n\nfunction keyToSpeed(key: string): number {\n    const item = SPEEDS.find(x => x[0] === key);\n    if (!item) return 1;\n    return item[1];\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../types\"\nimport View from \"./animation-control\"\n\nfunction mapStateToProps(state: IAppState) {\n    return { ...state.animation };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n","export default {\n    fromArrayBuffer, fromBlob\n}\n\n\nfunction fromBlob(blob: Blob): Promise<HTMLImageElement> {\n    const url = URL.createObjectURL(blob);\n    const img = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.src = url;\n        // https://medium.com/dailyjs/image-loading-with-image-decode-b03652e7d2d2\n        if (img.decode) {\n            img.decode()\n                // TODO: Figure out why decode() throws DOMException\n                .then(() => resolve(img));\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n\n\nfunction fromArrayBuffer(arrayBuffer: ArrayBuffer): Promise<HTMLImageElement> {\n    console.info(\"arrayBuffer=\", arrayBuffer);\n    const blob = new Blob([arrayBuffer])\n    console.info(\"blob=\", blob);\n    return fromBlob(blob)\n}\n","import React from 'react';\n\nimport SnapshotService from '../../service/snapshot'\nimport { IQuaternion, IScreenPoint, IHitPoint, IPanningEvent } from '../../types'\nimport Scene from '../../scene'\nimport Gesture from '../../../tfw/gesture'\nimport Button from '../../../tfw/view/button'\nimport Snapshot from '../../dialog/snapshot'\nimport AnimationControl from '../animation-control'\nimport ImageFactory from '../../../tfw/factory/image'\nimport { IEvent } from '../../../tfw/gesture/types'\n\nimport \"./image-stream.css\"\n\ninterface IImageStreamProps {\n    onHit?: (point: IHitPoint) => void,\n    // Hitting the void, actually\n    onTap?: (point: IScreenPoint) => void,\n    onPanStart?: (panning: IPanningEvent) => void,\n    onPan?: (panning: IPanningEvent) => void\n}\n\nexport default class ImageStream extends React.Component<IImageStreamProps> {\n    private readonly canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n    private orientation: IQuaternion = [0,0,0,1];\n\n    constructor(props: IImageStreamProps) {\n        super(props);\n    }\n\n    get canvas(): HTMLCanvasElement | null {\n        return this.canvasRef.current;\n    }\n\n    componentDidMount() {\n        // If there's no container we can bind the camera to,\n        // there's no point in continuing\n        if (!this.canvas) return\n        const brayns = Scene.brayns\n        if (!brayns) return\n\n        brayns.binaryListeners.add(this.handleImage)\n\n        const that = this;\n\n        Gesture(this.canvas).on({\n            down: this.handleDown,\n            wheel(evt) {\n                if (!Scene.camera) return;\n                if (evt.deltaY < 0) {\n                    Scene.camera.moveForward(10);\n                }\n                else if (evt.deltaY > 0) {\n                    Scene.camera.moveBackward(10);\n                }\n            },\n            pan: this.handlePan\n        });\n        this.updateViewPort();\n        window.onfocus = this.updateViewPort;\n    }\n\n    private handleImage = async (data: ArrayBuffer) => {\n        const canvas = this.canvas;\n        if (!canvas) return\n        const ctx = canvas.getContext(\"2d\")\n        if (!ctx) return\n\n        const img = await ImageFactory.fromArrayBuffer(data)\n        ctx.drawImage(img, 0, 0, canvas.clientWidth, canvas.clientHeight)\n    }\n\n    private handleDown = (evt: IEvent) => {\n        const handler = this.props.onPanStart;\n        if (typeof handler !== 'function') return;\n        evt.clear();\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    private handlePan = (evt: IEvent) => {\n        const handler = this.props.onPan;\n        if (typeof handler !== 'function') return;\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    /**\n     * Get pixel coordinates and return a ScreenPoint.\n     * In a screen point, every coordinate is a real number\n     * between 0 and 1.\n     */\n    private getScreenPoint(x: number, y: number): IScreenPoint {\n        if (!this.canvas) return { screenX: -1, screenY: -1, aspect: 1 };\n        const w = this.canvas.clientWidth;\n        const h = this.canvas.clientHeight;\n        return {\n            screenX: x / w,\n            screenY: 1 - (y / h),\n            aspect: w / h\n        }\n    }\n\n    private updateViewPort = async () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas ) return;\n        const rect = canvas.getBoundingClientRect();\n        const w = Math.floor(rect.width);\n        const h = Math.floor(rect.height);\n        canvas.width = w;\n        canvas.height = h;\n        await Scene.setViewPort(w, h);\n    }\n\n    private handleScreenShot = async () => {\n        const options = await Snapshot.show();\n        if (!options) return;  // Action cancelled.\n        const canvas = await SnapshotService.getCanvas(options);\n        await SnapshotService.saveCanvasToFile(canvas, `${options.filename}.jpg`);\n    }\n\n    // We use moz-opaque to improve the perf. of the canvas\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n    render() {\n        return (\n            <div className=\"webBrayns-view-ImageStream\">\n                <canvas\n                    ref={this.canvasRef}\n                    className=\"\"\n                    moz-opaque=\"true\" />\n                <div className=\"icons\">\n                    <Button\n                        icon=\"camera\"\n                        onClick={this.handleScreenShot}\n                        warning={true}/>\n                </div>\n                <AnimationControl />\n            </div>\n        );\n    }\n}\n","import Debounder from '../debouncer'\nimport Listeners from '../listeners'\n\n\nexport interface IDimension {\n    width: number,\n    height: number\n}\n\ninterface IElemSize {\n    blockSize: number,\n    inlineSize: number\n}\n\ninterface IResizeObserverEntry {\n    borderBoxSize: IElemSize,\n    contentBoxSize: IElemSize,\n    contentRect: DOMRectReadOnly,\n    target: Element | SVGElement\n}\n\ninterface ITarget {\n    target: Element | SVGElement,\n    rect: DOMRectReadOnly\n}\n\nconst ResizeObserver = class {\n    private intervalId = 0\n    private targets: ITarget[] = []\n\n    constructor(private slot: (entries: IResizeObserverEntry[]) => void) {}\n\n    observe(target: Element | SVGElement) {\n        const { targets } = this\n        if (targets.map(getTarget).indexOf(target) !== -1) return\n        if (targets.length === 0) {\n            this.intervalId = window.setInterval(this.checkSize, 200)\n        }\n        targets.push({\n            target,\n            rect: target.getBoundingClientRect() as DOMRectReadOnly\n        })\n    }\n\n    unobserve(target: Element | SVGElement) {\n        const { targets } = this\n        const indexOf = targets.map(getTarget).indexOf(target)\n        if (indexOf === -1) return\n        targets.splice(indexOf, 1)\n        if (targets.length === 0) {\n            window.clearInterval(this.intervalId)\n        }\n    }\n\n    private checkSize = () => {\n        const entries: IResizeObserverEntry[] = []\n\n        for( const item of this.targets ) {\n            const rect = item.target.getBoundingClientRect() as DOMRectReadOnly\n            if (areDifferent(rect, item.rect)) {\n                const size = {\n                    inlineSize: rect.width,\n                    blockSize: rect.height\n                }\n                entries.push({\n                    target: item.target,\n                    borderBoxSize: size,\n                    contentBoxSize: size,\n                    contentRect: rect\n                })\n                item.rect = rect\n            }\n        }\n\n        if (entries.length > 0) {\n            this.slot(entries)\n        }\n    }\n}\n\nexport default class ResizeWatcher {\n    private listeners = new Listeners<IDimension>()\n    private readonly observer: ResizeObserver\n\n    constructor(private element: HTMLElement, private debouncerDelay: number = 300) {\n        this.observer = new ResizeObserver(this.onEntries)\n        this.fire = Debounder(this.fire, debouncerDelay)\n    }\n\n    subscribe(listener: (dimension: IDimension) => void) {\n        if (this.listeners.length === 0) {\n            this.attach()\n        }\n        this.listeners.add(listener)\n    }\n\n    unsubscribe(listener: (dimension: IDimension) => void) {\n        this.listeners.remove(listener)\n        if (this.listeners.length === 0) {\n            this.detach()\n        }\n    }\n\n    private attach() {\n        this.observer.observe(this.element)\n    }\n\n    private detach() {\n        this.observer.unobserve(this.element)\n    }\n\n    private fire = (width: number, height: number) => {\n        this.listeners.fire({ width, height })\n    }\n\n    private onEntries = (entries: IResizeObserverEntry[]) => {\n        const filteredEntries = entries.filter((item: IResizeObserverEntry) => item.target === this.element)\n        if (filteredEntries.length > 0) {\n            const entry = filteredEntries[0]\n            const size = entry.contentBoxSize\n            this.fire(size.inlineSize, size.blockSize)\n        }\n    }\n}\n\n\nfunction getTarget(obj: ITarget) {\n    return obj.target\n}\n\n\nfunction areDifferent(r1: DOMRectReadOnly, r2: DOMRectReadOnly): boolean {\n    if (r1.width !== r2.width) return true\n    if (r1.height !== r2.height) return true\n\n    return false\n}\n","import React from \"react\"\nimport Scene from '../../scene'\nimport Debouncer from '../../../tfw/debouncer'\nimport Gesture from '../../../tfw/gesture'\nimport ResizeWatcher, { IDimension } from '../../../tfw/watcher/resize'\n\nimport { IScreenPoint, IPanningEvent } from '../../types'\nimport { IEvent } from '../../../tfw/gesture/types'\n\nimport \"./video-stream.css\"\n\nconst MIMECODEC = 'video/mp4; codecs=\"avc1.42E032\"';\n\ninterface IVideoStreamProps {\n    onPanStart: (panning: IPanningEvent) => void,\n    onPan: (panning: IPanningEvent) => void\n}\n\nexport default class VideoStream\n            extends React.Component<IVideoStreamProps, {}> {\n    private readonly refVideo: React.RefObject<HTMLVideoElement> = React.createRef();\n    private sourceBuffer: any = {}\n    private lastWidth: number = -1\n    private lastHeight: number = -1\n    private arraySize: number = 0\n    private bufArray: Uint8Array[] = []\n    // Used for setInterval() because we are watching on screen resize\n    // but we want to stp this watch on unmount.\n    private mediaSource: MediaSource | null = null\n    private resizeWatcher: ResizeWatcher | null = null\n\n    componentDidMount() {\n        const video = this.refVideo.current\n        if (!video) return\n\n        /*const EVENTS = [\n            'abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted',\n            'ended', 'interruptbegin', 'interruptend', 'loadeddata', 'loadedmetadata',\n            'loadstart', 'mozaudioavailable', 'pause', 'play', 'playing', 'progress',\n            'ratechange', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate',\n            'volumechange', 'waiting'\n        ]\n        EVENTS.forEach((eventName: string) => {\n            video.addEventListener(\n                eventName,\n                (evt) => console.log(`Video event: ${eventName.toUpperCase()}`)\n            )\n        })*/\n\n        Gesture(video).on({\n            wheel: this.handleGestureWheel,\n            down: this.handleGestureDown,\n            pan: this.handleGesturePan\n        });\n\n        this.resizeWatcher = new ResizeWatcher(video, 500)\n        const rect = video.getBoundingClientRect()\n        this.handleResize(rect)\n    }\n\n    private handleGestureWheel = (evt: IEvent) => {\n    }\n\n    private handleGestureDown = (evt: IEvent) => {\n        const handler = this.props.onPanStart;\n        if (typeof handler !== 'function') return;\n        evt.clear();\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    private handleGesturePan = (evt: IEvent) => {\n        const handler = this.props.onPan;\n        if (typeof handler !== 'function') return;\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    /**\n     * Get pixel coordinates and return a ScreenPoint.\n     * In a screen point, every coordinate is a real number\n     * between 0 and 1.\n     */\n    private getScreenPoint(x: number, y: number): IScreenPoint {\n        const video = this.refVideo.current\n        if (!video) return { screenX: x, screenY: y, aspect: 1 }\n        const rect = video.getBoundingClientRect()\n        const w = rect.width\n        const h = rect.height;\n        return {\n            screenX: x / w,\n            screenY: 1 - (y / h),\n            aspect: w / h\n        }\n    }\n\n    private createMediaSource = () => {\n        const video = this.refVideo.current\n        if (!video) return\n        const mediaSource = new MediaSource()\n        mediaSource.id = Date.now()\n        mediaSource.addEventListener('sourceclose', () => {\n            console.log(\"Source CLOSE\", mediaSource.id)\n        })\n        mediaSource.addEventListener('sourceended', () => {\n            console.log(\"Source ENDED\", mediaSource.id)\n        })\n        mediaSource.addEventListener('sourceopen', async () => {\n            console.log(\"Source OPEN\", mediaSource.id)\n            this.bufArray = []\n            this.sourceBuffer = mediaSource.addSourceBuffer(MIMECODEC)\n            await this.enableVideoStream()\n        })\n        this.mediaSource = mediaSource\n        if (video.src) {\n            // Don't let memory leak!\n            window.URL.revokeObjectURL(video.src)\n        }\n        video.src = window.URL.createObjectURL(mediaSource)\n        // The following code will work one day.\n        // But for now, Only MediaStream is implemented...\n        // And that's a pity because Google Chrome does not\n        // support createObjectURL on MediaSource any more.\n        // Septembre 12th, 2019.\n        //\n        // video.srcObject = mediaSource\n    }\n\n    componentWillUnmount() {\n        const brayns = Scene.brayns\n        if (!brayns) return\n\n        this.disableVideoStream()\n    }\n\n    private async enableVideoStream() {\n        const brayns = Scene.brayns\n        if (!brayns) return\n\n        console.log(\"videostream\", \"ON\")\n        if (this.resizeWatcher) {\n            this.resizeWatcher.subscribe(this.handleResize)\n        }\n        brayns.binaryListeners.add(this.handleWebSocketMessage)\n        return await Scene.request(\"set-videostream\", { enabled: true })\n    }\n\n    private async disableVideoStream() {\n        const brayns = Scene.brayns\n        if (!brayns) return\n        const video = this.refVideo.current\n        if (!video) return\n\n        console.log(\"videostream\", \"OFF\")\n        if (this.resizeWatcher) {\n            this.resizeWatcher.unsubscribe(this.handleResize)\n        }\n        brayns.binaryListeners.remove(this.handleWebSocketMessage)\n        await Scene.request(\"set-videostream\", { enabled: false })\n    }\n\n    private handleResize = async (dimension: IDimension) => {\n        const video = this.refVideo.current\n        if (!video) return\n\n        const { width, height } = dimension\n        console.log(\">>> handleResize(\", width, \", \", height, \")\")\n        await this.disableVideoStream()\n        video.width = width\n        video.height = height\n        await Scene.setViewPort(width, height)\n        this.createMediaSource()\n        console.log(\"<<< handleResize(\", width, \", \", height, \")\")\n    }\n\n    /**\n     * Decode and display video.\n     */\n    private handleWebSocketMessage = async (arrayBuffer: ArrayBuffer) => {\n        const video = this.refVideo.current\n        if (!video) return\n\n        //const arrayBuffer = await new Response(data).arrayBuffer();\n        const bs = new Uint8Array( arrayBuffer )\n        //console.log(\"Buffering\", bs.length, \"bytes...\")\n        this.bufArray.push(bs)\n        this.arraySize += bs.length\n\n        if (video.error) {\n            console.error(\"VIDEO ERROR: \", video.error)\n            return\n        }\n\n        if (!this.sourceBuffer.updating) {\n            const streamBuffer = new Uint8Array(this.arraySize)\n            let i = 0\n            while (this.bufArray.length > 0) {\n                const b = this.bufArray.shift();\n                //console.info(\"Flushing\", b.length, \"bytes.\");\n                streamBuffer.set(b, i);\n                i += b.length;\n            }\n            this.arraySize = 0;\n            // Add the received data to the source buffer\n            this.sourceBuffer.appendBuffer(streamBuffer);\n        }\n\n        if (video.paused) {\n            video.play();\n        }\n\n        video.width = video.videoWidth\n        video.height = video.videoHeight\n    }\n\n    handleVideoError = async (evt: React.SyntheticEvent<HTMLVideoElement, Event>) => {\n        const video = this.refVideo.current\n        if (!video) return\n\n        console.error(\"Video ERROR: \", video.error, evt)\n        await this.disableVideoStream()\n        requestAnimationFrame(this.createMediaSource)\n    }\n\n    render() {\n        return (<video\n                    ref={this.refVideo}\n                    onError={this.handleVideoError}\n                    autoPlay={false}\n                    crossOrigin=\"anonymous\"\n                    className=\"webBrayns-view-VideoStream\">\n        </video>)\n    }\n}\n","import React from \"react\"\r\nimport castArray from \"../converter/array\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport \"./stack.css\"\r\n\r\ninterface IStackProps {\r\n    value: string;\r\n    classNames?: string | string[];\r\n    fullscreen?: boolean;\r\n    scrollable?: boolean;\r\n    children: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Stack extends React.Component<IStackProps, {}> {\r\n    render() {\r\n        const children = castArray(this.props.children);\r\n        const scrollable = castBoolean(this.props.scrollable, false);\r\n        const fullscreen = castBoolean(this.props.fullscreen, false);\r\n        const classes = [\"tfw-layout-stack\"];\r\n        classes.push(...castStringArray(this.props.classNames));\r\n        if (scrollable) classes.push(\"scrollable\");\r\n        if (fullscreen) classes.push(\"fullscreen\");\r\n\r\n        return (\r\n            <div className={classes.join(\" \")}>{\r\n                children.filter(elem => elem.key == this.props.value)\r\n            }</div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Icon from '../../../tfw/view/icon'\nimport Input from '../../../tfw/view/input'\nimport Button from '../../../tfw/view/button'\nimport Storage from '../../../tfw/storage'\nimport Scene from '../../scene'\n\nimport \"./websocket-console.css\"\n\n\ninterface IWebsocketConsoleProps {\n    visible: boolean\n}\n\ninterface IWebsocketConsoleState {\n    method: string,\n    params: string,\n    output: string,\n    error: string | null,\n    querying: boolean\n}\n\n\nexport default class WebsocketConsole extends React.Component<IWebsocketConsoleProps, IWebsocketConsoleState> {\n    constructor( props: IWebsocketConsoleProps ) {\n        super( props );\n        this.state = {\n            method: get(\"method\", \"get-renderer-params\"),\n            params: get(\"params\", \"{}\"),\n            output: \"\",\n            error: null,\n            querying: false\n        }\n    }\n\n    handleMethodChange = (method: string) => {\n        this.setState({ method });\n    }\n\n    handleParamsChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setState({ params: event.target.value });\n    }\n\n    handleExecute = async () => {\n        const { method, params } = this.state;\n\n        set(\"method\", method);\n        set(\"params\", params);\n\n        this.setState({ querying: true, output: `${Date.now()}`, error: null });\n        try {\n            const input = parseJSON(params);\n            const output = await Scene.request(method, input);\n            this.setState({ error: null, output: JSON.stringify(output, null, '  ') });\n        }\n        catch( ex ) {\n            console.error(\"WebSocket console error:\", ex);\n            this.setState({ error: parseError(ex) });\n        }\n        finally {\n            this.setState({ querying: false });\n        }\n    }\n\n    render() {\n        const classNames = [\"webBrayns-view-WebsocketConsole\", \"thm-bg0\"];\n        if (this.props.visible) classNames.push(\"visible\");\n\n        return (<div className={classNames.join(' ')}>\n            <div className=\"head\">\n                <Input\n                    label=\"Method\"\n                    value={this.state.method}\n                    onChange={this.handleMethodChange}\n                    onEnterPressed={this.handleExecute}\n                    wide={true}/>\n            </div>\n            <textarea\n                className=\"input\"\n                onChange={this.handleParamsChange}\n                defaultValue={this.state.params}></textarea>\n            <div className=\"button\">\n                <Button\n                    label=\"Execute request\"\n                    wide={true}\n                    wait={this.state.querying}\n                    icon=\"gear\"\n                    onClick={this.handleExecute}/>\n            </div>\n            {\n                this.state.error ?\n                <div className=\"error\">{this.state.error}</div> :\n                <textarea\n                    className=\"output thm-bgPL\"\n                    readOnly={true}\n                    value={this.state.output}>\n                </textarea>\n            }\n        </div>)\n    }\n}\n\n\nconst STORAGE_PREFIX = 'websocket-console::';\n\nfunction get(key: string, defaultValue: any): any {\n    return Storage.local.get(`${STORAGE_PREFIX}${key}`, defaultValue);\n}\n\nfunction set(key: string, value: any): any {\n    return Storage.local.set(`${STORAGE_PREFIX}${key}`, value);\n}\n\n\nfunction parseJSON(json: string): any {\n    try {\n        return JSON.parse(json);\n    }\n    catch(ex) {\n        throw Error(`This parameter is not in valid JSON format:\\n${json}\\n\\nReason: ${ex}!`);\n    }\n}\n\n\nfunction parseError(ex: any) {\n    let output = JSON.stringify(ex, null, '  ');\n    if (ex && typeof ex.toString === 'function') {\n        output += '\\n\\n' + ex.toString();\n    }\n    return output;\n}\n","import * as React from \"react\"\nimport castArray from \"../converter/array\"\nimport castBoolean from \"../converter/boolean\"\nimport TouchableBehavior from \"../behavior/touchable\"\nimport \"./touchable.css\"\n\ninterface ITouchableProps {\n    enabled?: boolean;\n    onClick?: ()=>void;\n    title?: string;\n    classNames?: string[];\n    color?: string;\n    children?: React.ReactElement<any>|React.ReactElement<any>[];\n}\n\nexport default class Touchable extends React.Component<ITouchableProps, {}> {\n    readonly touchable: TouchableBehavior;\n    private ref = React.createRef();\n\n    constructor(props: ITouchableProps) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.touchable = new TouchableBehavior({onTap: this.handleClick, color: props.color});\n    }\n\n    componentDidMount() {\n        const element = this.ref.current;\n        if (!element) return;\n        this.touchable.element = element;\n    }\n\n    handleClick() {\n        const handler = this.props.onClick;\n        if( typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    render() {\n        const p = this.props;\n        const enabled = castBoolean(p.enabled, true);\n        const classes = [\"tfw-view-touchable\"].concat(castArray(p.classNames));\n        if( enabled ) classes.push(\"enabled\");\n        return <div ref={this.ref}\n                tabIndex={0}\n                className={classes.join(\" \")}\n                title={p.title}>{\n            p.children\n        }</div>\n    }\n}\n","import React from \"react\"\n\nimport Touchable from '../../../../tfw/view/touchable'\n\nimport \"./path-bar.css\"\n\ninterface IPathBarProps {\n    path: string,\n    root: string,\n    onClick: (path: string) => void\n}\n\nexport default class PathBar extends React.Component<IPathBarProps, {}> {\n    render() {\n        const { path, root } = this.props;\n        const pieces = [\n            root,\n            ...path.substr(root.length).split(\"/\")\n        ].filter((item: string) => item.length > 0);\n        const lastIndex = pieces.length - 1;\n        const buttons = [];\n        for (let i=0 ; i<pieces.length ; i++) {\n            const piece = pieces[i];\n            const path = pieces.slice(0, i + 1).join(\"/\");\n            const handler = () => { this.props.onClick(path) };\n            if (i === lastIndex) {\n                // Last item is not a button, because it makes no sense to click on the folder\n                // you already are in.\n                buttons.push(<div>{piece}</div>)\n            } else {\n                const button = (<div key={path} className=\"thm-bgPL thm-ele-button\">\n                        <Touchable onClick={handler}><div>{piece}</div></Touchable>\n                    </div>);\n                buttons.push(button);\n            }\n        }\n\n        return (<div className=\"webBrayns-view-PathBar\">\n            <header>{path}</header>\n            <div>{buttons}</div>\n        </div>)\n    }\n}\n","import * as React from \"react\"\nimport \"./list.css\"\nimport Debouncer from \"../../debouncer\";\nimport castUnit from \"../../converter/unit\"\nimport castBoolean from \"../../converter/boolean\"\nimport castInteger from \"../../converter/integer\"\nimport castString from \"../../converter/string\"\nimport Gesture from \"../../gesture\"\n\ninterface IListProps {\n    // Array of all the items to hold.\n    items: any[];\n    className?: string;\n    // Function which takes an item and return a component.\n    mapper: (item: any) => React.ReactElement;\n    itemHeight?: number;\n    width?: string;\n    height?: string;\n    animateRefresh?: boolean;\n    onRefreshAsked?: () => void;\n}\n\ninterface IListState {\n    items: any[];\n}\n\nexport default class List extends React.Component<IListProps, IListState> {\n    private readonly refMain: React.RefObject<HTMLDivElement>;\n    private readonly refHead: React.RefObject<HTMLDivElement>;\n    private readonly refBody: React.RefObject<HTMLDivElement>;\n    private readonly refTail: React.RefObject<HTMLDivElement>;\n    private lastFirstItemIndex: number;\n    private lastVisibleItemsCount: number;\n    private lastItemsArray: any[];\n    private itemHeight: number = 36;\n\n    constructor(props: IListProps) {\n        super(props);\n        this.refMain = React.createRef();\n        this.refHead = React.createRef();\n        this.refBody = React.createRef();\n        this.refTail = React.createRef();\n        this.onScroll = Debouncer(this.onScroll.bind(this), 30);\n        this.onPanDown = this.onPanDown.bind(this);\n        this.lastFirstItemIndex = -1;\n        this.lastVisibleItemsCount = -1;\n        this.lastItemsArray = [];\n        this.state = { items: [] };\n    }\n\n    onPanDown() {\n        const main = this.refMain.current;\n        if (!main) return;\n        if (main.scrollTop > 0) return;\n\n        const onRefresh = this.props.onRefreshAsked;\n        if (typeof onRefresh !== 'function') return;\n        onRefresh();\n    }\n\n    onScroll(evt: any = null): void {\n        const main = this.refMain.current;\n        const head = this.refHead.current;\n        const body = this.refBody.current;\n        const tail = this.refTail.current;\n        if (!main || !head || !body || !tail) return;\n\n        if (this.props.animateRefresh) main.scrollTop = 0;\n\n        const rect = main.getBoundingClientRect();\n        const top = Math.floor(main.scrollTop);\n        const height = Math.floor(rect.height);\n        const itemsCount = this.props.items.length;\n        const firstItemIndex = Math.min(\n            itemsCount, Math.floor(top / this.itemHeight));\n        const visibleItemsCount = Math.min(\n            itemsCount - firstItemIndex,\n            1 + Math.ceil(height / this.itemHeight)\n        );\n        const tailCount = this.props.items.length - firstItemIndex - visibleItemsCount;\n\n        head.style.height = `${this.itemHeight * firstItemIndex}px`;\n        body.style.height = `${this.itemHeight * visibleItemsCount}px`;\n        tail.style.height = `${this.itemHeight * tailCount}px`;\n\n        main.scrollTop = top;\n\n        if (this.lastFirstItemIndex !== firstItemIndex\n            || this.lastVisibleItemsCount !== visibleItemsCount) {\n            this.lastFirstItemIndex = firstItemIndex;\n            this.lastVisibleItemsCount = visibleItemsCount;\n            this.setState({\n                items: this.props.items.slice(firstItemIndex, firstItemIndex + visibleItemsCount)\n            });\n        }\n\n        // Resize background image for head and tail.\n        const backgroundSize = `${main.clientWidth}px ${this.itemHeight}px`;\n        head.style.backgroundSize = backgroundSize;\n        tail.style.backgroundSize = backgroundSize;\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.onScroll, false);\n        const main = this.refMain.current;\n        if (!main) return;\n        Gesture(main).on({\n            pandown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                main.classList.add(\"animate-refresh\");\n            },\n            swipedown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                this.onPanDown();\n            },\n            up: () => main.classList.remove(\"animate-refresh\")\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onScroll, false);\n    }\n\n    render() {\n        this.itemHeight = castInteger(this.props.itemHeight, 36);\n        if (this.lastItemsArray !== this.props.items) {\n            this.lastVisibleItemsCount = -1;\n            this.lastItemsArray = this.props.items;\n        }\n        this.onScroll();\n\n        if (typeof this.props.mapper !== 'function') {\n            console.error(\"props =\", this.props);\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper must be a function which returns a ReactElement!`);\n        }\n        let children = null;\n        try {\n            children = this.state.items\n                .map(this.props.mapper)\n                .map(content => (\n                    <div className=\"item\" key={content.key}\n                        style={{\n                            height: `${this.itemHeight}px`,\n                            minHeight: `${this.itemHeight}px`,\n                            maxHeight: `${this.itemHeight}px`\n                        }}>{content}</div >\n                ));\n        }\n        catch (ex) {\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper returns an exception:\\n${ex}`);\n        }\n\n        const width = castUnit(this.props.width, \"auto\");\n        const height = castUnit(this.props.height, \"auto\");\n        const animateRefresh = castBoolean(this.props.animateRefresh, false);\n        const classes = [\"tfw-view-list\"];\n        if (animateRefresh) classes.push(\"animate-refresh\", \"refreshing\");\n        const className = `${classes.join(' ')} ${castString(this.props.className, '')}`\n\n        return (\n            <div className={className}\n                style={{ width, height }}\n                onScroll={this.onScroll}\n                ref={this.refMain}>\n                <div className=\"space\" ref={this.refHead} />\n                <div className=\"body\" ref={this.refBody}>{\n                    children\n                }</div>\n                <div className=\"space\" ref={this.refTail} />\n            </div>\n        );\n    }\n}\n","import React from \"react\"\n\nimport Touchable from '../../../../tfw/view/touchable'\nimport Button from '../../../../tfw/view/button'\nimport Icon from '../../../../tfw/view/icon'\nimport List from '../../../../tfw/view/list'\n\nimport \"./path-list.css\"\n\ninterface IPathListProps {\n    files: string[],\n    folders: string[],\n    onFileClick: (name: string) => void,\n    onFolderClick: (name: string) => void\n}\n\nexport default class PathList extends React.Component<IPathListProps, {}> {\n    constructor( props: IPathListProps ) {\n        super( props );\n    }\n\n    render() {\n        const { files, folders, onFileClick, onFolderClick } = this.props;\n        return (<div className=\"webBrayns-view-PathList\">\n            <div>\n                <h1>{`Folders (${folders.length})`}</h1>\n                <List itemHeight={32}\n                      height=\"60vh\"\n                      width=\"45%\"\n                      items={folders.sort()}\n                      mapper={(name: string) => (\n                          <div className=\"folder-button thm-bg0\">\n                            <Touchable key={name}\n                                       onClick={() => onFolderClick(name)}\n                                       classNames={[\"thm-ele-button\", \"thm-bgPD\"]}>\n                                <Icon content=\"folder\" size=\"24px\"/>\n                                <div className=\"label\" title={name}>{name}</div>\n                            </Touchable>\n                          </div>\n                      )}/>\n            </div>\n            <div>\n                <h1>{`Files (${files.length})`}</h1>\n                <List itemHeight={32}\n                    height=\"60vh\"\n                    width=\"45%\"\n                    items={files.sort()}\n                    mapper={(name: string) => (\n                        <div className=\"folder-button thm-bg0\">\n                          <Touchable key={name}\n                                     onClick={() => onFileClick(name)}\n                                     classNames={[\"thm-ele-button\", \"thm-bgPD\"]}>\n                              <Icon content=\"file\" size=\"24px\"/>\n                              <div className=\"label\" title={name}>{name}</div>\n                          </Touchable>\n                        </div>\n                    )}/>\n            </div>\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport PathBar from './path-bar'\nimport PathList from './path-list'\n\nimport \"./path-selector.css\"\n\n\ninterface IBookmark {\n    name: string,\n    path: string\n}\n\ninterface IPathSelectorProps {\n    path: string,\n    //The path cannot be outside the root.\n    root: string,\n    files: string[],\n    folders: string[],\n    onFolderClick: (path: string) => void,\n    onFileClick: (path: string) => void\n    // bookmarks: IBookmark[],\n    // onAddBookmarkClick: (path: string) => void,\n    // onRemoveBookmarkClick: (path: string) => void\n}\n\nexport default class PathSelector extends React.Component<IPathSelectorProps, {}> {\n    render() {\n        const {\n            path, root, files, folders,\n            onFileClick, onFolderClick\n        } = this.props;\n        return (<div className=\"webBrayns-view-PathSelector\">\n            <PathBar path={path} root={root} onClick={onFolderClick}/>\n            <PathList files={files}\n                      folders={folders}\n                      onFileClick={(name: string) => onFileClick(concatPath(path, name))}\n                      onFolderClick={(name: string) => {\n                          onFolderClick(concatPath(path, name))\n                      }}/>\n        </div>)\n    }\n}\n\n\n/**\n * Concat a path, taking care of the separator.\n */\nfunction concatPath(path: string, filename: string): string {\n    if (path.endsWith(\"/\")) return `${path}${filename}`\n    return `${path}/${filename}`\n}\n","import { connect } from 'react-redux'\n\nimport { IAppState } from \"../../types\"\n\nimport PathService from \"../../service/path\"\nimport View from \"./path-selector\"\n\nfunction mapStateToProps(state: IAppState) {\n    return { ...state.path };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        async onFolderClick(path: string) {\n            await PathService.browse(path);\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n","import React from \"react\"\nimport { Provider } from 'react-redux'\n\nimport Input from '../../../tfw/view/input'\nimport PathSelector from '../path-selector'\nimport State from '../../state'\nimport LocalStorage from '../../service/local-storage'\n\n\nconst Storage = new LocalStorage(\"input-path\");\n\ninterface IInputPathProps {\n    onChange: (path: string) => void\n}\n\ninterface IInputPathState {\n    path: string\n}\n\nexport default class  extends React.Component<IInputPathProps, IInputPathState> {\n    constructor( props: IInputPathProps ) {\n        super( props );\n        this.state = { path: '' }\n\n        this.handleChange(\n            Storage.get(\"path\", '/gpfs/bbp.cscs.ch/project/proj3/resources/meshes/astrocytes/GLIA_000099.h5_decimated.off')\n        )\n    }\n\n    handleChange = (path: string) => {\n        const handler = this.props.onChange;\n        this.setState({ path });\n        Storage.set('path', path);\n        if (typeof handler !== 'function') return;\n        handler(path);\n    }\n\n    render() {\n        return <div>\n            <Input\n                label=\"Please type a model path\"\n                size={100}\n                value={this.state.path}\n                onChange={this.handleChange}\n                wide={true}/>\n            <hr/>\n            <Provider store={State.store}>\n                <PathSelector onFileClick={this.handleChange}/>\n            </Provider>\n        </div>\n    }\n}\n","import Storage from '../../tfw/storage'\n\nexport default class localStorage {\n    constructor(private prefix: string = '') {}\n\n    get(key: string, defaultValue: any): any {\n        return Storage.local.get(this.key(key), defaultValue);\n    }\n\n    set(key: string, val: any) {\n        Storage.local.set(this.key(key), val);\n    }\n\n    private key(key: string): string {\n        if (this.prefix.length === 0) return key;\n        return `${this.prefix}:\\t${key}`;\n    }\n}\n","import React from \"react\"\n\nimport { IModel } from '../../types'\nimport Button from '../../../tfw/view/button'\nimport Scene from '../../scene'\nimport State from '../../state'\nimport Model from '../../scene/model'\nimport Touchable from '../../../tfw/view/touchable'\n\nimport \"./model-button.css\"\n\ninterface IModelButtonProps {\n    model: IModel,\n    onToggleSelection: (model: IModel) => void\n}\n\nexport default class ModelButton extends React.Component<IModelButtonProps, {}> {\n    constructor( props: IModelButtonProps ) {\n        super( props );\n    }\n\n    handleToggleSelection = () => {\n        const handle = this.props.onToggleSelection;\n        if (typeof handle === 'function') handle(this.props.model);\n    }\n\n    handleFocus = async () => {\n        const model = new Model(this.props.model);\n        await model.focus();\n    }\n\n    handleShow = async () => {\n        const model = new Model(this.props.model);\n        await model.setVisible(true);\n    }\n\n    handleHide = async () => {\n        const model = new Model(this.props.model);\n        await model.setVisible(false);\n    }\n\n    handleMore = async () => {\n        const { model } = this.props;\n        State.dispatch(State.CurrentModel.reset(model));\n        State.dispatch(State.Navigation.setPanel(\"model\"));\n        Scene.camera.saveState();\n        await Scene.camera.lookAtBounds(model.brayns.bounds);\n    }\n\n    render() {\n        const { model } = this.props;\n        const classNames = [\"webBrayns-view-ModelButton\", \"thm-ele-button\"];\n        if (model.brayns.visible) {\n            classNames.push(model.selected ? \"thm-bgSL\" : \"thm-bg2\");\n        } else {\n            classNames.push(model.selected ? \"thm-bgSD\" : \"thm-bg0\");\n        }\n        return (<Touchable classNames={classNames}\n                           onClick={this.handleToggleSelection}\n                           title={model.brayns.path}>\n                <div className=\"name\">\n                    <div className={model.brayns.visible ? \"visible\" : \"invisible\"}>{model.brayns.name}</div>\n                    <div className='id'>{`#${model.brayns.id}`}</div>\n                </div>\n                <div className=\"icons\">\n                    <div>\n                        <Button small={true} icon=\"gps\" onClick={this.handleFocus}/>\n                        <Button\n                            onClick={this.handleMore}\n                            enabled={true}\n                            small={true}\n                            icon=\"more\"/>\n                    </div>\n                    {\n                        model.brayns.visible ?\n                        <Button small={true} icon=\"hide\" onClick={this.handleHide}/> :\n                        <Button small={true} icon=\"show\" onClick={this.handleShow}/>\n                    }\n                    <Button enabled={false} small={true} icon=\"delete\" warning={true}/>\n                </div>\n            </Touchable>)\n    }\n}\n","const RX_SEPARATOR = /[ \\t\\n\\r,.|<>:]+/g;\n\n/**\n * ```\n * const m = new Matcher(\"Pi cell\");\n * m.matches('This is a cells pie!') === true\n * m.matches('I bought pins and a cellular.') === 'true'\n * m.matcher('What a nive cellular!') === 'false'\n * ```\n */\nexport default class Matcher {\n  private items: string[];\n\n  constructor(textToMatchAgainst: string) {\n    this.items = textToMatchAgainst\n      .split(RX_SEPARATOR)\n      .map( (item: string) => item.trim().toLowerCase() )\n      .filter( (item: string) => item.length > 0 );\n  }\n\n  matches(text: string) {\n    if( this.items.length === 0 ) return true;\n    const lowerCaseText = text.toLowerCase();\n    for( const item of this.items ) {\n      const pos = lowerCaseText.indexOf( item );\n      if( pos === -1 ) return false;\n    }\n    return true;\n  }\n}\n","import React from \"react\"\n\nimport { IModel, IBounds } from '../../types'\nimport ModelButton from '../model-button'\nimport List from '../../../tfw/view/list'\nimport Input from '../../../tfw/view/input'\nimport Combo from '../../../tfw/view/combo'\nimport Model from '../../scene/model'\nimport Matcher from '../../tool/matcher'\nimport Debouncer from '../../../tfw/debouncer'\n\nimport \"./model-list.css\"\n\ninterface IModelListProps {\n    models: IModel[]\n}\n\ninterface IModelListState {\n    // In the Input.\n    filterInput: string,\n    // Real filter updated from `filterInput` after a debouncer does it.\n    filter: string,\n    sort: string   // \"name\" | \"volume\"\n}\n\nexport default class modelList extends React.Component<IModelListProps, IModelListState> {\n    constructor( props: IModelListProps ) {\n        super( props );\n        this.state = { filterInput: '', filter: '', sort: 'name' }\n    }\n\n    handleToggleSelection = (model: IModel) => {\n        const currentlySelectedModel = this.props.models.find((m: IModel) => m.selected);\n        if (currentlySelectedModel) {\n            const modelObject1 = new Model(currentlySelectedModel);\n            modelObject1.setSelected(false);\n        }\n        if (model !== currentlySelectedModel) {\n            const modelObject2 = new Model(model);\n            modelObject2.setSelected(true);\n        }\n    }\n\n    handleFilterInputChange = (value: string) => {\n        const filterInput = value.trim().toLowerCase();\n        this.setState({ filterInput });\n        this.handleFilterChange(filterInput);\n    }\n\n    handleFilterChange = Debouncer((value: string) => {\n        const filter = value.trim().toLowerCase();\n        this.setState({ filter });\n    }, 200)\n\n    handleSortChange = (sort: string) => {\n        this.setState({ sort });\n    }\n\n    private filter(): IModel[] {\n        const { filter } = this.state;\n        const { models } = this.props;\n        const matcher = new Matcher(filter);\n        return models.filter((model: IModel) => matcher.matches(model.brayns.name))\n            .sort(this.state.sort === 'name' ? sortByName : sortByVolume);\n    }\n\n    render() {\n        const models = this.props.models;\n        const filteredModels = this.filter();\n        const mapper = (model: IModel) =>\n            <ModelButton\n                key={model.brayns.id}\n                onToggleSelection={this.handleToggleSelection}\n                model={model}/>;\n\n        return (<div className=\"webBrayns-view-ModelList\">\n            <header>\n                <Input\n                    label={`Filter by name (${filteredModels.length} / ${models.length})`}\n                    value={this.state.filterInput}\n                    onChange={this.handleFilterInputChange}\n                    wide={true}/>\n                <Combo\n                    label=\"Sorting\"\n                    value={this.state.sort}\n                    onChange={this.handleSortChange}>\n                    <div key=\"name\">Name</div>\n                    <div key=\"volume\">Volume</div>\n                </Combo>\n            </header>\n            <List itemHeight={100}\n                  items={filteredModels}\n                  width=\"100%\"\n                  mapper={mapper}/>\n        </div>)\n    }\n}\n\n\nfunction sortByName(model1: IModel, model2: IModel) {\n    const name1 = model1.brayns.name.toLowerCase();\n    const name2 = model2.brayns.name.toLowerCase();\n    if (name1 < name2 ) return -1;\n    if (name1 > name2 ) return +1;\n    return 0;\n}\n\n\nfunction sortByVolume(model1: IModel, model2: IModel) {\n    return computeVolume(model2.brayns.bounds) - computeVolume(model1.brayns.bounds);\n}\n\n\nfunction computeVolume(bounds: IBounds) {\n    const { max, min } = bounds;\n    return (max[0] - min[0]) * (max[1] - min[1]) * (max[2] - min[2])\n}\n","import { connect } from 'react-redux'\n\nimport { IAppState, IAction } from \"../../types\"\nimport ModelList from './model-list'\n\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        models: state.models\n    };\n}\n\nfunction mapDispatchToProps(dispatch: (action: IAction) => void) {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelList);\n","import React from \"react\"\n\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Dialog from '../../../../tfw/factory/dialog'\nimport Icon from '../../../../tfw/view/icon'\nimport InputPath from '../../../view/input-path'\nimport ModelList from '../../../view/model-list/container'\n\nimport \"../panel.css\"\n\nexport default class Model extends React.Component<{}, {}> {\n    handleClip = () => {\n        State.dispatch(State.Navigation.setPanel(\"clip\"));\n    }\n\n    handleLoadMesh = async () => {\n        let path = '';\n        const confirmed = await Dialog.confirm(\n            \"Load Mesh\",\n            <InputPath onChange={(p: string) => path = p}/>);\n        if (!confirmed) return;\n        await Scene.loadMeshFromPath(path);\n    }\n\n    toggleConsoleVisibility = async () => {\n        State.dispatch(State.Navigation.toggleConsoleVisibility())\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-Panel\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <p>Web-Brayns</p>\n                <div>\n                    <Icon content='cut' onClick={this.handleClip}/>\n                    <Icon content='import' onClick={this.handleLoadMesh}/>\n                    <Icon content='gps' onClick={() => Scene.camera.lookAtWholeScene()}/>\n                    <Icon content='bug' onClick={this.toggleConsoleVisibility}/>\n                </div>\n            </header>\n            <ModelList />\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport Color from '../../../tfw/color'\nimport Slider from '../../../tfw/view/slider'\nimport Touchable from '../../../tfw/view/touchable'\n\nimport { IMaterial } from '../../types'\n\nimport SHADING_FLAT from './preview/diffuse.jpg'\nimport SHADING_DIFFUSE from './preview/diffuse2.jpg'\nimport SHADING_GLOSSY from './preview/glossy.jpg'\nimport SHADING_CARTOON from './preview/cartoon.jpg'\nimport SHADING_ELECTRON from './preview/electron.jpg'\n\nimport \"./material.css\"\n\ntype IShader = [string, Partial<IMaterial>]\n\ninterface IMaterialProps {\n    onSelect: (material: IMaterial) => void\n}\n\ninterface IMaterialState {\n    hue: number,\n    shaderIndex: number\n}\n\nconst SHADINGS: IShader[] = [\n    [SHADING_FLAT, { shadingMode: \"diffuse\", glossiness: 0 }],\n    [SHADING_DIFFUSE, { shadingMode: \"diffuse\", glossiness: 0.75 }],\n    [SHADING_GLOSSY, { shadingMode: \"diffuse\", glossiness: 1 }],\n    [SHADING_CARTOON, { shadingMode: \"cartoon\", glossiness: 0 }],\n    [SHADING_ELECTRON, { shadingMode: \"electron\", glossiness: 0 }]\n]\n\nexport default class Material extends React.Component<IMaterialProps, IMaterialState> {\n    constructor( props: IMaterialProps ) {\n        super( props );\n        this.state = {\n            hue: 30 * Math.floor(Math.random() * 12),\n            shaderIndex: 0\n         };\n    }\n\n    handleHueChange = (hue: number) => {\n        this.setState({ hue });\n        this.fire();\n    }\n\n    handleShaderChange = (shaderIndex: number) => {\n        this.setState({ shaderIndex });\n        this.fire();\n    }\n\n    fire() {\n        const [,material] = SHADINGS[this.state.shaderIndex];\n        const handler = this.props.onSelect;\n        if (typeof handler !== 'function') {\n            console.error(\"<Material> component must have a function as 'onSelect' attribute!\");\n            return;\n        }\n\n        const color = new Color();\n        color.H = this.state.hue / 360;\n        color.S = 1;\n        color.L = 0.5;\n        color.hsl2rgb();\n        handler({\n            diffuseColor: [color.R, color.G, color.B],\n            opacity: 1,\n            glossiness: 0,\n            shadingMode: \"none\",\n            ...material\n        })\n    }\n\n    render() {\n        const { hue, shaderIndex } = this.state;\n        return (<div className=\"webBrayns-view-Material\">\n            <Slider label=\"Diffuse color\"\n                    min={0} max={360} step={1}\n                    value={hue} text={`${hue}`}\n                    onChange={this.handleHueChange}/>\n            <div className=\"shading-mode\">{\n                SHADINGS.map((shader: IShader, index: number) => {\n                    const [url] = shader;\n                    const classes = [\"shading-mode-button\", \"thm-ele-btn\"];\n                    if (index === shaderIndex) {\n                        classes.push(\"selected\");\n                    }\n                    return (<Touchable key={`S${index}`}\n                                    classNames={classes}\n                                    onClick={() => this.handleShaderChange(index)}>\n                                <div style={{\n                                   backgroundImage: `url(${url})`,\n                                   filter: `hue-rotate(${hue}deg)`\n                               }}/>\n                            </Touchable>)\n                })\n            }</div>\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport { IMaterial } from '../types'\nimport Dialog from '../../tfw/factory/dialog'\nimport Material from '../view/material'\n\nexport default {\n    async show(): Promise<IMaterial | null> {\n        let result: IMaterial | null = null;\n        const answer = await Dialog.confirm(\n            \"Apply Material\",\n            <Material onSelect={(material: IMaterial) => result = material}/>);\n        if (!answer) return null;\n        return result;\n    }\n}\n","import React from \"react\"\nimport { IModel, IVector, IBounds } from \"../../../types\"\nimport Icon from '../../../../tfw/view/icon'\nimport Button from '../../../../tfw/view/button'\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport MaterialDialog from '../../../dialog/material'\nimport Python from '../../../service/python'\n\nimport \"../panel.css\"\n\ninterface IModelProps {\n    model: IModel\n}\n\nexport default class Model extends React.Component<IModelProps, {}> {\n    constructor( props: IModelProps ) {\n        super( props );\n    }\n\n    handleBack = () => {\n        State.dispatch(State.Navigation.setPanel(\"models\"));\n        Scene.camera.restoreState();\n    }\n\n    handleMaterial = async (materialId: number) => {\n        const material = await MaterialDialog.show();\n        if (!material) return;\n        try {\n            await Scene.setMaterial(this.props.model.brayns.id, materialId, material)\n        }\n        catch (ex) {\n            console.error(ex);\n        }\n    }\n\n    render() {\n        const { model } = this.props;\n        const { materialIds } = model;\n        const { name, id, path, bounds, transformation } = model.brayns;\n\n        return (<div className=\"webBrayns-view-Panel\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <Icon content='back' onClick={this.handleBack}/>\n                <p>{name} <em>{`#${id}`}</em></p>\n            </header>\n            <div>\n                <p><em>Path: </em>{path}</p>\n                <p>\n                    <em>Location: </em>\n                    <code>{JSON.stringify(transformation.translation, null, '  ')}</code>\n                </p>\n                <p>\n                    <em>Bounds: </em>\n                    <pre>{JSON.stringify(bounds, null, '  ')}</pre>\n                </p>\n                <hr/>\n                <div>{\n                    materialIds.map((id: number) => (\n                        <Button\n                            key={`${id}`}\n                            wide={true}\n                            onClick={() => this.handleMaterial(id)}\n                            label={`Set material #${id}`} />\n                    ))\n                }</div>\n            </div>\n        </div>)\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../../types\"\nimport ModelView from './model'\n\nfunction mapStateToProps(state: IAppState) {\n    return { model: state.currentModel }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelView);\n","import * as React from \"react\";\nimport Touchable from \"../behavior/touchable\"\nimport \"./checkbox.css\";\n\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\n\n\ninterface IBooleanSlot {\n    (value: boolean): void;\n}\n\ninterface ICheckboxProps {\n    value?: boolean;\n    label?: string;\n    wide?: boolean;\n    reverse?: boolean;\n    onChange?: IBooleanSlot\n}\n\nexport default class Checkbox extends React.Component<ICheckboxProps, {}> {\n    readonly touchable: Touchable;\n    readonly ref;\n\n    constructor(props: ICheckboxProps) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.touchable = new Touchable({ onTap: this.handleChange });\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        const button = this.ref.current;\n        if (button) this.touchable.element = button;\n    }\n\n    private handleChange(): void {\n        const slot = this.props.onChange;\n        if (typeof slot === 'function') {\n            const value = castBoolean(this.props.value, false);\n            slot(!value);\n        }\n    }\n\n    render() {\n        const label = castString(this.props.label, \"\");\n        const value = castBoolean(this.props.value, false);\n        const wide = castBoolean(this.props.wide, false);\n        const reverse = castBoolean(this.props.reverse, false);\n        const classes = [\"tfw-view-checkbox\"];\n        if (value) classes.push(\"ok\");\n        if (wide) classes.push(\"wide\");\n        if (reverse) classes.push(\"reverse\");\n\n        return (<button ref={this.ref} className={classes.join(\" \")} >\n            <div className=\"pin\" >\n                <div className={`thm-ele-button bar ${value ? \"thm-bgSL\" : \"thm-bg1\"}`}> </div>\n                <div className={`thm-ele-button btn ${value ? \"thm-bgS\" : \"thm-bg0\"}`\r\n                }> </div>\n            </div>\n            <label >{label}</label>\n        </button>);\n    }\n}\n","import React from \"react\"\nimport Slider from '../../../tfw/view/slider'\n\nimport \"./orientation.css\"\n\ninterface IOrientationProps {\n    latitude: number,\n    longitude: number,\n    tilt: number,\n    onChange: (latitude: number, longitude: number, titl: number) => void\n}\n\nexport default class Orientation extends React.Component<IOrientationProps, {}> {\n    constructor( props: IOrientationProps ) {\n        super( props );\n    }\n\n    handleLatitudeChange = (latitude: number) => {\n        const  { longitude, tilt, onChange } = this.props\n        onChange( latitude, longitude, tilt )\n    }\n\n    handleLongitudeChange = (longitude: number) => {\n        const  { latitude, tilt, onChange } = this.props\n        onChange( latitude, longitude, tilt )\n    }\n\n    handleTiltChange = (tilt: number) => {\n        const  { longitude, latitude, onChange } = this.props\n        onChange( latitude, longitude, tilt )\n    }\n\n    render() {\n        const  { latitude, longitude, tilt } = this.props\n\n        return (<div className=\"webBrayns-view-Orientation\">\n            <Slider label=\"Latitude\"\n                min={-90} max={90} value={latitude}\n                step={1} text={`${latitude}`}\n                onChange={this.handleLatitudeChange} />\n            <Slider label=\"Longitude\"\n                min={-180} max={180} value={longitude}\n                step={1} text={`${longitude}`}\n                onChange={this.handleLongitudeChange} />\n            <Slider label=\"Tilt\"\n                min={-180} max={180} value={tilt}\n                step={1} text={`${tilt}`}\n                onChange={this.handleTiltChange} />\n        </div>)\n    }\n}\n","import React from \"react\"\nimport Input from '../../../tfw/view/input'\n\nimport \"./location.css\"\n\ninterface IOrientationProps {\n    x: number,\n    y: number,\n    z: number,\n    onChange: (x: number, y: number, z: number) => void\n}\n\nexport default class Orientation extends React.Component<IOrientationProps, {}> {\n    handleXChange = (x: string) => {\n        const  { y, z, onChange } = this.props\n        onChange( parseFloat(x), y, z )\n    }\n\n    handleYChange = (y: string) => {\n        const  { x, z, onChange } = this.props\n        onChange( x, parseFloat(y), z )\n    }\n\n    handleZChange = (z: string) => {\n        const  { y, x, onChange } = this.props\n        onChange( x, y, parseFloat(z) )\n    }\n\n    render() {\n        const  { x, y, z } = this.props\n\n        return (<div className=\"webBrayns-view-Location\">\n            <Input\n                label=\"X\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleXChange}\n                value={`${x}`} />\n            <Input\n                label=\"Y\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleYChange}\n                value={`${y}`} />\n            <Input\n                label=\"Z\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleZChange}\n                value={`${z}`} />\n        </div>)\n    }\n}\n","import React from \"react\"\nimport Input from '../../../tfw/view/input'\n\nimport \"./scale.css\"\n\ninterface IScaleProps {\n    width: number,\n    height: number,\n    depth: number,\n    onChange: (width: number, height: number, depth: number) => void\n}\n\nexport default class Scale extends React.Component<IScaleProps, {}> {\n    handleWidthChange = (width: string) => {\n        const  { height, depth, onChange } = this.props\n        onChange( Math.abs(parseFloat(width)), height, depth )\n    }\n\n    handleHeightChange = (height: string) => {\n        const  { width, depth, onChange } = this.props\n        onChange( width, Math.abs(parseFloat(height)), depth )\n    }\n\n    handleDepthChange = (depth: string) => {\n        const  { width, height, onChange } = this.props\n        onChange( width, height, Math.abs(parseFloat(depth)) )\n    }\n\n    render() {\n        const  { width, height, depth } = this.props\n\n        return (<div className=\"webBrayns-view-Scale\">\n            <Input\n                label=\"Width\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleWidthChange}\n                value={`${width}`} />\n            <Input\n                label=\"Height\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleHeightChange}\n                value={`${height}`} />\n            <Input\n                label=\"Depth\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleDepthChange}\n                value={`${depth}`} />\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport Storage from '../../../../tfw/storage'\nimport SnapshotService from '../../../service/snapshot'\nimport SnapshotDialog from '../../../dialog/snapshot'\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Models from '../../../models'\nimport Geom from '../../../geometry'\nimport Util from '../../../../tfw/util'\nimport Color from '../../../../tfw/color'\nimport Icon from '../../../../tfw/view/icon'\nimport Button from '../../../../tfw/view/button'\nimport Checkbox from '../../../../tfw/view/checkbox'\nimport Slider from '../../../../tfw/view/slider'\nimport Range from '../../range'\nimport Throttler from '../../../../tfw/throttler'\nimport Debouncer from '../../../../tfw/debouncer'\nimport Theme from '../../../../tfw/theme'\nimport OrientationView from '../../orientation'\nimport LocationView from '../../location'\nimport ScaleView from '../../scale'\nimport SnapshotView from '../../snapshot/snapshot.container'\nimport ClipPlaneObject from '../../../object/clip-plane'\n\nimport { IBounds } from '../../../types'\n\nimport \"./clip.css\"\n\nconst COLOR_RAMP = [\n    Color.newRGB(0,1,0),\n    Color.newRGB(1,1,0),\n    Color.newRGB(1,0,1)\n]\n\ninterface IPlane {\n    id: number,\n    plane: [number, number, number, number]\n}\n\ninterface IClipProps {\n    activated: boolean,\n    minX: number,\n    maxX: number,\n    minY: number,\n    maxY: number,\n    minZ: number,\n    maxZ: number,\n    latitude: number,\n    longitude: number,\n    collageDepth: number\n}\n\ninterface IClipPlaneDefinition {\n    // Location\n    x: number,\n    y: number,\n    z: number,\n    // Scale\n    width: number,\n    height: number,\n    depth: number,\n    // Orientation\n    latitude: number,\n    longitude: number,\n    tilt: number,\n\n}\n\ninterface IClipState extends IClipPlaneDefinition {\n    activated: boolean,\n    currentPlaneIndex: number\n}\n\nexport default class Model extends React.Component<IClipProps, IClipState> {\n    private clipPlanes: IClipPlaneDefinition[] = []\n\n    private readonly clipPlaneObject: ClipPlaneObject =\n        new ClipPlaneObject({\n            color: [0,1,0],\n            width: 32,\n            height: 24,\n            depth: 4\n        })\n\n    constructor(props: IClipProps) {\n        super(props)\n        this.state = {\n            width: 32,\n            height: 24,\n            depth: 4,\n            activated: true,\n            latitude: 0,\n            longitude: 0,\n            tilt: 0,\n            x: 0,\n            y: 0,\n            z: 0,\n            currentPlaneIndex: -1\n        }\n    }\n\n    async componentDidMount() {\n        this.clipPlanes = Storage.session.get(\"web-brayns/clipping-planes\", [{\n            x: 0, y: 0, z: 0,\n            width: 32, height: 24, depth: 4,\n            latitude: 0, longitude: 0, tilt: 0\n        }])\n        this.setCurrentPlaneIndex(0)\n        this.clipPlaneObject.setActivated(this.state.activated)\n        this.clipPlaneObject.attach()\n        this.updatePlanes();\n    }\n\n    async componentDidUpdate() {\n        this.updatePlanes();\n    }\n\n    private setCurrentPlaneIndex(index: number) {\n        if (index !== this.state.currentPlaneIndex) {\n            const planeColor = Color.ramp(COLOR_RAMP, index / this.clipPlanes.length)\n            console.info(\"planeColor=\", planeColor);\n            this.clipPlaneObject.setColor(planeColor)\n        }\n        const clipPlane = this.clipPlanes[index]\n        this.setState({ ...clipPlane, currentPlaneIndex: index })\n\n    }\n\n    updatePlanes = Throttler(async () => {\n        const {\n            x, y, z,\n            width, height, depth,\n            latitude, longitude, tilt\n        } = this.state\n        const plane = this.clipPlaneObject\n        plane.setTransformation({\n            location: [ x, y, z ],\n            scale: [ width, height, depth],\n            rotation: Geom.makeQuaternionFromLatLngTilt(\n                latitude, longitude, tilt\n            )\n        })\n    }, 50)\n\n    componentWillUnmount() {\n        //this.removeAllClipPlanes();\n    }\n\n    handlePlaneOrientationChange = (latitude: number,\n                                    longitude: number,\n                                    tilt: number) => {\n        this.setState({\n            latitude, longitude, tilt\n        }, this.updatePlanes)\n    }\n\n    handlePlaneLocationChange = (x: number, y: number, z: number) => {\n        this.setState({ x, y, z })\n    }\n\n    handlePlaneScaleChange = (width: number, height: number, depth: number) => {\n        this.setState({ width, height, depth })\n    }\n\n    handleBack = async () => {\n        State.dispatch(State.Navigation.setPanel(\"models\"));\n        await this.clipPlaneObject.setActivated(false)\n        await this.clipPlaneObject.detach()\n    }\n\n    handleActivatedChange = async (activated: boolean) => {\n        console.info(\"activated=\", activated);\n        this.setState({ activated })\n        await this.clipPlaneObject.setActivated(activated)\n    }\n\n    render() {\n        const {\n            latitude, longitude, tilt,\n            x, y, z,\n            width, height, depth\n         } = this.state\n\n        return (<div className=\"webBrayns-view-panel-Clip\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <div>\n                    <Icon content=\"back\" onClick={this.handleBack}/>\n                </div>\n                <p>Slicing</p>\n            </header>\n            <div>\n                <Checkbox\n                    label=\"Activate slicing\"\n                    onChange={this.handleActivatedChange}\n                    value={this.state.activated}/>\n                <hr/>\n                <h1>Plane size</h1>\n                <ScaleView width={width} height={height} depth={depth}\n                    onChange={this.handlePlaneScaleChange}/>\n                <hr/>\n                <h1>Plane center</h1>\n                <LocationView x={x} y={y} z={z}\n                    onChange={this.handlePlaneLocationChange}/>\n                <hr/>\n                <h1>Plane orientation</h1>\n                <OrientationView\n                    latitude={latitude}\n                    longitude={longitude}\n                    tilt={tilt}\n                    onChange={this.handlePlaneOrientationChange}/>\n                <hr/>\n                <h1>Snapshot configuration</h1>\n                <SnapshotView />\n            </div>\n        </div>)\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../../types\"\nimport ClipView from \"./clip\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        activated: state.slicer.activated,\n        minX: state.slicer.minX,\n        maxX: state.slicer.maxX,\n        minY: state.slicer.minY,\n        maxY: state.slicer.maxY,\n        minZ: state.slicer.minZ,\n        maxZ: state.slicer.maxZ,\n        latitude: state.slicer.latitude,\n        longitude: state.slicer.longitude,\n        collageDepth: state.slicer.collageDepth\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClipView);\n","import React from \"react\"\n//import { Client as BraynsClient } from \"brayns\"\n\nimport Script from './web-brayns/script'\nimport Scene from './web-brayns/scene'\nimport Model from './web-brayns/scene/model'\nimport ImageStream from './web-brayns/view/image-stream'\nimport VideoStream from './web-brayns/view/video-stream'\nimport Stack from './tfw/layout/stack'\nimport WebsocketConsole from './web-brayns/view/websocket-console'\nimport PanelModels from './web-brayns/view/panel/models'\nimport PanelModel from './web-brayns/view/panel/model/container'\nimport PanelClip from './web-brayns/view/panel/clip/container'\n\nimport { IVector } from './web-brayns/types'\n\nimport \"./app.css\"\n\nimport Python from './web-brayns/service/python'\nimport SnapshotService from './web-brayns/service/snapshot'\nimport SnapshotDialog from './web-brayns/dialog/snapshot'\n\ninterface IAppProps {\n    panel: string,\n    stream: \"image\" | \"video\",\n    showConsole: boolean\n}\n\ninterface IAppState {\n    data: Blob\n}\n\nexport default class App extends React.Component<IAppProps, {}> {\n    constructor( props: IAppProps ) {\n        super( props );\n        this.state = { blob: new Blob() }\n    }\n\n    async componentDidMount() {\n        try {\n            Script.test();\n            /*\n            const materialTemplate = {\n                opacity: 1,\n                glossiness: 1,\n                diffuseColor: [1,0,0],\n                shadingMode: 'cartoon'\n            }\n\n            const materials = [\n                //{ ...materialTemplate, shadingMode: \"diffuse\", glossiness: 0 },\n                //{ ...materialTemplate, shadingMode: \"diffuse\", glossiness: 0.7 },\n                //{ ...materialTemplate, shadingMode: \"diffuse\" },\n                //{ ...materialTemplate, shadingMode: \"electron\" },\n                { ...materialTemplate, shadingMode: \"cartoon\" }\n            ]\n            for( const material of materials ) {\n                const output = await Scene.setMaterial(model.params.id, 0, material);\n                continue;\n                const options = await SnapshotDialog.show();\n                if (!options) return;  // Action cancelled.\n                const canvas = await SnapshotService.getCanvas(options);\n                await SnapshotService.saveCanvasToFile(canvas, `${options.filename}.jpg`);\n            }\n*/\n\n            /*\n            //Scene.clear();\n            let modelNumber = 1;\n            const factor = 200;\n            const models: Model[] = [];\n            const positions: IVector[] = [];\n\n            for (let x=-1; x<=1; x++) {\n                for (let y=-1; y<=1; y++) {\n                    for (let z=-1; z<=1; z++) {\n                        const astro = await loadAstrocyte(modelNumber++);\n                        models.push(astro);\n                        positions.push([\n                            factor * x,\n                            factor * y,\n                            factor * z\n                        ])\n                    }\n                }\n            }\n\n            models.forEach( async (model: Model, index: number) => {\n                await model.locate(positions[index]);\n            })*/\n\n            //Scene.camera.lookAtWholeScene();\n        }\n        catch( ex ) {\n            console.error(ex);\n        }\n    }\n\n    render() {\n        return (<div className=\"App\">\n            <div className=\"panel\">\n                <Stack value={this.props.panel}>\n                    <PanelModels key=\"models\"/>\n                    <PanelModel key=\"model\"/>\n                    <PanelClip key=\"clip\"/>\n                </Stack>\n            </div>\n            <div className='view'>\n                {\n                    this.props.stream === 'image' &&\n                    <ImageStream\n                        key=\"image-stream\"\n                        onPan={Scene.gestures.handlePan}\n                        onPanStart={Scene.gestures.handlePanStart}/>\n                }\n                {\n                    this.props.stream === 'video' &&\n                    <VideoStream\n                        key=\"video-stream\"\n                        onPan={Scene.gestures.handlePan}\n                        onPanStart={Scene.gestures.handlePanStart}/>\n                }\n                <WebsocketConsole visible={this.props.showConsole}/>\n            </div>\n        </div>)\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"./web-brayns/types\"\nimport AppView from \"./app\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        panel: state.navigation.panel,\n        showConsole: state.navigation.showConsole\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppView);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport { IBraynsModel } from './web-brayns/types'\nimport PathService from \"./web-brayns/service/path\"\nimport ServiceHost from \"./web-brayns/service/host\"\nimport Scene from \"./web-brayns/scene\"\nimport Dialog from \"./tfw/factory/dialog\"\nimport Theme from \"./tfw/theme\"\nimport App from './app.container';\nimport State from './web-brayns/state'\n\nimport \"./tfw/font/josefin.css\"\n\nTheme.apply(\"default\");\n\nasync function start() {\n    const hostName = await ServiceHost.getHostName(false);\n    const browser = await PathService.browse()\n\n    try {\n        const client = await Dialog.wait(\"Contacting Brayns...\", Scene.connect(hostName), false);\n        const scene = await Dialog.wait(\"Loading models...\", Scene.Api.getScene(), false);\n        const planes = await Scene.Api.getClipPlanes();\n        const planeIds = planes.map( p => p.id );\n        Scene.Api.removeClipPlanes(planeIds);\n\n        State.dispatch(State.Models.reset(\n            scene.models.map((params: IBraynsModel) => ({\n                brayns: params,\n                parent: -1,\n                deleted: false,\n                selected: false,\n                technical: false\n            }))\n        ));\n\n        // Entry point for our app\n        const stream = await figureOutStreamType()\n        console.info(\"Stream type:\", stream.toUpperCase())\n        const root = document.getElementById('root') as HTMLElement;\n        ReactDOM.render(<Provider store={State.store}>\n                <App brayns={client} stream={stream}/>\n            </Provider>, root);\n\n        const splash = document.getElementById('splash-screen');\n        if (splash) {\n            splash.classList.add(\"vanish\");\n            window.setTimeout(() => document.body.removeChild(splash), 600);\n        }\n    }\n    catch(ex) {\n        console.error(\"Unable to connect Brayns: \", ex)\n        await Dialog.alert(`Seems like Brayns is not reachable on ${hostName}!`);\n        location.reload();\n    }\n\n}\n\n\n/**\n * Brayns can send us data as JPEG images or as a video stream.\n * We will try to know which type is used by the current Brayns Service.\n */\nasync function figureOutStreamType(): Promise<(\"image\" | \"video\")> {\n    const result = await Scene.request(\"get-videostream\")\n    console.info(\"result=\", result);\n    if (!result) return \"image\"\n    return \"video\"\n}\n\n\nstart();\n"],"sourceRoot":""}