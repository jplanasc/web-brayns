{"version":3,"sources":["web-brayns/view/material/preview/diffuse.jpg","web-brayns/view/material/preview/diffuse2.jpg","web-brayns/view/material/preview/glossy.jpg","web-brayns/view/material/preview/cartoon.jpg","web-brayns/view/material/preview/electron.jpg","tfw/factory/dialog.yaml","web-brayns/service/python.ts","web-brayns/state/animation.ts","web-brayns/state/current-model.ts","tfw/storage.ts","tfw/converter/string.ts","tfw/converter/boolean.ts","tfw/converter/string-array.ts","tfw/gesture/moves.ts","tfw/gesture/finger.ts","tfw/gesture/basic-handler.ts","tfw/gesture/gesture.ts","tfw/color.ts","tfw/theme.ts","tfw/converter/function.ts","tfw/behavior/touchable.ts","tfw/converter/integer.ts","tfw/converter/unit.ts","tfw/icons.ts","tfw/view/icon.tsx","tfw/view/label/label.tsx","tfw/escape-handler.ts","tfw/view/combo.tsx","tfw/view/input/input.tsx","tfw/layout/flex.tsx","web-brayns/view/snapshot/snapshot.tsx","web-brayns/state/dialogs.ts","web-brayns/state/models.ts","web-brayns/state/navigation.ts","web-brayns/state/path.ts","web-brayns/state/slicer.ts","web-brayns/state/state.ts","web-brayns/service/path.ts","tfw/url-args.ts","tfw/converter/array.ts","tfw/intl.ts","tfw/view/button.tsx","tfw/factory/dialog.tsx","web-brayns/view/input-host-name/input-host-name.tsx","web-brayns/service/host.tsx","web-brayns/scene/api.ts","web-brayns/view/wait/wait.tsx","web-brayns/geometry/geometry.ts","web-brayns/scene/model.ts","web-brayns/models/models.ts","web-brayns/scene/camera.ts","web-brayns/scene/renderer.ts","web-brayns/scene/loader.ts","tfw/validator/validator.ts","tfw/view/checkbox.tsx","web-brayns/view/loader/circuit/circuit.tsx","web-brayns/service/loader.tsx","tfw/throttler.ts","web-brayns/scene/gestures-handler.ts","tfw/listeners.ts","web-brayns/scene/scene.tsx","web-brayns/service/brayns.ts","web-brayns/object/clip-plane.ts","web-brayns/script/script.ts","web-brayns/service/snapshot.ts","web-brayns/view/snapshot/snapshot.container.ts","web-brayns/dialog/snapshot.tsx","tfw/debouncer.ts","tfw/converter/double.ts","tfw/view/slider/slider.tsx","tfw/util.ts","web-brayns/view/animation-control/animation-control.tsx","web-brayns/view/animation-control/animation-control.container.ts","tfw/factory/image.ts","web-brayns/view/image-stream/image-stream.tsx","tfw/watcher/resize.ts","web-brayns/view/video-stream/video-stream.tsx","tfw/layout/stack.tsx","web-brayns/view/websocket-console/websocket-console.tsx","tfw/view/touchable.tsx","web-brayns/view/path-selector/path-bar/path-bar.tsx","tfw/view/list/list.tsx","web-brayns/view/path-selector/path-list/path-list.tsx","web-brayns/view/path-selector/path-selector.tsx","web-brayns/view/path-selector/path-selector.container.ts","web-brayns/view/input-path/input-path.tsx","web-brayns/service/local-storage.ts","web-brayns/view/model-button/model-button.tsx","web-brayns/tool/matcher.ts","web-brayns/view/model-list/model-list.tsx","web-brayns/view/model-list/container.ts","web-brayns/view/panel/models/models.tsx","web-brayns/view/material/material.tsx","web-brayns/dialog/material.tsx","web-brayns/view/panel/model/model.tsx","web-brayns/view/panel/model/container.ts","web-brayns/view/orientation/orientation.tsx","web-brayns/view/location/location.tsx","web-brayns/view/scale/scale.tsx","web-brayns/view/panel/clip/clip.tsx","web-brayns/view/panel/clip/container.ts","app.tsx","app.container.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","en","cancel","close","ok","fr","python","exec","_exec","Object","asyncToGenerator","regenerator_default","a","mark","_callee","serviceName","params","data","url","init","response","text","output","_args","arguments","wrap","_context","prev","next","length","undefined","FormData","append","JSON","stringify","concat","method","body","credentials","fetch","sent","parse","abrupt","t0","Error","code","status","statusText","stop","_x","apply","this","state_animation","INITIAL_STATE","current","delta","dt","frameCount","playing","unit","reducer","state","action","type","startsWith","substr","assign","animation","update","current_model","brayns","id","name","path","bounds","max","min","transformation","rotation","scale","translation","parent","deleted","selected","technical","materialIds","objectSpread","model","reset","storage","local","makeStorage","window","localStorage","session","sessionStorage","get","key","defaultValue","value","getItem","ex","console","error","removeItem","set","setItem","del","castString","t","isNaN","castBoolean","v","trim","toLowerCase","num","parseInt","castStringArray","defaultArray","defaultString","Array","isArray","map","item","CAPACITY","Moves","x","y","classCallCheck","_x0","_y0","_time0","_y","_time","_cursor","now","fill","shift","idx","Date","idx0","idx1","_index","time","time0","time1","time01","idx2","time12","x0","x1","y0","y1","Finger","fingers","identifier","index","indexOf","indexOfFirstNull","push","movingElements","addEventListener","event","_i","_movingElements","movingElem","cancelBubble","target","handleMove","clientX","clientY","pointer","buttons","translateButtons","clear","createClear","_i2","_movingElements2","handleUp","splice","BasicHandler","element","handleDown","mouseType","mouseTypeTime","deviceHandlers","pressed","_this","handler","checkMouseType","rect","getBoundingClientRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","changedTouches","Symbol","iterator","done","touch","getIndex","left","top","err","return","touchstart","call","_this3","mousedown","_this2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","touchend","delay","_this$deviceHandlers","removeEventListener","evt","preventDefault","stopPropagation","metaKey","ctrlKey","SYMBOL","ID","Gesture","elem","handlers","pointers","bind","wheel","keyup","keydown","_len","names","_key","_names","isDown","moves","width","height","ptr","getPointer","down","add","up","recognizeTap","recognizeSwipe","recognizePan","tap","elapsedTime","Math","abs","startX","startY","recognizePanDown","recognizePanUp","pan","_ptr$moves","hasHandlerFor","sx","speedX","speedY","dx","pandown","panvertical","panup","recognizeSwipeDown","recognizeSwipeUp","recognizeSwipeLeft","swipe","_ptr$moves2","dy","swipedown","swipevertical","swipeup","swipeleft","swipehorizontal","gesture","Color","codeCSS","R","G","B","H","S","L","A","input","toUpperCase","parseHexa","parseRGB","parseRGBA","parseHSL","luminance","color","hexa2","newColor","chroma","INV6","charAt","INV15","INV255","m","RX_RGB","clamp01","RX_RGBA","parseFloat","RX_HSL","INV359","INV99","hsl2rgb","luminanceStep","rgb","_rgb","slicedToArray","newRGB","rgba","_rgba","newRGBA","color1","color2","alpha","beta","colors","newBlack","spacesCount","firstColorIndex","floor","translatedAlpha","mix","red","green","blue","out","toString","tfw_theme","register","registerTheme","document","THEMES","css","classList","remove","vars","bg0","makeGetCurrentColor","bg1","bg2","bg3","bgP","bgPD","bgPL","bgS","bgSD","bgSL","black","white","isDark","colorName","$isDark","average","isThemeGloballyDark","varName","setFontSize","size","html","documentElement","normalize","completeWithDefaultValues","COLOR","THEME_COLOR_NAMES","themeName","_style","style","forEach","s","ALPHA_HEXA","addAlpha","pen","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","letter","codeVariables","codeBackground","elevationColor","keys","ELEVATIONS","elevationKey","elevation","codeElevation","depth","_THEME_COLOR_NAMES","fgColorName","bgColorName","styleFgColorName","styleBgColorName","bgClass","fgClass","position","piecesFG","piecesSVG","piecesBG","pop","join","tail","codeText","styleElement","createElement","getElementsByTagName","appendChild","textContent","0","2","4","6","8","9","10","11","12","16","24","completeBackgrounds","has0","has1","has2","has3","rgb2hsl","darkenBackground","color0","r0","g0","b0","color3","r3","g3","b3","dark","light","rotateHue","bg","hexa","EMPTY_FUNCTION","Touchable","args","removeTouchDisk","_element","_enabled","accent","onTap","enabled","castFunction","that","on","fire","getComputedStyle","screen","div","className","createScreen","borderRadius","getPropertyValue","w","h","radius","ceil","sqrt","ripple","background","Theme","setTimeout","removeChild","castInteger","defVal","RX_CSS_UNIT","castUnit","scalar","draw","d","stroke","iconsBook","android","bug","camera","center","child","copy","counter","cut","delete","direction","down-double","edit","eraser","export","file","flag-jp","r","flag-fr","flag-it","flag-de","flag-en","folder","font","format-align-center","format-align-justify","format-align-left","format-align-right","format-bold","format-italic","format-float-center","format-float-left","format-float-none","format-float-right","format-header","format-underline","fullscreen","gear","gps","hand","heart","hide","home","image","import","improvement","info","left-double","link","location","logout","mail","map-layer","menu","minus","minus-o","minus-small","more","movie","pack","pause","play","plug","plus","plus-o","plus-small","print","question","redo","refresh","report","right","right-double","run","search","select","sitemap","unselect","share","show","skip-next","skip-next2","skip-prev","skip-prev2","speaker","speaker-off","split-vertical","split-horizontal","star","stat","switch","tri-down","tri-left","tri-right","tri-up","twitter","undo","up-double","user","wait","zoom-in","zoom-out","warning","synonyms","back","help","save","_Object$keys2","val","EnumPenColor","Icon","props","possibleConstructorReturn","getPrototypeOf","refIcon","visible","timeoutHandle","React","sort","elemIcon","clearTimeout","requestAnimationFrame","slot","onHide","animate","flipH","flipV","content","castContent","rotate","onClick","classes","svgContent","createSvgContent","transform","triggerVisibleAnimation","react","ref","viewBox","preserveAspectRatio","strokeWidth","strokeLinecap","strokeLinejoin","def","elementName","_parseDef","_ref","attributes","children","_ref2","arg1","arg2","parseDef","attribs","split","attribName","attribValue","CLASSES","PENS","penIndex","pen0","pen1","pen2","pen3","pen4","pen5","pen6","pen7","getPen","manageColors","Label","label","react_default","htmlFor","Component","escape_handler","listener","initialized","Combo","touchable","list","button","bigList","selectedKey","selectedIndex","handleClick","assertThisInitialized","expand","onChange","_list$getBoundingClie","innerHeight","innerHTML","items","querySelectorAll","scrollTop","_ensureSelectionVisible","EscapeHandler","_swapItems","_this$_computeDimensi","_computeDimensions","_this$_showList","_showList","handleKeyboard","_handleKeyboard","scroll","wide","goodKeys","minimalLength","k","ensureGoodKeys","label_Label","icon_Icon","Input","handleKeyDown","_this$props","onEnterPressed","onFocus","setSelectionRange","onBlur","placeholder","valid","focus","globalId","inputClassName","maxWidth","autoFocus","disabled","onKeyDown","Flex","dir","justifyContent","alignItems","flexWrap","toConsumableArray","RESOLUTIONS","fullHD","thumbnail","presentation","ultraHD","SAMPLINGS","medium","quick","low","high","ultra","res","resolution","_resolution","Snapshot","handleWidthChange","onWidthChange","handleHeightChange","onHeightChange","handleSizeKeyChange","onSizeKeyChange","handleSamplesChange","samples","onSamplesChange","handleSamplesKeyChange","onSamplesKeyChange","handleFilenameChange","filename","onFilenameChange","input_Input","combo_Combo","sizeKey","flex_Flex","samplesKey","RESOLUTION_NAME","SAMPLING_NAME","dialogs","snapshot","Storage","newState","updateSnapshot","state_models","models","slice","alreadyAddedIds","filter","alreadyHere","includes","navigation","panel","showConsole","setPanel","toggleConsoleVisibility","state_path","root","files","folders","slicer","activated","minX","maxX","latitude","longitude","collageDepth","sliceInfo","Animation","currentModel","CurrentModel","Dialogs","Models","Navigation","Path","Slicer","store","createStore","state_state","dispatch","service_path","browse","ROOT","result","Python","State","UrlArgs","substring","itemWithSpacesInsteadOfPlus","indexOfEqual","decodeURIComponent","castArray","Mode","Button","tag","icon","flat","small","gCurrentLanguage","navigator","language","Intl","translations","addParams","languages","_languages","lang","instance","translate","defineProperty","intl","defaultText","toIntl","_Object$keys","_value","mode","Text","paramIndex","c","Escape","Placeholder","_","make","require","tfw_factory_dialog","alert","Promise","resolve","reject","dialog","Dialog","onClose","footer","button_Button","confirm","caption","title","confirmed","btnCancel","btnOK","options","_screen","_options","closeOnEscape","_hide","opt","header","ReactDOM","render","task","then","HostNameInput","handleChange","hostName","setState","handleEnterPressed","CONNECTION_TIMEOUT","host","getHostName","connect","_callee3","ignoreQueryString","_context3","_callee2","urlArgs","hostFromQueryString","validated","onOk","_context2","input_host_name_HostNameInput","_onClose","reload","_x4","_callee5","client","_context5","_callee4","timeout","_context4","_x5","_x6","api","addClipPlane","addLightAmbient","addLightDirectional","addLightQuad","addLightSphere","addLightSpot","addModel","chunk","clearLights","getAnimationParameters","getApplicationParameters","getCamera","getCameraParams","getClipPlanes","getEnvironmentMap","getInstances","getLights","getLoaders","getModelProperties","getModelTransferFunction","getRenderer","getRendererParams","getScene","getStatistics","getVolumeParameters","imageJpeg","inspect","loadersSchema","modelPropertiesSchema","quit","removeClipPlanes","removeLights","removeModel","requestModelUpload","resetCamera","schema","setAnimationParameters","setApplicationParameters","setCamera","setCameraParams","setEnvironmentMap","setModelProperties","setModelTransferFunction","setRenderer","setRendererParams","setScene","setVolumeParameters","updateClipPlane","updateInstance","updateModel","plane","Scene","request","_callee6","_context6","_callee7","model_param","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","_callee13","_context13","_callee14","_context14","_callee15","_context15","_callee16","range","_context16","_callee17","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","_context21","_callee22","_context22","_callee23","_context23","_callee24","_context24","_callee25","_context25","_callee26","_context26","_callee27","_context27","_callee28","_context28","_callee29","_context29","_callee30","_context30","_callee31","ids","_context31","_callee32","_context32","_callee33","_context33","_callee34","param","_context34","_callee35","_context35","_callee36","endpoint","_context36","_callee37","_context37","_callee38","_context38","_callee39","_context39","_callee40","input0","_context40","_callee41","_context41","_callee42","_context42","_callee43","_context43","_callee44","_context44","_callee45","_context45","_callee46","_context46","_callee47","_context47","_callee48","settings","_context48","_callee49","clip_plane","_context49","_callee50","model_instance","_context50","_callee51","_context51","Wait","progress","onCancel","geometry","addVectors","deg2rad","makeQuaternionAsAxisRotation","makeQuaternionFromLatLngTilt","lat","lng","tilt","qA","qC","multiplyQuaternions","rotateWithQuaternion","makeVector","startPoint","endPoint","plane6to4","point","normal","invNorm","scalarProduct","rotateBounds","scaleBounds","translateBounds","b","angle","axis","halfAngle","cos","sin","_axis","q","_q","q1","q2","q3","q0","_r","r1","r2","vector","_vector","z","len2","f","v1","v2","_v","z1","_v2","quaternion","Q","_point","_Q","factor","n","deg","PI","Model","nextPosition","currentBounds","currentPosition","relativeMoving","Geom","nextBounds","rotation_center","nextScale","currentScale","boundsAtCenter","scaledBounds","nextRotation","rotatedBounds","Api","bounding_box","updateState","lookAtBounds","models_models","createModelFromBraynsData","getAllModels","getModelsBounds","modelsWithValidBounds","hasValidBounds","i","getVisibleModels","getState","Camera","states","orientation","applyCamera","applyToBrayns","distance","distanceFactor","vectorZ","dist","minY","minZ","maxY","maxZ","centerX","centerY","centerZ","cameraZ","_this$orientation","aa","bb","cc","dd","ab2","ac2","ad2","bc2","bd2","cd2","Renderer","_canvas","ctx","blob","blobIndex","lastRederedBlobIndex","paint","canvas","img","srcW","srcH","dstW","dstH","dstX","dstY","blobToImg","naturalWidth","naturalHeight","drawImage","finish","getContext","URL","createObjectURL","Image","src","decode","onload","Loader","loaders","Map","loader","extensions","ext","has","loadersForThisExt","endsWith","validator","isFloat","isInteger","Checkbox","reverse","Circuit","handleOK","onOK","_this$state","density","targets","_this$state2","soma","axon","dendrite","apicalDendrite","loader_name","loader_properties","001_density","002_random_seed","010_targets","011_gids","020_report","023_synchronous_mode","040_mesh_folder","041_mesh_filename_pattern","042_mesh_transformation","052_section_type_soma","053_section_type_axon","054_section_type_dendrite","055_section_type_apical_dendrite","densityValid","reports","_this$props2","_this$state3","_this$state4","Validator","onValidation","checkbox_Checkbox","getLoaderParams","listLoadersForPath","commonParams","circuitLoader","find","CIRCUIT","circuit_Circuit","throttler","timer","timestamp","nextAction","nextArgs","throttleAction","GesturesHandler","savedTarget","savedPosition","savedOrientation","savedAxis","savedScreenPoint","screenX","screenY","savedTargetDistance","handlePanStart","computeCurrentTarget","aspect","getTargetDistance","handlePan","Throttler","translateCamera","orbitCamera","hitPoint","hit","setTarget","oldTranslation","newTranslation","setPosition","oldOrientation","angleX","angleY","quaternionX","quaternionY","quaternionYX","newOrientation","positionVector","rotatedPositionVector","newPosition","setPositionAndOrientation","Listeners","listeners","argument","debug","ws","autogeneratedId","queries","readyListeners","binaryListeners","subscribers","handleOpen","handleMessage","handleStringMessage","handleClose","log","handleError","hostname","handleReject","WebSocket","binaryType","handleResolve","btoa","protocol","jsonrpc","send","promise","onProgress","arg","operation","amount","subscribe","unsubscribe","message","handleUpdate","handleResponseError","handleResponse","query","renderer","gestures","defaultObjectToExport","loadMeshFromPath","setMaterial","setViewPort","loadersDefinition","videostreamAvailable","cameraParams","ServiceHost","isVideoStreamingAvailable","_args3","scene","rendererParams","pixel_alpha","shadows","soft_shadows","accumulation","background_color","head_light","max_accum_frames","samples_per_pixel","subsampling","viewport","fixedOptions","modelInstance","LoaderService","execAsync","wait_Wait","fixBoundsIfNeeded","locate","applyTransfo","getMaterialIds","modelId","materialId","material","braynsModel","_braynsModel$bounds","modelWithSearchedId","PATH","ClipPlane","partialState","attached","isActivated","frontPlaneId","backPlaneId","updateClippingPlanes","_this$computeClipping","frontPlane","backPlane","computeClippingPlanes","remoteness","cameraCenter","setOrthographic","frontPlaneDescriptor","backPlaneDescriptor","setTransformation","setColor","fromArrayRGB","diffuseColor","toArrayRGB","specularColor","newWhite","shadingMode","script","getAstrocytePath","test","decimated","len","padNumber","service_snapshot","getCanvas","_getCanvas","dataURI","animation_parameters","format","onerror","saveCanvasToFile","_saveCanvasToFile","mimetype","toBlob","SaveAsFile","_x2","_x3","_res","snapshotView","dialog_snapshot","_show","es","snapshot_container","debouncer","castDouble","Slider","createRef","handleTapOrMove","percent","clamp","step","castFloat","constrainValue","marginLeft","util","AnimationControl","handleCurrentChange","Debouncer","handleSpeedChange","speedKey","keyToSpeed","handleNextClick","handleNext2Click","handlePrevClick","handlePrev2Click","speedToKey","speed","nextValue","Util","slider_Slider","SPEEDS","View","factory_image","canvasFromSVG","svg","fromSVG","setAttribute","fillStyle","fillRect","canvasToImageJPG","quality","toDataURL","canvasToImagePNG","canvasToImageWEBP","fromArrayBuffer","arrayBuffer","fromBlob","Blob","saveCanvasAsJPG","_ref3","saveCanvasAsPNG","outerHTML","ImageStream","canvasRef","handleImage","ImageFactory","clientWidth","clientHeight","onPanStart","getScreenPoint","onPan","updateViewPort","handleScreenShot","SnapshotService","deltaY","moveForward","moveBackward","onfocus","moz-opaque","animation_control_container","ResizeObserver","intervalId","checkSize","entries","areDifferent","inlineSize","blockSize","borderBoxSize","contentBoxSize","contentRect","createClass","getTarget","setInterval","clearInterval","ResizeWatcher","debouncerDelay","observer","onEntries","filteredEntries","Debounder","attach","detach","observe","unobserve","obj","MIMECODEC","VideoStream","refVideo","sourceBuffer","lastWidth","lastHeight","arraySize","bufArray","mediaSource","resizeWatcher","handleGestureWheel","handleGestureDown","handleGesturePan","createMediaSource","video","MediaSource","addSourceBuffer","enableVideoStream","revokeObjectURL","handleResize","dimension","disableVideoStream","handleWebSocketMessage","bs","streamBuffer","Uint8Array","updating","appendBuffer","paused","videoWidth","videoHeight","handleVideoError","onError","autoPlay","crossOrigin","Stack","scrollable","classNames","WebsocketConsole","handleMethodChange","handleParamsChange","handleExecute","querying","parseJSON","parseError","readOnly","STORAGE_PREFIX","json","TouchableBehavior","tabIndex","PathBar","pieces","lastIndex","_loop","piece","view_touchable_Touchable","List","refMain","refHead","refBody","refTail","lastFirstItemIndex","lastVisibleItemsCount","lastItemsArray","itemHeight","onScroll","onPanDown","main","onRefresh","onRefreshAsked","head","animateRefresh","itemsCount","firstItemIndex","visibleItemsCount","tailCount","backgroundSize","mapper","minHeight","maxHeight","PathList","onFileClick","onFolderClick","list_List","PathSelector","path_bar_PathBar","path_list_PathList","concatPath","_onFolderClick","PathService","prefix","_default","path_selector_container","ModelButton","handleToggleSelection","handle","onToggleSelection","handleFocus","handleShow","setVisible","handleHide","handleMore","saveState","RX_SEPARATOR","Matcher","textToMatchAgainst","lowerCaseText","modelList","currentlySelectedModel","setSelected","handleFilterInputChange","filterInput","handleFilterChange","handleSortChange","matcher","matches","sortByName","sortByVolume","filteredModels","model_button_ModelButton","model1","model2","name1","name2","computeVolume","ModelList","handleClip","handleLoadMesh","input_path_default","lookAtWholeScene","container","SHADINGS","SHADING_FLAT","glossiness","SHADING_DIFFUSE","SHADING_GLOSSY","SHADING_CARTOON","SHADING_ELECTRON","Material","handleHueChange","hue","handleShaderChange","shaderIndex","random","onSelect","opacity","shader","backgroundImage","dialog_material","material_Material","handleBack","restoreState","handleMaterial","MaterialDialog","_model$brayns","ModelView","Orientation","handleLatitudeChange","handleLongitudeChange","handleTiltChange","_this$props3","_this$props4","handleXChange","handleYChange","handleZChange","Scale","handleDepthChange","COLOR_RAMP","clipPlanes","clipPlaneObject","ClipPlaneObject","updatePlanes","handlePlaneOrientationChange","handlePlaneLocationChange","handlePlaneScaleChange","setActivated","handleActivatedChange","currentPlaneIndex","setCurrentPlaneIndex","planeColor","ramp","clipPlane","scale_Scale","location_Orientation","orientation_Orientation","ClipView","App","Script","stack_Stack","models_Model","model_container","clip_container","stream","image_stream_ImageStream","video_stream_VideoStream","websocket_console_WebsocketConsole","AppView","planes","notNullplanes","planeIds","splash","figureOutStreamType","getElementById","app_container","t1","start"],"mappings":"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","file":"static/js/main.4678d3be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/diffuse.43f36ea2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/diffuse2.ba0af4a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/glossy.316efeae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cartoon.35183a92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/electron.1e49f830.jpg\";","module.exports = {\"en\":{\"cancel\":\"Cancel\",\"close\":\"Close\",\"ok\":\"Ok\"},\"fr\":{\"cancel\":\"Annuler\",\"close\":\"Fermer\",\"ok\":\"OK\"}}","export default {\n    async exec(serviceName: string, params: any = \"\"): Promise<any> {\n        //console.info(\"[Python]\", serviceName, params);\n        const data = new FormData();\n        data.append(\"i\", JSON.stringify(params));\n        const\n            url = `/cgi-bin/${serviceName}.py`,\n            init: RequestInit = { method: \"POST\", body: data, credentials: \"include\" },\n            response = await fetch(url, init);\n        if (response.ok) {\n            const text = await response.text();\n            try {\n                const output = JSON.parse(text);\n                //console.info(\"[Python]\", serviceName, \" => \", output);\n                return output;\n            }\n            catch( ex ) {\n                throw Error(text);\n            }\n        }\n        throw {\n            code: response.status,\n            text: response.statusText\n        }\n    }\n}\n","import { IAnimation, IAction } from '../types'\n\nconst PREFIX = \"animation:\"\n\n\nexport default {\n    INITIAL_STATE: {\n        current: 0,\n        delta: 1,\n        dt: 1,\n        frameCount: 0,\n        playing: false,\n        unit: ''\n    },\n\n    reducer(state: IAnimation, action: IAction): IAnimation {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(animation: Partial<IAnimation>): IAction {\n        return { type: `${PREFIX}update`, animation };\n    }\n}\n\n\nfunction update(state: IAnimation, action: IAction): IAnimation {\n    return Object.assign( state, action.animation );\n}\n","import { IModel, IAction } from \"../types\"\n\nconst PREFIX = \"current-model:\"\n\nexport default {\n    INITIAL_STATE: {\n        brayns: {\n            id: -1,\n            name: \"\",\n            path: \"\",\n            bounds: { max: [0,0,0], min: [0,0,0] },\n            transformation: {\n                rotation: [0,0,0,1],\n                scale: [1,1,1],\n                translation: [0,0,0]\n            }\n        },\n        parent: -1,\n        deleted: false,\n        selected: false,\n        technical: false,\n        materialIds: []\n    },\n\n    reducer(state: IModel, action: IAction): IModel {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"reset\": return reset(state, action);\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    reset(model: IModel): IAction {\n        return { type: `${PREFIX}reset`, model };\n    },\n\n    update(model: IModel): IAction {\n        return { type: `${PREFIX}update`, model };\n    }\n}\n\n\nfunction reset(state: IModel, action: IAction): IModel {\n    return { ...action.model }\n}\n\n\nfunction update(state: IModel, action: IAction): IModel {\n    return { state, ...action.model }\n}\n","/**\r\n * @example\r\n * import Storage from \"./tfw/storage\";\r\n * Storage.local.set(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * const state = Storage.local.get(\"state\", {lang:\"jp\", currentPage: \"checkpoint-list\"});\r\n * Storage.local.del(\"state\");\r\n */\r\n\r\nexport default {\r\n    local: makeStorage(window.localStorage),\r\n    session: makeStorage(window.sessionStorage)\r\n};\r\n\r\ninterface IStorage {\r\n    getItem: (key: string)=>any;\r\n    setItem: (key: string, val: any)=>void;\r\n    removeItem: (key: string)=>void;\r\n}\r\n\r\nfunction makeStorage(storage:IStorage) {\r\n    return {\r\n        get(key: string, defaultValue: any): any {\r\n            const value = storage.getItem(key);\r\n            if( value === null) return defaultValue;\r\n            try {\r\n                return JSON.parse(value);\r\n            }\r\n            catch( ex ) {\r\n                console.error(`storage[\"${key}\"] is not parsable as a JSON object!\\n`\r\n                + `Its value is: \"${value}\".\\nThis item will be deleted.`);\r\n                storage.removeItem(key);\r\n                return defaultValue;\r\n            }\r\n        },\r\n\r\n        set(key: string, value: any) {\r\n            storage.setItem(key, JSON.stringify(value));\r\n        },\r\n\r\n        del(key: string) {\r\n            storage.removeItem(key);\r\n        }\r\n    }\r\n}\r\n","export default function castString(value: any, defaultValue: string): string {\r\n    const t = typeof value;\r\n    if (t === 'number' && !isNaN(value)) {\r\n        return `${value}`;\r\n    }\r\n    if (t === 'string') return value;\r\n    return defaultValue;\r\n}\r\n","export default function castBoolean(v: any, defaultValue = false): boolean {\r\n    switch (typeof v) {\r\n        case \"undefined\":\r\n            return defaultValue;\r\n        case \"boolean\":\r\n            return v;\r\n        case \"number\":\r\n            return v !== 0;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text === 'true' || text === 'yes') return true;\r\n            const num = parseInt(text);\r\n            if (!isNaN(num)) return num !== 0;\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n","import castString from \"./string\";\n\n/**\n * If `value` is not an array, return `defaultArray`.\n * Else if `defaultString` is undefined, return `value`.\n * Else return a copy of `value` with a castString on all its elements.\n *\n * @param   value         [description]\n * @param   defaultArray  [description]\n * @param   defaultString [description]\n * @returns               [description]\n */\nexport default function castStringArray(\n    value: any, defaultArray: string[] = [], defaultString: string = \"\"\n) {\n    if (typeof value === 'string') return [value];\n    if (!Array.isArray(value)) return defaultArray;\n    if (typeof defaultString === 'undefined') return value;\n    return value.map(item => castString(item, defaultString));\n}\n","const CAPACITY = 3;\r\n\r\n/**\r\n * Helper to manage a pointer move.\r\n * It gives you the location, the speed and the acceleration of your pointer.\r\n *\r\n * @type {[type]}\r\n */\r\nexport default class Moves {\r\n    private _x0: number = 0;\r\n    private _y0: number = 0;\r\n    private _time0: number = 0;\r\n    private _x: number[] = new Array(CAPACITY);\r\n    private _y: number[] = new Array(CAPACITY);\r\n    private _time: number[] = new Array(CAPACITY);\r\n    private _cursor: number = 0;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.init(x, y);\r\n    }\r\n\r\n    init(x: number, y: number) {\r\n        this._time0 = this.now;\r\n        this._x0 = x;\r\n        this._y0 = y;\r\n        this._x = this._x.fill(this._x0, 0, CAPACITY);\r\n        this._y = this._y.fill(this._y0, 0, CAPACITY);\r\n        this._time = this._time.fill(this._time0, 0, CAPACITY);\r\n    }\r\n\r\n    _index(shift: number) {\r\n        return (this._cursor + shift) % CAPACITY;\r\n    }\r\n\r\n    get now() { return Date.now(); }\r\n\r\n    add(x: number, y: number) {\r\n        const idx = (this._cursor + CAPACITY - 1) % CAPACITY;\r\n        this._time[idx] = this.now;\r\n        this._x[idx] = x;\r\n        this._y[idx] = y;\r\n        this._cursor = idx;\r\n    }\r\n\r\n    get elapsedTime() { return this.now - this._time0; }\r\n\r\n    get x() { return this._x[this._cursor]; }\r\n    get y() { return this._y[this._cursor]; }\r\n\r\n    get startX() { return this._x0; }\r\n    get startY() { return this._y0; }\r\n\r\n    get speedX() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._x[idx0] - this._x[idx1]) / time;\r\n    }\r\n\r\n    get speedY() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._y[idx0] - this._y[idx1]) / time;\r\n    }\r\n\r\n    get accelX() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const x0 = this._x[idx0];\r\n        const x1 = this._x[idx1];\r\n        const x2 = this._x[idx2];\r\n\r\n        const speed01 = (x0 - x1) / time01;\r\n        const speed12 = (x1 - x2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n\r\n    get accelY() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const y0 = this._y[idx0];\r\n        const y1 = this._y[idx1];\r\n        const y2 = this._y[idx2];\r\n\r\n        const speed01 = (y0 - y1) / time01;\r\n        const speed12 = (y1 - y2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n}\r\n","type TIdentifier = number | null;\r\n\r\nexport default class Finger {\r\n    private fingers: TIdentifier[] = [];\r\n\r\n    getIndex(identifier: number): number {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) return index;\r\n        const indexOfFirstNull = this.fingers.indexOf(null);\r\n        if (indexOfFirstNull !== -1) {\r\n            this.fingers[indexOfFirstNull] = identifier;\r\n            return indexOfFirstNull;\r\n        }\r\n        this.fingers.push(identifier);\r\n        return this.fingers.length - 1;\r\n    }\r\n\r\n    remove(identifier: number) {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) this.fingers[index] = null;\r\n    }\r\n}\r\n","/**\r\n * BasicHandler(\r\n *     element: HTMLElement,\r\n *     handleDown: TBasicHandler,\r\n *     handleUp: TBasicHandler,\r\n *     handleMove: TBasicHandler\r\n * )\r\n *\r\n * Deals with three basic events : DOWN, UP and MOVE.\r\n * If the device has several input touches, we will return\r\n * only one event.\r\n *\r\n * A TBasicHandler is a synthetic event object:\r\n *   - x: X coordinate relative to the viewport, not including any scroll offset.\r\n *   - y: Y coordinate relative to the viewport, not including any scroll offset.\r\n *   - startX\r\n *   - startY\r\n *   - index: For multi-touch system. The first one is 0, the second is 1, etc.\r\n *   - buttons: 1 = left, 2 = right.\r\n *   - mouse: \"mouse\" | \"touch\" | \"pen\".\r\n *   - clear(): Call stopPropagation() and preventDefault() on this event.\r\n *\r\n */\r\nimport Finger from \"./finger\"\r\nimport { IBasicEvent } from \"./basic-handler.types\"\r\n\r\ninterface IMovingElement {\r\n    // Coords relative to the element.\r\n    x: number,\r\n    y: number,\r\n    index: number,\r\n    target: HTMLElement,\r\n    handleUp: (event: IBasicEvent) => void,\r\n    handleMove: (event: IBasicEvent) => void\r\n}\r\n\r\nconst movingElements: IMovingElement[] = [];\r\n\r\nwindow.addEventListener(\"mousemove\", (event: MouseEvent) => {\r\n    for (const movingElem of movingElements) {\r\n        if (event.cancelBubble) continue;\r\n        const { target, handleMove, x, y, index } = movingElem;\r\n        if (typeof handleMove !== 'function') continue;\r\n        try {\r\n            handleMove({\r\n                x: event.clientX - x,\r\n                y: event.clientY - y,\r\n                index,\r\n                event,\r\n                pointer: \"mouse\",\r\n                buttons: translateButtons(event),\r\n                target,\r\n                clear: createClear(event)\r\n            })\r\n        }\r\n        catch (ex) {\r\n            console.error(`[tfw.gesture.basic-handler] window.mousemove`, ex)\r\n            console.error(\"    handler=\", handleMove)\r\n            console.error(\"    event=\", event)\r\n        }\r\n    }\r\n}, false);\r\n\r\nwindow.addEventListener(\"mouseup\", (event: MouseEvent) => {\r\n    for (const movingElem of movingElements) {\r\n        if (event.cancelBubble) continue;\r\n        const { target, handleUp, x, y, index } = movingElem;\r\n        if (typeof handleUp !== 'function') continue;\r\n        try {\r\n            handleUp({\r\n                x: event.clientX - x,\r\n                y: event.clientY - y,\r\n                index,\r\n                event,\r\n                pointer: \"mouse\",\r\n                buttons: translateButtons(event),\r\n                target,\r\n                clear: createClear(event)\r\n            })\r\n        }\r\n        catch (ex) {\r\n            console.error(`[tfw.gesture.basic-handler] window.mouseup`, ex)\r\n            console.error(\"    handler=\", handleUp)\r\n            console.error(\"    event=\", event)\r\n        }\r\n    }\r\n    movingElements.splice(0, movingElements.length)\r\n}, false);\r\n\r\n\r\n\r\ntype TTouchEventHandler = (evt: TouchEvent) => void;\r\ntype TMouseEventHandler = (evt: MouseEvent) => void;\r\ntype TBasicHandler = (evt: IBasicEvent) => void | undefined;\r\n\r\ninterface IDeviceHandlers {\r\n    touchstart?: TTouchEventHandler;\r\n    touchend?: TTouchEventHandler;\r\n    touchmove?: TTouchEventHandler;\r\n    mousedown?: TMouseEventHandler;\r\n    mouseup?: TMouseEventHandler;\r\n    mousemove?: TMouseEventHandler;\r\n    mouseout?: TMouseEventHandler;\r\n}\r\n\r\nexport default class BasicHandler {\r\n    readonly element: HTMLElement;\r\n    mouseType: string = \"\";\r\n    mouseTypeTime: number = 0;\r\n    deviceHandlers: IDeviceHandlers = {};\r\n    fingers: Finger = new Finger();\r\n    pressed: boolean = false;\r\n\r\n    constructor(element: HTMLElement,\r\n                handleDown: TBasicHandler,\r\n                handleUp: TBasicHandler,\r\n                handleMove: TBasicHandler) {\r\n        this.element = element;\r\n        attachDownEvent.call(this, handleDown, handleUp, handleMove);\r\n        attachUpEventTouch.call(this, handleDown, handleUp, handleMove);\r\n    }\r\n\r\n    /**\r\n     * If you device can hold mouse and touch events, you will receive two events.\r\n     * This function prevent it.\r\n     *\r\n     * @param   mouseType\r\n     * @returns If `false`, we must ignore this event.\r\n     */\r\n    checkMouseType(mouseType: string): boolean {\r\n        const now = Date.now();\r\n        const delay = now - this.mouseTypeTime;\r\n        this.mouseTypeTime = now;\r\n        if (this.mouseType.length === 0 || delay > 500) {\r\n            // If the user waits more than 500ms, he can change of mouse.\r\n            this.mouseType = mouseType;\r\n            return true;\r\n        }\r\n        return this.mouseType === mouseType;\r\n    }\r\n\r\n    detachEvents() {\r\n        const element = this.element;\r\n        const { touchstart, touchend, mousedown } = this.deviceHandlers;\r\n\r\n        if (touchstart) element.removeEventListener(\"touchstart\", touchstart, false);\r\n        if (touchend) element.removeEventListener(\"touchend\", touchend, false);\r\n        if (mousedown) element.removeEventListener(\"mousedown\", mousedown, false);\r\n    }\r\n}\r\n\r\n\r\nfunction attachDownEvent(this: BasicHandler,\r\n                         handleDown: TBasicHandler,\r\n                         handleUp: TBasicHandler,\r\n                         handleMove: TBasicHandler) {\r\n    attachDownEventTouch.call(this, handleDown, handleUp, handleMove);\r\n    attachDownEventMouse.call(this, handleDown, handleUp, handleMove);\r\n}\r\n\r\n\r\nfunction attachDownEventTouch(this: BasicHandler,\r\n                              handleDown: TBasicHandler,\r\n                              handleUp: TBasicHandler,\r\n                              handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (event: TouchEvent) => {\r\n        if (!this.checkMouseType(\"touch\")) return;\r\n        const rect = element.getBoundingClientRect();\r\n        for (const touch of event.changedTouches) {\r\n            const index = this.fingers.getIndex(touch.identifier)\r\n            const x = touch.clientX - rect.left;\r\n            const y = touch.clientY - rect.top;\r\n            handleDown({\r\n                x,\r\n                y,\r\n                index,\r\n                event,\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                target: element,\r\n                clear: createClear(event)\r\n            });\r\n            movingElements.push({\r\n                handleUp, handleMove, index,\r\n                target: element,\r\n                x,\r\n                y\r\n            })\r\n        }\r\n    };\r\n    deviceHandlers.touchstart = handler;\r\n    element.addEventListener(\"touchstart\", handler, false);\r\n}\r\n\r\n\r\nfunction attachUpEventTouch(this: BasicHandler,\r\n                            handleDown: TBasicHandler,\r\n                            handleUp: TBasicHandler,\r\n                            handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (event: TouchEvent) => {\r\n        if (!this.checkMouseType(\"touch\")) return;\r\n        const rect = element.getBoundingClientRect();\r\n        for (const touch of event.changedTouches) {\r\n            const index = this.fingers.getIndex(touch.identifier)\r\n            const x = touch.clientX - rect.left;\r\n            const y = touch.clientY - rect.top;\r\n            handleUp({\r\n                x,\r\n                y,\r\n                index,\r\n                event,\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                target: element,\r\n                clear: createClear(event)\r\n            });\r\n        }\r\n        movingElements.splice(0, movingElements.length)\r\n    };\r\n    deviceHandlers.touchend = handler;\r\n    element.addEventListener(\"touchend\", handler, false);\r\n}\r\n\r\n\r\nfunction attachDownEventMouse(this: BasicHandler,\r\n                              handleDown: TBasicHandler,\r\n                              handleUp: TBasicHandler,\r\n                              handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (event: MouseEvent) => {\r\n        if (!this.checkMouseType(\"mouse\")) return;\r\n        const rect = element.getBoundingClientRect();\r\n        this.pressed = true;\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        if (typeof handleDown === 'function') {\r\n            handleDown({\r\n                x,\r\n                y,\r\n                index: 0,\r\n                buttons: translateButtons(event),\r\n                pointer: \"mouse\",\r\n                event,\r\n                target: element,\r\n                clear: createClear(event)\r\n            });\r\n        }\r\n        movingElements.push({\r\n            handleUp, handleMove,\r\n            index: 0,\r\n            target: element,\r\n            x: rect.left,\r\n            y: rect.top\r\n        })\r\n    };\r\n    deviceHandlers.mousedown = handler;\r\n    element.addEventListener(\"mousedown\", handler, false);\r\n}\r\n\r\n\r\nfunction createClear(evt: MouseEvent | TouchEvent) {\r\n    return () => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n}\r\n\r\n/**\r\n * Some mouses have only one button (on Mac, for instance).\r\n * So we will emulate the other buttons by looking at Ctrl and Meta keys.\r\n */\r\nfunction translateButtons(event: MouseEvent): number {\r\n    const { buttons, metaKey, ctrlKey } = event;\r\n    if (buttons !== 1) return buttons;\r\n    if (metaKey && !ctrlKey) return 2;\r\n    if (!metaKey && ctrlKey) return 4;\r\n    return buttons;\r\n}\r\n","/**\n * Here is the list of all parameters used if all the handlers.\n * * x, y: coord relative to the upper-left corner of the element.\n *\n * tap({ x: number, y: number, index: number })\n *\n */\n\nimport Moves from \"./moves\"\nimport BasicHandler from \"./basic-handler\"\nimport { IBasicEvent } from \"./basic-handler.types\"\nimport { IEvent, IWheelEvent } from \"./types\"\n\nconst SYMBOL = Symbol(\"gesture\");\n\nlet ID = 0;\n\nexport interface IHTMLElementWithGesture extends HTMLElement {\n    // A special attribute to attach Gesture object.\n    [SYMBOL]?: Gesture\n}\n\ntype THandlers = {\n    tap?: (event: IEvent) => void;\n    down?: (event: IEvent) => void;\n    up?: (event: IEvent) => void;\n    pan?: (event: IEvent) => void;\n    pandown?: (event: IEvent) => void;\n    panup?: (event: IEvent) => void;\n    panvertical?: (event: IEvent) => void;\n    swipe?: (event: IEvent) => void;\n    swipedown?: (event: IEvent) => void;\n    swipeup?: (event: IEvent) => void;\n    swipevertical?: (event: IEvent) => void;\n    swipeleft?: (event: IEvent) => void;\n    keydown?: (event: KeyboardEvent) => void;\n    keyup?: (event: KeyboardEvent) => void;\n    wheel?: (event: WheelEvent) => void;\n    [key: string]: ((evt: any) => void) | undefined;\n};\n\ninterface IPointer {\n    isDown: boolean;\n    moves: Moves;\n    rect: {\n        left: number;\n        top: number;\n        width: number;\n        height: number;\n    };\n    type?: string | null;\n    time?: number;\n    id?: number;\n}\n\nclass Gesture {\n    //private readonly basicHandler: BasicHandler;\n    private handlers: THandlers;\n    private element: IHTMLElementWithGesture;\n    private readonly pointers: IPointer[];\n    private readonly id: number;\n\n    constructor(elem: IHTMLElementWithGesture) {\n        elem[SYMBOL] = this;\n        this.id = ID++;\n        this.element = elem;\n        this.handlers = {};\n        new BasicHandler(\n            elem,\n            this.handleDown.bind(this),\n            this.handleUp.bind(this),\n            this.handleMove.bind(this)\n        );\n        this.pointers = new Array(3);\n        elem.addEventListener(\"contextmenu\", (evt) => { evt.preventDefault() }, false);\n    }\n\n    get identifier() { return this.id; }\n\n    on(handlers: THandlers) {\n        if (handlers.wheel)\n            this.element.addEventListener(\"wheel\", handlers.wheel)\n        if (handlers.keyup)\n            this.element.addEventListener(\"keyup\", handlers.keyup)\n        if (handlers.keydown)\n            this.element.addEventListener(\"keydown\", handlers.keydown)\n        this.handlers = { ...this.handlers, ...handlers }\n    }\n\n    /**\n     * Returns true if current gesture has at least one of the provided handlers.\n     */\n    private hasHandlerFor(...names: string[]) {\n        for( const name of names ) {\n            if (this.handlers[name]) return true;\n        }\n        return false;\n    }\n\n    private getPointer(index: number) {\n        const pointers = this.pointers;\n        if (typeof pointers[index] === 'undefined') {\n            pointers[index] = {\n                isDown: false,\n                moves: new Moves(0, 0),\n                rect: { left: 0, top: 0, width: 0, height: 0 }\n            }\n        }\n        return pointers[index];\n    }\n\n    private handleDown(event: IBasicEvent) {\n        // We don't want to deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { x, y } = event;\n        const { element } = this;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = true;\n        ptr.moves.init(x, y);\n\n        if (this.handlers.down) {\n            this.handlers.down(Object.assign(event, { x, y, target: element }))\n        }\n    }\n\n    private handleUp(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { x, y } = event;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = false;\n        ptr.moves.add(x, y);\n\n        if (this.handlers.up) {\n            this.handlers.up(Object.assign(event, { x, y, target: this.element }));\n        }\n        this.recognizeTap(event, ptr);\n        this.recognizeSwipe(event, ptr);\n    }\n\n    private handleMove(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const ptr = this.getPointer(event.index);\n        const { x, y } = event;\n        ptr.moves.add(x, y);\n        this.recognizePan(event, ptr);\n    }\n\n    private recognizeTap(evt: IBasicEvent, ptr: IPointer) {\n        // A tap is recognized only if there is less than 400ms\n        // between down and up, and if the pointer has not moves more\n        // than 16px.\n        if (!this.handlers.tap || ptr.moves.elapsedTime > 400) return;\n        const moves = ptr.moves;\n        const dx = Math.abs(moves.x - moves.startX);\n        if (dx > 16) return;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dy > 16) return;\n\n        evt.clear();\n        this.handlers.tap({ ...evt, x: moves.x, y: moves.y, target: this.element });\n    }\n\n    private recognizePan(evt: IBasicEvent, ptr: IPointer) {\n        if (!ptr.isDown) return;\n        this.recognizePanDown(evt, ptr);\n        this.recognizePanUp(evt, ptr);\n        if (this.handlers.pan) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.pan(\n                { ...evt, x, y, startX, startY, target: this.element });\n        }\n    }\n\n    private recognizePanDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"pandown\", \"panvertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n\n        if (this.handlers.pandown) {\n            this.handlers.pandown(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizePanUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"panup\", \"panvertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = -moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.startY - moves.y;\n        if (dy < dx) return;\n\n        if (this.handlers.panup) {\n            this.handlers.panup(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipe(evt: IBasicEvent, ptr: IPointer) {\n        this.recognizeSwipeDown(evt, ptr);\n        this.recognizeSwipeUp(evt, ptr);\n        this.recognizeSwipeLeft(evt, ptr);\n        if (this.handlers.swipe) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.swipe({ ...evt, x, y, startX, startY, target: this.element });\n        }\n    }\n\n    private recognizeSwipeDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipedown\", \"swipevertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipedown) {\n            this.handlers.swipedown(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipeUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeup\", \"swipevertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeup) {\n            this.handlers.swipeup({ ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipeLeft(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeleft\", \"swipehorizontal\")) return;\n\n        // Check that we are panning left.\n        const moves = ptr.moves;\n        const sx = -moves.speedX;\n        const sy = Math.abs(moves.speedY);\n        if (sx < sy) return;\n        // Check that the final point is beneath the initial one.\n        const dx = moves.startX - moves.x;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dx < dy) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dx / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeleft) {\n            this.handlers.swipeleft(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipehorizontal) {\n            this.handlers.swipehorizontal(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n}\n\nexport default function(elem: IHTMLElementWithGesture): Gesture {\n    let gesture = elem[SYMBOL];\n    if( gesture ) return gesture;\n    gesture = new Gesture(elem);\n    elem[SYMBOL] = gesture;\n    return gesture;\n}\n","/**\r\n * @class Color\r\n * Fast color manipulations.\r\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\r\n * (saturation), and L (luminance) are all floats between 0 and 1.\r\n */\r\nexport default class Color {\r\n    public R: number;\r\n    public G: number;\r\n    public B: number;\r\n    public H: number;\r\n    public S: number;\r\n    public L: number;\r\n    public A: number;\r\n\r\n    constructor(codeCSS: string = \"#000000\") {\r\n        this.R = 0;\r\n        this.G = 0;\r\n        this.B = 0;\r\n        this.H = 0;\r\n        this.S = 0;\r\n        this.L = 0;\r\n        this.A = 1;\r\n\r\n        this.parse(codeCSS);\r\n    }\r\n\r\n    toArrayRGB(): [number, number, number] {\r\n        return [this.R, this.G, this.B]\r\n    }\r\n\r\n    toArrayRGBA(): [number, number, number, number] {\r\n        return [this.R, this.G, this.B, this.A]\r\n    }\r\n\r\n    static isValid(codeCSS: string) {\r\n        if( typeof codeCSS !== 'string' ) return false;\r\n        if( codeCSS.charAt(0) !== '#' ) return false;\r\n        switch( codeCSS.length ) {\r\n            case 4:  // #RGB\r\n            case 5:  // #RGBA\r\n            case 7:  // #RRGGBB\r\n            case 9:  // #RRGGBBAA\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static normalize(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.stringify();\r\n    }\r\n\r\n    static luminance(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminance();\r\n    }\r\n\r\n    /**\r\n     * Returns 1 for bright colors and 0 for dark colors.\r\n     */\r\n    static luminanceStep(codeCSS: string) {\r\n        const color = new Color(codeCSS);\r\n        return color.luminanceStep();\r\n    }\r\n\r\n    static fromArrayRGB(rgb: [number, number, number]): Color {\r\n        const [R, G, B] = rgb\r\n        return this.newRGB(R, G, B)\r\n    }\r\n\r\n    static fromArrayRGBA(rgba: [number, number, number, number]): Color {\r\n        const [R, G, B, A] = rgba\r\n        return this.newRGBA(R, G, B, A)\r\n    }\r\n\r\n    /**\r\n     * Mix two colors. alpha should be between 0 and 1,\r\n     * but there is no check on this.\r\n     * If alpha is 0, the resulting color is `color1`,\r\n     * if alpha is 1, the resulting color is `color2`.\r\n     */\r\n    static mix(color1: Color, color2: Color, alpha: number=.5): Color {\r\n        const beta = 1 - alpha;\r\n        return Color.newRGBA(\r\n            alpha * color2.R + beta * color1.R,\r\n            alpha * color2.G + beta * color1.G,\r\n            alpha * color2.B + beta * color1.B,\r\n            alpha * color2.A + beta * color1.A\r\n        );\r\n    }\r\n\r\n    /**\r\n     * If `colors` has only two elements, this method is the same as `mix()`.\r\n     * Otherwise, it will perform a linear blending through the colors.\r\n     * If alpha is 0, the resulting color is `colors[0]`,\r\n     * If alpha is 1, the resulting color is `colors[colors.length - 1]`,\r\n     */\r\n    static ramp(colors: Color[], alpha: number=.5): Color {\r\n        if (colors.length === 0) return Color.newBlack()\r\n        if (colors.length === 1) return colors[0]\r\n\r\n        const spacesCount = colors.length - 1\r\n        const firstColorIndex = Math.floor(alpha * spacesCount)\r\n        const color1 = colors[firstColorIndex]\r\n        if (firstColorIndex === spacesCount) return color1\r\n        const color2 = colors[firstColorIndex + 1]\r\n        const translatedAlpha = firstColorIndex + alpha / spacesCount\r\n        return Color.mix(color1, color2, translatedAlpha)\r\n    }\r\n\r\n    static newBlack() {\r\n        return Color.newRGB(0, 0, 0);\r\n    }\r\n\r\n    static newWhite() {\r\n        return Color.newRGB(1, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGB(red: number, green: number, blue: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = 1;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Create a new Color instance base on R,G,B,A channels.\r\n     *\r\n     * @param   {number} red - Value between 0 and 1.\r\n     * @param   {number} green - Value between 0 and 1.\r\n     * @param   {number} blue - Value between 0 and 1.\r\n     * @param   {number} alpha - Value between 0 and 1.\r\n     * @returns {Color} New instance of Color.\r\n     */\r\n    static newRGBA(red: number, green: number, blue: number, alpha: number) {\r\n        const color = new Color();\r\n        color.R = red;\r\n        color.G = green;\r\n        color.B = blue;\r\n        color.A = alpha;\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * Parse a color writtent in CSS syntax.\r\n     *\r\n     * @param   {string} code - CSS color.\r\n     * @returns {boolean} `true` if the color has valid syntax.\r\n     */\r\n    parse(code: string = \"#000000\"): boolean {\r\n        const input = code.trim().toUpperCase();\r\n        if (this.parseHexa.call(this, input)) return true;\r\n        if (this.parseRGB.call(this, input)) return true;\r\n        if (this.parseRGBA.call(this, input)) return true;\r\n        if (this.parseHSL.call(this, input)) return true;\r\n        // @TODO parseHSLA.\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @see https://en.wikipedia.org/wiki/Grayscale\r\n     * @this Color\r\n     * @returns {undefined}\r\n     */\r\n    luminance(): number {\r\n        return (0.2126 * this.R) + (0.7152 * this.G) + (0.0722 * this.B);\r\n    }\r\n\r\n    /**\r\n     * @returns {integer} 0 if the color is dark and 1 if it is light.\r\n     */\r\n    luminanceStep(): number {\r\n        return this.luminance() < .6 ? 0 : 1;\r\n    }\r\n\r\n    /**\r\n     * @this Color\r\n     * @returns {string} String value of the color. `#fd45a7`.\r\n     */\r\n    stringify() {\r\n        let color = hexa2(this.R * 255) + hexa2(this.G * 255) + hexa2(this.B * 255);\r\n        if (this.A < 1) {\r\n            color += hexa2(this.A * 255);\r\n        }\r\n        return `#${color}`;\r\n    }\r\n\r\n    copy() {\r\n        const newColor = new Color();\r\n        newColor.R = this.R;\r\n        newColor.G = this.G;\r\n        newColor.B = this.B;\r\n        newColor.A = this.A;\r\n        newColor.H = this.H;\r\n        newColor.S = this.S;\r\n        newColor.L = this.L;\r\n        return newColor;\r\n    }\r\n\r\n    /**\r\n         * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\r\n         * @this Color\r\n         * @returns {undefined}\r\n         */\r\n    hsl2rgb() {\r\n        const\r\n            H = 6 * this.H,\r\n            S = this.S,\r\n            L = this.L,\r\n            chroma = (1 - Math.abs(2 * L - 1)) * S,\r\n            x = chroma * (1 - Math.abs(H % 2 - 1));\r\n\r\n        let R = 0, G = 0, B = 0;\r\n\r\n        if (H < 3) {\r\n            if (H < 1) {\r\n                R = chroma; G = x; B = 0;\r\n            } else if (H < 2) {\r\n                R = x; G = chroma; B = 0;\r\n            } else {\r\n                // H == 2.\r\n                R = 0; G = chroma; B = x;\r\n            }\r\n        } else if (H < 4) {\r\n            R = 0; G = x; B = chroma;\r\n        } else if (H < 5) {\r\n            R = x; G = 0; B = chroma;\r\n        } else {\r\n            R = chroma; G = 0; B = x;\r\n        }\r\n\r\n        const shift = L - chroma * 0.5;\r\n        this.R = R + shift;\r\n        this.G = G + shift;\r\n        this.B = B + shift;\r\n    }\r\n\r\n    rgb2hsl() {\r\n        const R = this.R;\r\n        const G = this.G;\r\n        const B = this.B;\r\n\r\n        const min = Math.min(R, G, B);\r\n        const max = Math.max(R, G, B);\r\n        const delta = max - min;\r\n\r\n        this.L = 0.5 * (max + min);\r\n\r\n        if (delta < 0.000001) {\r\n            this.H = 0;\r\n            this.S = 0;\r\n        }\r\n        else {\r\n            this.S = delta / (1 - Math.abs(2 * this.L - 1));\r\n            if (max === R) {\r\n                if (G >= B) {\r\n                    this.H = INV6 * ((G - B) / delta);\r\n                } else {\r\n                    this.H = 1 - INV6 * ((B - G) / delta);\r\n                }\r\n            }\r\n            else if (max === G) {\r\n                this.H = INV6 * (2 + (B - R) / delta);\r\n            }\r\n            else {\r\n                this.H = INV6 * (4 + (R - G) / delta);\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseHexa(text: string) {\r\n        if (text.charAt(0) !== '#') return false;\r\n        let R = 0, G = 0, B = 0, A = 1;\r\n\r\n        switch (text.length) {\r\n            case 4:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                break;\r\n            case 5:\r\n                R = parseInt(text.charAt(1), 16) * INV15;\r\n                G = parseInt(text.charAt(2), 16) * INV15;\r\n                B = parseInt(text.charAt(3), 16) * INV15;\r\n                A = parseInt(text.charAt(4), 16) * INV15;\r\n                break;\r\n            case 7:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                break;\r\n            case 9:\r\n                R = parseInt(text.substr(1, 2), 16) * INV255;\r\n                G = parseInt(text.substr(3, 2), 16) * INV255;\r\n                B = parseInt(text.substr(5, 2), 16) * INV255;\r\n                A = parseInt(text.substr(7, 2), 16) * INV255;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        if (isNaN(R) || isNaN(G) || isNaN(B) || isNaN(A)) {\r\n            this.R = this.G = this.B = this.A = 0;\r\n        } else {\r\n            this.R = R;\r\n            this.G = G;\r\n            this.B = B;\r\n            this.A = A;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgb(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgb()` syntax.\r\n     */\r\n    private parseRGB(text: string) {\r\n        const m = RX_RGB.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = 1;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `rgba(200, 140, 50, 0.5)`\r\n     * @returns {boolean} `true` if `text` is a valid `rgba()` syntax.\r\n     */\r\n    private parseRGBA(text: string) {\r\n        const m = RX_RGBA.exec(text);\r\n        if (!m) return false;\r\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\r\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\r\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\r\n        this.A = clamp01(parseFloat(m[4]));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param   {string} text - `hsl(200, 140, 50)`\r\n     * @returns {boolean} `true` if `text` is a valid `hsl()` syntax.\r\n     */\r\n    private parseHSL(text: string) {\r\n        const m = RX_HSL.exec(text);\r\n        if (!m) return false;\r\n        this.H = clamp01(parseInt(m[1], 10) * INV359);\r\n        this.S = clamp01(parseInt(m[2], 10) * INV99);\r\n        this.L = clamp01(parseInt(m[3], 10) * INV99);\r\n        this.A = 1;\r\n        this.hsl2rgb();\r\n        return true;\r\n    }\r\n}\r\n\r\nconst\r\n    INV6 = 1 / 6,\r\n    INV15 = 1 / 15,\r\n    INV99 = 1 / 99,\r\n    INV255 = 1 / 255,\r\n    INV359 = 1 / 359;\r\n\r\nconst RX_RGB = /^RGB[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\nconst RX_RGBA = /^RGBA[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/;\r\nconst RX_HSL = /^HSL[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\r\n\r\nfunction clamp01(value: number): number {\r\n    if (value < 0) return 0;\r\n    if (value > 1) return 1;\r\n    return value;\r\n}\r\n\r\nfunction hexa2(value: number) {\r\n    let out = Math.floor(value).toString(16);\r\n    if (out.length < 2) out = \"0\" + out;\r\n    return out;\r\n}\r\n","import \"./theme.css\"\nimport Color from \"./color\"\n\n/**\n * Manage CSS styles.\n */\nexport default {\n    register: registerTheme,\n    apply: applyTheme,\n    get: getTheme,\n    bg0: makeGetCurrentColor(\"bg0\"),\n    bg1: makeGetCurrentColor(\"bg1\"),\n    bg2: makeGetCurrentColor(\"bg2\"),\n    bg3: makeGetCurrentColor(\"bg3\"),\n    bgP: makeGetCurrentColor(\"bgP\"),\n    bgPD: makeGetCurrentColor(\"bgPD\"),\n    bgPL: makeGetCurrentColor(\"bgPL\"),\n    bgS: makeGetCurrentColor(\"bgS\"),\n    bgSD: makeGetCurrentColor(\"bgSD\"),\n    bgSL: makeGetCurrentColor(\"bgSL\"),\n    black: makeGetCurrentColor(\"black\"),\n    white: makeGetCurrentColor(\"white\"),\n    isDark,\n    setFontSize,\n    normalize: completeWithDefaultValues\n};\n\ninterface IStyle {\n    bg0?: string;\n    bg1?: string;\n    bg2?: string;\n    bg3?: string;\n    bgP?: string;\n    bgPD?: string;\n    bgPL?: string;\n    bgS?: string;\n    bgSD?: string;\n    bgSL?: string;\n    fg0?: string;\n    fg1?: string;\n    fg2?: string;\n    fg3?: string;\n    fgP?: string;\n    fgPD?: string;\n    fgPL?: string;\n    fgS?: string;\n    fgSD?: string;\n    fgSL?: string;\n    black?: string;\n    white?: string;\n    [key: string]: string | undefined;\n};\n\ninterface ITheme {\n    bg0: string,\n    bg1: string,\n    bg2: string,\n    bg3: string,\n    bgP: string,\n    bgPL: string,\n    bgPD: string,\n    bgS: string,\n    bgSL: string,\n    bgSD: string,\n    black: string,\n    white: string\n}\n\n\n//################################################################################\n\ninterface IThemes {\n    css: { [name: string]: HTMLStyleElement };\n    vars: { [name: string]: IStyle }\n    current: string | null;\n}\n\n// Used for luminance computations. Because we need to know which text color\n// can be used based on the background's luminance.\nconst COLOR = new Color();\n\nconst THEME_COLOR_NAMES = [\"0\", \"1\", \"2\", \"3\", \"P\", \"PD\", \"PL\", \"S\", \"SD\", \"SL\"];\nconst THEMES: IThemes = {\n    css: {},\n    vars: {},\n    current: null\n};\n\nfunction registerTheme(themeName: string, _style: IStyle) {\n    const style = completeWithDefaultValues(_style);\n    THEMES.vars[themeName] = style;\n\n    let codeCSS = codeVariables(themeName, style);\n    codeCSS += codeBackground(themeName, style);\n    codeCSS += codeElevation(themeName, style);\n    codeCSS += codeText(themeName, style);\n\n    let styleElement = THEMES.css[themeName];\n    if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        document.getElementsByTagName('head')[0].appendChild(styleElement);\n        THEMES.css[themeName] = styleElement;\n    }\n\n    styleElement.textContent = codeCSS;\n}\n\nfunction codeText(themeName: string, style: IStyle) {\n    let codeCSS = '';\n    for (let depth = 1; depth <= 10; depth++) {\n        for (const colorName of THEME_COLOR_NAMES) {\n            const fgColorName = `fg${colorName}`;\n            const bgColorName = `bg${colorName}`;\n            const styleFgColorName: string = style[fgColorName] as string;\n            const styleBgColorName: string = style[bgColorName] as string;\n            const bgClass = \".thm-bg\" + colorName;\n            const fgClass = \".thm-fg\" + colorName;\n            for (let position = 1; position <= depth; position++) {\n                const piecesFG = [];\n                const piecesSVG = [];\n                const piecesBG = [];\n                for (let index = 1; index <= depth; index++) {\n                    piecesBG.push(position === index ? bgClass : '*');\n                    piecesSVG.push(position === index ? bgClass : '*');\n                    piecesFG.push(position === index ? fgClass : '*');\n                    if (index === depth) {\n                        piecesBG.push(piecesBG.pop() + \".thm-fg\");\n                        piecesFG.push(piecesFG.pop() + fgClass);\n                    }\n                }\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesBG.join(\" > \")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + removeTail(piecesBG.join(\" > \"), \".thm-fg\")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesFG.join(\" > \")\n                    + \" { color: \" + styleBgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-fill0\"\n                    + \" { fill: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-stroke0\"\n                    + \" { stroke: \" + styleFgColorName + \" }\\n\";\n            }\n        }\n    }\n    return codeCSS;\n}\n\nconst ALPHA_HEXA = \"123456789ABCDE\";\n\nfunction codeVariables(themeName: string, style: IStyle) {\n    let codeCSS = \"body.dom-theme-\" + themeName + '{\\n';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        const s = style[`bg${colorName}`] as string;\n        codeCSS += `  --thm-bg${colorName}: ${s};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-bg${colorName}-${a}: ${addAlpha(s, a)};\\n`;\n        }\n        COLOR.parse(s);\n        const pen = COLOR.luminanceStep() ? style.black || '#000' : style.white || '#fff';\n        codeCSS += `  --thm-fg${colorName}: ${pen};\\n`;\n        for (const a of ALPHA_HEXA) {\n            codeCSS += `  --thm-fg${colorName}-${a}: ${addAlpha(pen, a)};\\n`;\n        }\n    });\n    style.white = normalize(style.white || '#fff');\n    style.black = normalize(style.black || '#000');\n    codeCSS += `  --thm-white: ${style.white};\\n`;\n    codeCSS += `  --thm-black: ${style.black};\\n`;\n    for (const letter of ALPHA_HEXA) {\n        codeCSS += `  --thm-white-${letter}: ${addAlpha(style.white, letter)};\\n`;\n        codeCSS += `  --thm-black-${letter}: ${addAlpha(style.black, letter)};\\n`;\n    }\n    codeCSS += \"}\\n\";\n    return codeCSS;\n}\n\n\nfunction codeBackground(themeName: string, style: IStyle) {\n    var codeCSS = '';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        codeCSS += \"body.dom-theme-\" + themeName + \".thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-fg\" + colorName\n            + \" { color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += `body.dom-theme-${themeName} .thm-bg${colorName}-text`\n            + \" { background-color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-bottom\"\n            + \" { background: linear-gradient(to top,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-top\"\n            + \" { background: linear-gradient(to bottom,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-left\"\n            + \" { background: linear-gradient(to right,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-right\"\n            + \" { background: linear-gradient(to left,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n\n        if (!isNaN(parseInt(colorName))) return;\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-fill\" + colorName\n            + \" { fill: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-stroke\" + colorName\n            + \" { stroke: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n    });\n    return codeCSS;\n}\n\nconst ELEVATIONS: { [ele: string]: string[] } = {\n    \"0\": [\"none\"],\n    \"2\": [\"button\", \"card\"],\n    \"4\": [\"bar\"],\n    \"6\": [\"floating\"],\n    \"8\": [\"button:active\", \"button-raised\", \"card-raised\"],\n    \"9\": [\"sunmenu-0\"],\n    \"10\": [\"sunmenu-1\"],\n    \"11\": [\"sunmenu-2\"],\n    \"12\": [\"floating:active\"],\n    \"16\": [\"nav\"],\n    \"24\": [\"dialog\"]\n};\nfunction codeElevation(themeName: string, style: IStyle) {\n    COLOR.parse(style.bg2);\n    const luminance = COLOR.luminance();\n    var elevationColor = luminance < .6\n        ? addAlpha(style.white || '#fff', '4')\n        : addAlpha(style.black || '#000', '6');\n    var codeCSS = '';\n    const elevationKeys = Object.keys(ELEVATIONS);\n    elevationKeys.forEach(function(elevationKey) {\n        const elevation = parseInt(elevationKey, 10);\n        ELEVATIONS[elevationKey].forEach(name => {\n            codeCSS += `body.dom-theme-${themeName} .thm-ele-${name} {\n  box-shadow: 0 ${elevation}px ${2 * elevation}px ${elevationColor}\n}\\n`;\n        })\n    });\n    return codeCSS;\n}\n\nfunction applyTheme(name: string, target: HTMLElement = document.body) {\n    if (!THEMES.css[name]) {\n        console.error(\"This theme has not been registered: \", name);\n        return;\n    }\n    var body = document.body;\n    if (typeof THEMES.current === 'string') {\n        body.classList.remove(`dom-theme-${THEMES.current}`);\n    }\n    THEMES.current = name;\n    body.classList.add(`dom-theme-${THEMES.current}`);\n}\n\nfunction getTheme(name: string = \"default\"): ITheme {\n    return THEMES.vars[name] as ITheme;\n}\n\nfunction completeBackgrounds(style: IStyle) {\n    let has0 = typeof style.bg0 === 'string';\n    const has1 = typeof style.bg1 === 'string';\n    const has2 = typeof style.bg2 === 'string';\n    let has3 = typeof style.bg3 === 'string';\n\n    if (has0 && has1 && has2 && has3) return\n\n    if (!has0 && !has1 && !has2 && !has3) {\n        style.bg0 = \"#E0E0E0\";\n        style.bg1 = \"#F5F5F5\";\n        style.bg2 = \"#FAFAFA\";\n        style.bg3 = \"#FFF\";\n        return;\n    }\n    if (has0 && !has1 && !has2 && !has3) {\n        style.bg3 = lightenBackground(style.bg0 as string);\n        has3 = true;\n    }\n    if (!has0 && !has1 && !has2 && has3) {\n        style.bg0 = darkenBackground(style.bg3 as string);\n        has3 = true;\n    }\n    const color0 = new Color(style.bg0);\n    const r0 = color0.R;\n    const g0 = color0.G;\n    const b0 = color0.B;\n    const color3 = new Color(style.bg3);\n    const r3 = color3.R;\n    const g3 = color3.G;\n    const b3 = color3.B;\n    const color1 = Color.newRGB((2 * r0 + r3) / 3, (2 * g0 + g3) / 3, (2 * b0 + b3) / 3);\n    const color2 = Color.newRGB((r0 + 2 * r3) / 3, (g0 + 2 * g3) / 3, (b0 + 2 * b3) / 3);\n    style.bg1 = color1.stringify();\n    style.bg2 = color2.stringify();\n}\n\nfunction completeWithDefaultValues(style: IStyle) {\n    if (typeof style === 'undefined') style = {};\n\n    completeBackgrounds(style);\n\n    if (typeof style.bgP !== 'string') style.bgP = \"#3E50B4\";\n    if (typeof style.bgPD !== 'string') style.bgPD = dark(style.bgP);\n    if (typeof style.bgPL !== 'string') style.bgPL = light(style.bgP);\n    if (typeof style.bgS !== 'string') style.bgS = rotateHue(style.bgP);\n    if (typeof style.bgSD !== 'string') style.bgSD = dark(style.bgS);\n    if (typeof style.bgSL !== 'string') style.bgSL = light(style.bgS);\n\n    if (typeof style.white !== 'string') style.white = '#fff';\n    if (typeof style.black !== 'string') style.black = '#000';\n\n    THEME_COLOR_NAMES.forEach(function(name) {\n        const bg: string = style[`bg${name}`] || '#000';\n        COLOR.parse(bg);\n        var luminance = COLOR.luminance();\n        style[`fg${name}`] = luminance < .6 ? style.white : style.black;\n    });\n\n    return style;\n}\n\nfunction dark(color: string) {\n    const percent = .25;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L *= 1 - percent;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction darkenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.max(0, COLOR.L - 0.15);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction light(color: string) {\n    var percent = .4;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = percent + (1 - percent) * COLOR.L;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction lightenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.min(1, COLOR.L + 0.3);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction rotateHue(color: string): string {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.H = COLOR.H + .5;\n    if (COLOR.H > 1) COLOR.H--;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\n/**\n * @param {string} color - RGB color in format #xxx or #xxxxxx.\n * @param {string} alpha - Single char between 0 and F.\n */\nfunction addAlpha(color: string, alpha: string) {\n    if (color.length < 5) return color + alpha;\n    return color + alpha + alpha;\n}\n\nfunction removeTail(text: string, tail: string) {\n    return text.substr(0, text.length - tail.length);\n}\n\nfunction isDark(colorName: string = \"\"): boolean {\n    if (colorName === \"\") return isThemeGloballyDark();\n\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    const varName = `$isDark/${colorName}`;\n    let isDark = vars[varName];\n    if (typeof isDark === 'boolean') return isDark;\n\n    const color = new Color(vars[colorName]);\n    vars[varName] = !color.luminanceStep();\n    return vars[varName];\n}\n\nfunction isThemeGloballyDark(): boolean {\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    let isDark = vars.$isDark;\n    if (typeof isDark === 'boolean') return isDark;\n\n    const bg0 = new Color(vars.bg0);\n    const bg1 = new Color(vars.bg1);\n    const bg2 = new Color(vars.bg2);\n    const bg3 = new Color(vars.bg3);\n    const average = Color.mix(\n        Color.mix(bg0, bg1),\n        Color.mix(bg2, bg3)\n    );\n    vars.$isDark = !average.luminanceStep();\n    return vars.$isDark;\n}\n\nfunction makeGetCurrentColor(colorName: string): () => string {\n    return () => THEMES.vars[THEMES.current || \"default\"][colorName];\n}\n\nfunction setFontSize(size: \"small\" | \"medium\" | \"large\") {\n    const html = document.documentElement;\n    html.classList.remove(`thm-font-size-small`);\n    html.classList.remove(`thm-font-size-medium`);\n    html.classList.remove(`thm-font-size-large`);\n    html.classList.add(`thm-font-size-${size}`);\n}\n\nfunction normalize(hexa: string): string {\n    const color = new Color(hexa);\n    return color.stringify();\n}\n\nregisterTheme(\"default\", { bgP: \"#1e90ff\" });\n","const EMPTY_FUNCTION = () => { };\r\n\r\ntype TFunction = () => void;\r\n\r\n\r\nexport default function castBoolean(value: any, defaultValue: TFunction = EMPTY_FUNCTION): TFunction {\r\n    if (typeof value === 'function') return value;\r\n    return defaultValue;\r\n}\r\n","import Gesture from \"../gesture\"\nimport Theme from \"../theme\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castFunction from \"../converter/function\"\nimport \"./touchable.css\"\n\ninterface IArgs {\n    element?: HTMLElement;\n    enabled?: boolean;\n    color?: string;\n    onTap?: () => void;\n}\n\ninterface IRect {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n}\n\nexport default class Touchable {\n    private removeTouchDisk: (() => void) | undefined = undefined\n    _element: HTMLElement | undefined;\n    _enabled: boolean = true;\n    color: string = \"#000\";\n    accent: boolean = false;\n    onTap: () => void;\n\n    constructor(args: IArgs) {\n        this.element = args.element;\n        this.enabled = castBoolean(args.enabled, true);\n        this.color = castString(args.color, \"\");\n        this.onTap = castFunction(args.onTap);\n    }\n\n    fire() {\n        if (!this.enabled) return;\n\n        const handler = this.onTap;\n        if (typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    get enabled() { return this._enabled; }\n    set enabled(value: boolean) { this._enabled = value; }\n\n    get element() { return this._element; }\n    set element(element: HTMLElement | undefined) {\n        const that = this;\n        if (typeof element === 'undefined') return;\n        Gesture(element).on({\n            keydown(evt: any) {\n                if (!that.enabled) return;\n\n                const key = evt.key;\n                if (key === \" \" || key === \"Enter\") {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                    that.fire();\n                }\n            },\n\n            down() {\n                if (!that.enabled) return;\n            },\n\n            up() {\n                if (!that.removeTouchDisk) return;\n                that.removeTouchDisk();\n                delete that.removeTouchDisk;\n            },\n\n            tap(evt) {\n                if (!that.enabled) return;\n                that.fire();\n\n                const rect = element.getBoundingClientRect();\n                const style = window.getComputedStyle(element);\n                const screen = createScreen(rect);\n                screen.style.borderRadius = style.getPropertyValue(\"border-radius\");\n                const x = evt.x || 0;\n                const y = evt.y || 0;\n                const w = Math.max(x, rect.width - x);\n                const h = Math.max(y, rect.height - y);\n                const radius = Math.ceil(1.1 * Math.sqrt(w * w + h * h));\n                const ripple = document.createElement(\"div\");\n                screen.appendChild(ripple);\n                ripple.style.left = `${x - radius}px`;\n                ripple.style.top = `${y - radius}px`;\n                ripple.style.width = `${2 * radius}px`;\n                ripple.style.height = `${2 * radius}px`;\n                if (that.color.length > 0) {\n                    ripple.style.background = that.color;\n                } else {\n                    ripple.style.background = Theme.isDark() ? \"#fff\" : \"#000\";\n                }\n                window.setTimeout(() => ripple.className = \"open\");\n                window.setTimeout(() => document.body.removeChild(screen), 500);\n            }\n        })\n    }\n}\n\n\nfunction createScreen(rect: IRect) {\n    const div = document.createElement(\"div\");\n    div.className = \"tfw-behavior-touchable\";\n    div.style.left = `${rect.left}px`;\n    div.style.top = `${rect.top}px`;\n    div.style.width = `${rect.width}px`;\n    div.style.height = `${rect.height}px`;\n    document.body.appendChild(div);\n    return div;\n}\n","export default function castInteger(v: any, defaultValue = 0): number {\r\n    const defVal = Math.floor(.5 + defaultValue);\r\n\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return Math.floor(.5 + v);\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return Math.floor(.5 + num);\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","const RX_CSS_UNIT = /^(-?[.0-9]+)[ \\n\\r]*([a-z%]*)/;\r\n\r\nexport default function castUnit(v: any, defaultValue: string = \"100%\") {\r\n    if (typeof v === 'number') return `${v}px`;\r\n    if (typeof v !== 'string') return defaultValue;\r\n    const text = `${v}`.trim().toLowerCase();\r\n    if (text === 'auto' || text === 'inherit') return text;\r\n    if (text.startsWith(\"calc(\")) return text;\r\n    const m = RX_CSS_UNIT.exec(text);\r\n    if (!m) return defaultValue;\r\n    const scalar = parseFloat(m[1]);\r\n    if (isNaN(scalar) || scalar === 0) return \"0\";\r\n    const unit = m[2].length < 1 ? \"px\" : m[2];\r\n    return `${scalar}${unit}`;\r\n}\r\n","/**\r\n * @module\r\n * This module provides a list of SVG icons definitions.\r\n * You can register new one if you wish.\r\n */\r\n\r\n\r\nexport type TIconDefinition =\r\n    [string, {}] |\r\n    [string, TIconDefinitionArray] |\r\n    [string, {}, TIconDefinitionArray] |\r\n    [string, TIconDefinitionArray, {}];\r\n\r\ninterface TIconDefinitionArray extends Array<TIconDefinition> { }\r\n\r\nexport interface IIconsDefinition {\r\n    [name: string]: TIconDefinition\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register new icons.\r\n * @param {object}  icons - The  keys are the  name of the  icons, the\r\n * value is the object representing an SVG image.\r\n * @returns {undefined}\r\n */\r\nexport function register(icons: IIconsDefinition): void {\r\n    for (const key of Object.keys(icons)) {\r\n        const val: TIconDefinition = icons[key];\r\n        iconsBook[key] = val;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {string} d - Path definition, as in the attribute `d` of the\r\n * SVG tag `path`.\r\n * @returns {array} SVG description.\r\n */\r\nfunction draw(d: string): TIconDefinition {\r\n    return ['path', { d, stroke: 'none', fill: 0 }];\r\n}\r\n\r\n\r\nexport const iconsBook: IIconsDefinition = {\r\n    android: draw('M15,-35H10V-40H15M-10,-35H-15V-40H-10M18,-49L24,-56C25,-57,25,-58,24,-59C23,-60,22,-60,21,-59L13,-52C9,-54,5,-55,0,-55C-5,-55,-9,-54,-13,-52L-21,-59C-22,-60,-23,-60,-24,-59C-25,-58,-25,-57,-24,-56L-18,-49C-25,-44,-30,-35,-30,-25H30C30,-35,25,-44,18,-49M43,-20A8,8,0,0,0,35,-12V23A8,8,0,0,0,43,30A8,8,0,0,0,50,23V-12A8,8,0,0,0,43,-20M-42,-20A8,8,0,0,0,-50,-12V23A8,8,0,0,0,-42,30A8,8,0,0,0,-35,23V-12A8,8,0,0,0,-42,-20M-30,30A5,5,0,0,0,-25,35H-20V53A8,8,0,0,0,-12,60A8,8,0,0,0,-5,53V35H5V53A8,8,0,0,0,13,60A8,8,0,0,0,20,53V35H25A5,5,0,0,0,30,30V-20H-30V30Z'),\r\n    bug: draw(\"M10,0H-10V-10H10M10,20H-10V10H10M40,-20H26C24,-24 21,-27 17,-30L25,-38L18,-45L7,-34C5,-35 3,-35 0,-35C-2,-35 -5,-35 -7,-34L-18,-45L-25,-38L-17,-30C-21,-27 -24,-24 -26,-20H-40V-10H-30C-30,-8 -30,-7 -30,-5V0H-40V10H-30V15C-30,17 -30,18 -30,20H-40V30H-26C-21,39 -11,45 0,45C11,45 21,39 26,30H40V20H30C30,18 30,17 30,15V10H40V0H30V-5C30,-7 30,-8 30,-10H40V-20Z\"),\r\n    camera: draw('M-40,-40H-25L-15,-50H15L25,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M0,-25A25,25,0,0,0,-25,0A25,25,0,0,0,0,25A25,25,0,0,0,25,0A25,25,0,0,0,0,-25M0,-15A15,15,0,0,1,15,0A15,15,0,0,1,0,15A15,15,0,0,1,-15,0A15,15,0,0,1,0,-15Z'),\r\n    cancel: draw('M7,0L35,28V35H28L0,7L-28,35H-35V28L-7,0L-35,-28V-35H-28L0,-7L28,-35H35V-28L7,0Z'),\r\n    center: draw(\r\n        'M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M35,35H15V45H35A10,10,0,0,0,45,35V15H35M35,-45H15V-35H35V-15H45V-35A10,10,0,0,0,35,-45M-35,-35H-15V-45H-35A10,10,0,0,0,-45,-35V-15H-35M-35,15H-45V35A10,10,0,0,0,-35,45H-15V35H-35V15Z'\r\n    ),\r\n    child: draw('M5,-50V-10H45A40,40,0,0,0,5,-50M37,19C42,13,45,4,45,-5H-28L-32,-15H-50V-5H-39C-39,-5,-29,15,-28,17C-34,20,-37,26,-37,33A18,18,0,0,0,-20,50C-11,50,-4,44,-3,35H8C9,44,16,50,25,50A18,18,0,0,0,43,33C43,27,40,23,37,19M-20,40A8,8,0,0,1,-27,33A8,8,0,0,1,-20,25A8,8,0,0,1,-12,33A8,8,0,0,1,-20,40M25,40A8,8,0,0,1,18,33A8,8,0,0,1,25,25A8,8,0,0,1,33,33A8,8,0,0,1,25,40Z'),\r\n    close: draw('M0,-50C28,-50,50,-28,50,0C50,28,28,50,0,50C-28,50,-50,28,-50,0C-50,-28,-28,-50,0,-50M18,-25L0,-7L-18,-25L-25,-18L-7,0L-25,18L-18,25L0,7L18,25L25,18L7,0L25,-18L18,-25Z'),\r\n    code: draw('M13,23L36,0L13,-23L20,-30L50,0L20,30L13,23M-13,23L-36,0L-13,-23L-20,-30L-50,0L-20,30L-13,23Z'),\r\n    copy: draw('M35,45H-20V-25H35M35,-35H-20A10,10,0,0,0,-30,-25V45A10,10,0,0,0,-20,55H35A10,10,0,0,0,45,45V-25A10,10,0,0,0,35,-35M20,-55H-40A10,10,0,0,0,-50,-45V25H-40V-45H20V-55Z'),\r\n    counter: draw('M-40,-40H40A10,10,0,0,1,50,-30V30A10,10,0,0,1,40,40H-40A10,10,0,0,1,-50,30V-30A10,10,0,0,1,-40,-40M-40,-30V30H-5V-30H-40M40,30V-30H34C35,-27,35,-25,35,-24C34,-21,32,-17,31,-16L20,-3L36,-4L36,3L10,2L10,-3C10,-3,25,-19,26,-20C27,-22,30,-30,23,-30C16,-30,17,-23,17,-23L9,-23C9,-23,9,-27,11,-30H5V30H18L18,26L23,26C23,26,27,25,27,20C28,15,23,15,23,15C22,15,17,16,17,20H10C10,20,10,9,23,9C36,9,35,20,35,20C35,20,35,26,29,28L32,30H40M-15,20H-23V-9L-32,-6V-12L-16,-18H-15V20Z'),\r\n    cut: draw('M35,-45L5,-15L15,-5L50,-40V-45M0,3A3,3,0,0,1,-2,0A3,3,0,0,1,0,-2A3,3,0,0,1,3,0A3,3,0,0,1,0,3M-30,40A10,10,0,0,1,-40,30C-40,24,-35,20,-30,20A10,10,0,0,1,-20,30C-20,36,-24,40,-30,40M-30,-20A10,10,0,0,1,-40,-30C-40,-36,-35,-40,-30,-40A10,10,0,0,1,-20,-30C-20,-24,-24,-20,-30,-20M-12,-22C-11,-24,-10,-27,-10,-30A20,20,0,0,0,-30,-50A20,20,0,0,0,-50,-30A20,20,0,0,0,-30,-10C-27,-10,-24,-11,-22,-12L-10,0L-22,12C-24,11,-27,10,-30,10A20,20,0,0,0,-50,30A20,20,0,0,0,-30,50A20,20,0,0,0,-10,30C-10,27,-11,24,-12,22L0,10L35,45H50V40L-12,-22Z'),\r\n    delete: draw(\r\n        'M35,-40H18L13,-45H-12L-17,-40H-35V-30H35M-30,35A10,10,0,0,0,-20,45H20A10,10,0,0,0,30,35V-25H-30V35Z'),\r\n    direction: draw('M10,13V0H-10V15H-20V-5A5,5,0,0,1,-15,-10H10V-22L28,-5M49,-4L4,-49H3C2,-50,-2,-50,-4,-49L-49,-4C-50,-2,-50,2,-49,4L-4,49C-2,50,2,51,4,49L49,4C51,2,51,-2,49,-4Z'),\r\n    down: draw('M-30,-30L0,30,30,-30'),\r\n    'down-double': draw('M-30,-40L0,-10,30,-40M-30,10L0,40,30,10'),\r\n    edit: draw(\r\n        \"M24,-46C22,-46,20,-46,19,-44L8,-34L35,-7L45,-17C48,-21,48,-25,45,-28L29,-44C28,-46,26,-46,24,-46M5,-30L-36,11L-23,12L-22,23L-11,24L-9,37L31,-3M-39,15L-47,49L-14,40L-15,29L-27,28L-28,16\"\r\n    ),\r\n    eraser: draw('M21,-42L46,-17C50,-14,50,-7,46,-3L0,43C-8,50,-20,50,-28,43L-46,25C-50,21,-50,15,-46,11L7,-42C11,-46,17,-46,21,-42M-39,18L-21,36C-17,39,-11,39,-7,36L11,18L-14,-7L-39,18Z'),\r\n    'export': draw('M-35,40H35V30H-35M35,-15H15V-45H-15V-15H-35L0,20L35,-15Z'),\r\n    file: draw('M10,-50H-30A10,10,0,0,0,-40,-40V40A10,10,0,0,0,-30,50H30A10,10,0,0,0,40,40V-20L10,-50M30,40H-30V-40H5V-15H30V40Z'),\r\n    \"flag-jp\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,45h120v-90h-120z\"\r\n            }],\r\n            [\"circle\", {\r\n                fill: \"#bc002d\",\r\n                r: 24\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-fr\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002395\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ed2939\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-it\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,50h130v-100h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#009246\",\r\n                d: \"M-60,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-20,45h40v-90h-40z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ce2b37\",\r\n                d: \"M20,45h40v-90h-40z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-de\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,41h130v-82h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#ffce00\",\r\n                d: \"M-60,36h120v-24h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#dd0000\",\r\n                d: \"M-60,12h120v-24h-120z\"\r\n            }]\r\n        ]\r\n    ],\r\n    \"flag-en\": [\"g\", {\r\n        stroke: \"none\"\r\n    },\r\n        [\r\n            [\"path\", {\r\n                fill: \"#000\",\r\n                d: \"M-65,37h130v-75h-130z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#bb133e\",\r\n                d: \"M-60,32h120v-65h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,22h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,12h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,2h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-8h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-18h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#fff\",\r\n                d: \"M-60,-28h120v5h-120z\"\r\n            }],\r\n            [\"path\", {\r\n                fill: \"#002664\",\r\n                d: \"M-60,-33h48v35h-48z\"\r\n            }],\r\n\r\n        ]\r\n    ],\r\n    folder: draw('M40,30H-40V-20H40M40,-30H0L-10,-40H-40C-46,-40,-50,-36,-50,-30V30A10,10,0,0,0,-40,40H40A10,10,0,0,0,50,30V-20C50,-26,46,-30,40,-30Z'),\r\n    font: draw('M25,-20H40V40H45V45H25V40H30V25H10L3,40H10V45H-10V40H-5L25,-20M30,-15L13,20H30V-15M-35,-45H-10C-4,-45,0,-41,0,-35V20H-15V-5H-30V20H-45V-35C-45,-41,-41,-45,-35,-45M-30,-35V-15H-15V-35H-30Z'),\r\n    'format-align-center': draw('M-45,-45H45V-35H-45V-45M-25,-25H25V-15H-25V-25M-45,-5H45V5H-45V-5M-25,15H25V25H-25V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-justify': draw('M-45,-45H45V-35H-45V-45M-45,-25H45V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H45V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-left': draw('M-45,-45H45V-35H-45V-45M-45,-25H15V-15H-45V-25M-45,-5H45V5H-45V-5M-45,15H15V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-align-right': draw(' M-45,-45H45V-35H-45V-45M-15,-25H45V-15H-15V-25M-45,-5H45V5H-45V-5M-15,15H45V25H-15V15M-45,35H45V45H-45V35Z '),\r\n    'format-bold': draw('M8,18H-10V3H8A8,8,0,0,1,15,10A8,8,0,0,1,8,18M-10,-27H5A8,8,0,0,1,13,-20A8,8,0,0,1,5,-12H-10M18,-6C23,-9,26,-15,26,-20C26,-31,18,-40,6,-40H-25V30H10C21,30,29,22,29,11C29,3,24,-3,18,-6Z'),\r\n    'format-italic': draw('M-10,-40V-25H1L-16,15H-30V30H10V15H-1L16,-25H30V-40H-10Z'),\r\n    'format-float-center': draw('M-15,-25H15V5H-15V-25M-45,-45H45V-35H-45V-45M-45,15H45V25H-45V15M-45,35H25V45H-45V35Z'),\r\n    'format-float-left': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-25V-15H-5V-25H45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-none': draw('M-45,-25H-15V5H-45V-25M-45,-45H45V-35H-45V-45M45,-5V5H-5V-5H45M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-float-right': draw('M15,-25H45V5H15V-25M-45,-45H45V-35H-45V-45M5,-25V-15H-45V-25H5M-15,-5V5H-45V-5H-15M-45,15H25V25H-45V15M-45,35H45V45H-45V35Z'),\r\n    'format-header': draw('M-40,-40H-30V-10H-10V-40H0V30H-10V0H-30V30H-40V-40M13,-23L31,-5L13,13L20,20L45,-5L20,-30L13,-23Z'),\r\n    'format-underline': draw(\r\n        'M-35,45H35V35H-35V45M0,25A30,30,0,0,0,30,-5V-45H18V-5A18,18,0,0,1,0,13A18,18,0,0,1,-17,-5V-45H-30V-5A30,30,0,0,0,0,25Z'\r\n    ),\r\n    fullscreen: draw('M-35,-35H-10V-25H-25V-10H-35V-35M10,-35H35V-10H25V-25H10V-35M25,10H35V35H10V25H25V10M-10,25V35H-35V10H-25V25H-10Z'),\r\n    gear: draw(\r\n        'M0,18A18,18,0,0,1,-17,0A18,18,0,0,1,0,-17A18,18,0,0,1,18,0A18,18,0,0,1,0,18M37,5C37,3,38,2,38,0C38,-2,37,-3,37,-5L48,-13C49,-14,49,-15,48,-16L38,-34C38,-35,36,-35,35,-35L23,-30C20,-32,18,-33,14,-35L13,-48C12,-49,11,-50,10,-50H-10C-11,-50,-12,-49,-12,-48L-14,-35C-17,-33,-20,-32,-23,-30L-35,-35C-36,-35,-38,-35,-38,-34L-48,-16C-49,-15,-49,-14,-48,-13L-37,-5C-37,-3,-37,-2,-37,0C-37,2,-37,3,-37,5L-48,13C-49,14,-49,15,-48,16L-38,34C-38,35,-36,35,-35,35L-23,30C-20,32,-17,33,-14,35L-12,48C-12,49,-11,50,-10,50H10C11,50,12,49,13,48L14,35C18,33,20,32,23,30L35,35C36,35,38,35,38,34L48,16C49,15,49,14,48,13L37,5Z'\r\n    ),\r\n    gps: draw(\r\n        'M0,-20A20,20,0,0,1,20,0A20,20,0,0,1,0,20A20,20,0,0,1,-20,0A20,20,0,0,1,0,-20M-45,5H-55V-5H-45C-42,-26,-26,-42,-5,-45V-55H5V-45C26,-42,43,-26,45,-5H55V5H45C43,26,26,43,5,45V55H-5V45C-26,43,-42,26,-45,5M0,-35A35,35,0,0,0,-35,0A35,35,0,0,0,0,35A35,35,0,0,0,35,0A35,35,0,0,0,0,-35Z'\r\n    ),\r\n    hand: draw(\r\n        \"M-10,-50A10,10,0,0,1,0,-40V-17C0,-17,10,-19,10,-14C10,-14,20,-15,20,-10C20,-10,30,-11,30,-6C30,-6,40,-7,40,-2V15C40,20,25,45,25,50H-15C-15,50,-25,15,-40,5C-40,5,-45,-25,-20,0V-40A10,10,0,0,1,-10,-50Z\"\r\n    ),\r\n    heart: draw('M0,47L-7,40C-33,17,-50,1,-50,-17C-50,-33,-38,-45,-22,-45C-14,-45,-5,-41,0,-35C5,-41,14,-45,23,-45C38,-45,50,-33,50,-17C50,1,33,17,7,40L0,47Z'),\r\n    hide: draw(\r\n        'M-1,-15L15,1C15,1,15,0,15,0A15,15,0,0,0,0,-15C0,-15,-1,-15,-1,-15M-22,-11L-15,-3C-15,-2,-15,-1,-15,0A15,15,0,0,0,0,15C1,15,2,15,3,15L11,22C8,24,4,25,0,25A25,25,0,0,1,-25,0C-25,-4,-24,-8,-22,-11M-50,-39L-39,-27L-36,-25C-45,-18,-51,-10,-55,0C-46,22,-25,38,0,38C8,38,15,36,22,33L24,35L39,50L45,44L-44,-45M0,-25A25,25,0,0,1,25,0C25,3,24,6,23,9L38,24C45,18,51,9,55,0C46,-22,25,-37,0,-37C-7,-37,-14,-36,-20,-34L-9,-23C-6,-24,-3,-25,0,-25Z'\r\n    ),\r\n    home: draw('M-10,40V10H10V40H35V0H50L0,-45L-50,0H-35V40H-10Z'),\r\n    image: draw('M5,-15H33L5,-42V-15M-30,-50H10L40,-20V40A10,10,0,0,1,30,50H-30C-36,50,-40,46,-40,40V-40C-40,-46,-36,-50,-30,-50M-30,40H15L30,40V0L10,20L0,10L-30,40M-20,-15A10,10,0,0,0,-30,-5A10,10,0,0,0,-20,5A10,10,0,0,0,-10,-5A10,10,0,0,0,-20,-15Z'),\r\n    import: draw('M-15,20V-10H-35L0,-45L35,-10H15V20H-15M-35,40V30H35V40H-35Z'),\r\n    improvement: draw(\"M0,50A50,50,0,0,1,-50,0A50,50,0,0,1,0,-50A50,50,0,0,1,50,0A50,50,0,0,1,0,50M0,-25L-25,0H-10V20H10V0H25L0,-25Z\"),\r\n    info: draw('M8,-40A8,8,0,0,0,0,-32A8,8,0,0,0,8,-25A8,8,0,0,0,15,-32A8,8,0,0,0,8,-40M6,-16C0,-16,-17,-3,-17,-3C-17,-2,-17,-2,-16,-1C-16,1,-16,1,-15,0C-14,0,-12,-2,-9,-3C1,-10,-8,6,-12,32C-14,45,-2,39,1,37C4,35,12,29,13,28C14,28,13,27,12,26C12,25,11,26,11,26C8,28,2,32,1,29C0,27,6,7,9,-6C10,-10,12,-17,6,-16Z'),\r\n    left: ['path', { fill: 0, d: 'M40,-5V5H-20L8,33L0,40L-39,0L0,-40L8,-32L-20,-5H40Z' }],\r\n    'left-double': draw('M-10,-30L-40,0,-10,30M40,-30L10,0,40,30'),\r\n    link: draw('M-7,7C-5,9,-5,12,-7,14C-9,16,-12,16,-14,14C-24,4,-24,-11,-14,-21V-21L4,-39C13,-49,29,-49,39,-39C49,-29,49,-13,39,-4L31,4C32,0,31,-4,29,-8L32,-11C38,-16,38,-26,32,-32C26,-38,16,-38,11,-32L-7,-14C-13,-8,-13,1,-7,7M7,-14C9,-16,12,-16,14,-14C24,-4,24,11,14,21V21L-4,39C-13,49,-29,49,-39,39C-49,29,-49,13,-39,4L-31,-4C-31,0,-31,4,-29,8L-32,11C-38,16,-38,26,-32,32C-26,38,-16,38,-11,32L7,14C13,8,13,-1,7,-7C5,-9,5,-12,7,-14Z'),\r\n    location: draw('M0,-2A13,13,0,0,1,-12,-15A13,13,0,0,1,0,-27A13,13,0,0,1,13,-15A13,13,0,0,1,0,-2M0,-50A35,35,0,0,0,-35,-15C-35,11,0,50,0,50C0,50,35,11,35,-15A35,35,0,0,0,0,-50Z'),\r\n    logout: draw(\r\n        \"M25,26V10H-10V-10H25V-26L51,0L25,26M5,-50A10,10,0,0,1,15,-40V-20H5V-40H-40V40H5V20H15V40A10,10,0,0,1,5,50H-40A10,10,0,0,1,-50,40V-40A10,10,0,0,1,-40,-50H5Z\"\r\n    ),\r\n    mail: draw(\r\n        'M40,-40H-40A10,10,0,0,0,-50,-30V30A10,10,0,0,0,-40,40H40A10,10,0,0,0,50,30V-30A10,10,0,0,0,40,-40M40,30H-40V-20L0,5L40,-20V30M40,-30L0,-5L-40,-30V-30H40V-30Z'\r\n    ),\r\n    map: draw('M15,35L-15,24V-35L15,-24M43,-45C42,-45,42,-45,42,-45L15,-34L-15,-45L-43,-35C-44,-35,-45,-34,-45,-33V43A3,3,0,0,0,-42,45C-42,45,-42,45,-42,45L-15,34L15,45L43,36C44,35,45,34,45,33V-42A3,3,0,0,0,43,-45Z'),\r\n    \"map-layer\": draw('M0,20L37,-9L45,-15L0,-50L-45,-15L-37,-9M0,33L-37,4L-45,10L0,45L45,10L37,4L0,33Z'),\r\n    menu: draw('M-45,-30H45V-20H-45V-30M-45,-5H45V5H-45V-5M-45,20H45V30H-45V20Z'),\r\n    minus: draw('M35,5H-35V-5H35V5Z'),\r\n    \"minus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M-25,5H25V-5H-25'),\r\n    \"minus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M25,-5V5H-25V-5H25Z'),\r\n    more: draw('M20,0A10,10,0,0,1,30,-10A10,10,0,0,1,40,0A10,10,0,0,1,30,10A10,10,0,0,1,20,0M-10,0A10,10,0,0,1,0,-10A10,10,0,0,1,10,0A10,10,0,0,1,0,10A10,10,0,0,1,-10,0M-40,0A10,10,0,0,1,-30,-10A10,10,0,0,1,-20,0A10,10,0,0,1,-30,10A10,10,0,0,1,-40,0Z'),\r\n    movie: draw('M44,-49L25,-45L38,-27L48,-29L44,-49M10,-42L0,-40L14,-23L24,-25L10,-42M-15,-37L-24,-35L-11,-18L-1,-20L-15,-37M-39,-32L-44,-32A10,10,0,0,0,-52,-20L-50,-10L-25,-15L-39,-32M-50,-10V40C-50,46,-45,50,-40,50H40C46,50,50,46,50,40V-10H-50Z'),\r\n    ok: draw('M45,-25L-15,35L-42,8L-35,0L-15,21L38,-32L45,-25Z'),\r\n    pack: ['path', { fill: 0, d: 'M45,23C45,24,44,26,42,27L3,49C2,50,1,50,0,50C-1,50,-2,50,-3,49L-42,27C-44,26,-45,24,-45,23V-22C-45,-24,-44,-26,-42,-27L-3,-49C-2,-50,-1,-50,0,-50C1,-50,2,-50,3,-49L42,-27C44,-26,45,-24,45,-22V23M0,-39L-35,-20V20L0,39L35,20V-20L0,-39M0,-29L24,-15L0,-1L-24,-15L0,-29M25,14L5,26V8L25,-3V14M-5,26L-25,14V-3L-5,8V26Z' }],\r\n    pause: draw('M10,35H30V-35H10M-30,35H-10V-35H-30V35Z'),\r\n    play: draw('M-20,-34V36L35,1L-20,-34Z'),\r\n    plug: draw('M20,-25V-45H10V-25H-10V-45H-20V-25H-20C-25,-25,-30,-20,-30,-15V13L-12,30V45H13V30L30,13V-15C30,-20,25,-25,20,-25Z'),\r\n    plus: draw('M35,5H5V35H-5V5H-35V-5H-5V-35H5V-5H35V5Z'),\r\n    \"plus-o\": draw('M0,40C-22,40,-40,22,-40,0C-40,-22,-22,-40,0,-40C22,-40,40,-22,40,0C40,22,22,40,0,40M0,-50A50,50,0,0,0,-50,0A50,50,0,0,0,0,50A50,50,0,0,0,50,0A50,50,0,0,0,0,-50M5,-25H-5V-5H-25V5H-5V25H5V5H25V-5H5V-25Z'),\r\n    \"plus-small\": draw('M35,35V-35H-35V35H35M35,-45A10,10,0,0,1,45,-35V35A10,10,0,0,1,35,45H-35A10,10,0,0,1,-45,35V-35C-45,-41,-40,-45,-35,-45H35M-5,-25H5V-5H25V5H5V25H-5V5H-25V-5H-5V-25Z'),\r\n    print: ['path', {\r\n        fill: 0,\r\n        d: 'M30,-45H-30V-25H30M35,0A5,5,0,0,1,30,-5A5,5,0,0,1,35,-10A5,5,0,0,1,40,-5A5,5,0,0,1,35,0M20,35H-20V10H20M35,-20H-35A15,15,0,0,0,-50,-5V25H-30V45H30V25H50V-5A15,15,0,0,0,35,-20Z'\r\n    }],\r\n    question: draw(\"M-10,35H5V50H-10V35M0,-50C27,-49,38,-22,23,-2C18,3,12,7,8,11C5,15,5,20,5,25H-10C-10,17,-10,10,-7,5C-3,0,3,-3,8,-7C20,-18,17,-34,0,-35A15,15,0,0,0,-15,-20H-30A30,30,0,0,1,0,-50Z\"),\r\n    redo: draw('M32,-7C23,-15,11,-20,-2,-20C-26,-20,-45,-5,-52,16L-40,20C-35,4,-20,-7,-2,-7C7,-7,16,-4,23,2L5,20H50V-25L32,-7Z'),\r\n    refresh: draw('M28,-28C21,-35,11,-40,0,-40A40,40,0,0,0,-40,0A40,40,0,0,0,0,40C19,40,34,27,39,10H28C24,22,13,30,0,30A30,30,0,0,1,-30,0A30,30,0,0,1,0,-30C8,-30,16,-27,21,-21L5,-5H40V-40L28,-28Z'),\r\n    report: draw('M10,-50H-30A10,10,0,0,0,-40,-40V40A10,10,0,0,0,-30,50H30A10,10,0,0,0,40,40V-20L10,-50M30,40H-30V-40H5V-15H30V40M-10,5H-25V-5H-10V5M10,5H-5V-5H10V5M-10,20H-25V10H-10V20M10,20H-5V10H10V20M-10,35H-25V25H-10V35M10,35H-5V25H10V35Z'),\r\n    right: ['path', { fill: 0, d: 'M-40,-5V5H20L-7,33L0,40L39,0L0,-40L-7,-32L20,-5H-40Z' }],\r\n    'right-double': draw('M10,-30L40,0,10,30M-40,-30L-10,0,-40,30'),\r\n    run: draw('M23,-32A10,10,0,0,0,33,-42A10,10,0,0,0,23,-52A10,10,0,0,0,13,-42A10,10,0,0,0,23,-32M5,37L10,15L20,25V55H30V18L20,8L23,-7C29,0,39,5,50,5V-5C41,-5,33,-9,28,-17L23,-25C22,-28,18,-30,15,-30C13,-30,13,-29,11,-29L-15,-18V5H-5V-12L4,-15L-4,25L-28,20L-30,30L5,37M-40,-15A5,5,0,0,1,-45,-20A5,5,0,0,1,-40,-25H-25V-15H-40M-35,-35A5,5,0,0,1,-40,-40A5,5,0,0,1,-35,-45H-10V-35H-35M-45,5A5,5,0,0,1,-50,0A5,5,0,0,1,-45,-5H-25V5H-45Z'),\r\n    search: draw('M-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45M-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35Z'),\r\n    select: draw('M35,35H-35V-35H15V-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-5H35M-20,-10L-27,-2L-5,20L45,-30L38,-37L-5,6L-20,-10Z'),\r\n    sitemap: draw('M-15,-50V-20H-5V-5H-35C-41,-5,-45,-1,-45,5V20H-55V50H-25V20H-35V5H-5V20H-15V50H15V20H5V5H35V20H25V50H55V20H45V5C45,-1,41,-5,35,-5H5V-20H15V-50H-15Z'),\r\n    unselect: draw('M35,-45H-35C-41,-45,-45,-41,-45,-35V35A10,10,0,0,0,-35,45H35A10,10,0,0,0,45,35V-35C45,-41,41,-45,35,-45M35,-35V35H-35V-35H35Z'),\r\n    share: draw('M30,20C26,20,23,22,20,24L-15,3C-15,2,-15,1,-15,0C-15,-1,-15,-2,-15,-3L20,-24C23,-22,26,-20,30,-20A15,15,0,0,0,45,-35A15,15,0,0,0,30,-50A15,15,0,0,0,15,-35C15,-34,15,-33,15,-31L-20,-11C-22,-13,-26,-15,-30,-15A15,15,0,0,0,-45,0A15,15,0,0,0,-30,15C-26,15,-22,13,-20,11L16,32C16,33,15,34,15,35C15,43,22,50,30,50C38,50,45,43,45,35A15,15,0,0,0,30,20Z'),\r\n    show: draw('M0,-15A15,15,0,0,0,-15,0A15,15,0,0,0,0,15A15,15,0,0,0,15,0A15,15,0,0,0,0,-15M0,25A25,25,0,0,1,-25,0A25,25,0,0,1,0,-25A25,25,0,0,1,25,0A25,25,0,0,1,0,25M0,-37C-25,-37,-46,-22,-55,0C-46,22,-25,38,0,38C25,38,46,22,55,0C46,-22,25,-37,0,-37Z'),\r\n    \"skip-next\": draw('M20,30H30V-30H20M-30,30L13,0L-30,-30V30Z'),\r\n    \"skip-next2\": draw('M-40,-35V35L-5,0M30,-35V35H40V-35M-5,-35V35L30,0'),\r\n    \"skip-prev\": draw('M-30,30V-30H-20V30H-30M-12,0L30,-30V30L-12,0Z'),\r\n    \"skip-prev2\": draw('M40,-35V35L5,0M-30,-35V35H-40V-35M5,-35V35L-30,0'),\r\n    speaker: draw('M40,35L33,28C41,21,45,11,45,0C45,-11,41,-21,33,-28L40,-35C49,-26,55,-14,55,0C55,14,49,26,40,35M26,21L19,14C23,11,25,6,25,0C25,-6,23,-11,19,-14L26,-21C32,-16,35,-8,35,0C35,8,32,16,26,21M-40,-45H0A10,10,0,0,1,10,-35V35A10,10,0,0,1,0,45H-40A10,10,0,0,1,-50,35V-35A10,10,0,0,1,-40,-45M-20,-35A10,10,0,0,0,-30,-25A10,10,0,0,0,-20,-15A10,10,0,0,0,-10,-25A10,10,0,0,0,-20,-35M-20,-5A20,20,0,0,0,-40,15A20,20,0,0,0,-20,35A20,20,0,0,0,0,15A20,20,0,0,0,-20,-5M-20,5A10,10,0,0,1,-10,15A10,10,0,0,1,-20,25A10,10,0,0,1,-30,15A10,10,0,0,1,-20,5Z'),\r\n    \"speaker-off\": draw('M-50,-34L-44,-40L45,49L39,55L31,48C30,49,28,50,25,50H-25C-31,50,-35,46,-35,40V-19L-50,-34M0,30A15,15,0,0,1,-15,15C-15,11,-14,8,-11,5L-18,-2C-22,3,-25,8,-25,15A25,25,0,0,0,0,40C7,40,13,38,17,33L10,26C7,29,4,30,0,30M25,15A25,25,0,0,0,0,-10H-1L-34,-43C-33,-47,-29,-50,-25,-50H25A10,10,0,0,1,35,-40V26L25,16V15M0,-40C-6,-40,-10,-36,-10,-30A10,10,0,0,0,0,-20A10,10,0,0,0,10,-30C10,-36,5,-40,0,-40Z'),\r\n    \"split-vertical\": draw('M30,20V5H15V50H5V-50H15V-5H30V-20L50,0L30,20M-50,0L-30,20V5H-15V50H-5V-50H-15V-5H-30V-20L-50,0Z'),\r\n    \"split-horizontal\": draw('M-20,30H-5V15H-50V5H50V15H5V30H20L0,50L-20,30M0,-50L-20,-30H-5V-15H-50V-5H50V-15H5V-30H20L0,-50Z'),\r\n    star: draw('M0,26L31,45L23,10L50,-14L14,-17L0,-50L-14,-17L-50,-14L-23,10L-31,45L0,26Z'),\r\n    stat: draw('M-45,50V-20H-25V50H-45M-10,50V-50H10V50H-10M25,50V10H45V50H25Z'),\r\n    'switch': draw('M-45,-40V3L-30,-12L-15,5C-10,10,-10,15,-10,15V45H10V10C10,10,10,5,7,0C5,-5,0,-10,0,-10L-15,-27L-2,-40M30,-40L8,-18L10,-15C10,-15,15,-10,17,-5C18,-3,19,-1,19,1L45,-25'),\r\n    'tri-down': draw('M-23,-17L0,6L23,-17L30,-10L0,20L-30,-10L-23,-17Z'),\r\n    'tri-left': draw('M17,23L-6,0L17,-23L10,-30L-20,0L10,30L17,23Z'),\r\n    'tri-right': draw('M-17,23L6,0L-17,-23L-10,-30L20,0L-10,30L-17,23Z'),\r\n    'tri-up': draw('M-23,17L0,-6L23,17L30,10L0,-20L-30,10L-23,17Z'),\r\n    twitter: draw('M52,-30C48,-28,44,-27,40,-27C44,-29,48,-33,49,-38C45,-36,41,-34,36,-33C32,-37,26,-40,20,-40C8,-40,-1,-30,-1,-19C-1,-17,-1,-15,-1,-14C-19,-15,-34,-23,-45,-36C-47,-33,-48,-29,-48,-25C-48,-18,-44,-11,-38,-7C-42,-7,-45,-8,-48,-10C-48,-10,-48,-10,-48,-10C-48,1,-41,9,-31,11C-33,12,-35,12,-37,12C-38,12,-39,12,-41,12C-38,20,-30,26,-21,26C-28,32,-37,36,-47,36C-49,36,-51,36,-52,35C-43,41,-31,45,-19,45C20,45,42,12,42,-16C42,-17,42,-18,42,-19C46,-22,49,-26,52,-30Z'),\r\n    undo: draw('M3,-20C-11,-20,-23,-15,-32,-7L-50,-25V20H-5L-23,2C-16,-4,-7,-7,3,-7C20,-7,35,4,41,20L52,16C45,-5,26,-20,3,-20Z'),\r\n    up: draw('M-30,30L0,-30,30,30'),\r\n    'up-double': draw('M-30,40L0,10,30,40M-30,-10L0,-40,30,-10'),\r\n    user: draw(\r\n        'M0,-40A20,20,0,0,1,20,-20A20,20,0,0,1,0,0A20,20,0,0,1,-20,-20A20,20,0,0,1,0,-40M0,10C22,10,40,19,40,30V40H-40V30C-40,19,-22,10,0,10Z'\r\n    ),\r\n    wait: draw('M0,-5A5,5,0,0,0,-5,0A5,5,0,0,0,0,5A5,5,0,0,0,5,0A5,5,0,0,0,0,-5M3,-50C25,-50,26,-32,14,-26C9,-24,7,-19,6,-14C8,-13,10,-11,12,-9C30,-19,50,-15,50,3C50,25,32,26,26,14C24,9,19,7,14,6C13,8,11,10,9,12C19,30,15,50,-2,50C-25,50,-25,32,-14,26C-9,24,-7,19,-6,14C-8,13,-10,11,-12,9C-30,19,-50,15,-50,-2C-50,-25,-32,-26,-26,-14C-24,-9,-19,-7,-14,-6C-13,-8,-11,-10,-9,-12C-19,-30,-15,-50,3,-50Z'),\r\n    \"zoom-in\": draw('M18,10L43,35L35,43L10,18V14L9,12C3,17,-4,20,-12,20A33,33,0,0,1,-45,-12A33,33,0,0,1,-12,-45A33,33,0,0,1,20,-12C20,-4,17,3,12,9L14,10H18M-12,10C0,10,10,0,10,-12C10,-25,0,-35,-12,-35C-25,-35,-35,-25,-35,-12C-35,0,-25,10,-12,10M0,-10H-10V0H-15V-10H-25V-15H-15V-25H-10V-15H0V-10Z'),\r\n    \"zoom-out\": draw('M18,10H14L12,9C17,3,20,-4,20,-12A33,33,0,0,0,-12,-45A33,33,0,0,0,-45,-12A33,33,0,0,0,-12,20C-4,20,3,17,9,12L10,14V18L35,43L43,35L18,10M-12,10C-25,10,-35,0,-35,-12C-35,-25,-25,-35,-12,-35C0,-35,10,-25,10,-12C10,0,0,10,-12,10M-25,-15H0V-10H-25V-15Z'),\r\n    warning: draw('M0,-50L-55,45H55M0,-30L38,35H-38M-5,-10V10H5V-10M-5,20V30H5V20')\r\n};\r\n\r\n\r\n// Synonyms.\r\nconst synonyms: { [name: string]: string } = {\r\n    add: \"plus\",\r\n    back: \"left\",\r\n    help: \"question\",\r\n    save: \"export\"\r\n};\r\nfor (const key of Object.keys(synonyms)) {\r\n    const val: string = synonyms[key];\r\n    iconsBook[key] = iconsBook[val];\r\n}\r\n","import * as React from \"react\";\r\nimport castBoolean from \"../converter/boolean\";\r\nimport castInteger from \"../converter/integer\";\r\nimport castUnit from \"../converter/unit\";\r\nimport { iconsBook, TIconDefinition } from \"../icons\";\r\nimport \"./icon.css\";\r\n\r\nenum EnumPenColor { B, W, P, PD, PL, S, SD, SL }\r\n\r\ninterface IIconProps {\r\n    visible?: boolean;\r\n    content?: string | TIconDefinition;\r\n    size?: string | number;\r\n    enabled?: boolean;\r\n    animate?: boolean;\r\n    flipH?: boolean;\r\n    flipV?: boolean;\r\n    rotate?: number;\r\n    pen0?: EnumPenColor | string;\r\n    pen1?: EnumPenColor | string;\r\n    pen2?: EnumPenColor | string;\r\n    pen3?: EnumPenColor | string;\r\n    pen4?: EnumPenColor | string;\r\n    pen5?: EnumPenColor | string;\r\n    pen6?: EnumPenColor | string;\r\n    pen7?: EnumPenColor | string;\r\n    onClick?: () => void;\r\n    onHide?: () => void;\r\n}\r\n\r\nexport default class Icon extends React.Component<IIconProps, {}> {\r\n    static isValidIconName(name: string): boolean {\r\n        return typeof iconsBook[name] !== 'undefined';\r\n    }\r\n\r\n    static getAllIconNames(): string[] {\r\n        return Object.keys(iconsBook).sort();\r\n    }\r\n\r\n    private refIcon: any;\r\n    private visible: boolean;\r\n    private timeoutHandle: number;\r\n\r\n    constructor(props: IIconProps) {\r\n        super(props);\r\n        this.refIcon = React.createRef();\r\n        this.visible = false;\r\n        this.timeoutHandle = 0;\r\n    }\r\n\r\n    triggerVisibleAnimation() {\r\n        const\r\n            elemIcon = this.refIcon.current,\r\n            visible = this.visible;\r\n        if( !elemIcon ) return;\r\n        if (this.timeoutHandle) {\r\n            window.clearTimeout(this.timeoutHandle);\r\n            this.timeoutHandle = 0;\r\n        }\r\n        requestAnimationFrame(() => {\r\n            if (visible) elemIcon.classList.remove(\"zero\");\r\n            else {\r\n                elemIcon.classList.add(\"zero\");\r\n                const slot = this.props.onHide;\r\n                if (typeof slot === 'function') {\r\n                    this.timeoutHandle = window.setTimeout(slot, 300);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const\r\n            p = this.props,\r\n            visible = castBoolean(p.visible, true),\r\n            enabled = castBoolean(p.enabled, true),\r\n            animate = castBoolean(p.animate, false),\r\n            flipH = castBoolean(p.flipH, false),\r\n            flipV = castBoolean(p.flipV, false),\r\n            size = castUnit(p.size, \"28px\"),\r\n            content = castContent(p.content),\r\n            rotate = castInteger(p.rotate, 0),\r\n            onClick = p.onClick,\r\n            classes = [\"tfw-view-icon\"];\r\n        const svgContent = createSvgContent(content, p);\r\n        if (!svgContent) return null;\r\n\r\n        if (!enabled) classes.push(\"disabled\");\r\n        if (animate) classes.push(\"animate\");\r\n        if (visible) classes.push(\"zero\");\r\n        if (typeof onClick === 'function' && enabled) classes.push(\"active\");\r\n\r\n        let transform = \"\";\r\n        if (rotate !== 0) {\r\n            transform += `rotate(${rotate}deg) `;\r\n        }\r\n        if (flipH || flipV) {\r\n            transform += `scale(${flipH ? -1 : 1},${flipV ? -1 : 1})`;\r\n        }\r\n        const style: React.CSSProperties = { width: size, height: size };\r\n        if (transform.length > 0) style.transform = transform;\r\n\r\n        requestAnimationFrame(() => this.triggerVisibleAnimation());\r\n        this.visible = visible;\r\n\r\n        return (\r\n            <svg className={classes.join(\" \")}\r\n                ref={this.refIcon}\r\n                viewBox=\"-65 -65 130 130\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n                width={size}\r\n                height={size}\r\n                onClick={enabled ? onClick : undefined}\r\n                style={style}>\r\n                {svgContent}\r\n                < g strokeWidth=\"6\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\r\n                    {createSvgContent(content, p)}\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nfunction createSvgContent(def: TIconDefinition, props: IIconProps, key: string = \"\"): any {\r\n    const\r\n        elementName = def[0],\r\n        { attributes, children } = parseDef(def);\r\n\r\n    if (typeof elementName === 'undefined') return <g key={key}></g>;\r\n\r\n    const attribs: React.Attributes = manageColors({ ...attributes }, props);\r\n    if (key.length > 0) attribs.key = key;\r\n\r\n    return React.createElement(\r\n        elementName,\r\n        attribs,\r\n        children.map((child, index) => createSvgContent(child, props, `${index}`))\r\n    ) as React.ReactSVGElement;\r\n}\r\n\r\nconst CLASSES = [\"P\", \"PL\", \"PD\", \"S\", \"SL\", \"SD\"];\r\nconst PENS = \"01234567\";\r\n\r\n/**\r\n * If the value of the attribute \"fill\" is an element of CLASSES,\r\n * it will be removed and replace with a class.\r\n * Same thing for the attibute \"stroke\".\r\n *\r\n * @example\r\n * manageColors({ fill: \"1\" }) === { className: \"thn-svg-fill-1\" }\r\n *\r\n * @param   attribs [description]\r\n * @param   props   [description]\r\n * @returns         [description]\r\n */\r\nfunction manageColors(attribs: { [key: string]: any }, props: IIconProps) {\r\n    // @TODO For special forms of \"fill\" and \"stroke\", add classes.\r\n    const classes = (attribs.className || \"\").split(\" \");\r\n\r\n    [\"fill\", \"stroke\"].forEach(attribName => {\r\n        const attribValue = `${attribs[attribName]}`;\r\n        if (typeof attribValue === 'undefined') return;\r\n        if (attribValue === 'undefined') return;\r\n        const key = `${attribValue}`.toUpperCase();\r\n        if (CLASSES.indexOf(key) === -1 && PENS.indexOf(key) === -1) return;\r\n        if (PENS.indexOf(attribValue) !== -1 ) {\r\n            // If we find fill=\"3\", then we must look for property pen3.\r\n            const pen = getPen(attribValue, props)\r\n            if( typeof pen === 'string' ) {\r\n                if( CLASSES.indexOf(pen) === -1 ) {\r\n                    attribs[attribName] = pen;\r\n                } else {\r\n                    delete attribs[attribName];\r\n                    classes.push(`thm-svg-${attribName}${pen}`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        delete attribs[attribName];\r\n        classes.push(`thm-svg-${attribName}${key}`);\r\n    });\r\n\r\n    attribs.className = classes.join(\" \").trim();\r\n    return attribs;\r\n}\r\n\r\nfunction getPen(penIndex: string, props: IIconProps): EnumPenColor | string {\r\n    switch (penIndex) {\r\n        case \"0\": return props.pen0 || \"#000\"\r\n        case \"1\": return props.pen1 || \"#fff\"\r\n        case \"2\": return props.pen2 || \"#f00\"\r\n        case \"3\": return props.pen3 || \"#0f0\"\r\n        case \"4\": return props.pen4 || \"#00f\"\r\n        case \"5\": return props.pen5 || \"#0ff\"\r\n        case \"6\": return props.pen6 || \"#f0f\"\r\n        case \"7\": return props.pen7 || \"#ff0\"\r\n    }\r\n\r\n    return \"#000\"\r\n}\r\n\r\nfunction parseDef([name, arg1, arg2]: TIconDefinition) {\r\n    let attributes: undefined | {},\r\n        children: undefined | any[];\r\n\r\n    if (Array.isArray(arg1)) children = arg1;\r\n    else if (typeof arg1 !== 'undefined') attributes = arg1;\r\n    if (Array.isArray(arg2)) children = arg2;\r\n    else if (typeof arg2 !== 'undefined') attributes = arg2;\r\n\r\n    if (typeof attributes === 'undefined') attributes = {};\r\n    if (typeof children === 'undefined') children = [];\r\n\r\n    return { attributes, children };\r\n}\r\n\r\nfunction castContent(content: string | TIconDefinition = \"ok\"): TIconDefinition {\r\n    if (Array.isArray(content)) return content;\r\n    return iconsBook[content] || [];\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./label.css\"\r\n\r\ninterface ILabelProps {\r\n    label?: string;\r\n    htmlFor?: string;\r\n}\r\n\r\nexport default class Label extends React.Component<ILabelProps, {}> {\r\n    render() {\r\n        const label = this.props.label;\r\n        if( typeof label !== 'string' || label.trim().length === 0 ) return null;\r\n        return (<label className=\"tfw-view-Label\" htmlFor={this.props.htmlFor}>{\r\n            this.props.label\r\n        }</label>)\r\n    }\r\n}\r\n","/**\r\n * The ESCAPE key is often used to close a dialog, collapse a combo list, ...\r\n * This module helps you nesting closable things.\r\n *\r\n * @example\r\n * import * from EscapeHandler from \"./tfw/escape-handler\"\r\n * EscapeHandler.add(() => myDialog.close());\r\n * EscapeHandler.fire();\r\n */\r\n\r\nexport default {add, fire};\r\n\r\ntype THandler = ()=>void;\r\n\r\nlet handlers:THandler[] = [];\r\nlet initialized = false;\r\n\r\nexport function add(listener: THandler) {\r\n    if( !initialized) {\r\n        initialized = true;\r\n        addKeyboardListener();\r\n    }\r\n\r\n    handlers.push(listener);\r\n}\r\n\r\nexport function fire() {\r\n    if( handlers.length === 0 ) return;\r\n    const handler = handlers.pop();\r\n    if (typeof handler === 'function') handler();\r\n}\r\n\r\nfunction addKeyboardListener() {\r\n    document.addEventListener(\"keydown\", evt => {\r\n        if( evt.key !== 'Escape') return;\r\n        fire();\r\n    }, true);\r\n}\r\n","import * as React from \"react\"\r\nimport \"./combo.css\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport Icon from \"./icon\"\r\nimport Label from \"./label\"\r\nimport Gesture from \"../gesture\"\r\nimport EscapeHandler from \"../escape-handler\"\r\n\r\ninterface IComboProps {\r\n    label?: string;\r\n    value?: string;\r\n    keys?: string[];\r\n    wide?: boolean;\r\n    onChange?: (value: string) => void;\r\n    children?: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Combo extends React.Component<IComboProps, {}> {\r\n    readonly touchable: Touchable;\r\n\r\n    ref = React.createRef<HTMLButtonElement>()\r\n    list = React.createRef<HTMLDivElement>()\r\n    button = React.createRef<HTMLDivElement>()\r\n\r\n    bigList: HTMLElement | undefined;\r\n\r\n    keys: string[] = []\r\n    selectedKey: string = \"\"\r\n    selectedIndex: number = -1\r\n\r\n    constructor(props: IComboProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n    }\r\n\r\n    handleClick() {\r\n        this.expand();\r\n    }\r\n\r\n    /**\r\n     * If there are only two items, we don't open the list: we just swap them.\r\n     */\r\n    _swapItems() {\r\n        // With two items, clicking will immediatly switch to the next one.\r\n        for (const key of this.keys) {\r\n            if (this.props.value !== key) {\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(key);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    _computeDimensions(list: HTMLElement, button: HTMLElement): { left: number, top: number, width: number, height: number } {\r\n        let { left, top, height } = list.getBoundingClientRect();\r\n        const { width } = button.getBoundingClientRect();\r\n        height = Math.min(height, window.innerHeight - 32);\r\n        if (top + height > window.innerHeight) {\r\n            top -= 32 * Math.ceil(window.innerHeight - top - height / 32);\r\n        }\r\n        if (top < 0) {\r\n            top += 32 * Math.ceil(-top / 32);\r\n        }\r\n        return { left, top, width, height };\r\n    }\r\n\r\n    _showList(list: HTMLElement, left: number, top: number, width: number, height: number): { screen: HTMLElement, bigList: HTMLElement } {\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-view-combo-screen\";\r\n        const bigList = document.createElement(\"div\");\r\n        bigList.className = \"thm-ele-nav thm-bg3\";\r\n        bigList.innerHTML = list.innerHTML;\r\n\r\n        bigList.style.top = `${top}px`;\r\n        bigList.style.left = `${left}px`;\r\n        bigList.style.width = `${width}px`;\r\n        bigList.style.height = `${height}px`;\r\n        screen.appendChild(bigList);\r\n        document.body.appendChild(screen);\r\n\r\n        this.bigList = bigList;\r\n        return { screen, bigList };\r\n    }\r\n\r\n    _ensureSelectionVisible(customBigList: HTMLElement | undefined = undefined) {\r\n        let index = 0;\r\n        const bigList: HTMLElement | undefined = customBigList || this.bigList;\r\n        if (!bigList) return;\r\n        const items = bigList.querySelectorAll(\"div.item\");\r\n        for (const key of this.keys) {\r\n            const item = items[index];\r\n            if (key === this.selectedKey) {\r\n                const rect = bigList.getBoundingClientRect();\r\n                bigList.scrollTop = (32 * index) - rect.height / 2;\r\n                this.selectedIndex = index;\r\n                item.classList.add(\"thm-bgSL\");\r\n            } else {\r\n                item.classList.remove(\"thm-bgSL\");\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n    _handleKeyboard(event: React.KeyboardEvent) {\r\n        switch (event.key) {\r\n            case \"ArrowDown\":\r\n                this.selectedIndex++;\r\n                this.selectedKey = this.keys[this.selectedIndex % this.keys.length];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"ArrowUp\":\r\n                this.selectedIndex = (this.selectedIndex + this.keys.length - 1) % this.keys.length;\r\n                this.selectedKey = this.keys[this.selectedIndex];\r\n                this._ensureSelectionVisible();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            case \"Enter\":\r\n            case \" \":\r\n                const slot = this.props.onChange;\r\n                if (typeof slot === 'function') {\r\n                    slot(this.selectedKey);\r\n                }\r\n                EscapeHandler.fire();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n        }\r\n    }\r\n\r\n    expand() {\r\n        if (this.keys.length < 3) {\r\n            this._swapItems();\r\n            return;\r\n        }\r\n\r\n        const list = this.list.current;\r\n        const button = this.button.current;\r\n        if (!list || !button) return;\r\n\r\n        const { left, top, width, height } = this._computeDimensions(list, button);\r\n        const { screen, bigList } = this._showList(list, left, top, width, height);\r\n        this.selectedKey = this.props.value || \"\";\r\n        window.setTimeout(() => this._ensureSelectionVisible(bigList), 10);\r\n\r\n        const handleKeyboard = this._handleKeyboard.bind(this);\r\n        document.addEventListener(\"keydown\", handleKeyboard, true);\r\n        EscapeHandler.add(() => {\r\n            document.body.removeChild(screen)\r\n            document.removeEventListener(\"keydown\", handleKeyboard, true);\r\n        });\r\n        Gesture(screen).on({ tap: () => {\r\n            EscapeHandler.fire()\r\n        }});\r\n        Gesture(bigList).on({\r\n            tap: evt => {\r\n                if (!evt || typeof evt.y === 'undefined') return;\r\n                const scroll = bigList.scrollTop;\r\n                const index = Math.floor((evt.y + scroll) / 32);\r\n                const value = this.keys[index];\r\n                EscapeHandler.fire()\r\n                requestAnimationFrame(() => {\r\n                    if (typeof this.props.onChange === 'function') {\r\n                        this.props.onChange(value)\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    render() {\r\n        const p = this.props;\r\n        const children = p.children;\r\n        const label = castString(p.label, \"\").trim();\r\n        const wide = castBoolean(p.wide, false);\r\n        const keys = ensureGoodKeys(p.keys, children);\r\n        const value = castString(p.value, keys[0]);\r\n        const classes = [\"tfw-view-combo\"];\r\n        const items = children.map((item, index) => {\r\n            const key = item.key || `item-${index}`;\r\n            return (<div className=\"item\" key={key} > {item} </div>);\r\n        });\r\n\r\n        if (wide) classes.push(\"wide\");\r\n\r\n        this.keys = keys;\r\n\r\n        const index = getIndex(keys, value);\r\n\r\n        return (\r\n            <button ref={this.ref} className={classes.join(\" \")}>\r\n                {label.length > 0 ? <Label label={label}/> : null}\r\n                <div ref={this.button} className=\"button thm-bg3 thm-ele-button\">\r\n                    <div className=\"list-container\"\r\n                        style={{\r\n                            transform: `translateY(-${32 * index}px)`\r\n                        }}>\r\n                        <div ref={this.list} className=\"tfw-view-combo-list\" >{items}</div>\r\n                    </div>\r\n                    <div className=\"icon\" >\r\n                        <Icon size=\"24px\" content=\"down\" />\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getIndex(keys: string[], value: string) {\r\n    const index = keys.indexOf(value);\r\n    return Math.max(0, index);\r\n}\r\n\r\n/**\r\n * Keys must be non empty strings. If a key is not defined, it will take its index (stringified) as value.\r\n * And if a \"key\" its defined on a child, it will take precedence on anything else.\r\n *\r\n* @param  {string[]} keys\r\n* @param  {ReactElement[]} children\r\n          *\r\n* @return {string[]}\r\n*/\r\nfunction ensureGoodKeys(keys: string[] | undefined, children: React.ReactElement<any>[]): string[] {\r\n    const goodKeys: string[] = castStringArray(keys, []);\r\n    const minimalLength: number = children.length;\r\n\r\n    while (goodKeys.length < minimalLength) {\r\n        goodKeys.push(`${goodKeys.length}`);\r\n    }\r\n    for (let k = 0; k < goodKeys.length; k++) {\r\n        if (goodKeys[k].trim().length === 0) {\r\n            goodKeys[k] = `${k}`;\r\n        }\r\n    }\r\n    children.forEach((child, index) => {\r\n        const key = child.key;\r\n        if (typeof key === \"string\") {\r\n            goodKeys[index] = key;\r\n        } else {\r\n            child.key = goodKeys[index];\r\n        }\r\n    });\r\n\r\n    return goodKeys;\r\n}\r\n","import * as React from \"react\"\nimport \"./input.css\"\nimport castInteger from \"../../converter/integer\"\nimport castBoolean from \"../../converter/boolean\"\nimport castString from \"../../converter/string\"\nimport castUnit from \"../../converter/unit\"\nimport Label from \"../label\"\n\ninterface IStringSlot {\n    (value: string): void;\n}\n\ninterface IInputProps {\n    value: string;\n    label?: string;\n    wide?: boolean;\n    size?: number;\n    focus?: boolean;\n    width?: string;\n    enabled?: boolean;\n    placeholder?: string;\n    type?: \"text\" | \"password\" | \"submit\" | \"color\" | \"date\"\n    | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"range\"\n    | \"search\" | \"tel\" | \"time\" | \"url\" | \"week\";\n    validator?: (value: string) => boolean | RegExp;\n    onValidation?: (validation: boolean) => void;\n    valid?: boolean,\n    onChange?: IStringSlot,\n    onEnterPressed?: (value: string) => void\n}\n\nexport default class Input extends React.Component<IInputProps, {}> {\n    private readonly input: React.RefObject<HTMLInputElement> = React.createRef();\n\n    handleKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n        if (evt.key === \"Enter\") {\n            evt.preventDefault();\n            evt.stopPropagation();\n            const { onEnterPressed, value } = this.props;\n            if (typeof onEnterPressed === 'function') {\n                onEnterPressed(value);\n            }\n        }\n    }\n\n    onFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.remove(\"thm-bg3\");\n        input.classList.add(\"thm-bgSL\");\n        if (this.props.type !== 'number') {\n            // setSelectionRange fails for \"number\" input.\n            input.setSelectionRange(0, input.value.length);\n        }\n    }\n\n    onBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n        const input = this.input ? this.input.current : null;\n        if (!input) return;\n        if (!input.classList) return;\n        input.classList.add(\"thm-bg3\");\n        input.classList.remove(\"thm-bgSL\");\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        //if (!this.checkValidity(event.target.value)) return;\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            event.preventDefault();\n            onChange(event.target.value);\n        }\n    }\n\n    render() {\n        const\n            p = this.props,\n            type = castString(p.type, \"text\"),\n            label = castString(p.label, \"\"),\n            value = castString(p.value, \"\"),\n            placeholder = castString(p.placeholder, \"\"),\n            valid = castBoolean(p.valid, true),\n            wide = castBoolean(p.wide, false),\n            focus = castBoolean(p.focus, false),\n            enabled = castBoolean(p.enabled, true),\n            size = Math.max(1, castInteger(p.size, 8)),\n            width = castUnit(p.width, \"auto\"),\n            id = nextId();\n        const classes = [\"tfw-view-input\"]\n        if (wide) classes.push(\"wide\")\n        if (!valid) classes.push(\"invalid\")\n        /*\n        const header = (error ? <div className=\"error\">{error}</div> :\n            (label ? (<Label htmlFor={id} label={label}/>) : null));\n        */\n        const inputClassName = \"thm-ele-button \"\n            + (enabled ? 'thm-bg3' : 'thm-bg0');\n        return (<div\n                    className={classes.join(\" \")}\n                    style={{ width, maxWidth: width }}>\n            <Label htmlFor={id} label={label}/>\n            <input\n                ref={this.input}\n                autoFocus={focus}\n                className={inputClassName}\n                placeholder={placeholder}\n                disabled={!enabled}\n                type={type}\n                id={id}\n                size={size}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                onKeyDown={this.handleKeyDown}\n                value={value}/>\n        </div>);\n    }\n}\n\n\nlet globalId = 0;\nfunction nextId() {\n    return `tfw-view-input-${globalId++}`;\n}\n","import * as React from \"react\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\nimport castStringArray from \"../converter/string-array\"\nimport \"./flex.css\"\n\ninterface IFlexProp {\n    wide?: boolean;\n    classes?: string[] | string;\n    dir?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\" | \"wide\" | \"narrow\";\n    wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n    justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-around\" | \"space-between\" | \"space-evenly\";\n    alignItems?: \"stretch\" | \"flex-start\" | \"flex-end\" | \"center\";\n    children: React.ReactElement<any>[] | React.ReactElement<any>;\n}\n\nexport default class Flex extends React.Component<IFlexProp, {}> {\n    render() {\n        const p = this.props;\n        const wide = castBoolean(p.wide, true);\n        const dir = castString(p.dir, \"row\");\n        const style: React.CSSProperties = {\n            justifyContent: castString(p.justifyContent, \"space-around\"),\n            alignItems: castString(p.alignItems, \"center\"),\n            flexWrap: castString(p.wrap, \"wrap\")\n        };\n        const classes = [\"tfw-view-flex\", `dir-${dir}`];\n        classes.push(...castStringArray(p.classes));\n\n        if (wide) classes.push(\"wide\");\n\n        return (\n            <div className={classes.join(\" \")} style={style}>{\n                p.children\n            }</div>\n        )\n    }\n}\n","import React from \"react\"\n\nimport Combo from '../../../tfw/view/combo'\nimport Input from '../../../tfw/view/input'\nimport Flex from '../../../tfw/layout/flex'\n\nimport { ISnapshot } from '../../types'\n\nexport const RESOLUTIONS: {[key: string]: [number,number]} = {\n    fullHD: [1920,1080],\n    thumbnail: [160,120],\n    presentation: [800,600],\n    ultraHD: [3840,2160]\n}\n\nexport const SAMPLINGS: {[key: string]: number} = {\n    medium: 50,\n    quick: 1,\n    low: 10,\n    high: 250,\n    ultra: 1250\n}\n\n\ninterface IProps extends ISnapshot {\n    onFilenameChange: (filename: string) => void,\n    onSizeKeyChange: (key: string) => void,\n    onWidthChange: (width: number) => void,\n    onHeightChange: (width: number) => void,\n    onSamplesKeyChange: (key: string) => void,\n    onSamplesChange: (samples: number) => void\n}\n\nfunction res(name: string): string {\n    const resolution = RESOLUTIONS[name];\n    if (!resolution) return '';\n    const [w,h] = resolution;\n    return `(${w} x ${h})`\n}\n\nexport default class Snapshot extends React.Component<IProps, {}> {\n    constructor( props: IProps ) {\n        super( props );\n    }\n\n    handleWidthChange = (width: string) => {\n        const value = parseInt(width, 10);\n        if (isNaN(value)) return;\n        this.props.onWidthChange(value);\n    }\n\n    handleHeightChange = (height: string) => {\n        const value = parseInt(height, 10);\n        if (isNaN(value)) return;\n        this.props.onHeightChange(value);\n    }\n\n    handleSizeKeyChange = (size: string) => {\n        this.props.onSizeKeyChange(size);\n    }\n\n    handleSamplesChange = (samples: string) => {\n        const value = parseInt(samples, 10);\n        if (isNaN(value)) return;\n        this.props.onSamplesChange(value);\n    }\n\n    handleSamplesKeyChange = (key: string) => {\n        this.props.onSamplesKeyChange(key);\n    }\n\n    handleFilenameChange = (filename: string) => {\n        this.props.onFilenameChange(filename);\n    }\n\n    render() {\n        const p = this.props;\n\n        return (<div className=\"webBrayns-dialog-screenshot\">\n            <Input wide={true}\n                   label=\"File name\"\n                   value={`${p.filename}`}\n                   onChange={this.handleFilenameChange}/>\n            <Combo value={p.sizeKey} wide={true} onChange={this.handleSizeKeyChange}>\n                <div key=\"ultraHD\">Ultra HD <em>{res(\"ultraHD\")}</em></div>\n                <div key=\"fullHD\">Full HD <em>{res(\"fullHD\")}</em></div>\n                <div key=\"presentation\">Presentation <em>{res(\"presentation\")}</em></div>\n                <div key=\"thumbnail\">Thumbnail <em>{res(\"thumbnail\")}</em></div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Flex>\n                <Input label=\"Width\" value={`${p.width}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleWidthChange}/>\n                <Input label=\"Height\" value={`${p.height}`}\n                       enabled={p.sizeKey === 'custom'}\n                       onChange={this.handleHeightChange}/>\n            </Flex>\n            <Combo value={p.samplesKey} wide={true} onChange={this.handleSamplesKeyChange}>\n                <div key=\"quick\">Quick and dirty</div>\n                <div key=\"low\">Low quality</div>\n                <div key=\"medium\">Medium quality</div>\n                <div key=\"high\">High quality</div>\n                <div key=\"ultra\">Very high quality</div>\n                <div key=\"custom\">Custom...</div>\n            </Combo>\n            <Input wide={true}\n                   label=\"Sampling\"\n                   value={`${p.samples}`}\n                   enabled={p.samplesKey === 'custom'}\n                   onChange={this.handleSamplesChange}/>\n        </div>)\n    }\n}\n","import { IDialogs, ISnapshot, IAction } from '../types'\nimport Storage from '../../tfw/storage'\nimport { RESOLUTIONS, SAMPLINGS } from '../view/snapshot'\n\nconst PREFIX = \"dialogs:\"\n\n\nconst RESOLUTION_NAME = Object.keys(RESOLUTIONS)[0];\nconst SAMPLING_NAME = Object.keys(SAMPLINGS)[0];\n\nexport default {\n    INITIAL_STATE: {\n        snapshot: Storage.local.get('state/dialogs/snapshot', {\n            filename: 'snapshot',\n            sizeKey: RESOLUTION_NAME,\n            width: RESOLUTIONS[RESOLUTION_NAME][0],\n            height: RESOLUTIONS[RESOLUTION_NAME][1],\n            samplesKey: SAMPLING_NAME,\n            samples: SAMPLINGS[SAMPLING_NAME]\n        })\n    },\n\n    reducer(state: IDialogs, action: IAction): IDialogs {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update-snapshot\": return updateSnapshot(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    updateSnapshot(snapshot: Partial<ISnapshot>): IAction {\n        return { type: `${PREFIX}update-snapshot`, snapshot };\n    }\n}\n\n\nfunction updateSnapshot(state: IDialogs, action: IAction): IDialogs {\n    const newState = Object.assign( state, {\n        snapshot: Object.assign( state.snapshot, action.snapshot )\n    });\n    Storage.local.set('state/dialogs/snapshot', newState.snapshot)\n    return newState;\n}\n","import { IModel, IAction } from \"../types\"\n\nconst PREFIX = \"models:\"\n\nexport default {\n    INITIAL_STATE: [],\n\n    reducer(state: IModel[], action: IAction): IModel[] {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"add\": return add(state, action);\n            case \"reset\": return reset(state, action);\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    add(model: IModel): IAction {\n        return { type: `${PREFIX}add`, model };\n    },\n\n    reset(models: IModel[]): IAction {\n        return { type: `${PREFIX}reset`, models };\n    },\n\n    update(model: IModel): IAction {\n        return { type: `${PREFIX}update`, model };\n    }\n}\n\n\nfunction add(state: IModel[], action: IAction): IModel[] {\n    const models = state.slice();\n    models.push(action.model);\n    return models;\n}\n\n/**\n * This function seem complicated, but it aism to remove doubles.\n * It's strange but its true thay Brayns can return doubles when you call \"get-scene\".\n */\nfunction reset(state: IModel[], action: IAction): IModel[] {\n    const alreadyAddedIds: number[] = [];\n    const models = action.models.filter( (model: {id: number}) => {\n        const id = model.id;\n        const alreadyHere = alreadyAddedIds.includes(id);\n        if (alreadyHere) return false;\n        alreadyAddedIds.push(id);\n        return true;\n    });\n    return models;\n}\n\n\nfunction update(state: IModel[], action: IAction): IModel[] {\n    const { model } = action;\n    const models = state.filter((m: IModel) => m.brayns.id !== model.brayns.id);\n    models.push(model);\n    return models;\n}\n","import { INavigation, IAction } from '../types'\n\nconst PREFIX = \"navigation:\"\n\nexport default {\n    INITIAL_STATE: {\n        panel: \"models\",\n        showConsole: false\n    },\n\n    reducer(state: INavigation, action: IAction): INavigation {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"set-panel\": return setPanel(state, action);\n            case \"toggle-console-visibility\": return toggleConsoleVisibility(state);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    setPanel(panel: string): IAction {\n        return { type: `${PREFIX}set-panel`, panel };\n    },\n\n    toggleConsoleVisibility(): IAction {\n        return { type: `${PREFIX}toggle-console-visibility` };\n    }\n}\n\n\nfunction setPanel(state: INavigation, action: IAction): INavigation {\n    return Object.assign( state, { panel: action.panel });\n}\n\nfunction toggleConsoleVisibility(state: INavigation): INavigation {\n    return Object.assign( state, { showConsole: !state.showConsole });\n}\n","import { IAction, IPathState } from \"../types\"\n\nconst PREFIX = \"path:\"\n\nexport default {\n    INITIAL_STATE: {\n        path: \"\",\n        root: \"\",\n        files: [],\n        folders: []\n    },\n\n    reducer(state: IPathState, action: IAction): IPathState {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(state: Partial<IPathState>): IAction {\n        return { type: `${PREFIX}update`, state };\n    }\n}\n\n\nfunction update(state: IPathState, action: IAction): IPathState {\n    return { ...state, ...action.state }\n}\n","import { ISlicerState, IAction } from '../types'\n\nconst PREFIX = \"slicer:\"\n\nexport default {\n    INITIAL_STATE: {\n        activated: false,\n        minX: 0,\n        maxX: 1,\n        latitude: 0,\n        longitude: 0,\n        collageDepth: 1\n    },\n\n    reducer(state: ISlicerState, action: IAction): ISlicerState {\n        const { type } = action;\n        if (!type.startsWith(PREFIX)) return state;\n\n        const command = action.type.substr(PREFIX.length);\n        switch (command) {\n            case \"update\": return update(state, action);\n            default: throw Error(`Unknown action \"${type}\"!`);\n        }\n    },\n\n    update(sliceInfo: Partial<ISlicerState>): IAction {\n        return { type: `${PREFIX}update`, sliceInfo };\n    }\n}\n\n\nfunction update(state: ISlicerState, action: IAction): ISlicerState {\n    return Object.assign( state, action.sliceInfo );\n}\n","/**\n * The full state of the application is stored and managed here.\n */\nimport { createStore } from 'redux'\nimport { IAppState, IAction } from \"../types\"\n\nimport Animation from './animation'\nimport CurrentModel from './current-model'\nimport Dialogs from './dialogs'\nimport Models from \"./models\"\nimport Navigation from './navigation'\nimport Path from './path'\nimport Slicer from './slicer'\n\n\nconst INITIAL_STATE: IAppState = {\n    animation: Animation.INITIAL_STATE,\n    currentModel: CurrentModel.INITIAL_STATE,\n    dialogs: Dialogs.INITIAL_STATE,\n    models: Models.INITIAL_STATE,\n    navigation: Navigation.INITIAL_STATE,\n    path: Path.INITIAL_STATE,\n    slicer: Slicer.INITIAL_STATE\n};\n\nfunction reducer(state: IAppState | undefined = INITIAL_STATE, action: IAction): IAppState {\n    return {\n        animation: Animation.reducer(state.animation, action),\n        currentModel: CurrentModel.reducer(state.currentModel, action),\n        dialogs: Dialogs.reducer(state.dialogs, action),\n        models: Models.reducer(state.models, action),\n        navigation: Navigation.reducer(state.navigation, action),\n        path: Path.reducer(state.path, action),\n        slicer: Slicer.reducer(state.slicer, action)\n    };\n}\n\nconst store = createStore(reducer);\nexport default {\n    store, dispatch: store.dispatch,\n    Animation,\n    CurrentModel,\n    Dialogs,\n    Models,\n    Navigation,\n    Path,\n    Slicer\n};\n","import Python from './python'\nimport State from '../state'\n\nexport default { browse }\n\nconst ROOT = '/gpfs/bbp.cscs.ch/project/';\n\n/**\n * Set the current Path state according to the content of `dir`.\n */\nasync function browse(dir: string = \"\") {\n    const result = await Python.exec(\"dir\", { path: dir });\n    if (typeof result.code === 'number') {\n        throw result;\n    }\n    const children = result.children;\n    const path = result.path;\n    const files: string[] = [];\n    const folders: string[] = [];\n\n    children.forEach((item: any) => {\n        const { name, size } = item;\n        if (typeof size === 'undefined') folders.push(name);\n        else files.push(name);\n    })\n    const state = { path, root: ROOT, files, folders };\n    State.dispatch(State.Path.update(state));\n    return state;\n}\n","interface IMap {\r\n    [key: string]: string;\r\n}\r\n\r\nconst UrlArgs = {\r\n    parse(): IMap {\r\n        const\r\n            args: IMap = {},\r\n            t = location.search;\r\n\r\n        if (t.length < 2) return args;\r\n        const items = t.substring(1).split('&');\r\n        items.forEach((item, index) => {\r\n            const itemWithSpacesInsteadOfPlus = item.split(\"+\").join(\" \");\r\n            const indexOfEqual = itemWithSpacesInsteadOfPlus.indexOf(\"=\");\r\n            if (indexOfEqual === -1) {\r\n                args[`${index}`] = itemWithSpacesInsteadOfPlus;\r\n            } else {\r\n                const key = itemWithSpacesInsteadOfPlus.substr(0, indexOfEqual);\r\n                const val = itemWithSpacesInsteadOfPlus.substr(indexOfEqual + 1);\r\n                args[key] = decodeURIComponent(val);\r\n            }\r\n        });\r\n\r\n        return args;\r\n    }\r\n};\r\n\r\nexport default UrlArgs;\r\n","export default function castArray(v: any, defaultValue: any[] = []): any[] {\r\n    if (typeof v === 'undefined') return defaultValue;\r\n    if (Array.isArray(v)) return v;\r\n    return [v];\r\n}\r\n","import { IIntlText, IIntlOrString } from \"./types\"\r\n\r\ninterface ITranslations {\r\n    [language: string]: { [key: string]: string }\r\n}\r\n\r\nlet gCurrentLanguage: string =\r\n    localStorage.getItem(\"CurrentLanguage\") || navigator.language.split(\"-\")[0];\r\n\r\nexport default class Intl {\r\n    constructor(private translations: ITranslations) { }\r\n\r\n    static make(translations: ITranslations) {\r\n        const instance = new Intl(translations);\r\n        return instance.translate.bind(instance);\r\n    }\r\n\r\n    static toIntl(text: IIntlOrString | undefined, lang: string | null = null): IIntlText {        \r\n        if (!text) return { [lang || Intl.lang]: \"\" };\r\n        if (typeof text !== 'string') return text;\r\n        return { [lang || Intl.lang]: text };\r\n    }\r\n\r\n    static toText(intl: IIntlOrString | undefined, lang?: string | undefined): string {\r\n        if (!intl) return \"\";\r\n        if (typeof intl === 'string') return intl;\r\n        if (typeof lang === 'undefined') lang = Intl.lang;\r\n        const text = intl[lang];\r\n        if (typeof text === 'string') return text;\r\n        const defaultText = intl[Object.keys(intl)[0]];\r\n        if (typeof defaultText === 'string') return defaultText;\r\n        return \"\";\r\n    }\r\n\r\n    static addTextToIntl(lang: string, text: string, intl: IIntlOrString): IIntlText {\r\n        intl = Intl.toIntl(intl, lang);\r\n        intl[lang] = text;\r\n        const result: IIntlText = {};\r\n        for (const key of Object.keys(intl)) {\r\n            const val = intl[key];\r\n            if (val.trim().length === 0) continue;\r\n            result[key] = val;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static get lang() { return gCurrentLanguage; }\r\n\r\n    static set lang(_value: string) {\r\n        if (typeof _value !== 'string') return;\r\n        const value = _value.split(\"-\")[0];\r\n        gCurrentLanguage = value;\r\n        localStorage.setItem(\"CurrentLanguage\", value);\r\n    }\r\n\r\n    translate(item: string, ...params: string[]) {\r\n        try {\r\n            if (this.translations[gCurrentLanguage]) {\r\n                const translation = this.translations[gCurrentLanguage][item];\r\n                if (translation) return addParams(translation, params);\r\n            }\r\n\r\n            // If we don't find a translation in the current language,\r\n            // we look in the other languages.\r\n            const languages = Object.keys(this.translations);\r\n            for (const lang of languages) {\r\n                const vocabulary = this.translations[lang];\r\n                const translation = vocabulary[item];\r\n                if (typeof translation !== 'string') continue;\r\n                return addParams(translation, params);\r\n            }\r\n\r\n            console.error(`Missing translation for item \"${item}\"!`, params);\r\n            return \"\";\r\n        }\r\n        catch (ex) {\r\n            throw Error(`Error while looking for a translation of \"${item}\":\\n${ex}`);\r\n        }\r\n    }\r\n}\r\n\r\n// Used for the states automate in order to parse a translation\r\n// with placeholders.\r\nenum Mode { Text, Escape, Placeholder }\r\n\r\n/**\r\n * In a translation, you can find placeholders for potential params.\r\n * They are marked with a dollar and a digit from 1 to 9.\r\n * For instance: \"Welcome mister $1!\".\r\n *\r\n * Order doesn't matter and you can have several occurences of the same\r\n * placeholder.\r\n * For instance: \"Hello $2! Welcome into $1. $1 is the best...\".\r\n *\r\n * @param   {string} translation - A string which can own placeholders.\r\n * @param   {string[]} params - Array of replacements for placeholders.\r\n * @returns The transformed string.\r\n */\r\nfunction addParams(translation: string, params: string[]): string {\r\n    let output = '';\r\n    let mark = 0;\r\n    let mode: Mode = Mode.Text;\r\n    let paramIndex = -1;\r\n    let paramValue = '';\r\n\r\n    for (let index = 0; index < translation.length; index++) {\r\n        const c = translation.charAt(index);\r\n        switch (mode) {\r\n            case Mode.Text:\r\n                if (c === '\\\\') {\r\n                    mode = Mode.Escape;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 1;\r\n                }\r\n                else if (c === '$') {\r\n                    mode = Mode.Placeholder;\r\n                    output += translation.substr(mark, index - mark);\r\n                    mark = index + 2;\r\n                }\r\n                break;\r\n            case Mode.Escape:\r\n                mode = Mode.Text;\r\n                break;\r\n            case Mode.Placeholder:\r\n                mode = Mode.Text;\r\n                paramIndex = parseInt(c, 10);\r\n                if (isNaN(paramIndex))\r\n                    throw Error(`Parsing error at position ${index} for translation \"${translation}\"!\r\nEscape \"$\" if you don't want to use a placeholder.`);\r\n                paramValue = params[paramIndex - 1] || \"\";\r\n                output += paramValue;\r\n                break;\r\n            default:\r\n                mode = Mode.Text;\r\n        }\r\n    }\r\n\r\n    return output + translation.substr(mark);\r\n}\r\n","import * as React from \"react\"\r\nimport Icon from \"./icon\"\r\nimport \"./button.css\"\r\nimport Touchable from \"../behavior/touchable\"\r\nimport castArray from \"../converter/array\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\n\r\ninterface IButtonProps {\r\n    label?: string;\r\n    icon?: string;\r\n    wide?: boolean;\r\n    wait?: boolean;\r\n    flat?: boolean;\r\n    small?: boolean;\r\n    warning?: boolean;\r\n    enabled?: boolean;\r\n    classes?: string[] | string;\r\n    tag?: any;\r\n    onClick?: (tag: any) => void;\r\n}\r\n\r\nexport default class Button extends React.Component<IButtonProps, {}> {\r\n    readonly touchable: Touchable;\r\n    readonly ref: React.RefObject<HTMLButtonElement>;\r\n\r\n    constructor(props: IButtonProps) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.touchable = new Touchable({ onTap: this.handleClick });\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element = this.ref.current;\r\n        if (!element) return;\r\n        this.touchable.element = element;\r\n    }\r\n\r\n    handleClick() {\r\n        const slot = this.props.onClick;\r\n        if (typeof slot !== 'function') return;\r\n        slot(this.props.tag);\r\n    }\r\n\r\n    render() {\r\n        const p = this.props,\r\n            label = castString(p.label, \"\"),\r\n            icon = castString(p.icon, \"\"),\r\n            wide = castBoolean(p.wide, false),\r\n            wait = castBoolean(p.wait, false),\r\n            flat = castBoolean(p.flat, false),\r\n            small = castBoolean(p.small, false),\r\n            enabled = !wait && castBoolean(p.enabled, true),\r\n            warning = castBoolean(p.warning, false),\r\n            classes = [\"tfw-view-button\"].concat(castArray(p.classes));\r\n        if (wide) classes.push(\"wide\");\r\n        if (flat) {\r\n            classes.push(\"flat\");\r\n            classes.push(warning ? \"thm-fgS\" : \"thm-fgP\");\r\n        }\r\n        else {\r\n            if (enabled) classes.push(\"thm-ele-button\");\r\n            classes.push(warning ? \"thm-bgS\" : \"thm-bgP\");\r\n        }\r\n        if (small) classes.push(\"small\");\r\n        if (label.length === 0) classes.push(\"floating\");\r\n\r\n        this.touchable.enabled = enabled;\r\n        return (\r\n            <button ref={this.ref}\r\n                className={classes.join(\" \")}\r\n                disabled={!enabled}>\r\n                {icon.length > 0\r\n                    ? <Icon content={icon}\r\n                        animate={wait}\r\n                        size={`${small ? 1.375 : 1.875}rem`} />\r\n                    : null}\r\n                {label.length > 0\r\n                    ? <div className=\"text\" > {label} </div>\r\n                    : null}\r\n            </button>);\r\n    }\r\n}\r\n","import * as React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport Icon from \"../view/icon\"\r\nimport Flex from \"../layout/flex\"\r\nimport EscapeHandler from \"../escape-handler\"\r\nimport castString from \"../converter/string\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport \"./dialog.css\"\r\n\r\nimport Button from \"../view/button\"\r\n\r\nimport Intl from \"../intl\";\r\nconst _ = Intl.make(require(\"./dialog.yaml\"));\r\n\r\nexport default {\r\n    /**\r\n    * @param {string|React.ReactElement<any>} message\r\n    * @param {()=>void|null} onClose\r\n    */\r\n    alert,\r\n    /**\r\n    * @param {string} caption - Title and button caption.\r\n    * @param {any} content - Content to display.\r\n    * @return Promise<boolean> Confirmed or not?\r\n    */\r\n    confirm,\r\n    show,\r\n    wait\r\n};\r\n\r\ninterface IOptions {\r\n    onClose?: () => void;\r\n    closeOnEscape?: boolean;\r\n    icon?: string;\r\n    title?: string;\r\n    content?: string | React.ReactElement<any>;\r\n    footer?: React.ReactElement<any>[] | React.ReactElement<any> | null;\r\n    maxWidth?: number;\r\n}\r\n\r\nclass Dialog {\r\n    _screen: HTMLElement;\r\n    _options: IOptions;\r\n    footer: React.ReactElement<any>[] | React.ReactElement<any> | null = null;\r\n\r\n    constructor(options: IOptions = {}) {\r\n        this._options = Object.assign({\r\n            closeOnEscape: true,\r\n            footer: <Button\r\n                icon=\"close\"\r\n                label = { _('close') }\r\n                flat={ true}\r\n                onClick={() => this.hide()}/>\r\n        }, options);\r\n        this._options.closeOnEscape = castBoolean(this._options.closeOnEscape, true);\r\n        this.footer = this._options.footer || null;\r\n        const screen = document.createElement(\"div\");\r\n        screen.className = \"tfw-factory-dialog\";\r\n        document.body.appendChild(screen);\r\n        this._screen = screen;\r\n        this.hide = this.hide.bind(this);\r\n        if (this._options.closeOnEscape) {\r\n            EscapeHandler.add(() => this._hide());\r\n        }\r\n    }\r\n\r\n    set onClose(slot: () => void) {\r\n        this._options.onClose = slot;\r\n    }\r\n\r\n    show() {\r\n        const opt = this._options;\r\n        const title = castString(opt.title, \"\").trim();\r\n        const icon = castString(opt.icon, \"\").trim();\r\n        let footer: React.ReactElement<any> | null =\r\n            this.footer ? (<footer className= \"thm-bg2 thm-ele-button\">{\r\n                this.footer\r\n            }</footer>) : null;\r\n            let header = null;\r\n        if (title.length > 0) {\r\n            header = (\r\n                <header className= \"thm-bgPD\">\r\n                    { icon.length > 0 ? <Icon content={ icon } /> : null}\r\n                    <div>{title}</div>\r\n                </header>\r\n            )\r\n        }\r\n\r\n        ReactDOM.render((\r\n            <div\r\n                className=\"thm-ele-dialog thm-bg1\"\r\n                style={{\r\n                    maxWidth: typeof opt.maxWidth === 'number' ? `${opt.maxWidth}px` : \"auto\"\r\n                }}>\r\n                {header}\r\n                <div>{opt.content}</div>\r\n                {footer}\r\n            </div>\r\n        ), this._screen);\r\n        setTimeout(() => this._screen.classList.add(\"show\"), 10);\r\n    }\r\n\r\n    hide() {\r\n        if (!this._options.closeOnEscape) {\r\n            this._hide();\r\n        } else {\r\n            EscapeHandler.fire();\r\n        }\r\n    }\r\n\r\n    _hide() {\r\n        const screen = this._screen;\r\n        screen.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n            document.body.removeChild(screen);\r\n        }, 200);\r\n        const onClose = this._options.onClose;\r\n        if (typeof onClose === 'function') {\r\n            requestAnimationFrame(onClose);\r\n        }\r\n    }\r\n}\r\n\r\nfunction alert(content: string | React.ReactElement<any>,\r\n               onClose: (() => void) | undefined = undefined): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n        const dialog = new Dialog({ onClose: resolve, content, maxWidth: 420 });\r\n        const close = () => {\r\n            try {\r\n                resolve();\r\n            }\r\n            catch( ex ) {\r\n                console.error(\"Error in the resolution of tfw/factory/dialog/alert!\", ex)\r\n                reject( ex );\r\n            }\r\n            finally {\r\n                dialog.hide();\r\n            }\r\n        }\r\n        dialog.footer = (<Button\r\n            icon=\"close\"\r\n            label={_('close')}\r\n            flat={true}\r\n            onClick={close} />);\r\n        dialog.show();\r\n    });\r\n}\r\n\r\n/**\r\n * ```\r\n * const isConfirmed = await Dialog.confirm(\"Delete file\", <p>Are you sure?</p>);\r\n * ```\r\n * @param caption - Title and button caption.\r\n * @param content - Content to display.\r\n */\r\nfunction confirm( caption: string,\r\n                  content: string | React.ReactElement<any>): Promise<boolean> {\r\n    return new Promise( resolve => {\r\n        const dialog = new Dialog({ title: caption, content });\r\n        const close = (confirmed: boolean) => {\r\n            dialog.hide();\r\n            resolve( confirmed );\r\n        };\r\n        dialog.onClose = () => close(false);\r\n        const btnCancel = (<Button\r\n            key=\"cancel\"\r\n            flat={true}\r\n            label={_(\"cancel\")}\r\n            onClick={() => close(false)}/>);\r\n        const btnOK = (<Button\r\n            key=\"ok\"\r\n            warning={true}\r\n            label={caption}\r\n            onClick={() => close(true)}/>);\r\n        dialog.footer = [ btnCancel, btnOK ];\r\n        dialog.show();\r\n    });\r\n}\r\n\r\nfunction show(options: IOptions): Dialog {\r\n    const dialog = new Dialog(options);\r\n    dialog.show();\r\n    return dialog;\r\n}\r\n\r\nasync function wait(label: string, task: Promise<any>, blocking: boolean = true): Promise<any> {\r\n    if (!blocking) {\r\n        return await task;\r\n    }\r\n    const content = (\r\n        <Flex dir=\"row\" justifyContent=\"flex-start\" alignItems=\"center\" >\r\n            <Icon content=\"wait\" animate={true}/>\r\n            <div>{label}</div>\r\n        </Flex>\r\n    );\r\n    const dialog = new Dialog({ content, footer: null, closeOnEscape: false });\r\n    dialog.show();\r\n    const close = dialog.hide.bind( dialog );\r\n    return new Promise( (resolve, reject) => {\r\n        task.then(\r\n            (result: any) => {\r\n                close();\r\n                resolve( result );\r\n            },\r\n            (error: any) => {\r\n                console.error( error );\r\n                close();\r\n                reject( error );\r\n            }\r\n        );\r\n    });\r\n}\r\n","import React from \"react\"\nimport Input from \"../../../tfw/view/input\"\nimport Button from \"../../../tfw/view/button\"\nimport Storage from \"../../../tfw/storage\"\n\n\ninterface IHostNameInputProps {\n    onChange: (hostName: string) => void,\n    onEnterPressed: () => void\n}\n\ninterface IHostNameInputState {\n    hostName: string\n}\n\n\nexport default class HostNameInput extends React.Component<IHostNameInputProps, IHostNameInputState> {\n    constructor( props: IHostNameInputProps ) {\n        super( props );\n        this.state = { hostName: Storage.local.get(\"brayns-host-name\", \"http://r1i7n13.bbp.epfl.ch:5000\") };\n    }\n\n    handleChange = (hostName: string) => {\n        this.setState({ hostName });\n\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            onChange(hostName);\n            Storage.local.set(\"brayns-host-name\", hostName);\n        }\n    }\n\n    handleEnterPressed = () => {\n        const { onEnterPressed } = this.props;\n        if (typeof onEnterPressed === 'function') {\n            onEnterPressed();\n        }\n    }\n\n    componentDidMount() {\n        this.handleChange(this.state.hostName);\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-inputHostName\">\n            <Input\n                wide={true}\n                focus={true}\n                label=\"Brayns host name\"\n                value={this.state.hostName}\n                onEnterPressed={this.handleEnterPressed}\n                onChange={this.handleChange}/>\n            {/*\n            <Button\n                wide={true} flat={true}\n                label=\"How can I find that Brayns host name?\"\n                icon=\"help\"/>*/}\n        </div>)\n    }\n}\n","//import { Client as BraynsClient } from \"brayns\"\nimport React from 'react';\nimport UrlArgs from \"../../tfw/url-args\"\nimport Dialog from \"../../tfw/factory/dialog\"\nimport Button from \"../../tfw/view/button\"\nimport InputHostName from \"../view/input-host-name\"\nimport BraynsService from \"../service/brayns\"\n\n// Timeout connection to Brayns service.\nconst CONNECTION_TIMEOUT = 5000;\n\n\nexport default { getHostName, connect }\n\n\n/**\n * Retrieve Brayns' host name from querystring of from user input.\n */\nasync function getHostName(ignoreQueryString: boolean): Promise<string> {\n    return new Promise(async resolve => {\n        if (!ignoreQueryString) {\n            const urlArgs = UrlArgs.parse();\n            const hostFromQueryString = urlArgs.host;\n            if (typeof hostFromQueryString === 'string') {\n                resolve(hostFromQueryString);\n                return;\n            }\n        }\n\n        let hostName = \"\";\n        let validated = false;\n        const onOk = () => {\n            validated = true;\n            dialog.hide();\n            resolve(hostName);\n        }\n        const input = <InputHostName\n            onEnterPressed={onOk}\n            onChange={(value: string) => hostName = value}/>;\n        const dialog = Dialog.show({\n            closeOnEscape: true,\n            content: input,\n            footer: <Button label=\"Connect to Brayns Service\"\n                            onClick={onOk}\n                            icon=\"plug\"/>,\n            icon: \"plug\",\n            title: \"Connect to Brayns Service\",\n            onClose: async () => {\n                if (validated) return;\n                await Dialog.alert((<p>Web-Brayns absolutly needs to be connected to the Brayns server...</p>));\n                location.reload();\n                resolve(\"\");\n            }\n        });\n    });\n}\n\n\n/**\n * Try to connect to a Brayns service and fails if it take too long.\n */\nasync function connect(client: BraynsService, hostName: string): Promise<BraynsService> {\n    return new Promise(async (resolve, reject) => {\n        const timeout = window.setTimeout(\n            () => reject(\"Connection timeout!\"),\n            CONNECTION_TIMEOUT\n        )\n        try {\n            const isReady = await client.connect(hostName)\n            if (isReady) {\n                window.clearTimeout(timeout)\n                resolve(client)\n            }\n        }\n        catch( ex ) {\n            reject( ex )\n        }\n    })\n}\n","\nimport Scene from './scene'\n\nexport default {\n   addClipPlane /* Add a clip plane; returns the clip plane descriptor */,\n   addLightAmbient /* Add an ambient light */,\n   addLightDirectional /* Add a directional light */,\n   addLightQuad /* Add a quad light */,\n   addLightSphere /* Add a sphere light */,\n   addLightSpot /* Add a spotlight, returns id */,\n   addModel /* Add model from remote path; returns model descriptor on success */,\n   chunk /* Indicate sending of a binary chunk after this message */,\n   clearLights /* Remove all lights in the scene */,\n   getAnimationParameters /* Get the current state of animation-parameters */,\n   getApplicationParameters /* Get the current state of application-parameters */,\n   getCamera /* Get the current state of camera */,\n   getCameraParams /* Get the params of the current camera */,\n   getClipPlanes /* Get all clip planes */,\n   getEnvironmentMap /* Get the environment map from the scene */,\n   getInstances /* Get instances */,\n   getLights /* get all lights */,\n   getLoaders /* Get all loaders */,\n   getModelProperties /* Get the properties of the given model */,\n   getModelTransferFunction /* Get the transfer function of the given model */,\n   getRenderer /* Get the current state of renderer */,\n   getRendererParams /* Get the params of the current renderer */,\n   getScene /* Get the current state of scene */,\n   getStatistics /* Get the current state of statistics */,\n   getVolumeParameters /* Get the current state of volume-parameters */,\n   imageJpeg /* Get the current state of image-jpeg */,\n   inspect /* Inspect the scene at x-y position */,\n   loadersSchema /* Get the schema for all loaders */,\n   modelPropertiesSchema /* Get the property schema of the model */,\n   quit /* Quit the application */,\n   removeClipPlanes /* Remove clip planes from the scene given their gids */,\n   removeLights /* Remove light given their IDs */,\n   removeModel /* Remove the model(s) with the given ID(s) from the scene */,\n   requestModelUpload /* Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success */,\n   resetCamera /* Resets the camera to its initial values */,\n   schema /* Get the schema of the given endpoint */,\n   setAnimationParameters /* Set the new state of animation-parameters */,\n   setApplicationParameters /* Set the new state of application-parameters */,\n   setCamera /* Set the new state of camera */,\n   setCameraParams /* Set the params on the current camera */,\n   setEnvironmentMap /* Set a environment map in the scene */,\n   setModelProperties /* Set the properties of the given model */,\n   setModelTransferFunction /* Set the transfer function of the given model */,\n   setRenderer /* Set the new state of renderer */,\n   setRendererParams /* Set the params on the current renderer */,\n   setScene /* Set the new state of scene */,\n   setVolumeParameters /* Set the new state of volume-parameters */,\n   snapshot /* Make a snapshot of the current view */,\n   updateClipPlane /* Update a clip plane with the given coefficients */,\n   updateInstance /* Update the instance with the given values */,\n   updateModel /* Update the model with the given values */}\n\n//========================================================================\n// \"add-clip-plane\" - Add a clip plane; returns the clip plane descriptor\n//------------------------------------------------------------------------\nexport type API_addClipPlane_Param0 = [\n   number,\n   number,\n   number,\n   number\n]\nexport type API_addClipPlane_Return = (\n   null\n   | {\n         id: (number /* Integer */);\n         plane: [\n            number,\n            number,\n            number,\n            number\n         ];\n      })\n/**\n * Add a clip plane; returns the clip plane descriptor\n */\nasync function addClipPlane(plane: API_addClipPlane_Param0): Promise<API_addClipPlane_Return> {\n   const out = await Scene.request(\"add-clip-plane\", plane)\n   return out as API_addClipPlane_Return\n}\n//============================================\n// \"add-light-ambient\" - Add an ambient light\n//--------------------------------------------\nexport type API_addLightAmbient_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightAmbient_Return = (number /* Integer */)\n/**\n * Add an ambient light\n */\nasync function addLightAmbient(light: API_addLightAmbient_Param0): Promise<API_addLightAmbient_Return> {\n   const out = await Scene.request(\"add-light-ambient\", light)\n   return out as API_addLightAmbient_Return\n}\n//===================================================\n// \"add-light-directional\" - Add a directional light\n//---------------------------------------------------\nexport type API_addLightDirectional_Param0 = {\n   angularDiameter: number;\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n}\nexport type API_addLightDirectional_Return = (number /* Integer */)\n/**\n * Add a directional light\n */\nasync function addLightDirectional(light: API_addLightDirectional_Param0): Promise<API_addLightDirectional_Return> {\n   const out = await Scene.request(\"add-light-directional\", light)\n   return out as API_addLightDirectional_Return\n}\n//=====================================\n// \"add-light-quad\" - Add a quad light\n//-------------------------------------\nexport type API_addLightQuad_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   edge1: [\n      number,\n      number,\n      number\n   ];\n   edge2: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_addLightQuad_Return = (number /* Integer */)\n/**\n * Add a quad light\n */\nasync function addLightQuad(light: API_addLightQuad_Param0): Promise<API_addLightQuad_Return> {\n   const out = await Scene.request(\"add-light-quad\", light)\n   return out as API_addLightQuad_Return\n}\n//=========================================\n// \"add-light-sphere\" - Add a sphere light\n//-----------------------------------------\nexport type API_addLightSphere_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSphere_Return = (number /* Integer */)\n/**\n * Add a sphere light\n */\nasync function addLightSphere(light: API_addLightSphere_Param0): Promise<API_addLightSphere_Return> {\n   const out = await Scene.request(\"add-light-sphere\", light)\n   return out as API_addLightSphere_Return\n}\n//================================================\n// \"add-light-spot\" - Add a spotlight, returns id\n//------------------------------------------------\nexport type API_addLightSpot_Param0 = {\n   color: [\n      number,\n      number,\n      number\n   ];\n   direction: [\n      number,\n      number,\n      number\n   ];\n   intensity: number;\n   is_visible: boolean;\n   openingAngle: number;\n   penumbraAngle: number;\n   position: [\n      number,\n      number,\n      number\n   ];\n   radius: number;\n}\nexport type API_addLightSpot_Return = (number /* Integer */)\n/**\n * Add a spotlight, returns id\n */\nasync function addLightSpot(light: API_addLightSpot_Param0): Promise<API_addLightSpot_Return> {\n   const out = await Scene.request(\"add-light-spot\", light)\n   return out as API_addLightSpot_Return\n}\n//===============================================================================\n// \"add-model\" - Add model from remote path; returns model descriptor on success\n//-------------------------------------------------------------------------------\nexport type API_addModel_Param0 = {\n   bounding_box?: boolean;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_addModel_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Add model from remote path; returns model descriptor on success\n */\nasync function addModel(model_param: API_addModel_Param0): Promise<API_addModel_Return> {\n   const out = await Scene.request(\"add-model\", model_param)\n   return out as API_addModel_Return\n}\n//=================================================================\n// \"chunk\" - Indicate sending of a binary chunk after this message\n//-----------------------------------------------------------------\nexport type API_chunk_Param0 = {\n   id?: string;\n}\nexport type API_chunk_Return = undefined\n/**\n * Indicate sending of a binary chunk after this message\n */\nasync function chunk(chunk: API_chunk_Param0): Promise<API_chunk_Return> {\n   const out = await Scene.request(\"chunk\", chunk)\n   return out as API_chunk_Return\n}\n//=================================================\n// \"clear-lights\" - Remove all lights in the scene\n//-------------------------------------------------\nexport type API_clearLights_Return = undefined\n/**\n * Remove all lights in the scene\n */\nasync function clearLights(): Promise<API_clearLights_Return> {\n   const out = await Scene.request(\"clear-lights\", )\n   return out as API_clearLights_Return\n}\n//============================================================================\n// \"get-animation-parameters\" - Get the current state of animation-parameters\n//----------------------------------------------------------------------------\nexport type API_getAnimationParameters_Return = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\n/**\n * Get the current state of animation-parameters\n */\nasync function getAnimationParameters(): Promise<API_getAnimationParameters_Return> {\n   const out = await Scene.request(\"get-animation-parameters\", )\n   return out as API_getAnimationParameters_Return\n}\n//================================================================================\n// \"get-application-parameters\" - Get the current state of application-parameters\n//--------------------------------------------------------------------------------\nexport type API_getApplicationParameters_Return = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of application-parameters\n */\nasync function getApplicationParameters(): Promise<API_getApplicationParameters_Return> {\n   const out = await Scene.request(\"get-application-parameters\", )\n   return out as API_getApplicationParameters_Return\n}\n//================================================\n// \"get-camera\" - Get the current state of camera\n//------------------------------------------------\nexport type API_getCamera_Return = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\n/**\n * Get the current state of camera\n */\nasync function getCamera(): Promise<API_getCamera_Return> {\n   const out = await Scene.request(\"get-camera\", )\n   return out as API_getCamera_Return\n}\n//============================================================\n// \"get-camera-params\" - Get the params of the current camera\n//------------------------------------------------------------\nexport type API_getCameraParams_Return = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\n/**\n * Get the params of the current camera\n */\nasync function getCameraParams(): Promise<API_getCameraParams_Return> {\n   const out = await Scene.request(\"get-camera-params\", )\n   return out as API_getCameraParams_Return\n}\n//=========================================\n// \"get-clip-planes\" - Get all clip planes\n//-----------------------------------------\nexport type API_getClipPlanes_Return = (\n      null\n      | {\n            id: (number /* Integer */);\n            plane: [\n               number,\n               number,\n               number,\n               number\n            ];\n         })[]\n/**\n * Get all clip planes\n */\nasync function getClipPlanes(): Promise<API_getClipPlanes_Return> {\n   const out = await Scene.request(\"get-clip-planes\", )\n   return out as API_getClipPlanes_Return\n}\n//================================================================\n// \"get-environment-map\" - Get the environment map from the scene\n//----------------------------------------------------------------\nexport type API_getEnvironmentMap_Return = {\n   filename: string;\n}\n/**\n * Get the environment map from the scene\n */\nasync function getEnvironmentMap(): Promise<API_getEnvironmentMap_Return> {\n   const out = await Scene.request(\"get-environment-map\", )\n   return out as API_getEnvironmentMap_Return\n}\n//=================================\n// \"get-instances\" - Get instances\n//---------------------------------\nexport type API_getInstances_Param0 = {\n   id: (number /* Integer */);\n   result_range?: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_getInstances_Return = {\n      bounding_box?: boolean;\n      instance_id: (number /* Integer */);\n      model_id: (number /* Integer */);\n      transformation?: {\n         rotation: [\n            number,\n            number,\n            number,\n            number\n         ];\n         rotation_center?: [\n            number,\n            number,\n            number\n         ];\n         scale: [\n            number,\n            number,\n            number\n         ];\n         translation: [\n            number,\n            number,\n            number\n         ];\n      };\n      visible?: boolean;\n   }[]\n/**\n * Get instances\n */\nasync function getInstances(id, range: API_getInstances_Param0): Promise<API_getInstances_Return> {\n   const out = await Scene.request(\"get-instances\", id, range)\n   return out as API_getInstances_Return\n}\n//===============================\n// \"get-lights\" - get all lights\n//-------------------------------\nexport type API_getLights_Return = {\n      id: (number /* Integer */);\n      properties: {};\n      type: string;\n   }[]\n/**\n * get all lights\n */\nasync function getLights(): Promise<API_getLights_Return> {\n   const out = await Scene.request(\"get-lights\", )\n   return out as API_getLights_Return\n}\n//=================================\n// \"get-loaders\" - Get all loaders\n//---------------------------------\nexport type API_getLoaders_Return = {\n      extensions: string[];\n      name: string;\n      properties: {};\n   }[]\n/**\n * Get all loaders\n */\nasync function getLoaders(): Promise<API_getLoaders_Return> {\n   const out = await Scene.request(\"get-loaders\", )\n   return out as API_getLoaders_Return\n}\n//================================================================\n// \"get-model-properties\" - Get the properties of the given model\n//----------------------------------------------------------------\nexport type API_getModelProperties_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelProperties_Return = {}\n/**\n * Get the properties of the given model\n */\nasync function getModelProperties(id: API_getModelProperties_Param0): Promise<API_getModelProperties_Return> {\n   const out = await Scene.request(\"get-model-properties\", id)\n   return out as API_getModelProperties_Return\n}\n//==============================================================================\n// \"get-model-transfer-function\" - Get the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_getModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_getModelTransferFunction_Return = {\n   colormap?: {\n      colors: [\n            number,\n            number,\n            number\n         ][];\n      name?: string;\n   };\n   opacity_curve?: [\n         number,\n         number\n      ][];\n   range?: [\n      number,\n      number\n   ];\n}\n/**\n * Get the transfer function of the given model\n */\nasync function getModelTransferFunction(id: API_getModelTransferFunction_Param0): Promise<API_getModelTransferFunction_Return> {\n   const out = await Scene.request(\"get-model-transfer-function\", id)\n   return out as API_getModelTransferFunction_Return\n}\n//====================================================\n// \"get-renderer\" - Get the current state of renderer\n//----------------------------------------------------\nexport type API_getRenderer_Return = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\n/**\n * Get the current state of renderer\n */\nasync function getRenderer(): Promise<API_getRenderer_Return> {\n   const out = await Scene.request(\"get-renderer\", )\n   return out as API_getRenderer_Return\n}\n//================================================================\n// \"get-renderer-params\" - Get the params of the current renderer\n//----------------------------------------------------------------\nexport type API_getRendererParams_Return = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\n/**\n * Get the params of the current renderer\n */\nasync function getRendererParams(): Promise<API_getRendererParams_Return> {\n   const out = await Scene.request(\"get-renderer-params\", )\n   return out as API_getRendererParams_Return\n}\n//==============================================\n// \"get-scene\" - Get the current state of scene\n//----------------------------------------------\nexport type API_getScene_Return = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\n/**\n * Get the current state of scene\n */\nasync function getScene(): Promise<API_getScene_Return> {\n   const out = await Scene.request(\"get-scene\", )\n   return out as API_getScene_Return\n}\n//========================================================\n// \"get-statistics\" - Get the current state of statistics\n//--------------------------------------------------------\nexport type API_getStatistics_Return = {\n   fps: number;\n   scene_size_in_bytes: (number /* Integer */);\n}\n/**\n * Get the current state of statistics\n */\nasync function getStatistics(): Promise<API_getStatistics_Return> {\n   const out = await Scene.request(\"get-statistics\", )\n   return out as API_getStatistics_Return\n}\n//======================================================================\n// \"get-volume-parameters\" - Get the current state of volume-parameters\n//----------------------------------------------------------------------\nexport type API_getVolumeParameters_Return = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Get the current state of volume-parameters\n */\nasync function getVolumeParameters(): Promise<API_getVolumeParameters_Return> {\n   const out = await Scene.request(\"get-volume-parameters\", )\n   return out as API_getVolumeParameters_Return\n}\n//====================================================\n// \"image-jpeg\" - Get the current state of image-jpeg\n//----------------------------------------------------\nexport type API_imageJpeg_Return = {\n   data: string;\n}\n/**\n * Get the current state of image-jpeg\n */\nasync function imageJpeg(): Promise<API_imageJpeg_Return> {\n   const out = await Scene.request(\"image-jpeg\", )\n   return out as API_imageJpeg_Return\n}\n//===============================================\n// \"inspect\" - Inspect the scene at x-y position\n//-----------------------------------------------\nexport type API_inspect_Param0 = [\n   number,\n   number\n]\nexport type API_inspect_Return = {\n   hit: boolean;\n   position: [\n      number,\n      number,\n      number\n   ];\n}\n/**\n * Inspect the scene at x-y position\n */\nasync function inspect(position: API_inspect_Param0): Promise<API_inspect_Return> {\n   const out = await Scene.request(\"inspect\", position)\n   return out as API_inspect_Return\n}\n//===================================================\n// \"loaders-schema\" - Get the schema for all loaders\n//---------------------------------------------------\nexport type API_loadersSchema_Return = {}[]\n/**\n * Get the schema for all loaders\n */\nasync function loadersSchema(): Promise<API_loadersSchema_Return> {\n   const out = await Scene.request(\"loaders-schema\", )\n   return out as API_loadersSchema_Return\n}\n//==================================================================\n// \"model-properties-schema\" - Get the property schema of the model\n//------------------------------------------------------------------\nexport type API_modelPropertiesSchema_Param0 = {\n   id: (number /* Integer */);\n}\nexport type API_modelPropertiesSchema_Return = string\n/**\n * Get the property schema of the model\n */\nasync function modelPropertiesSchema(id: API_modelPropertiesSchema_Param0): Promise<API_modelPropertiesSchema_Return> {\n   const out = await Scene.request(\"model-properties-schema\", id)\n   return out as API_modelPropertiesSchema_Return\n}\n//===============================\n// \"quit\" - Quit the application\n//-------------------------------\nexport type API_quit_Return = undefined\n/**\n * Quit the application\n */\nasync function quit(): Promise<API_quit_Return> {\n   const out = await Scene.request(\"quit\", )\n   return out as API_quit_Return\n}\n//===========================================================================\n// \"remove-clip-planes\" - Remove clip planes from the scene given their gids\n//---------------------------------------------------------------------------\nexport type API_removeClipPlanes_Param0 = (number /* Integer */)[]\nexport type API_removeClipPlanes_Return = boolean\n/**\n * Remove clip planes from the scene given their gids\n */\nasync function removeClipPlanes(ids: API_removeClipPlanes_Param0): Promise<API_removeClipPlanes_Return> {\n   const out = await Scene.request(\"remove-clip-planes\", ids)\n   return out as API_removeClipPlanes_Return\n}\n//================================================\n// \"remove-lights\" - Remove light given their IDs\n//------------------------------------------------\nexport type API_removeLights_Param0 = (number /* Integer */)[]\nexport type API_removeLights_Return = boolean\n/**\n * Remove light given their IDs\n */\nasync function removeLights(ids: API_removeLights_Param0): Promise<API_removeLights_Return> {\n   const out = await Scene.request(\"remove-lights\", ids)\n   return out as API_removeLights_Return\n}\n//==========================================================================\n// \"remove-model\" - Remove the model(s) with the given ID(s) from the scene\n//--------------------------------------------------------------------------\nexport type API_removeModel_Param0 = (number /* Integer */)[]\nexport type API_removeModel_Return = boolean\n/**\n * Remove the model(s) with the given ID(s) from the scene\n */\nasync function removeModel(ids: API_removeModel_Param0): Promise<API_removeModel_Return> {\n   const out = await Scene.request(\"remove-model\", ids)\n   return out as API_removeModel_Return\n}\n//==============================================================================================================================================\n// \"request-model-upload\" - Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n//----------------------------------------------------------------------------------------------------------------------------------------------\nexport type API_requestModelUpload_Param0 = {\n   bounding_box?: boolean;\n   chunks_id: string;\n   loader_name?: string;\n   loader_properties?: {};\n   name?: string;\n   path: string;\n   size: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   type: string;\n   visible?: boolean;\n}\nexport type API_requestModelUpload_Return = (\n   null\n   | {\n         bounding_box?: boolean;\n         bounds?: {\n            max: [\n               number,\n               number,\n               number\n            ];\n            min: [\n               number,\n               number,\n               number\n            ];\n         };\n         id: (number /* Integer */);\n         metadata?: {};\n         name?: string;\n         path?: string;\n         transformation?: {\n            rotation: [\n               number,\n               number,\n               number,\n               number\n            ];\n            rotation_center?: [\n               number,\n               number,\n               number\n            ];\n            scale: [\n               number,\n               number,\n               number\n            ];\n            translation: [\n               number,\n               number,\n               number\n            ];\n         };\n         visible?: boolean;\n      })\n/**\n * Request upload of blob to trigger adding of model after blob has been received; returns model descriptor on success\n */\nasync function requestModelUpload(param: API_requestModelUpload_Param0): Promise<API_requestModelUpload_Return> {\n   const out = await Scene.request(\"request-model-upload\", param)\n   return out as API_requestModelUpload_Return\n}\n//==========================================================\n// \"reset-camera\" - Resets the camera to its initial values\n//----------------------------------------------------------\nexport type API_resetCamera_Return = undefined\n/**\n * Resets the camera to its initial values\n */\nasync function resetCamera(): Promise<API_resetCamera_Return> {\n   const out = await Scene.request(\"reset-camera\", )\n   return out as API_resetCamera_Return\n}\n//=================================================\n// \"schema\" - Get the schema of the given endpoint\n//-------------------------------------------------\nexport type API_schema_Param0 = {\n   endpoint: string;\n}\nexport type API_schema_Return = string\n/**\n * Get the schema of the given endpoint\n */\nasync function schema(endpoint: API_schema_Param0): Promise<API_schema_Return> {\n   const out = await Scene.request(\"schema\", endpoint)\n   return out as API_schema_Return\n}\n//========================================================================\n// \"set-animation-parameters\" - Set the new state of animation-parameters\n//------------------------------------------------------------------------\nexport type API_setAnimationParameters_Param0 = {\n   current?: (number /* Integer */);\n   delta?: (number /* Integer */);\n   dt?: number;\n   frame_count?: (number /* Integer */);\n   playing?: boolean;\n   unit?: string;\n}\nexport type API_setAnimationParameters_Return = boolean\n/**\n * Set the new state of animation-parameters\n */\nasync function setAnimationParameters(param: API_setAnimationParameters_Param0): Promise<API_setAnimationParameters_Return> {\n   const out = await Scene.request(\"set-animation-parameters\", param)\n   return out as API_setAnimationParameters_Return\n}\n//============================================================================\n// \"set-application-parameters\" - Set the new state of application-parameters\n//----------------------------------------------------------------------------\nexport type API_setApplicationParameters_Param0 = {\n   engine?: string;\n   image_stream_fps?: (number /* Integer */);\n   jpeg_compression?: (number /* Integer */);\n   viewport?: [\n      number,\n      number\n   ];\n}\nexport type API_setApplicationParameters_Return = boolean\n/**\n * Set the new state of application-parameters\n */\nasync function setApplicationParameters(param: API_setApplicationParameters_Param0): Promise<API_setApplicationParameters_Return> {\n   const out = await Scene.request(\"set-application-parameters\", param)\n   return out as API_setApplicationParameters_Return\n}\n//============================================\n// \"set-camera\" - Set the new state of camera\n//--------------------------------------------\nexport type API_setCamera_Param0 = {\n   current?: string;\n   orientation?: [\n      number,\n      number,\n      number,\n      number\n   ];\n   position?: [\n      number,\n      number,\n      number\n   ];\n   target?: [\n      number,\n      number,\n      number\n   ];\n   types?: string[];\n}\nexport type API_setCamera_Return = boolean\n/**\n * Set the new state of camera\n */\nasync function setCamera(param: API_setCamera_Param0): Promise<API_setCamera_Return> {\n   const out = await Scene.request(\"set-camera\", param)\n   return out as API_setCamera_Return\n}\n//============================================================\n// \"set-camera-params\" - Set the params on the current camera\n//------------------------------------------------------------\nexport type API_setCameraParams_Param0 = (\n   {\n         height?: number;\n         aspect?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {}\n   | {\n         fovy?: number;\n         aspect?: number;\n         aperture_radius?: number;\n         focus_distance?: number;\n         enable_clipping_planes?: boolean;\n      }\n   | {\n         fovy?: number;\n         aspect?: number;\n      })\nexport type API_setCameraParams_Return = boolean\n/**\n * Set the params on the current camera\n */\nasync function setCameraParams(input0: API_setCameraParams_Param0): Promise<API_setCameraParams_Return> {\n   const out = await Scene.request(\"set-camera-params\", input0)\n   return out as API_setCameraParams_Return\n}\n//============================================================\n// \"set-environment-map\" - Set a environment map in the scene\n//------------------------------------------------------------\nexport type API_setEnvironmentMap_Param0 = {\n   filename: string;\n}\nexport type API_setEnvironmentMap_Return = boolean\n/**\n * Set a environment map in the scene\n */\nasync function setEnvironmentMap(filename: API_setEnvironmentMap_Param0): Promise<API_setEnvironmentMap_Return> {\n   const out = await Scene.request(\"set-environment-map\", filename)\n   return out as API_setEnvironmentMap_Return\n}\n//================================================================\n// \"set-model-properties\" - Set the properties of the given model\n//----------------------------------------------------------------\nexport type API_setModelProperties_Param0 = {\n   id: (number /* Integer */);\n   properties: {};\n}\nexport type API_setModelProperties_Return = boolean\n/**\n * Set the properties of the given model\n */\nasync function setModelProperties(param: API_setModelProperties_Param0): Promise<API_setModelProperties_Return> {\n   const out = await Scene.request(\"set-model-properties\", param)\n   return out as API_setModelProperties_Return\n}\n//==============================================================================\n// \"set-model-transfer-function\" - Set the transfer function of the given model\n//------------------------------------------------------------------------------\nexport type API_setModelTransferFunction_Param0 = {\n   id: (number /* Integer */);\n   transfer_function: {\n      colormap?: {\n         colors: [\n               number,\n               number,\n               number\n            ][];\n         name?: string;\n      };\n      opacity_curve?: [\n            number,\n            number\n         ][];\n      range?: [\n         number,\n         number\n      ];\n   };\n}\nexport type API_setModelTransferFunction_Return = boolean\n/**\n * Set the transfer function of the given model\n */\nasync function setModelTransferFunction(param: API_setModelTransferFunction_Param0): Promise<API_setModelTransferFunction_Return> {\n   const out = await Scene.request(\"set-model-transfer-function\", param)\n   return out as API_setModelTransferFunction_Return\n}\n//================================================\n// \"set-renderer\" - Set the new state of renderer\n//------------------------------------------------\nexport type API_setRenderer_Param0 = {\n   accumulation?: boolean;\n   background_color?: [\n      number,\n      number,\n      number\n   ];\n   current?: string;\n   head_light?: boolean;\n   max_accum_frames?: (number /* Integer */);\n   samples_per_pixel?: (number /* Integer */);\n   subsampling?: (number /* Integer */);\n   types?: string[];\n   variance_threshold?: number;\n}\nexport type API_setRenderer_Return = boolean\n/**\n * Set the new state of renderer\n */\nasync function setRenderer(param: API_setRenderer_Param0): Promise<API_setRenderer_Return> {\n   const out = await Scene.request(\"set-renderer\", param)\n   return out as API_setRenderer_Return\n}\n//================================================================\n// \"set-renderer-params\" - Set the params on the current renderer\n//----------------------------------------------------------------\nexport type API_setRendererParams_Param0 = (\n   {\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_samples?: (number /* Integer */);\n         shadows?: number;\n         soft_shadows?: number;\n         sampling_threshold?: number;\n         volume_specular_exponent?: number;\n         volume_alpha_correction?: number;\n         max_distance_to_secondary_model?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {}\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n         gi_distance?: number;\n         gi_weight?: number;\n         gi_softness?: number;\n         gi_samples?: (number /* Integer */);\n         tf_color?: boolean;\n      }\n   | {\n         roulette_depth?: (number /* Integer */);\n         max_contribution?: number;\n      }\n   | {\n         alpha_correction?: number;\n         detection_distance?: number;\n         detection_far_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_near_color?: [\n            number,\n            number,\n            number\n         ];\n         detection_on_different_material?: boolean;\n         electron_shading_enabled?: boolean;\n         surface_shading_enabled?: boolean;\n      }\n   | {}\n   | {}\n   | {\n         ao_distance?: number;\n         ao_samples?: (number /* Integer */);\n         ao_transparency_enabled?: boolean;\n         ao_weight?: number;\n         one_sided_lighting?: boolean;\n         shadows_enabled?: boolean;\n      }\n   | {\n         alpha_correction?: number;\n         simulation_threshold?: number;\n         pixel_alpha?: number;\n         fog_start?: number;\n         fog_thickness?: number;\n      })\nexport type API_setRendererParams_Return = boolean\n/**\n * Set the params on the current renderer\n */\nasync function setRendererParams(input0: API_setRendererParams_Param0): Promise<API_setRendererParams_Return> {\n   const out = await Scene.request(\"set-renderer-params\", input0)\n   return out as API_setRendererParams_Return\n}\n//==========================================\n// \"set-scene\" - Set the new state of scene\n//------------------------------------------\nexport type API_setScene_Param0 = {\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   models?: (\n         null\n         | {\n               bounding_box?: boolean;\n               bounds?: {\n                  max: [\n                     number,\n                     number,\n                     number\n                  ];\n                  min: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               id: (number /* Integer */);\n               metadata?: {};\n               name?: string;\n               path?: string;\n               transformation?: {\n                  rotation: [\n                     number,\n                     number,\n                     number,\n                     number\n                  ];\n                  rotation_center?: [\n                     number,\n                     number,\n                     number\n                  ];\n                  scale: [\n                     number,\n                     number,\n                     number\n                  ];\n                  translation: [\n                     number,\n                     number,\n                     number\n                  ];\n               };\n               visible?: boolean;\n            })[];\n}\nexport type API_setScene_Return = boolean\n/**\n * Set the new state of scene\n */\nasync function setScene(param: API_setScene_Param0): Promise<API_setScene_Return> {\n   const out = await Scene.request(\"set-scene\", param)\n   return out as API_setScene_Return\n}\n//==================================================================\n// \"set-volume-parameters\" - Set the new state of volume-parameters\n//------------------------------------------------------------------\nexport type API_setVolumeParameters_Param0 = {\n   adaptive_max_sampling_rate?: number;\n   adaptive_sampling?: boolean;\n   clip_box?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   gradient_shading?: boolean;\n   pre_integration?: boolean;\n   sampling_rate?: number;\n   single_shade?: boolean;\n   specular?: [\n      number,\n      number,\n      number\n   ];\n   volume_dimensions?: [\n      (number /* Integer */),\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n   volume_element_spacing?: [\n      number,\n      number,\n      number\n   ];\n   volume_offset?: [\n      number,\n      number,\n      number\n   ];\n}\nexport type API_setVolumeParameters_Return = boolean\n/**\n * Set the new state of volume-parameters\n */\nasync function setVolumeParameters(param: API_setVolumeParameters_Param0): Promise<API_setVolumeParameters_Return> {\n   const out = await Scene.request(\"set-volume-parameters\", param)\n   return out as API_setVolumeParameters_Return\n}\n//==================================================\n// \"snapshot\" - Make a snapshot of the current view\n//--------------------------------------------------\nexport type API_snapshot_Param0 = {\n   animation_parameters?: (\n      null\n      | {\n            current?: (number /* Integer */);\n            delta?: (number /* Integer */);\n            dt?: number;\n            frame_count?: (number /* Integer */);\n            playing?: boolean;\n            unit?: string;\n         });\n   camera?: (\n      null\n      | {\n            current?: string;\n            orientation?: [\n               number,\n               number,\n               number,\n               number\n            ];\n            position?: [\n               number,\n               number,\n               number\n            ];\n            target?: [\n               number,\n               number,\n               number\n            ];\n            types?: string[];\n         });\n   format: string;\n   name?: string;\n   quality?: (number /* Integer */);\n   renderer?: (\n      null\n      | {\n            accumulation?: boolean;\n            background_color?: [\n               number,\n               number,\n               number\n            ];\n            current?: string;\n            head_light?: boolean;\n            max_accum_frames?: (number /* Integer */);\n            samples_per_pixel?: (number /* Integer */);\n            subsampling?: (number /* Integer */);\n            types?: string[];\n            variance_threshold?: number;\n         });\n   samples_per_pixel?: (number /* Integer */);\n   size: [\n      (number /* Integer */),\n      (number /* Integer */)\n   ];\n}\nexport type API_snapshot_Return = {\n   data: string;\n}\n/**\n * Make a snapshot of the current view\n */\nasync function snapshot(settings: API_snapshot_Param0): Promise<API_snapshot_Return> {\n   const out = await Scene.request(\"snapshot\", settings)\n   return out as API_snapshot_Return\n}\n//=======================================================================\n// \"update-clip-plane\" - Update a clip plane with the given coefficients\n//-----------------------------------------------------------------------\nexport type API_updateClipPlane_Param0 = {\n   id: (number /* Integer */);\n   plane: [\n      number,\n      number,\n      number,\n      number\n   ];\n}\nexport type API_updateClipPlane_Return = boolean\n/**\n * Update a clip plane with the given coefficients\n */\nasync function updateClipPlane(clip_plane: API_updateClipPlane_Param0): Promise<API_updateClipPlane_Return> {\n   const out = await Scene.request(\"update-clip-plane\", clip_plane)\n   return out as API_updateClipPlane_Return\n}\n//===============================================================\n// \"update-instance\" - Update the instance with the given values\n//---------------------------------------------------------------\nexport type API_updateInstance_Param0 = {\n   bounding_box?: boolean;\n   instance_id: (number /* Integer */);\n   model_id: (number /* Integer */);\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateInstance_Return = boolean\n/**\n * Update the instance with the given values\n */\nasync function updateInstance(model_instance: API_updateInstance_Param0): Promise<API_updateInstance_Return> {\n   const out = await Scene.request(\"update-instance\", model_instance)\n   return out as API_updateInstance_Return\n}\n//=========================================================\n// \"update-model\" - Update the model with the given values\n//---------------------------------------------------------\nexport type API_updateModel_Param0 = {\n   bounding_box?: boolean;\n   bounds?: {\n      max: [\n         number,\n         number,\n         number\n      ];\n      min: [\n         number,\n         number,\n         number\n      ];\n   };\n   id: (number /* Integer */);\n   metadata?: {};\n   name?: string;\n   path?: string;\n   transformation?: {\n      rotation: [\n         number,\n         number,\n         number,\n         number\n      ];\n      rotation_center?: [\n         number,\n         number,\n         number\n      ];\n      scale: [\n         number,\n         number,\n         number\n      ];\n      translation: [\n         number,\n         number,\n         number\n      ];\n   };\n   visible?: boolean;\n}\nexport type API_updateModel_Return = boolean\n/**\n * Update the model with the given values\n */\nasync function updateModel(model: API_updateModel_Param0): Promise<API_updateModel_Return> {\n   const out = await Scene.request(\"update-model\", model)\n   return out as API_updateModel_Return\n}\n","import React from \"react\"\nimport Icon from '../../../tfw/view/icon'\nimport Button from '../../../tfw/view/button'\n\nimport \"./wait.css\"\n\ninterface IWaitProps {\n    label: string,\n    // Number between 0 and 1.\n    progress: number,\n    onCancel: () => void\n}\n\nexport default class Wait extends React.Component<IWaitProps, {}> {\n    constructor( props: IWaitProps ) {\n        super( props );\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-Wait thm-bg1\">\n            <div>\n                <Icon content=\"wait\" animate={true}/>\n                <div>{this.props.label}</div>\n                <div>{`${Math.ceil(100 * this.props.progress)}%`}</div>\n            </div>\n            <div className=\"thm-bg2\">\n                <Button flat={true} small={true} icon=\"cancel\" label=\"Cancel\" onClick={this.props.onCancel}/>\n            </div>\n        </div>)\n    }\n}\n","import { IVector, IQuaternion, IBounds } from '../types'\n\nexport default {\n    addVectors,\n    deg2rad,\n    makeQuaternionAsAxisRotation,\n    makeQuaternionFromLatLngTilt,\n    makeVector,\n    multiplyQuaternions,\n    normalize,\n    plane6to4,\n    rotateBounds,\n    rotateWithQuaternion,\n    scaleBounds,\n    scalarProduct,\n    scale,\n    translateBounds\n}\n\n\nfunction addVectors(a: IVector, b: IVector): IVector {\n    return [\n        b[0] + a[0],\n        b[1] + a[1],\n        b[2] + a[2]\n    ];\n}\n\n\nfunction makeQuaternionAsAxisRotation(angle: number, axis: IVector): IQuaternion {\n    const halfAngle = angle * 0.5;\n    const c = Math.cos(halfAngle);\n    const s = Math.sin(halfAngle);\n    const [x, y, z] = axis;\n    return [ x * s, y * s, z * s, c ] as IQuaternion;\n}\n\n\nfunction makeQuaternionFromLatLngTilt(lat: number, lng: number, tilt: number): IQuaternion {\n    const X: IVector = [1,0,0]\n    const Y: IVector = [0,1,0]\n    const Z: IVector = [0,0,1]\n    const qA = makeQuaternionAsAxisRotation(deg2rad(-lat), X)\n    const qB = makeQuaternionAsAxisRotation(deg2rad(lng), Y)\n    const qC = multiplyQuaternions(qB, qA)\n    const direction = rotateWithQuaternion(Z, qC)\n    const qD = makeQuaternionAsAxisRotation(deg2rad(-tilt), direction)\n    return multiplyQuaternions(qD, qC)\n}\n\n\n/**\n * Make a vector from two points.\n */\nfunction makeVector(startPoint: IVector, endPoint: IVector): IVector {\n    return [\n        endPoint[0] - startPoint[0],\n        endPoint[1] - startPoint[1],\n        endPoint[2] - startPoint[2]\n    ]\n}\n\nfunction multiplyQuaternions(q: IQuaternion, r: IQuaternion): IQuaternion {\n    const [q1, q2, q3, q0] = q;\n    const [r1, r2, r3, r0] = r;\n    return [\n        r0*q1 + r1*q0 - r2*q3 + r3*q2,\n        r0*q2 + r1*q3 + r2*q0 - r3*q1,\n        r0*q3 - r1*q2 + r2*q1 + r3*q0,\n        r0*q0 - r1*q1 - r2*q2 - r3*q3\n    ];\n}\n\n\nfunction normalize(vector: IVector): IVector {\n    const [x,y,z] = vector;\n    const len2 = x*x + y*y + z*z;\n    if (len2 < 0.000000001) return [0,0,0];\n    const f = 1 / Math.sqrt(len2);\n    return [x*f, y*f, z*f];\n}\n\n\n/**\n * A plan can be defined by a point and a normal.\n * The normal points to the hemi-space that must be visible.\n *\n * This representation takes 6 floats.\n * You can also use a normal and a signed distance from the center,\n * which takes only 4 floats. This is how Brayns represent clipping planes.\n */\nfunction plane6to4(point: IVector, normal: IVector): [number, number, number, number] {\n    const invNorm = scale(normal, -1)\n    const d = scalarProduct(point, normalize(invNorm))\n    const plane = [-invNorm[0], -invNorm[1], -invNorm[2], d]\n    return plane as [number, number, number, number]\n}\n\n\nfunction scalarProduct(v1: IVector, v2: IVector): number {\n    const [x1, y1, z1] = v1;\n    const [x2, y2, z2] = v2;\n    return x1*x2 + y1*y2 + z1*z2;\n}\n\n\nfunction rotateWithQuaternion(point: IVector, quaternion: IQuaternion): IVector {\n    const Q = quaternion;\n    const [x, y, z] = point;\n    const [qx, qy, qz, qw] = Q;\n    const invQ: IQuaternion = [-qx, -qy, -qz, qw];\n    const P: IQuaternion = [x, y, z, 0];\n\n    const R = multiplyQuaternions(\n        Q, multiplyQuaternions(P, invQ)\n    )\n    return [R[0], R[1], R[2]];\n}\n\n\n/**\n * Multiply all coords by a scalar factor.\n */\nfunction scale(vector: IVector, factor: number): IVector {\n    return vector.map((n: number) => n * factor) as IVector;\n}\n\n\nfunction rotateBounds(bounds: IBounds, rotation: IQuaternion): IBounds {\n    const { min, max } = bounds;\n    const A = rotateWithQuaternion(min, rotation)\n    const B = rotateWithQuaternion(max, rotation)\n    return {\n        min: [\n            Math.min(A[0], B[0]),\n            Math.min(A[1], B[1]),\n            Math.min(A[2], B[2])\n        ],\n        max: [\n            Math.max(A[0], B[0]),\n            Math.max(A[1], B[1]),\n            Math.max(A[2], B[2])\n        ]\n    }\n}\n\n\nfunction scaleBounds(bounds: IBounds, scale: IVector): IBounds {\n    return {\n        min: [\n            bounds.min[0] * scale[0],\n            bounds.min[1] * scale[1],\n            bounds.min[2] * scale[2]\n        ],\n        max: [\n            bounds.max[0] * scale[0],\n            bounds.max[1] * scale[1],\n            bounds.max[2] * scale[2]\n        ]\n    }\n}\n\nfunction translateBounds(bounds: IBounds, translation: IVector): IBounds {\n    return {\n        min: addVectors(bounds.min, translation),\n        max: addVectors(bounds.max, translation)\n    }\n}\n\nfunction deg2rad(deg: number): number {\n    return deg * Math.PI / 180\n}\n","//import { Client as BraynsClient } from \"brayns\"\n\nimport Scene from './scene'\nimport Geom from '../geometry'\nimport State from '../state'\n\nimport { IModel, IVector, IQuaternion } from '../types'\n\n\nexport default class Model {\n    private center: IVector = [0,0,0]\n\n    constructor(private model: IModel) {}\n\n    /**\n     * Warning!\n     * For the client, the rotation center is defined in Object space.\n     * But for Brayns Server, it is defined in Global space.\n     */\n    get rotationCenter(): IVector {\n        return this.center\n    }\n\n    /**\n     * Warning!\n     * For the client, the rotation center is defined in Object space.\n     * But for Brayns Server, it is defined in Global space.\n     */\n    set rotationCenter(center: IVector) {\n        this.center = center\n    }\n\n    /**\n     * Set the location of the center.\n     * Do not forget to call this.applyTransfo() when you want\n     * the transformations to be applied.\n     */\n    locate(nextPosition: IVector) {\n        const currentBounds = this.model.brayns.bounds\n        const currentPosition = this.model.brayns.transformation.translation\n        const relativeMoving = Geom.makeVector(currentPosition, nextPosition)\n        const nextBounds = Geom.translateBounds(currentBounds, relativeMoving)\n        this.model.brayns.transformation.rotation_center = nextPosition\n        this.model.brayns.transformation.translation = nextPosition\n        this.model.brayns.bounds = nextBounds\n    }\n\n    /**\n     * Scale the object.\n     * Do not forget to call this.applyTransfo() when you want\n     * the transformations to be applied.\n     */\n    scale(nextScale: IVector) {\n        const currentBounds = this.model.brayns.bounds\n        const currentPosition = this.model.brayns.transformation.translation\n        const currentScale = this.model.brayns.transformation.scale\n        const relativeMoving = Geom.makeVector(currentPosition, [0,0,0])\n        const boundsAtCenter = Geom.translateBounds(currentBounds, relativeMoving)\n        const scaledBounds = Geom.scaleBounds(\n            boundsAtCenter,\n            [\n                nextScale[0] / currentScale[0],\n                nextScale[1] / currentScale[1],\n                nextScale[2] / currentScale[2]\n            ]\n        )\n        const nextBounds = Geom.translateBounds(\n            scaledBounds,\n            Geom.scale(relativeMoving, -1)\n        )\n        this.model.brayns.transformation.scale = nextScale\n        this.model.brayns.bounds = nextBounds\n    }\n\n    /**\n     * Rotate the object.\n     * Do not forget to call this.applyTransfo() when you want\n     * the transformations to be applied.\n     */\n    rotate(nextRotation: IQuaternion) {\n        const currentBounds = this.model.brayns.bounds\n        const currentPosition = this.model.brayns.transformation.translation\n        const relativeMoving = Geom.makeVector(currentPosition, [0,0,0])\n        const boundsAtCenter = Geom.translateBounds(currentBounds, relativeMoving)\n        const rotatedBounds = Geom.rotateBounds(\n            boundsAtCenter, nextRotation\n        )\n        const nextBounds = Geom.translateBounds(\n            rotatedBounds,\n            Geom.scale(relativeMoving, -1)\n        )\n        this.model.brayns.transformation.rotation = nextRotation\n        this.model.brayns.bounds = nextBounds\n    }\n\n    async getMaterialIds(): Promise<number[]> {\n        // TODO: use the circuitExplorer again.\n        return []\n\n        const id = this.model.brayns.id;\n        const currentMaterialIds = this.model.materialIds;\n        if (Array.isArray(currentMaterialIds) && currentMaterialIds.length > 0) {\n            return currentMaterialIds;\n        }\n        const result: { ids: number[] } = await Scene.request(\"getMaterialIds\", { id }) as { ids: number[] }\n        // This strage filter is because Javascript only support 53 bits integers,\n        // but Brayns can send up to 64 bits integers.\n        this.model.materialIds = result.ids.filter((id: number) => id < 18000000000000000000)\n        return this.model.materialIds\n    }\n\n    /**\n     * Remove this model from the Scene.\n     */\n    async remove() {\n        const id = this.model.brayns.id;\n        return await Scene.Api.removeModel([id]);\n    }\n\n    get id(): number {\n        return this.model.brayns.id;\n    }\n    /**\n     * When a model is selected, we show its boundingBox.\n     */\n    get seleted(): boolean {\n        return this.model.selected;\n    }\n\n    async setSelected(selected: boolean) {\n        this.model.selected = selected;\n        this.model.brayns.bounding_box = selected;\n        await Scene.Api.updateModel({\n            id: this.model.brayns.id,\n            bounding_box: selected\n        });\n        this.updateState();\n    }\n\n    get visible(): boolean {\n        return this.model.brayns.visible === true;\n    }\n\n    async setVisible(visible: boolean) {\n        await Scene.Api.updateModel({\n            id: this.model.brayns.id,\n            visible\n        });\n        this.model.brayns.visible = true;\n        this.updateState();\n    }\n\n    /**\n     * Make to camera to look at this model.\n     */\n    async focus(): Promise<boolean> {\n        await Scene.camera.lookAtBounds(this.model.brayns.bounds);\n        return true;\n    }\n\n    /**\n     * Transformations remains local until you call this function.\n     */\n    async applyTransfo() {\n        const transformation = this.model.brayns.transformation\n        transformation.rotation_center = Geom.addVectors(\n            transformation.translation, this.center\n        )\n        await Scene.Api.updateModel({\n            id: this.model.brayns.id,\n            transformation\n        });\n    }\n\n    private updateState() {\n        State.dispatch(State.Models.update(this.model));\n    }\n}\n","import { IBounds, IModel, IBraynsModel } from './types'\nimport State from '../state'\n\nexport default {\n    createModelFromBraynsData,\n    getAllModels,\n    getModelsBounds,\n    getVisibleModels\n}\n\n\n/**\n * web-brayns models have more data than Brayns one.\n * This function will enrich data from Brayns to met our needs.\n */\nfunction createModelFromBraynsData(model: IBraynsModel): IModel {\n    return {\n        brayns: { ...model },\n        parent: 0,\n        deleted: false,\n        selected: false,\n        technical: false\n    }\n}\n\n\n/**\n * Compute the bounds of deveral models.\n */\nfunction getModelsBounds(models: IModel[]): IBounds {\n    const point: IBounds = { min: [-10,-10,-10], max: [10,10,10] }\n    const modelsWithValidBounds = models.filter(hasValidBounds)\n    if (modelsWithValidBounds.length === 0) return point;\n    const bounds = { ...modelsWithValidBounds[0].brayns.bounds };\n\n    for( let i=1; i<modelsWithValidBounds.length; i++ ) {\n        const model = modelsWithValidBounds[i];\n        const b = model.brayns.bounds || point;\n        bounds.min[0] = Math.min(bounds.min[0], b.min[0]);\n        bounds.min[1] = Math.min(bounds.min[1], b.min[1]);\n        bounds.min[2] = Math.min(bounds.min[2], b.min[2]);\n        bounds.max[0] = Math.max(bounds.max[0], b.max[0]);\n        bounds.max[1] = Math.max(bounds.max[1], b.max[1]);\n        bounds.max[2] = Math.max(bounds.max[2], b.max[2]);\n    }\n    return bounds;\n}\n\n\nfunction getVisibleModels(): IModel[] {\n    return getAllModels().filter((model: IModel) => (\n        model.deleted === false &&\n        model.technical === false &&\n        model.brayns.visible === true\n    ));\n}\n\n\nfunction getAllModels(): IModel[] {\n    return State.store.getState().models;\n}\n\n\n\nfunction hasValidBounds(model: IModel): boolean {\n    if (!model.brayns) return false;\n    if (!model.brayns.bounds) return false;\n    const bounds = model.brayns.bounds;\n    if (bounds.min[0] > bounds.max[0]) return false;\n    if (bounds.min[1] > bounds.max[1]) return false;\n    if (bounds.min[2] > bounds.max[2]) return false;\n    return true;\n}\n","/**\n * Everything related to Camera.\n */\n\nimport { BoundingBox } from \"brayns\"\nimport { ICamera, IVector, IQuaternion, IAxis } from '../types'\nimport Scene from './scene'\nimport Geom from '../geometry'\nimport Models from '../models'\nimport State from '../state'\n\n\nexport default class Camera {\n    private states: ICamera[] = [];\n\n    constructor(private params: ICamera) { }\n\n    private async applyCamera(): Promise<boolean> {\n        const { orientation, position, target, current, height } = this.params;\n        await Scene.Api.setCamera({\n            orientation, position, target,\n            current: current || \"perspective\"\n        });\n        if (current === 'orthographic') {\n            await Scene.Api.setCameraParams({ height });\n        }\n        return true;\n    }\n\n    saveState() {\n        this.states.push(this.params);\n    }\n\n    async restoreState() {\n        const { states } = this;\n        if (states.length === 0) {\n            console.error(Error(\"[web-brayns/scene/camera/restoreState()] Trying to restore a state which has not been saved!\"))\n            return;\n        }\n        this.params = states.pop() as ICamera;\n        await this.applyCamera()\n    }\n\n    get position(): IVector {\n        return this.params.position.slice() as IVector;\n    }\n\n    setPosition(position: IVector) {\n        this.params.position = position;\n        this.applyCamera();\n    }\n\n    get orientation(): IQuaternion {\n        return this.params.orientation.slice() as IQuaternion;\n    }\n\n    setOrientation(orientation: IQuaternion) {\n        this.params.orientation = orientation;\n        this.applyCamera();\n    }\n\n    setPositionAndOrientation(position: IVector, orientation: IQuaternion) {\n        this.params.position = position;\n        this.params.orientation = orientation;\n        this.applyCamera();\n    }\n\n    async setOrthographic(width: number, height: number,\n                    position: IVector,\n                    orientation: IQuaternion) {\n        const { params } = this\n        params.current = \"orthographic\"\n        params.position = position\n        params.orientation = orientation\n        params.height = height  //Math.max(width, height)\n        await this.applyCamera();\n    }\n\n    get axis(): IAxis {\n        const [b, c, d, a] = this.orientation;\n        const aa = a * a;\n        const bb = b * b;\n        const cc = c * c;\n        const dd = d * d;\n        const ab2 = 2 * a * b;\n        const ac2 = 2 * a * c;\n        const ad2 = 2 * a * d;\n        const bc2 = 2 * b * c;\n        const bd2 = 2 * b * d;\n        const cd2 = 2 * c * d;\n        return {\n            x: [\n                aa + bb + cc + dd,\n                ad2 + bc2,\n                bd2 - ac2\n            ],\n            y: [\n                bc2 - ad2,\n                aa - bb + cc - dd,\n                ab2 + cd2\n            ],\n            z: [\n                ac2 + bd2,\n                cd2 - ab2,\n                aa - bb - cc + dd\n            ]\n        }\n    }\n\n    get target(): IVector {\n        return this.params.target.slice() as IVector;\n    }\n\n    /**\n     * Target is used for space navigation, but also for focus point.\n     * If you don't need to change the focus point, there is no need\n     * in setting this target in Brayns service. Then you can set\n     * `applyToBrayns` to `false`.\n     */\n    async setTarget(target: IVector, applyToBrayns: boolean = true ) {\n        const direction = this.direction;\n        const distance = Geom.scalarProduct(\n            Geom.makeVector(this.params.position, target),\n            direction\n        );\n        this.params.position = Geom.addVectors(\n            target,\n            Geom.scale(direction, -distance)\n        );\n        this.params.target = target;\n        if (applyToBrayns) {\n            return await this.applyCamera();\n        }\n    }\n\n    async getCloser(target: IVector, distanceFactor: number) {\n        const direction = this.direction;\n        const distance = Geom.scalarProduct(\n            Geom.makeVector(this.params.position, target),\n            direction\n        ) * distanceFactor;\n        this.params.position = Geom.addVectors(\n            target,\n            Geom.scale(direction, -distance)\n        );\n        this.params.target = target;\n        return await this.applyCamera();\n    }\n\n    getTargetDistance(): number {\n        const vectorZ = this.axis.z;\n        // Warning! the camera's Z axis is turning its back to the target.\n        return Geom.scalarProduct(\n            vectorZ,\n            Geom.makeVector(\n                this.params.target,\n                this.params.position\n            )\n        )\n    }\n\n    /**\n     * Normalized vector giving the direction of sight.\n     */\n    get direction(): IVector {\n        const { orientation } = this.params\n        const z: IVector = [0,0,1];\n        const direction = Geom.rotateWithQuaternion(z, orientation)\n        return direction;\n    }\n\n    async moveForward(dist: number) {\n        const dir = this.direction;\n        const { position, target } = this.params;\n        this.params.position = [\n            position[0] + dir[0] * dist,\n            position[1] + dir[1] * dist,\n            position[2] + dir[2] * dist\n        ];\n        this.params.target = [\n            target[0] + dir[0] * dist,\n            target[1] + dir[1] * dist,\n            target[2] + dir[2] * dist\n        ];\n        await this.applyCamera();\n    }\n\n    async moveBackward(dist: number) {\n        const dir = this.direction;\n        const { position, target } = this.params;\n        this.params.position = [\n            position[0] - dir[0] * dist,\n            position[1] - dir[1] * dist,\n            position[2] - dir[2] * dist\n        ];\n        this.params.target = [\n            target[0] - dir[0] * dist,\n            target[1] - dir[1] * dist,\n            target[2] - dir[2] * dist\n        ];\n        await this.applyCamera();\n    }\n\n    async lookAtWholeScene() {\n        const models = Models.getVisibleModels();\n        const bounds = Models.getModelsBounds(models);\n        await this.lookAtBounds(bounds);\n    }\n\n    async lookAtBounds(bounds: BoundingBox) {\n        const minX = bounds.min[0];\n        const minY = bounds.min[1];\n        const minZ = bounds.min[2];\n        const maxX = bounds.max[0];\n        const maxY = bounds.max[1];\n        const maxZ = bounds.max[2];\n        const centerX = (minX + maxX) / 2;\n        const centerY = (minY + maxY) / 2;\n        const centerZ = (minZ + maxZ) / 2;\n        const width = maxX - minX;\n        const height = maxY - minY;\n        const cameraZ = maxZ + Math.max(width + height) * 0.5;\n\n        this.params.orientation = [0, 0, 0, 1];\n        this.params.position = [centerX, centerY, cameraZ];\n        this.params.target = [centerX, centerY, centerZ];\n        await this.applyCamera();\n    }\n}\n","import { /*Client as BraynsClient,*/ IMAGE_JPEG } from \"brayns\"\nimport BraynsService from '../service/brayns'\n\nexport default class Renderer {\n    private _canvas: HTMLCanvasElement | null = null;\n    private ctx: CanvasRenderingContext2D | null = null;\n    private blob: Blob | null = null;\n    private blobIndex: number = 0;\n    private lastRederedBlobIndex: number = 0;\n\n    init(brayns: BraynsService) {\n        /*\n        brayns.binaryListeners.add((blob: Blob) => {\n            console.log(\"New bin...\", blob)\n            this.blob = blob\n            this.blobIndex++\n        })\n        requestAnimationFrame(this.paint);*/\n    }\n\n    get canvas() { return this._canvas; }\n    set canvas(canvas: HTMLCanvasElement | null) {\n        this._canvas = canvas;\n        if (!canvas) return;\n        this.ctx = canvas.getContext(\"2d\");\n    }\n\n    paint = async () => {\n        try {\n            // Did we already rendered this blob?\n            if (this.lastRederedBlobIndex === this.blobIndex) return;\n            const blob = this.blob;\n            if (!blob) return;\n            const canvas = this.canvas;\n            if (!canvas) return;\n            const ctx = this.ctx;\n            if (!ctx) return;\n            const img = await blobToImg(blob);\n            const srcW = img.naturalWidth;\n            const srcH = img.naturalHeight;\n            const dstW = canvas.width;\n            const dstH = canvas.height;\n            const dstX = (dstW - srcW) / 2;\n            const dstY = (dstH - srcH) / 2;\n            ctx.drawImage(\n                img,\n                dstX, dstY,\n                srcW, srcH\n            );\n            this.lastRederedBlobIndex = this.blobIndex;\n        }\n        finally {\n            requestAnimationFrame(this.paint);\n        }\n    }\n}\n\n\nfunction blobToImg(blob: Blob) {\n    const url = URL.createObjectURL(blob);\n    const img: any = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.src = url;\n        // https://medium.com/dailyjs/image-loading-with-image-decode-b03652e7d2d2\n        if (img.decode) {\n            img.decode()\n                // TODO: Figure out why decode() throws DOMException\n                .then(() => resolve(img));\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","interface ILoader {\n    name: string,\n    extensions: string[],\n    properties: {}\n}\n\nexport default class Loader {\n    private loaders: Map<string, ILoader[]> = new Map()\n\n    init(params: ILoader[]) {\n        const loaders = this.loaders\n        console.info(\"[loader/init()] params=\", params);\n        loaders.clear()\n        params.forEach((loader: ILoader) => {\n            loader.extensions.forEach((ext: string) => {\n                if (loaders.has(ext)) {\n                    const loadersForThisExt = loaders.get(ext)\n                    if (Array.isArray(loadersForThisExt)) {\n                        loadersForThisExt.push(loader)\n                    }\n                } else {\n                    loaders.set(ext, [loader])\n                }\n            })\n        })\n        console.info(\"this.loaders=\", this.loaders);\n    }\n\n    /**\n     * Get the list of all loaders that can take car of file \"path\".\n     */\n    listLoadersForPath(path: string): ILoader[] {\n        const loaders: ILoader[] = []\n\n        for (const ext of this.loaders.keys()) {\n            if (path.endsWith(ext)) {\n                const loadersForThisExt = this.loaders.get(ext)\n                if (!Array.isArray(loadersForThisExt)) continue\n                loaders.push( ...loadersForThisExt )\n            }\n        }\n        return loaders\n    }\n}\n","export default {\n    isFloat, isInteger\n}\n\nfunction isFloat(v: string): boolean {\n    return !isNaN(parseFloat(v))\n}\n\nfunction isInteger(v: string): boolean {\n    return !isNaN(parseInt(v))\n}\n","import * as React from \"react\";\nimport Touchable from \"../behavior/touchable\"\nimport \"./checkbox.css\";\n\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\n\n\ninterface IBooleanSlot {\n    (value: boolean): void;\n}\n\ninterface ICheckboxProps {\n    value?: boolean;\n    label?: string;\n    wide?: boolean;\n    reverse?: boolean;\n    onChange?: IBooleanSlot\n}\n\nexport default class Checkbox extends React.Component<ICheckboxProps, {}> {\n    readonly touchable: Touchable;\n    readonly ref;\n\n    constructor(props: ICheckboxProps) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.touchable = new Touchable({ onTap: this.handleChange });\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        const button = this.ref.current;\n        if (button) this.touchable.element = button;\n    }\n\n    private handleChange(): void {\n        const slot = this.props.onChange;\n        if (typeof slot === 'function') {\n            const value = castBoolean(this.props.value, false);\n            slot(!value);\n        }\n    }\n\n    render() {\n        const label = castString(this.props.label, \"\");\n        const value = castBoolean(this.props.value, false);\n        const wide = castBoolean(this.props.wide, false);\n        const reverse = castBoolean(this.props.reverse, false);\n        const classes = [\"tfw-view-checkbox\"];\n        if (value) classes.push(\"ok\");\n        if (wide) classes.push(\"wide\");\n        if (reverse) classes.push(\"reverse\");\n\n        return (<button ref={this.ref} className={classes.join(\" \")} >\n            <div className=\"pin\" >\n                <div className={`thm-ele-button bar ${value ? \"thm-bgSL\" : \"thm-bg1\"}`}> </div>\n                <div className={`thm-ele-button btn ${value ? \"thm-bgS\" : \"thm-bg0\"}`\r\n                }> </div>\n            </div>\n            <label >{label}</label>\n        </button>);\n    }\n}\n","import React from \"react\"\n\nimport Validator from '../../../../tfw/validator'\nimport Input from '../../../../tfw/view/input'\nimport Combo from '../../../../tfw/view/combo'\nimport Button from '../../../../tfw/view/button'\nimport Checkbox from '../../../../tfw/view/checkbox'\n\nimport \"./circuit.css\"\n\ninterface ICircuitProps {\n    path: string,\n    onOK: (params: {}) => void,\n    onCancel: () => void\n}\n\ninterface ICircuitState {\n    density: string,\n    densityValid: boolean,\n    report: string,\n    // Available reports found in the BlueConfig file.\n    reports: string[],\n    // Comma separated list.\n    targets: string,\n    soma: boolean,\n    axon: boolean,\n    dendrite: boolean,\n    apicalDendrite: boolean\n}\n\nexport default class Circuit extends React.Component<ICircuitProps, ICircuitState> {\n    constructor( props: ICircuitProps ) {\n        super( props );\n        this.state = {\n            density: \"1\",\n            densityValid: true,\n            report: \"\",\n            reports: [\"\"],\n            targets: \"\",\n            soma: true,\n            axon: false,\n            dendrite: true,\n            apicalDendrite: true\n        }\n    }\n\n    handleOK = () => {\n        const { path, onOK } = this.props\n        const { density, report, targets } = this.state\n        const { soma, axon, dendrite, apicalDendrite } = this.state\n\n        const params = {\n            path,\n            bounding_box: false,\n            loader_name: \"Circuit viewer with meshes use-case\",\n            visible: true,\n            loader_properties: {\n                \"001_density\": parseFloat(density) / 100,\n                \"002_random_seed\": 0,\n                \"010_targets\": targets,\n                \"011_gids\": \"\",\n                \"020_report\": report,\n                \"023_synchronous_mode\": false,\n                \"040_mesh_folder\": \"\",\n                \"041_mesh_filename_pattern\": \"mesh_{gid}.obj\",\n                \"042_mesh_transformation\": false,\n                \"052_section_type_soma\": soma,\n                \"053_section_type_axon\": axon,\n                \"054_section_type_dendrite\": dendrite,\n                \"055_section_type_apical_dendrite\": apicalDendrite\n            }\n        }\n\n        onOK(params)\n    }\n\n    render() {\n        const { path, onCancel } = this.props\n        const { density, densityValid, report, reports, targets } = this.state\n        const { soma, axon, dendrite, apicalDendrite } = this.state\n\n        return (<div className=\"webBrayns-view-loader-Circuit thm-bg1\">\n            <div><span>Path: </span> <code>{path}</code></div>\n            <div>\n                <Input label=\"Cells density (%)\"\n                    value={density}\n                    focus={true}\n                    valid={densityValid}\n                    validator={Validator.isFloat}\n                    onValidation={densityValid => this.setState({ densityValid })}\n                    onChange={density => this.setState({ density })}/>\n                <Combo label=\"Report\"\n                    value={report}\n                    onChange={report => this.setState({ report })}>{\n                    reports.map((name: string) => {\n                        if (name.length === 0) {\n                            return <div key=\"\"><em>Don't load any simulation</em></div>\n                        }\n                        return <div key={name}>{name}</div>\n                    })\n                }</Combo>\n                <Input label=\"Targets (comma separated list)\"\n                    value={targets}\n                    onChange={targets => this.setState({ targets })}/>\n            </div>\n            <div>\n                <Checkbox label=\"Soma\" value={soma} onChange={soma => this.setState({ soma })}/>\n                <Checkbox label=\"Axon\" value={axon} onChange={axon => this.setState({ axon })}/>\n                <Checkbox label=\"Dendrite\" value={dendrite} onChange={dendrite => this.setState({ dendrite })}/>\n                <Checkbox label=\"Apical Dendrite\" value={apicalDendrite} onChange={apicalDendrite => this.setState({ apicalDendrite })}/>\n            </div>\n            <footer className=\"thm-bg0\">\n                <Button flat={true} label=\"Cancel\" onClick={onCancel}/>\n                <Button flat={false} label=\"Load Circuit\" onClick={this.handleOK}/>\n            </footer>\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport Scene from '../scene'\nimport Dialog from '../../tfw/factory/dialog'\nimport CircuitLoaderView from '../view/loader/circuit'\n\nexport default { getLoaderParams }\n\nconst CIRCUIT = 'Circuit viewer with meshes use-case'\n\n/**\n * Brayns provide many loaders that can manage several type of files.\n * We know which loader we can use with the file extension.\n * And for most of the loaders we need to ask extra parameters to the user.\n * This function is responsible on getting all the needed parameters.\n */\nfunction getLoaderParams(path: string): Promise<{}> {\n    return new Promise((resolve: (arg: any) => void, reject) => {\n        try {\n            const loaders = Scene.loader.listLoadersForPath(path)\n            const commonParams = { path, visible: true, bounding_box: false }\n            const circuitLoader = loaders.find(loader => (\n                loader.name === CIRCUIT\n            ))\n            if (!circuitLoader) {\n                resolve(commonParams)\n                return\n            }\n\n            const dialog = Dialog.show({\n                title: \"Loading a Circuit\",\n                closeOnEscape: false,\n                footer: null,\n                content: (<CircuitLoaderView\n                            path={path}\n                            onCancel={() => {\n                                console.info(\"onCancel\")\n                                dialog.hide()\n                                resolve(null)\n                            }}\n                            onOK={params => {\n                                console.info(\"onOK\")\n                                dialog.hide()\n                                resolve({\n                                    ...commonParams,\n                                    ...params\n                                })\n                            }}/>)\n            })\n        }\n        catch(ex) {\n            console.error(\"service/loader/getLoaderParams()\", ex)\n            reject(ex)\n        }\n    })\n}\n","type Action = (...args: any[]) => void;\n\n/**\n * The function to call as much as you want. It will perform the debouce for you.\n * Put in the same args as the `action` function.\n *\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\n * less than `delay` ms between them.\n * * delay - Number of milliseconds.\n */\nexport default function(action: Action, delay: number): Action {\n    let timer = 0;\n    let timestamp = 0;\n    let nextAction: Action = () => {};\n    let nextArgs: any[] = [];\n    const throttleAction = () => {\n        timer = 0;\n        nextAction(...nextArgs);\n    }\n\n    return function(this: { delay: number }, ...args: any[]) {\n        nextAction = action;\n        nextArgs = args;\n        const now = Date.now();\n        const elapsedTime = now - timestamp;\n        timestamp = now;\n        if (elapsedTime > delay) {\n            throttleAction();\n        }\n        else if (timer === 0) {\n            timer = window.setTimeout(throttleAction, delay - elapsedTime);\n        }\n    }\n}\n","import Scene from './scene'\nimport Models from '../models'\nimport Geom from '../geometry'\nimport Throttler from '../../tfw/throttler'\n\nimport { IVector, IQuaternion, IAxis, IScreenPoint, IPanningEvent } from '../types'\n\n\nexport default class GesturesHandler {\n    private savedTarget: IVector = [0,0,0];\n    private savedPosition: IVector = [0,0,0];\n    private savedOrientation: IQuaternion = [0,0,0,0];\n    private savedAxis: IAxis = {\n        x: [0,0,0], y: [0,0,0], z: [0,0,0]\n    };\n    private savedScreenPoint: IScreenPoint = { screenX: 0, screenY: 0 };\n    private savedTargetDistance: number = 0;\n\n    /**\n     * When panning starts, we should memorize the current\n     * Scene.camera/model rot/sca/loc params, and compute the target.\n     */\n    handlePanStart = async (evt: IPanningEvent) => {\n        await this.computeCurrentTarget(evt.screenX, evt.screenY)\n        const axis = Scene.camera.axis;\n        this.savedTarget = Scene.camera.target;\n        this.savedPosition = Scene.camera.position;\n        this.savedOrientation = Scene.camera.orientation;\n        this.savedAxis = axis;\n        this.savedScreenPoint = {\n            screenX: evt.screenX,\n            screenY: evt.screenY,\n            aspect: evt.aspect\n        };\n        this.savedTargetDistance = Scene.camera.getTargetDistance();\n    }\n\n    handlePan = Throttler((evt: IPanningEvent) => {\n        if (evt.button === 2) this.translateCamera(evt);\n        else if (evt.button === 1) this.orbitCamera(evt);\n        //else this.rotateCamera(evt);\n    }, 20)\n\n    /**\n     * screenX and screenY are between 0 and 1.\n     */\n    private async computeCurrentTarget(screenX: number, screenY: number) {\n        const hitPoint = await Scene.Api.inspect([screenX, screenY]);\n        console.info(\"screenX, screenY=\", screenX, screenY);\n        console.info(\"hitPoint=\", hitPoint);\n        if (hitPoint.hit) {\n            Scene.camera.setTarget(hitPoint.position, false);\n        } else {\n            const bounds = Models.getModelsBounds(Models.getVisibleModels());\n            const centerX = (bounds.min[0] + bounds.max[0]) / 2;\n            const centerY = (bounds.min[1] + bounds.max[1]) / 2;\n            const centerZ = (bounds.min[2] + bounds.max[2]) / 2;\n            Scene.camera.setTarget([centerX, centerY, centerZ], false)\n        }\n    }\n\n    private translateCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldTranslation = this.savedPosition.slice() as IVector;\n        const factor = Scene.camera.getTargetDistance() * 1.0;\n        const newTranslation = Geom.addVectors(\n            oldTranslation,\n            Geom.addVectors(\n                Geom.scale(axis.x, -factor * x * evt.aspect),\n                Geom.scale(axis.y, -factor * y),\n            )\n        );\n        Scene.camera.setPosition(newTranslation);\n    }\n\n    private orbitCamera(evt: IPanningEvent) {\n        const axis = this.savedAxis;\n        const x = evt.screenX - this.savedScreenPoint.screenX;\n        const y = evt.screenY - this.savedScreenPoint.screenY;\n        const oldOrientation = this.savedOrientation.slice() as IQuaternion;\n        const angleX = Math.PI * y;\n        const angleY = -2 * Math.PI * x;\n        const quaternionX = Geom.makeQuaternionAsAxisRotation(angleX, axis.x);\n        const quaternionY = Geom.makeQuaternionAsAxisRotation(angleY, axis.y);\n        const quaternionYX = Geom.multiplyQuaternions(quaternionY, quaternionX);\n        const newOrientation = Geom.multiplyQuaternions(quaternionYX, oldOrientation);\n\n        const positionVector = Geom.makeVector(\n            this.savedTarget,\n            this.savedPosition\n        );\n        const rotatedPositionVector = Geom.rotateWithQuaternion(\n            positionVector,\n            quaternionYX\n        );\n        const newPosition = Geom.addVectors(this.savedTarget, rotatedPositionVector);\n\n        Scene.camera.setPositionAndOrientation(newPosition, newOrientation);\n    }\n}\n","/**\r\n * Listeners are function with only one argument of type TArgument.\r\n * @param name [description]\r\n */\r\nexport default class Listeners<TArgument> {\r\n    private listeners: ((arg: TArgument) => void)[] = [];\r\n\r\n    constructor(private name: string = \"Listener\") {}\r\n\r\n    /**\r\n     * How many listeners are currently registred.\r\n     */\r\n    get length() {\r\n        return Listeners.length\r\n    }\r\n\r\n    add(listener: ((arg: TArgument) => void)) {\r\n        this.remove( listener);\r\n        this.listeners.push(listener);\r\n    }\r\n\r\n    remove(listener: ((arg: TArgument) => void)) {\r\n        this.listeners = this.listeners.filter( x => x !== listener);\r\n    }\r\n\r\n    fire(argument: TArgument) {\r\n        this.listeners.forEach((listener: ((arg: TArgument) => void)) => {\r\n            try {\r\n                listener(argument);\r\n            } catch(ex) {\r\n                console.error(`[${this.name}] Error in a listener!`);\r\n                console.error(\">  ex.: \", ex);\r\n                console.error(\">  arg.: \", argument);\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\n * There is only one scene in Brayns.\n */\n//import { Client as BraynsClient } from \"brayns\"\nimport React from \"react\"\n\nimport Api from \"./api\"\nimport { IBraynsModel, IModel, IModelOptions, IMaterial } from '../types'\nimport Python from '../service/python'\nimport State from '../state'\nimport Dialog from '../../tfw/factory/dialog'\nimport Wait from '../view/wait'\nimport ServiceHost from '../service/host'\nimport Model from './model'\nimport Camera from './camera'\nimport Renderer from './renderer'\nimport Loader from './loader'\nimport LoaderService from '../service/loader'\n\nimport GesturesHandler from './gestures-handler'\nimport BraynsService from '../service/brayns'\n\n// Brayns' client.\nconst Scene: {\n    brayns: BraynsService,\n    camera: (Camera | null),\n    host: string,\n    renderer: Renderer,\n    gestures: GesturesHandler,\n    loader: Loader\n} = {\n    brayns: new BraynsService(),\n    camera: null,\n    host: '',\n    renderer: new Renderer(),\n    gestures: new GesturesHandler(),\n    loader: new Loader()\n}\n\nconst defaultObjectToExport = {\n    Api,\n    clear,\n    connect,\n    loadMeshFromPath,\n    request,\n    setMaterial,\n    setViewPort,\n    get brayns() { return Scene.brayns },\n    get camera(): Camera { return Scene.camera || new Camera({}) },\n    get host() { return Scene.host },\n    get renderer(): Renderer { return Scene.renderer },\n    get gestures(): GesturesHandler { return Scene.gestures },\n    get loader() { return Scene.loader }\n }\n\n export default defaultObjectToExport;\n\n/**\n * Try to connect to a Brayns service and fails if it takes too long.\n */\nasync function connect(hostName: string): Promise<BraynsService> {\n    /*const bs = new BraynsService(hostName);\n    const isConnected = await bs.connect()*/\n    console.info(\"hostName=\", hostName);\n    Scene.host = hostName;\n    await ServiceHost.connect(Scene.brayns, hostName);\n\n    const loadersDefinition = await request(\"get-loaders\")\n    if (Array.isArray(loadersDefinition)) {\n        Scene.loader.init(loadersDefinition)\n    }\n    const videostreamAvailable = await isVideoStreamingAvailable()\n    console.info(\"videostreamAvailable=\", videostreamAvailable);\n\n    const camera = await request('get-camera');\n    const cameraParams = await request('get-camera-params');\n    Scene.camera = new Camera({ ...cameraParams, ...camera });\n    Scene.renderer.init(Scene.brayns);\n    const animation = await Api.getAnimationParameters();\n    State.dispatch(State.Animation.update(animation));\n\n    return Scene.brayns;\n}\n\nasync function isVideoStreamingAvailable(): Promise<boolean> {\n    try {\n        await request(\"set-videostream\", { enabled: false })\n        return true\n    }\n    catch(err) {\n        return false\n    }\n}\n\nasync function request(method: string, params: {} = {}) {\n    return new Promise((resolve, reject) => {\n        try {\n            if (!Scene.brayns) {\n                console.error(\"No BraynsService!\");\n                reject();\n                return;\n            }\n            const loader = Scene.brayns.exec(method, params);\n            loader.then((output: any) => {\n                resolve(output)\n            },\n            (error: any) => {\n                /*\n                console.error(\"Brayns request error!\");\n                console.error(\"   >>> method =\", method);\n                console.error(\"   >>> params =\", params);\n                console.error(\"   >>> error  =\", error);\n                */\n                reject(error)\n            });\n        }\n        catch( error ) {\n            console.error(\"Brayns request exception!\", error);\n            console.error(\"   >>> method =\", method);\n            console.error(\"   >>> params =\", params);\n            reject(error)\n        }\n    })\n}\n\n/**\n * Remove everything from the scene.\n */\nasync function clear(): Promise<boolean> {\n    const scene: any = await request('get-scene');\n    if (!scene) return false;\n    const models = scene.models;\n    if (!models) return false;\n    const ids = models.map( (model: any) => model.id );\n    await request(\"remove-model\", ids);\n    State.dispatch(State.Models.reset([]))\n\n    const rendererParams: any = await request(\"get-renderer-params\", {});\n    if (rendererParams) {\n        // A bit brighter.\n        rendererParams.pixel_alpha = 1;\n        rendererParams.shadows = 1;\n        rendererParams.soft_shadows = 0.5;\n        await request(\"set-renderer-params\", rendererParams);\n    }\n\n    await Api.setRenderer({\n        accumulation: true,\n        background_color: [0.3,0.4,0.5],\n        current: \"advanced_simulation\",\n        head_light: true,\n        max_accum_frames: 16,\n        samples_per_pixel: 1,\n        subsampling: 1\n    });\n\n    return true;\n}\n\nasync function setViewPort(width: number, height: number) {\n    // NEgative or null sizes make Brayns crash!\n    if (width < 32 || height < 32) return\n\n    return await request(\"set-application-parameters\", {\n        viewport: [width, height]\n    });\n}\n\nasync function loadMeshFromPath(path: string): Promise<Model|null> {\n    console.log(\"AAA\")\n    const params = await LoaderService.getLoaderParams(path)\n    console.info(\"params=\", params);\n    const query = Scene.brayns.execAsync(\"add-model\", params)\n    const wait = <Wait label=\"Loading...\" progress={0} onCancel={() => {\n        query.cancel()\n        dialog.hide()\n    }}/>\n    const dialog = Dialog.show({ content: wait, footer: null })\n    query.progress.add(args => {\n        //console.info(\"args=\", args);\n    })\n    const result = await query.promise\n    dialog.hide()\n    console.info(\"result=\", result);\n    if (!result || result.state !== 'ok') {\n        console.error(result)\n        return null\n    }\n    const fixedOptions = await fixBoundsIfNeeded(result.message);\n\n    const model: IModel = {\n        brayns: {\n            name: path,\n            bounds: {\n                min: [-10, -10, -10],\n                max: [+10, +10, +10]\n            },\n            transformation: {\n                rotation: [0,0,0,1],\n                scale: [1,1,1],\n                translation: [0,0,0]\n            },\n            ...result\n        },\n        materialIds: [],\n        deleted: false,\n        selected: false,\n        technical: false,\n        parent: -1,\n        ...fixedOptions\n    };\n    const modelInstance = new Model(model);\n    // We have to applyTransfo because the scale can change the location.\n    modelInstance.locate(model.brayns.transformation.translation)\n    modelInstance.applyTransfo()\n    const materialIds = await modelInstance.getMaterialIds();\n    model.materialIds = materialIds;\n    State.dispatch(State.Models.add(model));\n    return new Model(model);\n}\n\nasync function setMaterial(modelId: number, materialId: number,\n                           material: Partial<IMaterial>) {\n    return await Python.exec(\"phaneron/set-material\", {\n        ...material,\n        modelId,\n        materialId,\n        host: Scene.host\n    });\n}\n\n\n/**\n * There is a bug in addModel(). The returns doen't compute the bounds.\n * It will be fixed soon, but in the meantime, we will ask for the bounds to the scene.\n */\nasync function fixBoundsIfNeeded(braynsModel: IBraynsModel): Promise<IBraynsModel> {\n    const { min, max } = braynsModel.bounds\n    if (min[0] < max[0]) return braynsModel\n\n    const scene = await Api.getScene()\n    if (!scene) return braynsModel\n    const models = scene.models\n    if (!models) return braynsModel\n    const modelWithSearchedId = models\n        .find((m: any) => m && m.id === braynsModel.id)\n    if (!modelWithSearchedId) return braynsModel\n    braynsModel.bounds = {\n        ...braynsModel.bounds,\n        ...modelWithSearchedId.bounds\n    }\n    return braynsModel;\n}\n","/**\n * Communication to Brayns service is made through WebSocket.\n */\nimport Listeners from '../../tfw/listeners'\n\ninterface IQuery {\n    id: string,\n    resolve: (data: any) => void\n    reject: (data: { code: number, message: string }) => void\n}\n\ninterface IQueries {\n    [key: string]: IQuery\n}\n\ninterface ISubscribers {\n    [key: string]: Listeners<{}>\n}\n\ntype IAsyncExecResolve = (arg: {status: \"cancel\" | \"error\" | \"ok\", message: any}) => void\n\ninterface IAsyncQuery {\n    cancel: () => void,\n    progress: Listeners<(label: string, progress: number) => void>,\n    promise: Promise<IAsyncExecResolve>\n}\n\n\nexport default class BraynsService {\n    debug: boolean = false\n    private ws: WebSocket | undefined\n    private autogeneratedId: number = 1\n    private queries: IQueries = {}\n    readonly readyListeners = new Listeners<boolean>()\n    readonly binaryListeners = new Listeners<ArrayBuffer>()\n    readonly subscribers: ISubscribers = {}\n    private host = \"\"\n\n    async connect(hostname: string): Promise<boolean> {\n        this.host = hostname\n        const url = `ws://${hostname}/ws`\n\n        return new Promise((resolve) => {\n            const handleResolve = () => {\n                ws.removeEventListener('open', handleResolve)\n                resolve(true)\n            }\n            const handleReject = (evt: any) => {\n                console.error(`Unable to connect to ${url}!`, evt)\n                ws.removeEventListener('close', handleReject)\n                ws.removeEventListener('error', handleReject)\n                resolve(false)\n            }\n\n            // The protocol (\"rocjets\") is mandatory otherwise Brayns will ignore you.\n            const ws = new WebSocket(url, [\"rockets\"])\n            // This is very IMPORTANT! With blobs,\n            // we have weird bugs when trying to get the videostreaming messages.\n            ws.binaryType = 'arraybuffer'\n            ws.addEventListener('open', this.handleOpen)\n            ws.addEventListener('open', handleResolve)\n            ws.addEventListener('message', this.handleMessage)\n            ws.addEventListener('close', this.handleClose)\n            ws.addEventListener('close', handleReject)\n            ws.addEventListener('error', this.handleError)\n            ws.addEventListener('error', handleReject)\n            this.ws = ws\n        })\n    }\n\n    exec(method: string, params: any={}) {\n        return new Promise((resolve, reject) => {\n            try {\n                const id = btoa(`${this.autogeneratedId++}`)\n                //this.log({ id, method, params });\n                const protocol = {\n                    jsonrpc: \"2.0\",\n                    id,\n                    method,\n                    params\n                }\n                if (!this.ws) return;\n                this.queries[id] = { id, resolve, reject }\n                this.ws.send(JSON.stringify(protocol));\n            }\n            catch( ex ) {\n                console.error(\"WS: \", ex)\n                reject(ex)\n            }\n        })\n    }\n\n    execAsync(method: string, params: any={}): IAsyncQuery {\n        const that = this\n        const listeners = new Listeners<{ label: string, progress: number }>()\n        const id = btoa(`${this.autogeneratedId++}`)\n\n        const promise = new Promise((resolve: IAsyncExecResolve, reject) => {\n            const ws = that.ws\n            if (!ws) {\n                reject(\"Brayns is not connected!\")\n                return\n            }\n            const onProgress = (arg: {amount: number, operation: string}) => {\n                listeners.fire({\n                    label: arg.operation || \"Loading...\",\n                    progress: arg.amount\n                })\n            }\n            const onMessage = (arg: any) => {\n                console.info(\"[onMessage] arg=\", arg)\n                that.unsubscribe(\"progress\", onProgress)\n                resolve({\n                    status: \"ok\",\n                    message: arg\n                })\n            }\n            const onError = (arg: { code: number, message: string}) => {\n                if (arg.code === -31002) {\n                    resolve({ status: \"cancel\", message: arg.message })\n                } else {\n                    reject(arg)\n                }\n            }\n            that.subscribe(\"progress\", onProgress)\n\n            const protocol = {\n                jsonrpc: \"2.0\",\n                id,\n                method,\n                params\n            }\n\n            that.queries[id] = { id, resolve: onMessage, reject: onError }\n            ws.send(JSON.stringify(protocol));\n        })\n\n        return {\n            cancel() {\n                const ws = that.ws\n                if (!ws) return\n                ws.send(JSON.stringify({\n                    jsonrpc: \"2.0\",\n                    method: \"cancel\",\n                    params: { id }\n                }));\n            },\n            get progress() { return listeners },\n            get promise() { return promise }\n        }\n    }\n\n    /**\n     * Brayns service will notify us on updates.\n     * You can subscribe to receive updates for a specific method.\n     */\n    subscribe(method: string, listener: (arg: any) => void) {\n        if (!this.subscribers[method]) {\n            this.subscribers[method] = new Listeners<{}>()\n        }\n        this.subscribers[method].add(listener)\n    }\n\n    /**\n     * Unsubscribe for specific updates.\n     */\n    unsubscribe(method: string, listener: (arg: any) => void) {\n        if (!this.subscribers[method]) return\n        this.subscribers[method].remove(listener)\n    }\n\n    get hostname() { return this.host }\n\n    private log(message: string) {\n        if (!this.debug) return\n        console.log(message)\n    }\n\n    private handleOpen = (event: Event) => {\n        this.readyListeners.fire(true)\n    }\n\n    private handleMessage = (event: MessageEvent) => {\n        if (typeof event.data === 'string') {\n            this.handleStringMessage(event.data)\n        } else {\n            this.binaryListeners.fire(event.data)\n        }\n    }\n\n    private handleStringMessage(text: string) {\n        try {\n            const data = JSON.parse(text)\n            const { id, method, result, params, error } = data;\n            if (typeof id === 'undefined') {\n                this.handleUpdate(method, params)\n            }\n            else if (typeof error !== 'undefined'){\n                this.handleResponseError(id, error)\n            }\n            else {\n                this.handleResponse(id, result);\n            }\n        }\n        catch (ex) {\n            console.error(\"Unable to parse websocket incoming message:\", ex)\n            console.error(\"    text = \", text)\n        }\n    }\n\n    private handleUpdate(method: string, params: {}) {\n        const listeners = this.subscribers[method];\n        if (!listeners) return\n        listeners.fire(params)\n    }\n\n    private handleResponse(id: string, params: string) {\n        const query = this.queries[id]\n        if (typeof query === 'undefined') {\n            // Just ignore this message because it is not a response\n            // to any of our queries.\n            return;\n        }\n\n        delete this.queries[id]\n        query.resolve(params);\n    }\n\n    private handleResponseError(id: string, error: any) {\n        const query = this.queries[id]\n        if (typeof query === 'undefined') {\n            // Just ignore this message because it is not a response\n            // to any of our queries.\n            return;\n        }\n\n        delete this.queries[id]\n        query.reject({\n            code: error.code || 0,\n            message: error.message || \"Unknown error!\"\n        });\n    }\n\n    private handleClose = (event: Event) => {\n        console.log('### [WS] Close:', event)\n        this.readyListeners.fire(false)\n        window.setTimeout(() => this.connect(), 150)\n    }\n\n    private handleError = (event: Event) => {\n        console.error('### [WS] Error:', event)\n    }\n}\n","import Geom from '../geometry'\nimport Scene from '../scene'\nimport Model from '../scene/model'\nimport Color from '../../tfw/color'\n\nimport { IQuaternion, IVector } from '../types'\n\nexport interface IClipPlaneState {\n    width: number,\n    height: number,\n    depth: number,\n    center: [number, number, number],\n    orientation: IQuaternion,\n    color: [number, number, number]\n}\n\ninterface ITransformation {\n    location?: IVector,\n    scale?: IVector,\n    rotation?: IQuaternion\n}\n\nconst EPSILON = 0.001\nconst PATH = '/gpfs/bbp.cscs.ch/project/proj3/.tolokoban/clipping-plane.ply'\n\nexport default class ClipPlane {\n    private readonly state: IClipPlaneState;\n    private attached: boolean = false;\n    private model: Model | null = null;\n    private isActivated = false;\n    private frontPlaneId: number = -1;\n    private backPlaneId: number = -1;\n\n    constructor(private partialState: Partial<IClipPlaneState>) {\n        this.state = {\n            width: 32,\n            height: 24,\n            depth: 2,\n            center: [0,0,0],\n            orientation: [0,0,0,1],\n            color: [0,1,0],\n            ...partialState\n        }\n    }\n\n    /**\n     * For snapshots, we will put the camera in orthographic mode\n     * and configure it in order to make the plane take the whole screen.\n     */\n    async setCameraForSnapshot() {\n        const { depth, center, orientation, width, height } = this.state\n        const normal = Geom.rotateWithQuaternion([0,0,1], orientation)\n        const remoteness = Geom.scale(normal, depth * 3)\n        const cameraCenter = Geom.addVectors(center, remoteness)\n        await Scene.camera.setOrthographic(\n            width*3, height*3, cameraCenter, orientation\n        )\n    }\n\n    get activated(): boolean {\n        return this.isActivated;\n    }\n\n    async setActivated(activated: boolean) {\n        if (this.isActivated === activated) return;\n\n        if (activated === false) {\n            await Scene.Api.removeClipPlanes([\n                this.frontPlaneId, this.backPlaneId])\n            this.isActivated = false;\n            return;\n        }\n\n        const { frontPlane, backPlane } = this.computeClippingPlanes()\n\n        const frontPlaneDescriptor = await Scene.Api.addClipPlane(frontPlane)\n        this.frontPlaneId = frontPlaneDescriptor.id\n        const backPlaneDescriptor = await Scene.Api.addClipPlane(backPlane)\n        this.backPlaneId = backPlaneDescriptor.id\n\n        this.isActivated = true;\n    }\n\n    async setTransformation(transformation: ITransformation) {\n        const { model } = this\n        const { location, scale, rotation } = transformation\n        if (model) {\n            const state = this.state\n            if (location) {\n                model.locate(location)\n                state.center = location\n            }\n            if (scale) {\n                model.scale(scale)\n                state.width = scale[0]\n                state.height = scale[1]\n                state.depth = scale[2]\n            }\n            if (rotation) {\n                model.rotate(rotation)\n                state.orientation = rotation\n            }\n            this.updateClippingPlanes()\n            await model.applyTransfo()\n        }\n    }\n\n    updateClippingPlanes = async () => {\n        const { frontPlane, backPlane } = this.computeClippingPlanes()\n\n        if (this.isActivated) {\n            await Scene.Api.updateClipPlane({ id: this.frontPlaneId, plane: frontPlane })\n            await Scene.Api.updateClipPlane({ id: this.backPlaneId, plane: backPlane })\n        }\n    }\n\n    async setLocation(location: IVector) {\n        return await this.setTransformation({ location })\n    }\n    /**\n     * Clipping planes depend on the location and orientation\n     * of the object.\n     */\n    private computeClippingPlanes() {\n        const { depth, center, orientation } = this.state\n        const normal = Geom.rotateWithQuaternion([0,0,1], orientation)\n\n        const frontPlane = Geom.plane6to4(\n            Geom.addVectors(center, Geom.scale(normal, depth * 0.5 + EPSILON)),\n            Geom.scale(normal, -1)\n        )\n\n        const backPlane = Geom.plane6to4(\n            Geom.addVectors(center, Geom.scale(normal, -depth * 0.5 - EPSILON)),\n            normal\n        )\n\n        return { frontPlane, backPlane }\n    }\n\n    async attach(): Promise<boolean> {\n        const { state } = this;\n        const model = await Scene.loadMeshFromPath(\n            PATH, {\n                technical: true,\n                brayns: {\n                    path: PATH,\n                    transformation: {\n                        rotation: state.orientation,\n                        scale: [ state.width, state.height, state.depth ],\n                        translation: state.center\n                    }\n                }\n            });\n        if (!model) return false;\n\n        this.model = model;\n        await this.setColor(Color.fromArrayRGB(this.state.color))\n\n        return true;\n    }\n\n    async setColor(color: Color) {\n        const diffuseColor = color.toArrayRGB()\n        const specularColor = Color.mix(color, Color.newWhite(), 0.8).toArrayRGB()\n        this.state.color = diffuseColor\n\n        if (!this.model) return\n\n        const modelId: number = this.model.id;\n\n        await Scene.setMaterial(modelId, 0, {\n            diffuseColor: diffuseColor,\n            specularColor: specularColor,\n            shadingMode: \"diffuse\"\n            //intensity: 2,\n            //emission: 0\n        })\n        /*Scene.setMaterial(modelId, 1, {\n            diffuseColor: [0.5, 0.5, 1.0],\n            specularColor: [0.75, 0.75, 1.0],\n            shadingMode: \"diffuse-alpha\",\n            opacity: 0.2\n        })*/\n    }\n\n    async detach() {\n        const { model } = this\n        if (!model) return\n        await Scene.Api.removeModel([model.id])\n    }\n}\n","import Scene from '../scene'\nimport Model from '../scene/model'\nimport Geom from '../geometry'\nimport ClipPlane from '../object/clip-plane'\n\nexport default { getAstrocytePath, test }\n\n\nasync function test() {\n    await Scene.clear();\n\n    /*\n    const hippocampus = '/gpfs/bbp.cscs.ch/project/proj42/simulations/CA1.20190306/20191003/BlueConfig'\n    const query = Scene.brayns.execAsync(\"add-model\", {\n        path: hippocampus,\n        bounding_box: false,\n        loader_name: \"Circuit viewer with meshes use-case\",\n        loader_properties: {\n            \"001_density\": 0.001,\n            \"002_random_seed\": 0,\n            \"010_targets\": \"\",\n            \"011_gids\": \"\",\n            \"020_report\": \"\",\n            \"023_synchronous_mode\": false,\n            \"040_mesh_folder\": \"\",\n            \"041_mesh_filename_pattern\": \"mesh_{gid}.obj\",\n            \"042_mesh_transformation\": false,\n            \"052_section_type_soma\": true,\n            \"053_section_type_axon\": true,\n            \"054_section_type_dendrite\": true,\n            \"055_section_type_apical_dendrite\": true,\n            visible: true\n        }\n    })\n    query.progress.add(arg => {\n        console.info(arg.label, ` ${(100 * arg.progress).toFixed(2)} %`);\n    })\n    const id = window.setTimeout(() => {\n        console.warn(\"Cancel!\")\n        query.cancel()\n    }, 2000)\n    console.info(\"id=\", id);\n    try {\n        const result = await query.promise\n        console.info(\"result=\", result);\n    }\n    catch(err) {\n        console.error(\"PB: \", err)\n    }*/\n}\n\nasync function testConnectionBrowser() {\n    const path = \"/gpfs/bbp.cscs.ch/project/proj3/simulations/vizCa2p0_1x7/BlueConfig\"\n    const model = await Scene.loadMeshFromPath(path, {\n        brayns: {}\n    });\n}\n\nasync function testRotScaLocBug() {\n    await Scene.clear();\n    const clipPlane = new ClipPlane({ center: [0, 0, -10] })\n    await clipPlane.attach()\n    await Scene.Api.setCamera({\n        \"current\": \"perspective\",\n        \"orientation\": [\n            -0.14017151685192156,\n            -0.32251824876133234,\n            0.03719006603400091,\n            0.9353880606826994\n        ],\n        \"position\": [\n            -47.53281877713789,\n            25.377329151439724,\n            58.55470704433519\n        ],\n        \"target\": [\n            5.0802962060580015,\n            4.955568450963256,\n            -5.963281187412066\n        ]\n    })\n}\n\nasync function testAstrocytes() {\n    const X = 0;\n    const Y = 0;\n    const Z = 0;\n\n    for (let i = 0; i < 3; i++) {\n        const path = getAstrocytePath(\n            i, //Math.floor(Math.random() * 5000),\n            false);\n        const model = await Scene.loadMeshFromPath(path);\n        model.locate([\n            X + rnd(-10, 10),\n            Y + rnd(-10, 10),\n            Z + rnd(-10, 10)\n        ])\n        await model.applyTransfo();\n    }\n\n    /*\n        const clipPlane = new ClipPlane({\n            width: 32, height: 12,\n            center: [X, Y, Z],\n            orientation: Geom.makeQuaternionAsAxisRotation(\n                0 * Math.PI,\n                //Math.random() * Math.PI * 2,\n                [0,0,1]\n            )\n        })\n        await clipPlane.attach()\n        await clipPlane.setActivated(true)\n    */\n    Scene.Api.setCamera({\n        \"current\": \"perspective\",\n        \"orientation\": [\n            0.1369767963305153,\n            -0.3116113279986347,\n            -0.0454473587151425,\n            0.9391859640751522\n        ],\n        \"position\": [\n            -26.063496883772473 + X,\n            -9.46257268249269 + Y,\n            32.349090206357516 + Z\n        ]\n    })\n\n    //await clipPlane.setCameraForSnapshot()\n}\n\n/**\n * Add an astrocyte model and return it's object as an instance of Model class.\n */\nfunction getAstrocytePath(id: number, decimated: boolean = true): string {\n    const path = `/gpfs/bbp.cscs.ch/project/proj3/resources/meshes/astrocytes/GLIA_${\n        padNumber(id)\n        }.h5${decimated ? '_decimated' : ''}.off`;\n    return path;\n}\n\n\nfunction padNumber(value: number, len: number = 6): string {\n    let out = `${value}`;\n    while (out.length < len) {\n        out = `0${out}`;\n    }\n    return out;\n}\n\n\nfunction rnd(min: number, max: number): number {\n    return min + Math.random() * (max - min);\n}\n","import SaveAsFile from 'save-as-file'\n\nimport Scene from '../scene'\nimport { API_snapshot_Param0 } from '../scene/api'\nimport State from '../state'\nimport { ISnapshot } from '../types'\n\n\nexport default {\n    async getCanvas(options: ISnapshot): Promise<HTMLCanvasElement> {\n        const params: API_snapshot_Param0 = {\n            animation_parameters: State.store.getState().animation,\n            samples_per_pixel: options.samples,\n            size: [options.width, options.height],\n            format: \"JPEG\",\n            camera: {\n                position: Scene.camera.position,\n                orientation: Scene.camera.orientation,\n                target: Scene.camera.target\n            }\n        }\n        const snapshot = await Scene.Api.snapshot(params);\n        const dataURI = `data:;base64,${snapshot.data}`\n        return new Promise( (resolve, reject) => {\n            const img = new Image();\n            img.onload = () => {\n                const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n                canvas.width = img.width;\n                canvas.height = img.height;\n                const ctx = canvas.getContext(\"2d\");\n                if (!ctx) {\n                    reject();\n                    return;\n                }\n                ctx.drawImage(img, 0, 0);\n                resolve(canvas);\n            }\n            img.onerror = reject;\n            img.src = dataURI;\n        })\n    },\n\n    async saveCanvasToFile(canvas: HTMLCanvasElement,\n                           filename: string,\n                           mimetype: string = \"image/jpeg\") {\n        canvas.toBlob(async (blob) => {\n            if (!blob) return;\n            const result = await SaveAsFile(blob, filename);\n        }, mimetype, 100);\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../types\"\nimport State from \"../../state\"\nimport { default as snapshotView, RESOLUTIONS, SAMPLINGS } from \"./snapshot\"\n\nexport { RESOLUTIONS, SAMPLINGS } from './snapshot'\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        filename: state.dialogs.snapshot.filename,\n        sizeKey: state.dialogs.snapshot.sizeKey,\n        width: state.dialogs.snapshot.width,\n        height: state.dialogs.snapshot.height,\n        samplesKey: state.dialogs.snapshot.samplesKey,\n        samples: state.dialogs.snapshot.samples\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onFilenameChange(filename: string) {\n            dispatch(State.Dialogs.updateSnapshot({ filename }))\n        },\n\n        onSizeKeyChange(sizeKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ sizeKey }))\n            const res = RESOLUTIONS[sizeKey];\n            if (!res) return;\n            const [width, height] = res;\n            dispatch(State.Dialogs.updateSnapshot({ width, height }))\n        },\n\n        onWidthChange(width: number) {\n            dispatch(State.Dialogs.updateSnapshot({ width }))\n        },\n\n        onHeightChange(height: number) {\n            dispatch(State.Dialogs.updateSnapshot({ height }))\n        },\n\n        onSamplesKeyChange(samplesKey: string) {\n            dispatch(State.Dialogs.updateSnapshot({ samplesKey }))\n            const samples = SAMPLINGS[samplesKey];\n            if (!samples) return;\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        },\n\n        onSamplesChange(samples: number) {\n            dispatch(State.Dialogs.updateSnapshot({ samples }))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(snapshotView);\n","import React from \"react\"\nimport { Provider } from 'react-redux'\n\nimport Dialog from '../../tfw/factory/dialog'\nimport { ISnapshot } from '../types'\nimport State from '../state'\nimport Snapshot from '../view/snapshot/snapshot.container'\n\nexport default {\n    async show(): Promise<ISnapshot | null> {\n        const answer = await Dialog.confirm(\n            \"Take snapshot\",\n            <Provider store={State.store}><Snapshot/></Provider>);\n        if (!answer) return null;\n        return State.store.getState().dialogs.snapshot;\n    }\n}\n","type Action = (...args: any[]) => void;\r\n\r\n/**\r\n * The function to call as much as you want. It will perform the debouce for you.\r\n * Put in the same args as the `action` function.\r\n *\r\n * * action -  Action to call. Two consecutive actions cannot be  called if there is\r\n * less than `delay` ms between them.\r\n * * delay - Number of milliseconds.\r\n */\r\nexport default function (action: Action, delay: number): Action {\r\n    let timer: number = 0;\r\n\r\n    return function(this: { delay: number }, ...args: any[]) {\r\n        if (timer) window.clearTimeout(timer);\r\n        timer = window.setTimeout(() => {\r\n            timer = 0;\r\n            action(...args);\r\n        }, delay) as number;\r\n    }\r\n}\r\n","export default function castDouble(v: any, defVal = 0): number {\r\n    switch (typeof v) {\r\n        case \"boolean\":\r\n            return v ? 1 : 0;\r\n        case \"number\":\r\n            return v;\r\n        case \"string\":\r\n            const text = v.trim().toLowerCase();\r\n            if (text.startsWith(\"0x\")) {\r\n                const hexa = parseInt(text.substr(2), 16);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0b\")) {\r\n                const hexa = parseInt(text.substr(2), 2);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            if (text.startsWith(\"0o\")) {\r\n                const hexa = parseInt(text.substr(2), 8);\r\n                return isNaN(hexa) ? defVal : hexa;\r\n            }\r\n            const num = parseFloat(text);\r\n            if (isNaN(num)) return defVal;\r\n            return num;\r\n        default:\r\n            return defVal;\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Gesture from '../../gesture'\nimport Label from '../label'\nimport castInteger from \"../../converter/integer\"\nimport castString from \"../../converter/string\"\nimport castFloat from \"../../converter/double\"\n\nimport \"./slider.css\"\n\ninterface ISliderProps {\n    value: number,\n    label?: string,\n    text?: string,\n    step?: number,\n    min?: number,\n    max?: number,\n    onChange: (value: number) => void\n}\n\nexport default class Slider extends React.Component<ISliderProps, {}> {\n    private readonly ref: React.RefObject<HTMLDivElement> = React.createRef();\n\n    handleTapOrMove = (evt: any) => {\n        const div = this.ref.current;\n        if (!div) return;\n        const rect = div.getBoundingClientRect();\n        const percent = clamp(evt.x / rect.width);\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const value = this.constrainValue(\n            min + (max - min) * percent, min, max, step\n        );\n        p.onChange(value);\n    }\n\n    componentDidMount() {\n        const div = this.ref.current;\n        if (!div) return;\n        Gesture(div).on({\n            tap: this.handleTapOrMove,\n            pan: this.handleTapOrMove\n        })\n    }\n\n    render() {\n        const p = this.props;\n        const a = castInteger(p.min, 0);\n        const b = castInteger(p.max, 100);\n        const min = Math.min(a, b);\n        const max = Math.max(a, b);\n        const step = Math.max(1e-9, castFloat(p.step, (max - min) / 1000));\n        const label = castString(p.label, '');\n        const value = this.constrainValue(p.value, min, max, step);\n        const text = castString(p.text, `${value}`);\n\n        return (<div className=\"tfw-view-Slider\"\n                     ref={this.ref}>\n            <Label label={label}/>\n            <div className=\"thm-ele-button thm-bgPD\">\n                <div className=\"thm-ele-nav thm-bgPL thm-fg\"\n                     style={{\n                         marginLeft: `calc(${100 * (value - min) / (max - min)}% - 16px)`\n                     }}>{text}</div>\n            </div>\n        </div>)\n    }\n\n    private constrainValue(value: number, min: number, max: number, step: number) {\n        let v = Math.max(min, Math.min(value, max));\n        if (step > 0) {\n            return min + step * Math.floor(step / 2 + (v - min) / step);\n        }\n        return v;\n    }\n}\n\n\nfunction clamp(value: number, min: number = 0, max: number = 1) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n}\n","export default {\n    padNumber(value: number, size: number = 6, fillWith: string = '0'): string {\n        let text = `${value}`;\n        while (text.length < size) {\n            text = fillWith.charAt(0) + text;\n        }\n        return text;\n    },\n\n    clamp(value: number, min: number = 0, max: number = 1) {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    },\n\n    loadTextFromFile(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader: FileReader = new FileReader();\n            reader.onload = (data) => {\n                const content = `${data.target.result}`;\n                resolve(content);\n            };\n            reader.onerror = (err) => {\n                reject(err);\n            };\n            reader.readAsText(file);\n        })\n    },\n\n    loadTextFromURL(url: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    if (!response.ok) {\n                        reject(`Error ${response.status}: ${response.statusText}!`);\n                    }\n                    return response.text();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    },\n\n    loadJsonFromURL(url: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    return response.json();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    }\n}\n","import React from \"react\"\n\nimport Debouncer from '../../../tfw/debouncer'\nimport Button from '../../../tfw/view/button'\nimport Slider from '../../../tfw/view/slider'\nimport Combo from '../../../tfw/view/combo'\nimport Icon from '../../../tfw/view/icon'\nimport Util from '../../../tfw/util'\nimport State from '../../state'\nimport Scene from '../../scene'\n\nimport \"./animation-control.css\"\n\ninterface IAnimationControlProps {\n    current?: (number /* Integer */);\n    delta?: (number /* Integer */);\n    dt?: number;\n    frameCount?: (number /* Integer */);\n    playing?: boolean;\n    unit?: string;\n}\n\ninterface IAnimationControlState {\n    speedKey: string  // \"NORMAL\" | \"x2\" | \"x4\" | \"x8\" | \"x16\" | \"x32\"\n}\n\nexport default class AnimationControl extends React.Component<IAnimationControlProps, IAnimationControlState> {\n    constructor( props: IAnimationControlProps ) {\n        super( props );\n        this.state = { speedKey: speedToKey(props.delta || 1) }\n    }\n\n    handleCurrentChange = (current: number) => {\n        const params = { current };\n        State.dispatch(State.Animation.update(params));\n        this.setAnimationParameters(params);\n    }\n\n    setAnimationParameters = Debouncer((params: IAnimationControlProps) => {\n        Scene.Api.setAnimationParameters(params);\n    }, 300)\n\n    handleSpeedChange = (speedKey: string) => {\n        this.setState({ speedKey });\n        State.dispatch(State.Animation.update({ delta: keyToSpeed(speedKey) }));\n    }\n\n    shift(delta: number) {\n        const current = this.props.current || 1;\n        const frameCount = this.props.frameCount || 1;\n        const speed = keyToSpeed(this.state.speedKey);\n        const nextValue = Util.clamp(current + speed * delta, 1, frameCount);\n        if (nextValue !== current) {\n            const params = { current: nextValue };\n            State.dispatch(State.Animation.update(params));\n            this.setAnimationParameters(params);\n        }\n    }\n\n    handleNextClick = () => { this.shift(1); }\n    handleNext2Click = () => { this.shift(10); }\n    handlePrevClick = () => { this.shift(-1); }\n    handlePrev2Click = () => { this.shift(-10); }\n\n    render() {\n        const p = this.props;\n        const current = p.current || 0;\n        const frameCount = p.frameCount || 0;\n        if (frameCount < 2) return null;\n\n        const percent = Math.floor(.5 + 100 * (p.current || 0) / frameCount);\n        return (<div className=\"webBrayns-view-AnimationControl thm-bgPD-C\">\n            <div className=\"thm-bgPD flex\">\n                <Icon content=\"skip-prev2\" enabled={current > 1}\n                    onClick={this.handlePrev2Click}/>\n                <Icon content=\"skip-prev\" enabled={current > 1}\n                    onClick={this.handlePrevClick}/>\n                <Button icon=\"play\" small={true}/>\n                <Icon content=\"skip-next\" enabled={current < frameCount}\n                    onClick={this.handleNextClick}/>\n                <Icon content=\"skip-next2\" enabled={current < frameCount}\n                    onClick={this.handleNext2Click}/>\n            </div>\n            <div className=\"label\">\n                <b>{p.current}</b>\n                <span className='hint'>{` / ${frameCount} (${p.unit})`}</span>\n            </div>\n            <Slider min={0} max={frameCount}\n                    value={p.current || 0}\n                    step={1}\n                    text={`${percent} %`}\n                    onChange={this.handleCurrentChange} />\n            <Combo value={this.state.speedKey} label=\"Speed\" onChange={this.handleSpeedChange}>\n                <div key=\"NORMAL\">x1</div>\n                <div key=\"x2\">x2</div>\n                <div key=\"x4\">x4</div>\n                <div key=\"x8\">x8</div>\n                <div key=\"x16\">x16</div>\n                <div key=\"x32\">x32</div>\n            </Combo>\n        </div>)\n    }\n}\n\n\n// The speed is the number of frames to skip to go to the next one.\n// In Brayns' animation parameters, it is own by the parameter `delta`.\nconst SPEEDS: [string,number][] = [\n    [\"NORMAL\", 1],\n    [\"x2\", 2],\n    [\"x4\", 4],\n    [\"x8\", 8],\n    [\"x16\", 16],\n    [\"x32\", 32]\n]\n\nfunction speedToKey(speed: number): string {\n    const item = SPEEDS.find(x => x[1] === speed);\n    if (!item) return \"NORMAL\";\n    return item[0];\n}\n\nfunction keyToSpeed(key: string): number {\n    const item = SPEEDS.find(x => x[0] === key);\n    if (!item) return 1;\n    return item[1];\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../types\"\nimport View from \"./animation-control\"\n\nfunction mapStateToProps(state: IAppState) {\n    return { ...state.animation };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n","import SaveAsFile from 'save-as-file'\n\nexport default {\n    canvasFromSVG,\n    canvasToImageJPG, canvasToImagePNG, canvasToImageWEBP,\n    fromArrayBuffer, fromBlob, fromSVG,\n    saveCanvasAsJPG, saveCanvasAsPNG\n}\n\n\nfunction fromBlob(blob: Blob): Promise<HTMLImageElement> {\n    const url = URL.createObjectURL(blob);\n    const img = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.src = url;\n        // https://medium.com/dailyjs/image-loading-with-image-decode-b03652e7d2d2\n        if (img.decode) {\n            img.decode()\n                // TODO: Figure out why decode() throws DOMException\n                .then(() => resolve(img));\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n\n\nfunction fromSVG(svg: SVGElement): Promise<HTMLImageElement> {\n    const url = `data:image/svg+xml;base64,${btoa(svg.outerHTML)}`\n    const img = new Image()\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => resolve(img)\n        img.onerror = reject\n        img.src = url\n    });\n}\n\n\nfunction fromArrayBuffer(arrayBuffer: ArrayBuffer): Promise<HTMLImageElement> {\n    const blob = new Blob([arrayBuffer])\n    return fromBlob(blob)\n}\n\n\nfunction canvasFromSVG(svg: SVGElement, width: number, height: number, background: string|undefined=undefined): Promise<HTMLCanvasElement> {\n    return new Promise(async (resolve, reject) => {\n        const img = await fromSVG(svg)\n        const canvas = document.createElement(\"canvas\");\n        canvas.setAttribute(\"width\", `${width}`);\n        canvas.setAttribute(\"height\", `${height}`);\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) {\n            reject(\"Unable to create a 2D context!\")\n            return\n        }\n        if (background) {\n            ctx.fillStyle = background\n            ctx.fillRect(0, 0, width, height)\n        }\n        ctx.drawImage(img, 0, 0, width, height);\n        resolve(canvas);\n    })\n}\n\n\nfunction canvasToImagePNG(canvas: HTMLCanvasElement): Promise<HTMLImageElement> {\n    const url = canvas.toDataURL(\"image/png\");\n    const img = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.onload = () => resolve(img);\n        img.src = url;\n    });\n}\n\n\nfunction canvasToImageJPG(canvas: HTMLCanvasElement, quality: number = 0.92): Promise<HTMLImageElement> {\n    const url = canvas.toDataURL(\"image/jpg\", quality);\n    const img = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.onload = () => resolve(img);\n        img.src = url;\n    });\n}\n\n\nfunction canvasToImageWEBP(canvas: HTMLCanvasElement, quality: number = 0.92): Promise<HTMLImageElement> {\n    const url = canvas.toDataURL(\"image/webp\", quality);\n    const img = new Image();\n    return new Promise<HTMLImageElement>(resolve => {\n        img.onload = () => resolve(img);\n        img.src = url;\n    });\n}\n\n\nfunction saveCanvasAsPNG(canvas: HTMLCanvasElement, filename: string) {\n    return new Promise(resolve => {\n        canvas.toBlob(async (blob) => {\n            if (!blob) return;\n            await SaveAsFile(blob, filename);\n            resolve(canvas)\n        }, \"image/png\", 100);\n    })\n}\n\n\nfunction saveCanvasAsJPG(canvas: HTMLCanvasElement, filename: string, quality: number = 0.92) {\n    return new Promise(resolve => {\n        canvas.toBlob(async (blob) => {\n            if (!blob) return;\n            await SaveAsFile(blob, filename);\n            resolve(canvas)\n        }, \"image/jpg\", quality);\n    })\n}\n","import React from 'react';\n\nimport SnapshotService from '../../service/snapshot'\nimport { IQuaternion, IScreenPoint, IHitPoint, IPanningEvent } from '../../types'\nimport Scene from '../../scene'\nimport Gesture from '../../../tfw/gesture'\nimport Button from '../../../tfw/view/button'\nimport Snapshot from '../../dialog/snapshot'\nimport AnimationControl from '../animation-control'\nimport ImageFactory from '../../../tfw/factory/image'\nimport { IEvent } from '../../../tfw/gesture/types'\n\nimport \"./image-stream.css\"\n\ninterface IImageStreamProps {\n    onHit?: (point: IHitPoint) => void,\n    // Hitting the void, actually\n    onTap?: (point: IScreenPoint) => void,\n    onPanStart?: (panning: IPanningEvent) => void,\n    onPan?: (panning: IPanningEvent) => void\n}\n\nexport default class ImageStream extends React.Component<IImageStreamProps> {\n    private readonly canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n    private orientation: IQuaternion = [0,0,0,1];\n\n    constructor(props: IImageStreamProps) {\n        super(props);\n    }\n\n    get canvas(): HTMLCanvasElement | null {\n        return this.canvasRef.current;\n    }\n\n    componentDidMount() {\n        // If there's no container we can bind the camera to,\n        // there's no point in continuing\n        if (!this.canvas) return\n        const brayns = Scene.brayns\n        if (!brayns) return\n\n        brayns.binaryListeners.add(this.handleImage)\n\n        const that = this;\n\n        Gesture(this.canvas).on({\n            down: this.handleDown,\n            wheel(evt) {\n                if (!Scene.camera) return;\n                if (evt.deltaY < 0) {\n                    Scene.camera.moveForward(10);\n                }\n                else if (evt.deltaY > 0) {\n                    Scene.camera.moveBackward(10);\n                }\n            },\n            pan: this.handlePan\n        });\n        this.updateViewPort();\n        window.onfocus = this.updateViewPort;\n    }\n\n    private handleImage = async (data: ArrayBuffer) => {\n        const canvas = this.canvas;\n        if (!canvas) return\n        const ctx = canvas.getContext(\"2d\")\n        if (!ctx) return\n\n        const img = await ImageFactory.fromArrayBuffer(data)\n        ctx.drawImage(img, 0, 0, canvas.clientWidth, canvas.clientHeight)\n    }\n\n    private handleDown = (evt: IEvent) => {\n        const handler = this.props.onPanStart;\n        if (typeof handler !== 'function') return;\n        evt.clear();\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    private handlePan = (evt: IEvent) => {\n        const handler = this.props.onPan;\n        if (typeof handler !== 'function') return;\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    /**\n     * Get pixel coordinates and return a ScreenPoint.\n     * In a screen point, every coordinate is a real number\n     * between 0 and 1.\n     */\n    private getScreenPoint(x: number, y: number): IScreenPoint {\n        if (!this.canvas) return { screenX: -1, screenY: -1, aspect: 1 };\n        const w = this.canvas.clientWidth;\n        const h = this.canvas.clientHeight;\n        return {\n            screenX: x / w,\n            screenY: 1 - (y / h),\n            aspect: w / h\n        }\n    }\n\n    private updateViewPort = async () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas ) return;\n        const rect = canvas.getBoundingClientRect();\n        const w = Math.floor(rect.width);\n        const h = Math.floor(rect.height);\n        canvas.width = w;\n        canvas.height = h;\n        await Scene.setViewPort(w, h);\n    }\n\n    private handleScreenShot = async () => {\n        const options = await Snapshot.show();\n        if (!options) return;  // Action cancelled.\n        const canvas = await SnapshotService.getCanvas(options);\n        await SnapshotService.saveCanvasToFile(canvas, `${options.filename}.jpg`);\n    }\n\n    // We use moz-opaque to improve the perf. of the canvas\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n    render() {\n        return (\n            <div className=\"webBrayns-view-ImageStream\">\n                <canvas\n                    ref={this.canvasRef}\n                    className=\"\"\n                    moz-opaque=\"true\" />\n                <div className=\"icons\">\n                    <Button\n                        icon=\"camera\"\n                        onClick={this.handleScreenShot}\n                        warning={true}/>\n                </div>\n                <AnimationControl />\n            </div>\n        );\n    }\n}\n","import Debounder from '../debouncer'\nimport Listeners from '../listeners'\n\n\nexport interface IDimension {\n    width: number,\n    height: number\n}\n\ninterface IElemSize {\n    blockSize: number,\n    inlineSize: number\n}\n\ninterface IResizeObserverEntry {\n    borderBoxSize: IElemSize,\n    contentBoxSize: IElemSize,\n    contentRect: DOMRectReadOnly,\n    target: Element | SVGElement\n}\n\ninterface ITarget {\n    target: Element | SVGElement,\n    rect: DOMRectReadOnly\n}\n\nconst ResizeObserver = class {\n    private intervalId = 0\n    private targets: ITarget[] = []\n\n    constructor(private slot: (entries: IResizeObserverEntry[]) => void) {}\n\n    observe(target: Element | SVGElement) {\n        const { targets } = this\n        if (targets.map(getTarget).indexOf(target) !== -1) return\n        if (targets.length === 0) {\n            this.intervalId = window.setInterval(this.checkSize, 200)\n        }\n        targets.push({\n            target,\n            rect: target.getBoundingClientRect() as DOMRectReadOnly\n        })\n    }\n\n    unobserve(target: Element | SVGElement) {\n        const { targets } = this\n        const indexOf = targets.map(getTarget).indexOf(target)\n        if (indexOf === -1) return\n        targets.splice(indexOf, 1)\n        if (targets.length === 0) {\n            window.clearInterval(this.intervalId)\n        }\n    }\n\n    private checkSize = () => {\n        const entries: IResizeObserverEntry[] = []\n\n        for( const item of this.targets ) {\n            const rect = item.target.getBoundingClientRect() as DOMRectReadOnly\n            if (areDifferent(rect, item.rect)) {\n                const size = {\n                    inlineSize: rect.width,\n                    blockSize: rect.height\n                }\n                entries.push({\n                    target: item.target,\n                    borderBoxSize: size,\n                    contentBoxSize: size,\n                    contentRect: rect\n                })\n                item.rect = rect\n            }\n        }\n\n        if (entries.length > 0) {\n            this.slot(entries)\n        }\n    }\n}\n\nexport default class ResizeWatcher {\n    private listeners = new Listeners<IDimension>()\n    private readonly observer: ResizeObserver\n\n    constructor(private element: HTMLElement, private debouncerDelay: number = 300) {\n        this.observer = new ResizeObserver(this.onEntries)\n        this.fire = Debounder(this.fire, debouncerDelay)\n    }\n\n    subscribe(listener: (dimension: IDimension) => void) {\n        if (this.listeners.length === 0) {\n            this.attach()\n        }\n        this.listeners.add(listener)\n    }\n\n    unsubscribe(listener: (dimension: IDimension) => void) {\n        this.listeners.remove(listener)\n        if (this.listeners.length === 0) {\n            this.detach()\n        }\n    }\n\n    private attach() {\n        this.observer.observe(this.element)\n    }\n\n    private detach() {\n        this.observer.unobserve(this.element)\n    }\n\n    private fire = (width: number, height: number) => {\n        this.listeners.fire({ width, height })\n    }\n\n    private onEntries = (entries: IResizeObserverEntry[]) => {\n        const filteredEntries = entries.filter((item: IResizeObserverEntry) => item.target === this.element)\n        if (filteredEntries.length > 0) {\n            const entry = filteredEntries[0]\n            const size = entry.contentBoxSize\n            this.fire(size.inlineSize, size.blockSize)\n        }\n    }\n}\n\n\nfunction getTarget(obj: ITarget) {\n    return obj.target\n}\n\n\nfunction areDifferent(r1: DOMRectReadOnly, r2: DOMRectReadOnly): boolean {\n    if (r1.width !== r2.width) return true\n    if (r1.height !== r2.height) return true\n\n    return false\n}\n","import React from \"react\"\nimport Scene from '../../scene'\nimport Debouncer from '../../../tfw/debouncer'\nimport Gesture from '../../../tfw/gesture'\nimport ResizeWatcher, { IDimension } from '../../../tfw/watcher/resize'\n\nimport { IScreenPoint, IPanningEvent } from '../../types'\nimport { IEvent } from '../../../tfw/gesture/types'\n\nimport \"./video-stream.css\"\n\nconst MIMECODEC = 'video/mp4; codecs=\"avc1.42E032\"';\n\ninterface IVideoStreamProps {\n    onPanStart: (panning: IPanningEvent) => void,\n    onPan: (panning: IPanningEvent) => void\n}\n\nexport default class VideoStream\n            extends React.Component<IVideoStreamProps, {}> {\n    private readonly refVideo: React.RefObject<HTMLVideoElement> = React.createRef();\n    private sourceBuffer: any = {}\n    private lastWidth: number = -1\n    private lastHeight: number = -1\n    private arraySize: number = 0\n    private bufArray: Uint8Array[] = []\n    // Used for setInterval() because we are watching on screen resize\n    // but we want to stp this watch on unmount.\n    private mediaSource: MediaSource | null = null\n    private resizeWatcher: ResizeWatcher | null = null\n\n    componentDidMount() {\n        const video = this.refVideo.current\n        if (!video) return\n\n        /*const EVENTS = [\n            'abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted',\n            'ended', 'interruptbegin', 'interruptend', 'loadeddata', 'loadedmetadata',\n            'loadstart', 'mozaudioavailable', 'pause', 'play', 'playing', 'progress',\n            'ratechange', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate',\n            'volumechange', 'waiting'\n        ]\n        EVENTS.forEach((eventName: string) => {\n            video.addEventListener(\n                eventName,\n                (evt) => console.log(`Video event: ${eventName.toUpperCase()}`)\n            )\n        })*/\n\n        Gesture(video).on({\n            wheel: this.handleGestureWheel,\n            down: this.handleGestureDown,\n            pan: this.handleGesturePan\n        });\n\n        this.resizeWatcher = new ResizeWatcher(video, 500)\n        const rect = video.getBoundingClientRect()\n        this.handleResize(rect)\n    }\n\n    private handleGestureWheel = (evt: IEvent) => {\n    }\n\n    private handleGestureDown = (evt: IEvent) => {\n        const handler = this.props.onPanStart;\n        if (typeof handler !== 'function') return;\n        evt.clear();\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    private handleGesturePan = (evt: IEvent) => {\n        const handler = this.props.onPan;\n        if (typeof handler !== 'function') return;\n        handler(Object.assign(\n            { button: evt.buttons },\n            this.getScreenPoint(evt.x, evt.y)));\n    }\n\n    /**\n     * Get pixel coordinates and return a ScreenPoint.\n     * In a screen point, every coordinate is a real number\n     * between 0 and 1.\n     */\n    private getScreenPoint(x: number, y: number): IScreenPoint {\n        const video = this.refVideo.current\n        if (!video) return { screenX: x, screenY: y, aspect: 1 }\n        const rect = video.getBoundingClientRect()\n        const w = rect.width\n        const h = rect.height;\n        return {\n            screenX: x / w,\n            screenY: 1 - (y / h),\n            aspect: w / h\n        }\n    }\n\n    private createMediaSource = () => {\n        const video = this.refVideo.current\n        if (!video) return\n        const mediaSource = new MediaSource()\n        mediaSource.id = Date.now()\n        mediaSource.addEventListener('sourceclose', () => {\n            console.log(\"Source CLOSE\", mediaSource.id)\n        })\n        mediaSource.addEventListener('sourceended', () => {\n            console.log(\"Source ENDED\", mediaSource.id)\n        })\n        mediaSource.addEventListener('sourceopen', async () => {\n            console.log(\"Source OPEN\", mediaSource.id)\n            this.bufArray = []\n            this.sourceBuffer = mediaSource.addSourceBuffer(MIMECODEC)\n            await this.enableVideoStream()\n        })\n        this.mediaSource = mediaSource\n        if (video.src) {\n            // Don't let memory leak!\n            window.URL.revokeObjectURL(video.src)\n        }\n        video.src = window.URL.createObjectURL(mediaSource)\n        // The following code will work one day.\n        // But for now, Only MediaStream is implemented...\n        // And that's a pity because Google Chrome does not\n        // support createObjectURL on MediaSource any more.\n        // Septembre 12th, 2019.\n        //\n        // video.srcObject = mediaSource\n    }\n\n    componentWillUnmount() {\n        const brayns = Scene.brayns\n        if (!brayns) return\n\n        this.disableVideoStream()\n    }\n\n    private async enableVideoStream() {\n        const brayns = Scene.brayns\n        if (!brayns) return\n\n        console.log(\"videostream\", \"ON\")\n        if (this.resizeWatcher) {\n            this.resizeWatcher.subscribe(this.handleResize)\n        }\n        brayns.binaryListeners.add(this.handleWebSocketMessage)\n        return await Scene.request(\"set-videostream\", { enabled: true })\n    }\n\n    private async disableVideoStream() {\n        const brayns = Scene.brayns\n        if (!brayns) return\n        const video = this.refVideo.current\n        if (!video) return\n\n        console.log(\"videostream\", \"OFF\")\n        if (this.resizeWatcher) {\n            this.resizeWatcher.unsubscribe(this.handleResize)\n        }\n        brayns.binaryListeners.remove(this.handleWebSocketMessage)\n        await Scene.request(\"set-videostream\", { enabled: false })\n    }\n\n    private handleResize = async (dimension: IDimension) => {\n        const video = this.refVideo.current\n        if (!video) return\n\n        const { width, height } = dimension\n        console.log(\">>> handleResize(\", width, \", \", height, \")\")\n        await this.disableVideoStream()\n        video.width = width\n        video.height = height\n        await Scene.setViewPort(width, height)\n        this.createMediaSource()\n        console.log(\"<<< handleResize(\", width, \", \", height, \")\")\n    }\n\n    /**\n     * Decode and display video.\n     */\n    private handleWebSocketMessage = async (arrayBuffer: ArrayBuffer) => {\n        const video = this.refVideo.current\n        if (!video) return\n\n        //const arrayBuffer = await new Response(data).arrayBuffer();\n        const bs = new Uint8Array( arrayBuffer )\n        //console.log(\"Buffering\", bs.length, \"bytes...\")\n        this.bufArray.push(bs)\n        this.arraySize += bs.length\n\n        if (video.error) {\n            console.error(\"VIDEO ERROR: \", video.error)\n            return\n        }\n\n        if (!this.sourceBuffer.updating) {\n            const streamBuffer = new Uint8Array(this.arraySize)\n            let i = 0\n            while (this.bufArray.length > 0) {\n                const b = this.bufArray.shift();\n                //console.info(\"Flushing\", b.length, \"bytes.\");\n                streamBuffer.set(b, i);\n                i += b.length;\n            }\n            this.arraySize = 0;\n            // Add the received data to the source buffer\n            this.sourceBuffer.appendBuffer(streamBuffer);\n        }\n\n        if (video.paused) {\n            video.play();\n        }\n\n        video.width = video.videoWidth\n        video.height = video.videoHeight\n    }\n\n    handleVideoError = async (evt: React.SyntheticEvent<HTMLVideoElement, Event>) => {\n        const video = this.refVideo.current\n        if (!video) return\n\n        console.error(\"Video ERROR: \", video.error, evt)\n        await this.disableVideoStream()\n        requestAnimationFrame(this.createMediaSource)\n    }\n\n    render() {\n        return (<video\n                    ref={this.refVideo}\n                    onError={this.handleVideoError}\n                    autoPlay={false}\n                    crossOrigin=\"anonymous\"\n                    className=\"webBrayns-view-VideoStream\">\n        </video>)\n    }\n}\n","import React from \"react\"\r\nimport castArray from \"../converter/array\"\r\nimport castBoolean from \"../converter/boolean\"\r\nimport castStringArray from \"../converter/string-array\"\r\nimport \"./stack.css\"\r\n\r\ninterface IStackProps {\r\n    value: string;\r\n    classNames?: string | string[];\r\n    fullscreen?: boolean;\r\n    scrollable?: boolean;\r\n    children: React.ReactElement<any>[];\r\n}\r\n\r\nexport default class Stack extends React.Component<IStackProps, {}> {\r\n    render() {\r\n        const children = castArray(this.props.children);\r\n        const scrollable = castBoolean(this.props.scrollable, false);\r\n        const fullscreen = castBoolean(this.props.fullscreen, false);\r\n        const classes = [\"tfw-layout-stack\"];\r\n        classes.push(...castStringArray(this.props.classNames));\r\n        if (scrollable) classes.push(\"scrollable\");\r\n        if (fullscreen) classes.push(\"fullscreen\");\r\n\r\n        return (\r\n            <div className={classes.join(\" \")}>{\r\n                children.filter(elem => elem.key == this.props.value)\r\n            }</div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\"\n\nimport Icon from '../../../tfw/view/icon'\nimport Input from '../../../tfw/view/input'\nimport Button from '../../../tfw/view/button'\nimport Storage from '../../../tfw/storage'\nimport Scene from '../../scene'\n\nimport \"./websocket-console.css\"\n\n\ninterface IWebsocketConsoleProps {\n    visible: boolean\n}\n\ninterface IWebsocketConsoleState {\n    method: string,\n    params: string,\n    output: string,\n    error: string | null,\n    querying: boolean\n}\n\n\nexport default class WebsocketConsole extends React.Component<IWebsocketConsoleProps, IWebsocketConsoleState> {\n    constructor( props: IWebsocketConsoleProps ) {\n        super( props );\n        this.state = {\n            method: get(\"method\", \"get-renderer-params\"),\n            params: get(\"params\", \"{}\"),\n            output: \"\",\n            error: null,\n            querying: false\n        }\n    }\n\n    handleMethodChange = (method: string) => {\n        this.setState({ method });\n    }\n\n    handleParamsChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setState({ params: event.target.value });\n    }\n\n    handleExecute = async () => {\n        const { method, params } = this.state;\n\n        set(\"method\", method);\n        set(\"params\", params);\n\n        this.setState({ querying: true, output: `${Date.now()}`, error: null });\n        try {\n            const input = parseJSON(params);\n            const output = await Scene.request(method, input);\n            this.setState({ error: null, output: JSON.stringify(output, null, '  ') });\n        }\n        catch( ex ) {\n            console.error(\"WebSocket console error:\", ex);\n            this.setState({ error: parseError(ex) });\n        }\n        finally {\n            this.setState({ querying: false });\n        }\n    }\n\n    render() {\n        const classNames = [\"webBrayns-view-WebsocketConsole\", \"thm-bg0\"];\n        if (this.props.visible) classNames.push(\"visible\");\n\n        return (<div className={classNames.join(' ')}>\n            <div className=\"head\">\n                <Input\n                    label=\"Method\"\n                    value={this.state.method}\n                    onChange={this.handleMethodChange}\n                    onEnterPressed={this.handleExecute}\n                    wide={true}/>\n            </div>\n            <textarea\n                className=\"input\"\n                onChange={this.handleParamsChange}\n                defaultValue={this.state.params}></textarea>\n            <div className=\"button\">\n                <Button\n                    label=\"Execute request\"\n                    wide={true}\n                    wait={this.state.querying}\n                    icon=\"gear\"\n                    onClick={this.handleExecute}/>\n            </div>\n            {\n                this.state.error ?\n                <div className=\"error\">{this.state.error}</div> :\n                <textarea\n                    className=\"output thm-bgPL\"\n                    readOnly={true}\n                    value={this.state.output}>\n                </textarea>\n            }\n        </div>)\n    }\n}\n\n\nconst STORAGE_PREFIX = 'websocket-console::';\n\nfunction get(key: string, defaultValue: any): any {\n    return Storage.local.get(`${STORAGE_PREFIX}${key}`, defaultValue);\n}\n\nfunction set(key: string, value: any): any {\n    return Storage.local.set(`${STORAGE_PREFIX}${key}`, value);\n}\n\n\nfunction parseJSON(json: string): any {\n    try {\n        return JSON.parse(json);\n    }\n    catch(ex) {\n        throw Error(`This parameter is not in valid JSON format:\\n${json}\\n\\nReason: ${ex}!`);\n    }\n}\n\n\nfunction parseError(ex: any) {\n    let output = JSON.stringify(ex, null, '  ');\n    if (ex && typeof ex.toString === 'function') {\n        output += '\\n\\n' + ex.toString();\n    }\n    return output;\n}\n","import * as React from \"react\"\nimport castArray from \"../converter/array\"\nimport castBoolean from \"../converter/boolean\"\nimport TouchableBehavior from \"../behavior/touchable\"\nimport \"./touchable.css\"\n\ninterface ITouchableProps {\n    enabled?: boolean;\n    onClick?: ()=>void;\n    title?: string;\n    classNames?: string[];\n    color?: string;\n    children?: React.ReactElement<any>|React.ReactElement<any>[];\n}\n\nexport default class Touchable extends React.Component<ITouchableProps, {}> {\n    readonly touchable: TouchableBehavior;\n    private readonly ref: React.RefObject<HTMLDivElement> = React.createRef();\n\n    constructor(props: ITouchableProps) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.touchable = new TouchableBehavior({onTap: this.handleClick, color: props.color});\n    }\n\n    componentDidMount() {\n        const element = this.ref.current;\n        if (!element) return;\n        this.touchable.element = element;\n    }\n\n    handleClick() {\n        const handler = this.props.onClick;\n        if( typeof handler === 'function') {\n            handler();\n        }\n    }\n\n    render() {\n        const p = this.props;\n        const enabled = castBoolean(p.enabled, true);\n        const classes = [\"tfw-view-touchable\"].concat(castArray(p.classNames));\n        if( enabled ) classes.push(\"enabled\");\n        return <div ref={this.ref}\n                tabIndex={0}\n                className={classes.join(\" \")}\n                title={p.title}>{\n            p.children\n        }</div>\n    }\n}\n","import React from \"react\"\n\nimport Touchable from '../../../../tfw/view/touchable'\n\nimport \"./path-bar.css\"\n\ninterface IPathBarProps {\n    path: string,\n    root: string,\n    onClick: (path: string) => void\n}\n\nexport default class PathBar extends React.Component<IPathBarProps, {}> {\n    render() {\n        const { path, root } = this.props;\n        const pieces = [\n            root,\n            ...path.substr(root.length).split(\"/\")\n        ].filter((item: string) => item.length > 0);\n        const lastIndex = pieces.length - 1;\n        const buttons = [];\n        for (let i=0 ; i<pieces.length ; i++) {\n            const piece = pieces[i];\n            const path = pieces.slice(0, i + 1).join(\"/\");\n            const handler = () => { this.props.onClick(path) };\n            if (i === lastIndex) {\n                // Last item is not a button, because it makes no sense to click on the folder\n                // you already are in.\n                buttons.push(<div>{piece}</div>)\n            } else {\n                const button = (<div key={path} className=\"thm-bgPL thm-ele-button\">\n                        <Touchable onClick={handler}><div>{piece}</div></Touchable>\n                    </div>);\n                buttons.push(button);\n            }\n        }\n\n        return (<div className=\"webBrayns-view-PathBar\">\n            <header>{path}</header>\n            <div>{buttons}</div>\n        </div>)\n    }\n}\n","import * as React from \"react\"\nimport \"./list.css\"\nimport Debouncer from \"../../debouncer\";\nimport castUnit from \"../../converter/unit\"\nimport castBoolean from \"../../converter/boolean\"\nimport castInteger from \"../../converter/integer\"\nimport castString from \"../../converter/string\"\nimport Gesture from \"../../gesture\"\n\ninterface IListProps {\n    // Array of all the items to hold.\n    items: any[];\n    className?: string;\n    // Function which takes an item and return a component.\n    mapper: (item: any) => React.ReactElement;\n    itemHeight?: number;\n    width?: string;\n    height?: string;\n    animateRefresh?: boolean;\n    onRefreshAsked?: () => void;\n}\n\ninterface IListState {\n    items: any[];\n}\n\nexport default class List extends React.Component<IListProps, IListState> {\n    private readonly refMain: React.RefObject<HTMLDivElement>;\n    private readonly refHead: React.RefObject<HTMLDivElement>;\n    private readonly refBody: React.RefObject<HTMLDivElement>;\n    private readonly refTail: React.RefObject<HTMLDivElement>;\n    private lastFirstItemIndex: number;\n    private lastVisibleItemsCount: number;\n    private lastItemsArray: any[];\n    private itemHeight: number = 36;\n\n    constructor(props: IListProps) {\n        super(props);\n        this.refMain = React.createRef();\n        this.refHead = React.createRef();\n        this.refBody = React.createRef();\n        this.refTail = React.createRef();\n        this.onScroll = Debouncer(this.onScroll.bind(this), 30);\n        this.onPanDown = this.onPanDown.bind(this);\n        this.lastFirstItemIndex = -1;\n        this.lastVisibleItemsCount = -1;\n        this.lastItemsArray = [];\n        this.state = { items: [] };\n    }\n\n    onPanDown() {\n        const main = this.refMain.current;\n        if (!main) return;\n        if (main.scrollTop > 0) return;\n\n        const onRefresh = this.props.onRefreshAsked;\n        if (typeof onRefresh !== 'function') return;\n        onRefresh();\n    }\n\n    onScroll(): void {\n        const main = this.refMain.current;\n        const head = this.refHead.current;\n        const body = this.refBody.current;\n        const tail = this.refTail.current;\n        if (!main || !head || !body || !tail) return;\n\n        if (this.props.animateRefresh) main.scrollTop = 0;\n\n        const rect = main.getBoundingClientRect();\n        const top = Math.floor(main.scrollTop);\n        const height = Math.floor(rect.height);\n        const itemsCount = this.props.items.length;\n        const firstItemIndex = Math.min(\n            itemsCount, Math.floor(top / this.itemHeight));\n        const visibleItemsCount = Math.min(\n            itemsCount - firstItemIndex,\n            1 + Math.ceil(height / this.itemHeight)\n        );\n        const tailCount = this.props.items.length - firstItemIndex - visibleItemsCount;\n\n        head.style.height = `${this.itemHeight * firstItemIndex}px`;\n        body.style.height = `${this.itemHeight * visibleItemsCount}px`;\n        tail.style.height = `${this.itemHeight * tailCount}px`;\n\n        main.scrollTop = top;\n\n        if (this.lastFirstItemIndex !== firstItemIndex\n            || this.lastVisibleItemsCount !== visibleItemsCount) {\n            this.lastFirstItemIndex = firstItemIndex;\n            this.lastVisibleItemsCount = visibleItemsCount;\n            this.setState({\n                items: this.props.items.slice(firstItemIndex, firstItemIndex + visibleItemsCount)\n            });\n        }\n\n        // Resize background image for head and tail.\n        const backgroundSize = `${main.clientWidth}px ${this.itemHeight}px`;\n        head.style.backgroundSize = backgroundSize;\n        tail.style.backgroundSize = backgroundSize;\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.onScroll, false);\n        const main = this.refMain.current;\n        if (!main) return;\n        Gesture(main).on({\n            pandown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                main.classList.add(\"animate-refresh\");\n            },\n            swipedown: evt => {\n                if (main.scrollTop > 0) return;\n                evt.clear();\n                this.onPanDown();\n            },\n            up: () => main.classList.remove(\"animate-refresh\")\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onScroll, false);\n    }\n\n    render() {\n        this.itemHeight = castInteger(this.props.itemHeight, 36);\n        if (this.lastItemsArray !== this.props.items) {\n            this.lastVisibleItemsCount = -1;\n            this.lastItemsArray = this.props.items;\n        }\n        this.onScroll();\n\n        if (typeof this.props.mapper !== 'function') {\n            console.error(\"props =\", this.props);\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper must be a function which returns a ReactElement!`);\n        }\n        let children = null;\n        try {\n            children = this.state.items\n                .map(this.props.mapper)\n                .map((content, index: number) => (\n                    <div className=\"item\" key={content.key || `item-${index}`}\n                        style={{\n                            height: `${this.itemHeight}px`,\n                            minHeight: `${this.itemHeight}px`,\n                            maxHeight: `${this.itemHeight}px`\n                        }}>{content}</div >\n                ));\n        }\n        catch (ex) {\n            throw Error(`<List mapper=\"...\" ...> Attribute mapper returns an exception:\\n${ex}`);\n        }\n\n        const width = castUnit(this.props.width, \"auto\");\n        const height = castUnit(this.props.height, \"auto\");\n        const animateRefresh = castBoolean(this.props.animateRefresh, false);\n        const classes = [\"tfw-view-list\"];\n        if (animateRefresh) classes.push(\"animate-refresh\", \"refreshing\");\n        const className = `${classes.join(' ')} ${castString(this.props.className, '')}`\n\n        return (\n            <div className={className}\n                style={{ width, height }}\n                onScroll={this.onScroll}\n                ref={this.refMain}>\n                <div className=\"space\" ref={this.refHead} />\n                <div className=\"body\" ref={this.refBody}>{\n                    children\n                }</div>\n                <div className=\"space\" ref={this.refTail} />\n            </div>\n        );\n    }\n}\n","import React from \"react\"\n\nimport Touchable from '../../../../tfw/view/touchable'\nimport Button from '../../../../tfw/view/button'\nimport Icon from '../../../../tfw/view/icon'\nimport List from '../../../../tfw/view/list'\n\nimport \"./path-list.css\"\n\ninterface IPathListProps {\n    files: string[],\n    folders: string[],\n    onFileClick: (name: string) => void,\n    onFolderClick: (name: string) => void\n}\n\nexport default class PathList extends React.Component<IPathListProps, {}> {\n    constructor( props: IPathListProps ) {\n        super( props );\n    }\n\n    render() {\n        const { files, folders, onFileClick, onFolderClick } = this.props;\n        return (<div className=\"webBrayns-view-PathList\">\n            <div>\n                <h1>{`Folders (${folders.length})`}</h1>\n                <List itemHeight={32}\n                      height=\"60vh\"\n                      width=\"45%\"\n                      items={folders.sort()}\n                      mapper={(name: string) => (\n                          <div className=\"folder-button thm-bg0\">\n                            <Touchable key={name}\n                                       onClick={() => onFolderClick(name)}\n                                       classNames={[\"thm-ele-button\", \"thm-bgPD\"]}>\n                                <Icon content=\"folder\" size=\"24px\"/>\n                                <div className=\"label\" title={name}>{name}</div>\n                            </Touchable>\n                          </div>\n                      )}/>\n            </div>\n            <div>\n                <h1>{`Files (${files.length})`}</h1>\n                <List itemHeight={32}\n                    height=\"60vh\"\n                    width=\"45%\"\n                    items={files.sort()}\n                    mapper={(name: string) => (\n                        <div className=\"folder-button thm-bg0\">\n                          <Touchable key={name}\n                                     onClick={() => onFileClick(name)}\n                                     classNames={[\"thm-ele-button\", \"thm-bgPD\"]}>\n                              <Icon content=\"file\" size=\"24px\"/>\n                              <div className=\"label\" title={name}>{name}</div>\n                          </Touchable>\n                        </div>\n                    )}/>\n            </div>\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport PathBar from './path-bar'\nimport PathList from './path-list'\n\nimport \"./path-selector.css\"\n\n\ninterface IBookmark {\n    name: string,\n    path: string\n}\n\ninterface IPathSelectorProps {\n    path: string,\n    //The path cannot be outside the root.\n    root: string,\n    files: string[],\n    folders: string[],\n    onFolderClick: (path: string) => void,\n    onFileClick: (path: string) => void\n    // bookmarks: IBookmark[],\n    // onAddBookmarkClick: (path: string) => void,\n    // onRemoveBookmarkClick: (path: string) => void\n}\n\nexport default class PathSelector extends React.Component<IPathSelectorProps, {}> {\n    render() {\n        const {\n            path, root, files, folders,\n            onFileClick, onFolderClick\n        } = this.props;\n        return (<div className=\"webBrayns-view-PathSelector\">\n            <PathBar path={path} root={root} onClick={onFolderClick}/>\n            <PathList files={files}\n                      folders={folders}\n                      onFileClick={(name: string) => onFileClick(concatPath(path, name))}\n                      onFolderClick={(name: string) => {\n                          onFolderClick(concatPath(path, name))\n                      }}/>\n        </div>)\n    }\n}\n\n\n/**\n * Concat a path, taking care of the separator.\n */\nfunction concatPath(path: string, filename: string): string {\n    if (path.endsWith(\"/\")) return `${path}${filename}`\n    return `${path}/${filename}`\n}\n","import { connect } from 'react-redux'\n\nimport { IAppState } from \"../../types\"\n\nimport PathService from \"../../service/path\"\nimport View from \"./path-selector\"\n\nfunction mapStateToProps(state: IAppState) {\n    return { ...state.path };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        async onFolderClick(path: string) {\n            await PathService.browse(path);\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n","import React from \"react\"\nimport { Provider } from 'react-redux'\n\nimport Input from '../../../tfw/view/input'\nimport PathSelector from '../path-selector'\nimport State from '../../state'\nimport LocalStorage from '../../service/local-storage'\n\n\nconst Storage = new LocalStorage(\"input-path\");\n\ninterface IInputPathProps {\n    onChange: (path: string) => void\n}\n\ninterface IInputPathState {\n    path: string\n}\n\nexport default class  extends React.Component<IInputPathProps, IInputPathState> {\n    constructor( props: IInputPathProps ) {\n        super( props );\n        this.state = { path: Storage.get(\"path\", '') }\n        this.handleChange(this.state.path)\n    }\n\n    handleChange = (path: string) => {\n        const handler = this.props.onChange;\n        this.setState({ path });\n        Storage.set('path', path);\n        if (typeof handler !== 'function') return;\n        handler(path);\n    }\n\n    render() {\n        return <div>\n            <Input\n                label=\"Please type a model path\"\n                size={100}\n                value={this.state.path}\n                onChange={this.handleChange}\n                wide={true}/>\n            <hr/>\n            <Provider store={State.store}>\n                <PathSelector onFileClick={this.handleChange}/>\n            </Provider>\n        </div>\n    }\n}\n","import Storage from '../../tfw/storage'\n\nexport default class localStorage {\n    constructor(private prefix: string = '') {}\n\n    get(key: string, defaultValue: any): any {\n        return Storage.local.get(this.key(key), defaultValue);\n    }\n\n    set(key: string, val: any) {\n        Storage.local.set(this.key(key), val);\n    }\n\n    private key(key: string): string {\n        if (this.prefix.length === 0) return key;\n        return `${this.prefix}:\\t${key}`;\n    }\n}\n","import React from \"react\"\n\nimport { IModel } from '../../types'\nimport Button from '../../../tfw/view/button'\nimport Scene from '../../scene'\nimport State from '../../state'\nimport Model from '../../scene/model'\nimport Touchable from '../../../tfw/view/touchable'\n\nimport \"./model-button.css\"\n\ninterface IModelButtonProps {\n    model: IModel,\n    onToggleSelection: (model: IModel) => void\n}\n\nexport default class ModelButton extends React.Component<IModelButtonProps, {}> {\n    constructor( props: IModelButtonProps ) {\n        super( props );\n    }\n\n    handleToggleSelection = () => {\n        const handle = this.props.onToggleSelection;\n        if (typeof handle === 'function') handle(this.props.model);\n    }\n\n    handleFocus = async () => {\n        const model = new Model(this.props.model);\n        await model.focus();\n    }\n\n    handleShow = async () => {\n        const model = new Model(this.props.model);\n        await model.setVisible(true);\n    }\n\n    handleHide = async () => {\n        const model = new Model(this.props.model);\n        await model.setVisible(false);\n    }\n\n    handleMore = async () => {\n        const { model } = this.props;\n        State.dispatch(State.CurrentModel.reset(model));\n        State.dispatch(State.Navigation.setPanel(\"model\"));\n        Scene.camera.saveState();\n        await Scene.camera.lookAtBounds(model.brayns.bounds);\n    }\n\n    render() {\n        const { model } = this.props;\n        const classNames = [\"webBrayns-view-ModelButton\", \"thm-ele-button\"];\n        if (model.brayns.visible) {\n            classNames.push(model.selected ? \"thm-bgSL\" : \"thm-bg2\");\n        } else {\n            classNames.push(model.selected ? \"thm-bgSD\" : \"thm-bg0\");\n        }\n        return (<Touchable classNames={classNames}\n                           onClick={this.handleToggleSelection}\n                           title={model.brayns.path}>\n                <div className=\"name\">\n                    <div className={model.brayns.visible ? \"visible\" : \"invisible\"}>{model.brayns.name}</div>\n                    <div className='id'>{`#${model.brayns.id}`}</div>\n                </div>\n                <div className=\"icons\">\n                    <div>\n                        <Button small={true} icon=\"gps\" onClick={this.handleFocus}/>\n                        <Button\n                            onClick={this.handleMore}\n                            enabled={true}\n                            small={true}\n                            icon=\"more\"/>\n                    </div>\n                    {\n                        model.brayns.visible ?\n                        <Button small={true} icon=\"hide\" onClick={this.handleHide}/> :\n                        <Button small={true} icon=\"show\" onClick={this.handleShow}/>\n                    }\n                    <Button enabled={false} small={true} icon=\"delete\" warning={true}/>\n                </div>\n            </Touchable>)\n    }\n}\n","const RX_SEPARATOR = /[ \\t\\n\\r,.|<>:]+/g;\n\n/**\n * ```\n * const m = new Matcher(\"Pi cell\");\n * m.matches('This is a cells pie!') === true\n * m.matches('I bought pins and a cellular.') === 'true'\n * m.matcher('What a nive cellular!') === 'false'\n * ```\n */\nexport default class Matcher {\n  private items: string[];\n\n  constructor(textToMatchAgainst: string) {\n    this.items = textToMatchAgainst\n      .split(RX_SEPARATOR)\n      .map( (item: string) => item.trim().toLowerCase() )\n      .filter( (item: string) => item.length > 0 );\n  }\n\n  matches(text: string) {\n    if( this.items.length === 0 ) return true;\n    const lowerCaseText = text.toLowerCase();\n    for( const item of this.items ) {\n      const pos = lowerCaseText.indexOf( item );\n      if( pos === -1 ) return false;\n    }\n    return true;\n  }\n}\n","import React from \"react\"\n\nimport { IModel, IBounds } from '../../types'\nimport ModelButton from '../model-button'\nimport List from '../../../tfw/view/list'\nimport Input from '../../../tfw/view/input'\nimport Combo from '../../../tfw/view/combo'\nimport Model from '../../scene/model'\nimport Matcher from '../../tool/matcher'\nimport Debouncer from '../../../tfw/debouncer'\n\nimport \"./model-list.css\"\n\ninterface IModelListProps {\n    models: IModel[]\n}\n\ninterface IModelListState {\n    // In the Input.\n    filterInput: string,\n    // Real filter updated from `filterInput` after a debouncer does it.\n    filter: string,\n    sort: string   // \"name\" | \"volume\"\n}\n\nexport default class modelList extends React.Component<IModelListProps, IModelListState> {\n    constructor( props: IModelListProps ) {\n        super( props );\n        this.state = { filterInput: '', filter: '', sort: 'name' }\n    }\n\n    handleToggleSelection = (model: IModel) => {\n        const currentlySelectedModel = this.props.models.find((m: IModel) => m.selected);\n        if (currentlySelectedModel) {\n            const modelObject1 = new Model(currentlySelectedModel);\n            modelObject1.setSelected(false);\n        }\n        if (model !== currentlySelectedModel) {\n            const modelObject2 = new Model(model);\n            modelObject2.setSelected(true);\n        }\n    }\n\n    handleFilterInputChange = (value: string) => {\n        const filterInput = value.trim().toLowerCase();\n        this.setState({ filterInput });\n        this.handleFilterChange(filterInput);\n    }\n\n    handleFilterChange = Debouncer((value: string) => {\n        const filter = value.trim().toLowerCase();\n        this.setState({ filter });\n    }, 200)\n\n    handleSortChange = (sort: string) => {\n        this.setState({ sort });\n    }\n\n    private filter(): IModel[] {\n        const { filter } = this.state;\n        const { models } = this.props;\n        const matcher = new Matcher(filter);\n        return models.filter((model: IModel) => matcher.matches(model.brayns.name))\n            .sort(this.state.sort === 'name' ? sortByName : sortByVolume);\n    }\n\n    render() {\n        const models = this.props.models;\n        const filteredModels = this.filter();\n        const mapper = (model: IModel) =>\n            <ModelButton\n                key={model.brayns.id}\n                onToggleSelection={this.handleToggleSelection}\n                model={model}/>;\n\n        return (<div className=\"webBrayns-view-ModelList\">\n            <header>\n                <Input\n                    label={`Filter by name (${filteredModels.length} / ${models.length})`}\n                    value={this.state.filterInput}\n                    onChange={this.handleFilterInputChange}\n                    wide={true}/>\n                <Combo\n                    label=\"Sorting\"\n                    value={this.state.sort}\n                    onChange={this.handleSortChange}>\n                    <div key=\"name\">Name</div>\n                    <div key=\"volume\">Volume</div>\n                </Combo>\n            </header>\n            <List itemHeight={100}\n                  items={filteredModels}\n                  width=\"100%\"\n                  mapper={mapper}/>\n        </div>)\n    }\n}\n\n\nfunction sortByName(model1: IModel, model2: IModel) {\n    const name1 = model1.brayns.name.toLowerCase();\n    const name2 = model2.brayns.name.toLowerCase();\n    if (name1 < name2 ) return -1;\n    if (name1 > name2 ) return +1;\n    return 0;\n}\n\n\nfunction sortByVolume(model1: IModel, model2: IModel) {\n    return computeVolume(model2.brayns.bounds) - computeVolume(model1.brayns.bounds);\n}\n\n\nfunction computeVolume(bounds: IBounds) {\n    const { max, min } = bounds;\n    return (max[0] - min[0]) * (max[1] - min[1]) * (max[2] - min[2])\n}\n","import { connect } from 'react-redux'\n\nimport { IAppState, IAction } from \"../../types\"\nimport ModelList from './model-list'\n\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        models: state.models\n    };\n}\n\nfunction mapDispatchToProps(dispatch: (action: IAction) => void) {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelList);\n","import React from \"react\"\n\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Dialog from '../../../../tfw/factory/dialog'\nimport Icon from '../../../../tfw/view/icon'\nimport InputPath from '../../../view/input-path'\nimport ModelList from '../../../view/model-list/container'\n\nimport \"../panel.css\"\n\nexport default class Model extends React.Component<{}, {}> {\n    handleClip = () => {\n        State.dispatch(State.Navigation.setPanel(\"clip\"));\n    }\n\n    handleLoadMesh = async () => {\n        let path = '';\n        const confirmed = await Dialog.confirm(\n            \"Load Model\",\n            <InputPath onChange={(p: string) => path = p}/>);\n        if (!confirmed) return;\n        await Scene.loadMeshFromPath(path);\n    }\n\n    toggleConsoleVisibility = async () => {\n        State.dispatch(State.Navigation.toggleConsoleVisibility())\n    }\n\n    render() {\n        return (<div className=\"webBrayns-view-Panel\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <p>Web-Brayns</p>\n                <div>\n                    <Icon content='cut' onClick={this.handleClip}/>\n                    <Icon content='import' onClick={this.handleLoadMesh}/>\n                    <Icon content='gps' onClick={() => Scene.camera.lookAtWholeScene()}/>\n                    <Icon content='bug' onClick={this.toggleConsoleVisibility}/>\n                </div>\n            </header>\n            <ModelList />\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport Color from '../../../tfw/color'\nimport Slider from '../../../tfw/view/slider'\nimport Touchable from '../../../tfw/view/touchable'\n\nimport { IMaterial } from '../../types'\n\nimport SHADING_FLAT from './preview/diffuse.jpg'\nimport SHADING_DIFFUSE from './preview/diffuse2.jpg'\nimport SHADING_GLOSSY from './preview/glossy.jpg'\nimport SHADING_CARTOON from './preview/cartoon.jpg'\nimport SHADING_ELECTRON from './preview/electron.jpg'\n\nimport \"./material.css\"\n\ntype IShader = [string, Partial<IMaterial>]\n\ninterface IMaterialProps {\n    onSelect: (material: IMaterial) => void\n}\n\ninterface IMaterialState {\n    hue: number,\n    shaderIndex: number\n}\n\nconst SHADINGS: IShader[] = [\n    [SHADING_FLAT, { shadingMode: \"diffuse\", glossiness: 0 }],\n    [SHADING_DIFFUSE, { shadingMode: \"diffuse\", glossiness: 0.75 }],\n    [SHADING_GLOSSY, { shadingMode: \"diffuse\", glossiness: 1 }],\n    [SHADING_CARTOON, { shadingMode: \"cartoon\", glossiness: 0 }],\n    [SHADING_ELECTRON, { shadingMode: \"electron\", glossiness: 0 }]\n]\n\nexport default class Material extends React.Component<IMaterialProps, IMaterialState> {\n    constructor( props: IMaterialProps ) {\n        super( props );\n        this.state = {\n            hue: 30 * Math.floor(Math.random() * 12),\n            shaderIndex: 0\n         };\n    }\n\n    handleHueChange = (hue: number) => {\n        this.setState({ hue });\n        this.fire();\n    }\n\n    handleShaderChange = (shaderIndex: number) => {\n        this.setState({ shaderIndex });\n        this.fire();\n    }\n\n    fire() {\n        const [,material] = SHADINGS[this.state.shaderIndex];\n        const handler = this.props.onSelect;\n        if (typeof handler !== 'function') {\n            console.error(\"<Material> component must have a function as 'onSelect' attribute!\");\n            return;\n        }\n\n        const color = new Color();\n        color.H = this.state.hue / 360;\n        color.S = 1;\n        color.L = 0.5;\n        color.hsl2rgb();\n        handler({\n            diffuseColor: [color.R, color.G, color.B],\n            opacity: 1,\n            glossiness: 0,\n            shadingMode: \"none\",\n            ...material\n        })\n    }\n\n    render() {\n        const { hue, shaderIndex } = this.state;\n        return (<div className=\"webBrayns-view-Material\">\n            <Slider label=\"Diffuse color\"\n                    min={0} max={360} step={1}\n                    value={hue} text={`${hue}`}\n                    onChange={this.handleHueChange}/>\n            <div className=\"shading-mode\">{\n                SHADINGS.map((shader: IShader, index: number) => {\n                    const [url] = shader;\n                    const classes = [\"shading-mode-button\", \"thm-ele-btn\"];\n                    if (index === shaderIndex) {\n                        classes.push(\"selected\");\n                    }\n                    return (<Touchable key={`S${index}`}\n                                    classNames={classes}\n                                    onClick={() => this.handleShaderChange(index)}>\n                                <div style={{\n                                   backgroundImage: `url(${url})`,\n                                   filter: `hue-rotate(${hue}deg)`\n                               }}/>\n                            </Touchable>)\n                })\n            }</div>\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport { IMaterial } from '../types'\nimport Dialog from '../../tfw/factory/dialog'\nimport Material from '../view/material'\n\nexport default {\n    async show(): Promise<IMaterial | null> {\n        let result: IMaterial | null = null;\n        const answer = await Dialog.confirm(\n            \"Apply Material\",\n            <Material onSelect={(material: IMaterial) => result = material}/>);\n        if (!answer) return null;\n        return result;\n    }\n}\n","import React from \"react\"\nimport { IModel, IVector, IBounds } from \"../../../types\"\nimport Icon from '../../../../tfw/view/icon'\nimport Button from '../../../../tfw/view/button'\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport MaterialDialog from '../../../dialog/material'\nimport Python from '../../../service/python'\n\nimport \"../panel.css\"\n\ninterface IModelProps {\n    model: IModel\n}\n\nexport default class Model extends React.Component<IModelProps, {}> {\n    constructor( props: IModelProps ) {\n        super( props );\n    }\n\n    handleBack = () => {\n        State.dispatch(State.Navigation.setPanel(\"models\"));\n        Scene.camera.restoreState();\n    }\n\n    handleMaterial = async (materialId: number) => {\n        const material = await MaterialDialog.show();\n        if (!material) return;\n        try {\n            await Scene.setMaterial(this.props.model.brayns.id, materialId, material)\n        }\n        catch (ex) {\n            console.error(ex);\n        }\n    }\n\n    render() {\n        const { model } = this.props;\n        const { materialIds } = model;\n        const { name, id, path, bounds, transformation } = model.brayns;\n\n        return (<div className=\"webBrayns-view-Panel\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <Icon content='back' onClick={this.handleBack}/>\n                <p>{name} <em>{`#${id}`}</em></p>\n            </header>\n            <div>\n                <p><em>Path: </em>{path}</p>\n                <p>\n                    <em>Location: </em>\n                    <code>{JSON.stringify(transformation.translation, null, '  ')}</code>\n                </p>\n                <p>\n                    <em>Bounds: </em>\n                    <pre>{JSON.stringify(bounds, null, '  ')}</pre>\n                </p>\n                <hr/>\n                <div>{\n                    materialIds.map((id: number) => (\n                        <Button\n                            key={`${id}`}\n                            wide={true}\n                            onClick={() => this.handleMaterial(id)}\n                            label={`Set material #${id}`} />\n                    ))\n                }</div>\n            </div>\n        </div>)\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../../types\"\nimport ModelView from './model'\n\nfunction mapStateToProps(state: IAppState) {\n    return { model: state.currentModel }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelView);\n","import React from \"react\"\nimport Slider from '../../../tfw/view/slider'\n\nimport \"./orientation.css\"\n\ninterface IOrientationProps {\n    latitude: number,\n    longitude: number,\n    tilt: number,\n    onChange: (latitude: number, longitude: number, titl: number) => void\n}\n\nexport default class Orientation extends React.Component<IOrientationProps, {}> {\n    constructor( props: IOrientationProps ) {\n        super( props );\n    }\n\n    handleLatitudeChange = (latitude: number) => {\n        const  { longitude, tilt, onChange } = this.props\n        onChange( latitude, longitude, tilt )\n    }\n\n    handleLongitudeChange = (longitude: number) => {\n        const  { latitude, tilt, onChange } = this.props\n        onChange( latitude, longitude, tilt )\n    }\n\n    handleTiltChange = (tilt: number) => {\n        const  { longitude, latitude, onChange } = this.props\n        onChange( latitude, longitude, tilt )\n    }\n\n    render() {\n        const  { latitude, longitude, tilt } = this.props\n\n        return (<div className=\"webBrayns-view-Orientation\">\n            <Slider label=\"Latitude\"\n                min={-90} max={90} value={latitude}\n                step={1} text={`${latitude}`}\n                onChange={this.handleLatitudeChange} />\n            <Slider label=\"Longitude\"\n                min={-180} max={180} value={longitude}\n                step={1} text={`${longitude}`}\n                onChange={this.handleLongitudeChange} />\n            <Slider label=\"Tilt\"\n                min={-180} max={180} value={tilt}\n                step={1} text={`${tilt}`}\n                onChange={this.handleTiltChange} />\n        </div>)\n    }\n}\n","import React from \"react\"\nimport Input from '../../../tfw/view/input'\n\nimport \"./location.css\"\n\ninterface IOrientationProps {\n    x: number,\n    y: number,\n    z: number,\n    onChange: (x: number, y: number, z: number) => void\n}\n\nexport default class Orientation extends React.Component<IOrientationProps, {}> {\n    handleXChange = (x: string) => {\n        const  { y, z, onChange } = this.props\n        onChange( parseFloat(x), y, z )\n    }\n\n    handleYChange = (y: string) => {\n        const  { x, z, onChange } = this.props\n        onChange( x, parseFloat(y), z )\n    }\n\n    handleZChange = (z: string) => {\n        const  { y, x, onChange } = this.props\n        onChange( x, y, parseFloat(z) )\n    }\n\n    render() {\n        const  { x, y, z } = this.props\n\n        return (<div className=\"webBrayns-view-Location\">\n            <Input\n                label=\"X\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleXChange}\n                value={`${x}`} />\n            <Input\n                label=\"Y\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleYChange}\n                value={`${y}`} />\n            <Input\n                label=\"Z\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleZChange}\n                value={`${z}`} />\n        </div>)\n    }\n}\n","import React from \"react\"\nimport Input from '../../../tfw/view/input'\n\nimport \"./scale.css\"\n\ninterface IScaleProps {\n    width: number,\n    height: number,\n    depth: number,\n    onChange: (width: number, height: number, depth: number) => void\n}\n\nexport default class Scale extends React.Component<IScaleProps, {}> {\n    handleWidthChange = (width: string) => {\n        const  { height, depth, onChange } = this.props\n        onChange( Math.abs(parseFloat(width)), height, depth )\n    }\n\n    handleHeightChange = (height: string) => {\n        const  { width, depth, onChange } = this.props\n        onChange( width, Math.abs(parseFloat(height)), depth )\n    }\n\n    handleDepthChange = (depth: string) => {\n        const  { width, height, onChange } = this.props\n        onChange( width, height, Math.abs(parseFloat(depth)) )\n    }\n\n    render() {\n        const  { width, height, depth } = this.props\n\n        return (<div className=\"webBrayns-view-Scale\">\n            <Input\n                label=\"Width\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleWidthChange}\n                value={`${width}`} />\n            <Input\n                label=\"Height\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleHeightChange}\n                value={`${height}`} />\n            <Input\n                label=\"Depth\"\n                width=\"110px\"\n                type=\"number\"\n                onChange={this.handleDepthChange}\n                value={`${depth}`} />\n        </div>)\n    }\n}\n","import React from \"react\"\n\nimport Storage from '../../../../tfw/storage'\nimport SnapshotService from '../../../service/snapshot'\nimport SnapshotDialog from '../../../dialog/snapshot'\nimport State from '../../../state'\nimport Scene from '../../../scene'\nimport Models from '../../../models'\nimport Geom from '../../../geometry'\nimport Util from '../../../../tfw/util'\nimport Color from '../../../../tfw/color'\nimport Icon from '../../../../tfw/view/icon'\nimport Button from '../../../../tfw/view/button'\nimport Checkbox from '../../../../tfw/view/checkbox'\nimport Slider from '../../../../tfw/view/slider'\nimport Range from '../../range'\nimport Throttler from '../../../../tfw/throttler'\nimport Debouncer from '../../../../tfw/debouncer'\nimport Theme from '../../../../tfw/theme'\nimport OrientationView from '../../orientation'\nimport LocationView from '../../location'\nimport ScaleView from '../../scale'\nimport SnapshotView from '../../snapshot/snapshot.container'\nimport ClipPlaneObject from '../../../object/clip-plane'\n\nimport { IBounds } from '../../../types'\n\nimport \"./clip.css\"\n\nconst COLOR_RAMP = [\n    Color.newRGB(0,1,0),\n    Color.newRGB(1,1,0),\n    Color.newRGB(1,0,1)\n]\n\ninterface IPlane {\n    id: number,\n    plane: [number, number, number, number]\n}\n\ninterface IClipProps {\n    activated: boolean,\n    minX: number,\n    maxX: number,\n    minY: number,\n    maxY: number,\n    minZ: number,\n    maxZ: number,\n    latitude: number,\n    longitude: number,\n    collageDepth: number\n}\n\ninterface IClipPlaneDefinition {\n    // Location\n    x: number,\n    y: number,\n    z: number,\n    // Scale\n    width: number,\n    height: number,\n    depth: number,\n    // Orientation\n    latitude: number,\n    longitude: number,\n    tilt: number,\n\n}\n\ninterface IClipState extends IClipPlaneDefinition {\n    activated: boolean,\n    currentPlaneIndex: number\n}\n\nexport default class Model extends React.Component<IClipProps, IClipState> {\n    private clipPlanes: IClipPlaneDefinition[] = []\n\n    private readonly clipPlaneObject: ClipPlaneObject =\n        new ClipPlaneObject({\n            color: [0,1,0],\n            width: 32,\n            height: 24,\n            depth: 4\n        })\n\n    constructor(props: IClipProps) {\n        super(props)\n        this.state = {\n            width: 32,\n            height: 24,\n            depth: 4,\n            activated: true,\n            latitude: 0,\n            longitude: 0,\n            tilt: 0,\n            x: 0,\n            y: 0,\n            z: 0,\n            currentPlaneIndex: -1\n        }\n    }\n\n    async componentDidMount() {\n        this.clipPlanes = Storage.session.get(\"web-brayns/clipping-planes\", [{\n            x: 0, y: 0, z: 0,\n            width: 32, height: 24, depth: 4,\n            latitude: 0, longitude: 0, tilt: 0\n        }])\n        this.setCurrentPlaneIndex(0)\n        this.clipPlaneObject.setActivated(this.state.activated)\n        this.clipPlaneObject.attach()\n        this.updatePlanes();\n    }\n\n    async componentDidUpdate() {\n        this.updatePlanes();\n    }\n\n    private setCurrentPlaneIndex(index: number) {\n        if (index !== this.state.currentPlaneIndex) {\n            const planeColor = Color.ramp(COLOR_RAMP, index / this.clipPlanes.length)\n            console.info(\"planeColor=\", planeColor);\n            this.clipPlaneObject.setColor(planeColor)\n        }\n        const clipPlane = this.clipPlanes[index]\n        this.setState({ ...clipPlane, currentPlaneIndex: index })\n\n    }\n\n    updatePlanes = Throttler(async () => {\n        const {\n            x, y, z,\n            width, height, depth,\n            latitude, longitude, tilt\n        } = this.state\n        const plane = this.clipPlaneObject\n        plane.setTransformation({\n            location: [ x, y, z ],\n            scale: [ width, height, depth],\n            rotation: Geom.makeQuaternionFromLatLngTilt(\n                latitude, longitude, tilt\n            )\n        })\n    }, 50)\n\n    componentWillUnmount() {\n        //this.removeAllClipPlanes();\n    }\n\n    handlePlaneOrientationChange = (latitude: number,\n                                    longitude: number,\n                                    tilt: number) => {\n        this.setState({\n            latitude, longitude, tilt\n        }, this.updatePlanes)\n    }\n\n    handlePlaneLocationChange = (x: number, y: number, z: number) => {\n        this.setState({ x, y, z })\n    }\n\n    handlePlaneScaleChange = (width: number, height: number, depth: number) => {\n        this.setState({ width, height, depth })\n    }\n\n    handleBack = async () => {\n        State.dispatch(State.Navigation.setPanel(\"models\"));\n        await this.clipPlaneObject.setActivated(false)\n        await this.clipPlaneObject.detach()\n    }\n\n    handleActivatedChange = async (activated: boolean) => {\n        console.info(\"activated=\", activated);\n        this.setState({ activated })\n        await this.clipPlaneObject.setActivated(activated)\n    }\n\n    render() {\n        const {\n            latitude, longitude, tilt,\n            x, y, z,\n            width, height, depth\n         } = this.state\n\n        return (<div className=\"webBrayns-view-panel-Clip\">\n            <header className=\"thm-bgPD thm-ele-nav\">\n                <div>\n                    <Icon content=\"back\" onClick={this.handleBack}/>\n                </div>\n                <p>Slicing</p>\n            </header>\n            <div>\n                <Checkbox\n                    label=\"Activate slicing\"\n                    onChange={this.handleActivatedChange}\n                    value={this.state.activated}/>\n                <hr/>\n                <h1>Plane size</h1>\n                <ScaleView width={width} height={height} depth={depth}\n                    onChange={this.handlePlaneScaleChange}/>\n                <hr/>\n                <h1>Plane center</h1>\n                <LocationView x={x} y={y} z={z}\n                    onChange={this.handlePlaneLocationChange}/>\n                <hr/>\n                <h1>Plane orientation</h1>\n                <OrientationView\n                    latitude={latitude}\n                    longitude={longitude}\n                    tilt={tilt}\n                    onChange={this.handlePlaneOrientationChange}/>\n                <hr/>\n                <h1>Snapshot configuration</h1>\n                <SnapshotView />\n            </div>\n        </div>)\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"../../../types\"\nimport ClipView from \"./clip\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        activated: state.slicer.activated,\n        minX: state.slicer.minX,\n        maxX: state.slicer.maxX,\n        minY: state.slicer.minY,\n        maxY: state.slicer.maxY,\n        minZ: state.slicer.minZ,\n        maxZ: state.slicer.maxZ,\n        latitude: state.slicer.latitude,\n        longitude: state.slicer.longitude,\n        collageDepth: state.slicer.collageDepth\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClipView);\n","import React from \"react\"\n//import { Client as BraynsClient } from \"brayns\"\n\nimport Script from './web-brayns/script'\nimport Scene from './web-brayns/scene'\nimport Model from './web-brayns/scene/model'\nimport ImageStream from './web-brayns/view/image-stream'\nimport VideoStream from './web-brayns/view/video-stream'\nimport Stack from './tfw/layout/stack'\nimport WebsocketConsole from './web-brayns/view/websocket-console'\nimport PanelModels from './web-brayns/view/panel/models'\nimport PanelModel from './web-brayns/view/panel/model/container'\nimport PanelClip from './web-brayns/view/panel/clip/container'\n\nimport { IVector } from './web-brayns/types'\n\nimport \"./app.css\"\n\nimport Python from './web-brayns/service/python'\nimport SnapshotService from './web-brayns/service/snapshot'\nimport SnapshotDialog from './web-brayns/dialog/snapshot'\n\ninterface IAppProps {\n    panel: string,\n    stream: \"image\" | \"video\",\n    showConsole: boolean\n}\n\ninterface IAppState {\n    data: Blob\n}\n\nexport default class App extends React.Component<IAppProps, {}> {\n    constructor( props: IAppProps ) {\n        super( props );\n        this.state = { blob: new Blob() }\n    }\n\n    async componentDidMount() {\n        try {\n            Script.test();\n            /*\n            const materialTemplate = {\n                opacity: 1,\n                glossiness: 1,\n                diffuseColor: [1,0,0],\n                shadingMode: 'cartoon'\n            }\n\n            const materials = [\n                //{ ...materialTemplate, shadingMode: \"diffuse\", glossiness: 0 },\n                //{ ...materialTemplate, shadingMode: \"diffuse\", glossiness: 0.7 },\n                //{ ...materialTemplate, shadingMode: \"diffuse\" },\n                //{ ...materialTemplate, shadingMode: \"electron\" },\n                { ...materialTemplate, shadingMode: \"cartoon\" }\n            ]\n            for( const material of materials ) {\n                const output = await Scene.setMaterial(model.params.id, 0, material);\n                continue;\n                const options = await SnapshotDialog.show();\n                if (!options) return;  // Action cancelled.\n                const canvas = await SnapshotService.getCanvas(options);\n                await SnapshotService.saveCanvasToFile(canvas, `${options.filename}.jpg`);\n            }\n*/\n\n            /*\n            //Scene.clear();\n            let modelNumber = 1;\n            const factor = 200;\n            const models: Model[] = [];\n            const positions: IVector[] = [];\n\n            for (let x=-1; x<=1; x++) {\n                for (let y=-1; y<=1; y++) {\n                    for (let z=-1; z<=1; z++) {\n                        const astro = await loadAstrocyte(modelNumber++);\n                        models.push(astro);\n                        positions.push([\n                            factor * x,\n                            factor * y,\n                            factor * z\n                        ])\n                    }\n                }\n            }\n\n            models.forEach( async (model: Model, index: number) => {\n                await model.locate(positions[index]);\n            })*/\n\n            //Scene.camera.lookAtWholeScene();\n        }\n        catch( ex ) {\n            console.error(ex);\n        }\n    }\n\n    render() {\n        return (<div className=\"App\">\n            <div className=\"panel\">\n                <Stack value={this.props.panel}>\n                    <PanelModels key=\"models\"/>\n                    <PanelModel key=\"model\"/>\n                    <PanelClip key=\"clip\"/>\n                </Stack>\n            </div>\n            <div className='view'>\n                {\n                    this.props.stream === 'image' &&\n                    <ImageStream\n                        key=\"image-stream\"\n                        onPan={Scene.gestures.handlePan}\n                        onPanStart={Scene.gestures.handlePanStart}/>\n                }\n                {\n                    this.props.stream === 'video' &&\n                    <VideoStream\n                        key=\"video-stream\"\n                        onPan={Scene.gestures.handlePan}\n                        onPanStart={Scene.gestures.handlePanStart}/>\n                }\n                <WebsocketConsole visible={this.props.showConsole}/>\n            </div>\n        </div>)\n    }\n}\n","import { connect } from 'react-redux'\nimport { IAppState } from \"./web-brayns/types\"\nimport AppView from \"./app\"\n\nfunction mapStateToProps(state: IAppState) {\n    return {\n        panel: state.navigation.panel,\n        showConsole: state.navigation.showConsole\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // onClick: ...\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppView);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport { IBraynsModel } from './web-brayns/types'\nimport PathService from \"./web-brayns/service/path\"\nimport ServiceHost from \"./web-brayns/service/host\"\nimport Scene from \"./web-brayns/scene\"\nimport Dialog from \"./tfw/factory/dialog\"\nimport Theme from \"./tfw/theme\"\nimport App from './app.container';\nimport State from './web-brayns/state'\n\nimport \"./tfw/font/josefin.css\"\n\nTheme.apply(\"default\");\n\nasync function start() {\n    const hostName = await ServiceHost.getHostName(false);\n    try {\n        await PathService.browse()\n    }\n    catch(err) {\n        console.error(err)\n        await Dialog.alert(<div>\n            <p><b>Cannot reach GPFS!</b></p>\n            <code style={{opacity: .5}}>{err.text}</code>\n        </div>)\n        location.reload()\n    }\n\n    try {\n        const client = await Dialog.wait(\"Contacting Brayns...\", Scene.connect(hostName), false)\n        const scene = await Dialog.wait(\"Loading models...\", Scene.Api.getScene(), false)\n        const planes = await Scene.Api.getClipPlanes()\n        const notNullplanes: {id: number, plane: [number,number,number,number]}[] = planes.filter( p => p !== null )\n        const planeIds = notNullplanes.map( p => p.id )\n        Scene.Api.removeClipPlanes(planeIds);\n\n        State.dispatch(State.Models.reset(\n            scene.models.map((params: IBraynsModel) => ({\n                brayns: params,\n                parent: -1,\n                deleted: false,\n                selected: false,\n                technical: false\n            }))\n        ));\n\n        // Entry point for our app\n        const stream = await figureOutStreamType()\n        console.info(\"Stream type:\", stream.toUpperCase())\n        const root = document.getElementById('root') as HTMLElement;\n        ReactDOM.render(<Provider store={State.store}>\n                <App brayns={client} stream={stream}/>\n            </Provider>, root);\n\n        const splash = document.getElementById('splash-screen');\n        if (splash) {\n            splash.classList.add(\"vanish\");\n            window.setTimeout(() => document.body.removeChild(splash), 600);\n        }\n    }\n    catch(ex) {\n        console.error(\"Unable to connect Brayns: \", ex)\n        await Dialog.alert(`Seems like Brayns is not reachable on ${hostName}!`);\n        location.reload();\n    }\n\n}\n\n\n/**\n * Brayns can send us data as JPEG images or as a video stream.\n * We will try to know which type is used by the current Brayns Service.\n */\nasync function figureOutStreamType(): Promise<(\"image\" | \"video\")> {\n    try {\n        const result = await Scene.request(\"get-videostream\")\n        console.info(\"result=\", result);\n        if (!result) return \"image\"\n        return \"video\"\n    }\n    catch(err) {\n        return \"image\"\n    }\n}\n\n\nstart();\n"],"sourceRoot":""}